{"pull_requests": {}, "maintainers": ["codeNinja42"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n"}}



{"pull_requests": {"pr-5c5c28ed-7895-455e-8eaa-2bc80926f541": {"pr_id": "pr-5c5c28ed-7895-455e-8eaa-2bc80926f541", "title": "Add RGB to HEX conversion function", "description": "This PR adds a new function to convert RGB values to HEX color codes. This will enhance the utility of our library for color manipulation.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-e3cdae31-89eb-46ef-b691-0f892af992bb", "username": "devGuru99", "message": "Implement RGB to HEX conversion function", "timestamp": "2024-12-02 22:19:06", "code": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "file_name": "rgb_to_hex.py"}], "comments": [{"username": "devGuru99", "content": "I believe this function will be very useful for developers working with colors. I'm looking forward to your feedback!", "timestamp": "2024-12-02 22:19:08"}], "timestamp": "2024-12-02 22:19:03"}}, "maintainers": ["codeNinja42"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n"}}



{"pull_requests": {"pr-5c5c28ed-7895-455e-8eaa-2bc80926f541": {"pr_id": "pr-5c5c28ed-7895-455e-8eaa-2bc80926f541", "title": "Add RGB to HEX conversion function", "description": "This PR adds a new function to convert RGB values to HEX color codes. This will enhance the utility of our library for color manipulation.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-e3cdae31-89eb-46ef-b691-0f892af992bb", "username": "devGuru99", "message": "Implement RGB to HEX conversion function", "timestamp": "2024-12-02 22:19:06", "code": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "file_name": "rgb_to_hex.py"}], "comments": [{"username": "devGuru99", "content": "I believe this function will be very useful for developers working with colors. I'm looking forward to your feedback!", "timestamp": "2024-12-02 22:19:08"}], "timestamp": "2024-12-02 22:19:03"}, "pr-5e7e0354-1cda-41c3-937f-094736c1b867": {"pr_id": "pr-5e7e0354-1cda-41c3-937f-094736c1b867", "title": "Add placeholder image retrieval function", "description": "This PR introduces a function that retrieves placeholder images for various use cases. This will be beneficial for developers needing quick placeholder images during development.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-f5a0aab5-6a9f-4a35-98e5-6f57ad4dd007", "username": "devGuru99", "message": "Implement get_placeholder_image function", "timestamp": "2024-12-02 22:20:46", "code": "import requests\n\ndef get_placeholder_image(width: int, height: int) -> str:\n    \"\"\"Retrieve a placeholder image of specified dimensions.\"\"\"\n    response = requests.get(f'https://via.placeholder.com/{width}x{height}')\n    return response.url\n", "file_name": "get_placeholder_image.py"}], "comments": [{"username": "devGuru99", "content": "This function should provide a quick way to get placeholder images for UI development. I hope it is helpful!", "timestamp": "2024-12-02 22:20:48"}], "timestamp": "2024-12-02 22:20:44"}}, "maintainers": ["codeNinja42"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n", "get_placeholder_image.py": "import requests\n\ndef get_placeholder_image(width: int, height: int) -> str:\n    \"\"\"Retrieve a placeholder image of specified dimensions.\"\"\"\n    response = requests.get(f'https://via.placeholder.com/{width}x{height}')\n    return response.url\n"}}

