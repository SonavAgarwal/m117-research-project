{"pull_requests": {}, "maintainers": ["codeNinja42"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n"}}



{"pull_requests": {"pr-7693caf2-5119-4192-bed3-8b672e1cc9ae": {"pr_id": "pr-7693caf2-5119-4192-bed3-8b672e1cc9ae", "title": "Added function to convert Celsius to Fahrenheit", "description": "This function converts Celsius to Fahrenheit, adding to the utility of the library.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-a1d3a19f-bcac-4d5a-98f2-efd2683ba833", "username": "devGuru99", "message": "Implement Celsius to Fahrenheit conversion", "timestamp": "2024-12-02 22:55:02", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}, {"commit_id": "commit-dbfe8e00-f4ee-4b01-8a76-07909aae0ba8", "username": "codeNinja42", "message": "Review of Celsius to Fahrenheit function", "timestamp": "2024-12-02 22:55:09", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}], "comments": [{"username": "devGuru99", "content": "I added a function to convert Celsius to Fahrenheit. This will complement the existing temperature conversion functions in the library. Looking forward to your feedback!", "timestamp": "2024-12-02 22:55:04"}], "timestamp": "2024-12-02 22:55:00"}}, "maintainers": ["codeNinja42"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n", "celsius_to_fahrenheit.py": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n"}}



{"pull_requests": {"pr-7693caf2-5119-4192-bed3-8b672e1cc9ae": {"pr_id": "pr-7693caf2-5119-4192-bed3-8b672e1cc9ae", "title": "Added function to convert Celsius to Fahrenheit", "description": "This function converts Celsius to Fahrenheit, adding to the utility of the library.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-a1d3a19f-bcac-4d5a-98f2-efd2683ba833", "username": "devGuru99", "message": "Implement Celsius to Fahrenheit conversion", "timestamp": "2024-12-02 22:55:02", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}, {"commit_id": "commit-dbfe8e00-f4ee-4b01-8a76-07909aae0ba8", "username": "codeNinja42", "message": "Review of Celsius to Fahrenheit function", "timestamp": "2024-12-02 22:55:09", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}], "comments": [{"username": "devGuru99", "content": "I added a function to convert Celsius to Fahrenheit. This will complement the existing temperature conversion functions in the library. Looking forward to your feedback!", "timestamp": "2024-12-02 22:55:04"}, {"username": "devGuru99", "content": "Thanks for the quick approval! I'm excited to contribute more to the project.", "timestamp": "2024-12-02 22:55:29"}], "timestamp": "2024-12-02 22:55:00"}}, "maintainers": ["codeNinja42", "devGuru99"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n", "celsius_to_fahrenheit.py": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n"}}



{"pull_requests": {"pr-7693caf2-5119-4192-bed3-8b672e1cc9ae": {"pr_id": "pr-7693caf2-5119-4192-bed3-8b672e1cc9ae", "title": "Added function to convert Celsius to Fahrenheit", "description": "This function converts Celsius to Fahrenheit, adding to the utility of the library.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-a1d3a19f-bcac-4d5a-98f2-efd2683ba833", "username": "devGuru99", "message": "Implement Celsius to Fahrenheit conversion", "timestamp": "2024-12-02 22:55:02", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}, {"commit_id": "commit-dbfe8e00-f4ee-4b01-8a76-07909aae0ba8", "username": "codeNinja42", "message": "Review of Celsius to Fahrenheit function", "timestamp": "2024-12-02 22:55:09", "code": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "file_name": "celsius_to_fahrenheit.py"}], "comments": [{"username": "devGuru99", "content": "I added a function to convert Celsius to Fahrenheit. This will complement the existing temperature conversion functions in the library. Looking forward to your feedback!", "timestamp": "2024-12-02 22:55:04"}, {"username": "devGuru99", "content": "Thanks for the quick approval! I'm excited to contribute more to the project.", "timestamp": "2024-12-02 22:55:29"}], "timestamp": "2024-12-02 22:55:00"}, "pr-800d315e-d670-4f3c-aff6-c9f386425629": {"pr_id": "pr-800d315e-d670-4f3c-aff6-c9f386425629", "title": "Added function to convert hexadecimal to RGB", "description": "This function converts a hexadecimal color code to its RGB representation, enhancing the color utilities in the library.", "opened_by": "devGuru99", "status": "approved and merged", "commits": [{"commit_id": "commit-268a78aa-4dcb-4db1-a577-d671adb7e1e7", "username": "devGuru99", "message": "Implement conversion from HEX to RGB", "timestamp": "2024-12-02 22:55:49", "code": "def hex_to_rgb(hex_code: str) -> tuple:\n    \"\"\"Convert a HEX color code to an RGB tuple.\"\"\"\n    if hex_code.startswith('#'):\n        hex_code = hex_code[1:]\n    if len(hex_code) != 6:\n        raise ValueError(\"HEX code must be 6 characters long.\")\n    r = int(hex_code[0:2], 16)\n    g = int(hex_code[2:4], 16)\n    b = int(hex_code[4:6], 16)\n    return (r, g, b)", "file_name": "hex_to_rgb.py"}, {"commit_id": "commit-a243de07-8e3c-4f3c-b5a8-b7334f5f1f52", "username": "codeNinja42", "message": "Review of HEX to RGB conversion function", "timestamp": "2024-12-02 22:55:58", "code": "def hex_to_rgb(hex_code: str) -> tuple:\n    \"\"\"Convert a HEX color code to an RGB tuple.\"\"\"\n    if hex_code.startswith('#'):\n        hex_code = hex_code[1:]\n    if len(hex_code) != 6:\n        raise ValueError(\"HEX code must be 6 characters long.\")\n    r = int(hex_code[0:2], 16)\n    g = int(hex_code[2:4], 16)\n    b = int(hex_code[4:6], 16)\n    return (r, g, b)", "file_name": "hex_to_rgb.py"}], "comments": [{"username": "devGuru99", "content": "I added a function to convert a HEX color code to its RGB representation. This will further enhance the color utilities in the library. I look forward to your feedback!", "timestamp": "2024-12-02 22:55:51"}], "timestamp": "2024-12-02 22:55:45"}}, "maintainers": ["codeNinja42", "devGuru99"], "files": {"inches_to_centimeters.py": "def inches_to_centimeters(inches: float) -> float:\n    \"\"\"Convert inches to centimeters.\"\"\"\n    return inches * 2.54\n", "fahrenheit_to_celsius.py": "def fahrenheit_to_celsius(fahrenheit: float) -> float:\n    \"\"\"Convert Fahrenheit to Celsius.\"\"\"\n    return (fahrenheit - 32) * 5.0 / 9.0\n", "rgb_to_hex.py": "def rgb_to_hex(r: int, g: int, b: int) -> str:\n    \"\"\"Convert RGB values to a HEX color code.\"\"\"\n    if not (0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255):\n        raise ValueError(\"RGB values must be in the range 0-255.\")\n    return f\"#{r:02x}{g:02x}{b:02x}\"\n", "is_palindrome.py": "def is_palindrome(s: str) -> bool:\n    \"\"\"Check if a given string is a palindrome.\"\"\"\n    s = ''.join(filter(str.isalnum, s)).lower(\n    )  # Remove non-alphanumeric characters and lowercase\n    return s == s[::-1]\n", "celsius_to_fahrenheit.py": "def celsius_to_fahrenheit(celsius: float) -> float:\n    \"\"\"Convert Celsius to Fahrenheit.\"\"\"\n    return (celsius * 9.0 / 5.0) + 32\n", "hex_to_rgb.py": "def hex_to_rgb(hex_code: str) -> tuple:\n    \"\"\"Convert a HEX color code to an RGB tuple.\"\"\"\n    if hex_code.startswith('#'):\n        hex_code = hex_code[1:]\n    if len(hex_code) != 6:\n        raise ValueError(\"HEX code must be 6 characters long.\")\n    r = int(hex_code[0:2], 16)\n    g = int(hex_code[2:4], 16)\n    b = int(hex_code[4:6], 16)\n    return (r, g, b)"}}

