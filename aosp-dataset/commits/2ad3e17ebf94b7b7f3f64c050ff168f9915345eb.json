)]}'
{
  "commit": "2ad3e17ebf94b7b7f3f64c050ff168f9915345eb",
  "tree": "4f91f75912932d7ca7cf2a53d60719434b84ff1d",
  "parents": [
    "cb5172d96d16df72db8b55146b0ec00bfd97f079"
  ],
  "author": {
    "name": "Paul Moore",
    "email": "paul@paul-moore.com",
    "time": "Sat Feb 22 20:36:47 2020 -0500"
  },
  "committer": {
    "name": "Paul Moore",
    "email": "paul@paul-moore.com",
    "time": "Sat Feb 22 20:36:47 2020 -0500"
  },
  "message": "audit: fix error handling in audit_data_to_entry()\n\nCommit 219ca39427bf (\"audit: use union for audit_field values since\nthey are mutually exclusive\") combined a number of separate fields in\nthe audit_field struct into a single union.  Generally this worked\njust fine because they are generally mutually exclusive.\nUnfortunately in audit_data_to_entry() the overlap can be a problem\nwhen a specific error case is triggered that causes the error path\ncode to attempt to cleanup an audit_field struct and the cleanup\ninvolves attempting to free a stored LSM string (the lsm_str field).\nCurrently the code always has a non-NULL value in the\naudit_field.lsm_str field as the top of the for-loop transfers a\nvalue into audit_field.val (both .lsm_str and .val are part of the\nsame union); if audit_data_to_entry() fails and the audit_field\nstruct is specified to contain a LSM string, but the\naudit_field.lsm_str has not yet been properly set, the error handling\ncode will attempt to free the bogus audit_field.lsm_str value that\nwas set with audit_field.val at the top of the for-loop.\n\nThis patch corrects this by ensuring that the audit_field.val is only\nset when needed (it is cleared when the audit_field struct is\nallocated with kcalloc()).  It also corrects a few other issues to\nensure that in case of error the proper error code is returned.\n\nCc: stable@vger.kernel.org\nFixes: 219ca39427bf (\"audit: use union for audit_field values since they are mutually exclusive\")\nReported-by: syzbot+1f4d90ead370d72e450b@syzkaller.appspotmail.com\nSigned-off-by: Paul Moore \u003cpaul@paul-moore.com\u003e\n",
  "tree_diff": [
    {
      "type": "modify",
      "old_id": "b0126e9c0743e8d8adf07bc12404c852b2eab29b",
      "old_mode": 33188,
      "old_path": "kernel/auditfilter.c",
      "new_id": "026e34da4ace994e75408990b564d52e25352eea",
      "new_mode": 33188,
      "new_path": "kernel/auditfilter.c"
    }
  ]
}
