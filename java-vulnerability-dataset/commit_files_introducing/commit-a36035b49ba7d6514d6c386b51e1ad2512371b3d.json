{
    "sha": "a36035b49ba7d6514d6c386b51e1ad2512371b3d",
    "node_id": "MDY6Q29tbWl0MTg2MjcxMjY6YTM2MDM1YjQ5YmE3ZDY1MTRkNmMzODZiNTFlMWFkMjUxMjM3MWIzZA==",
    "commit": {
        "author": {
            "name": "Martin Stockhammer",
            "email": "martin_s@apache.org",
            "date": "2019-02-22T20:10:19Z"
        },
        "committer": {
            "name": "Martin Stockhammer",
            "email": "martin_s@apache.org",
            "date": "2019-02-25T07:41:28Z"
        },
        "message": "Add url validation for certain fields",
        "tree": {
            "sha": "916630b4fb43c7b400f2aa01c65bb74626f00c54",
            "url": "https://api.github.com/repos/apache/archiva/git/trees/916630b4fb43c7b400f2aa01c65bb74626f00c54"
        },
        "url": "https://api.github.com/repos/apache/archiva/git/commits/a36035b49ba7d6514d6c386b51e1ad2512371b3d",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/archiva/commits/a36035b49ba7d6514d6c386b51e1ad2512371b3d",
    "html_url": "https://github.com/apache/archiva/commit/a36035b49ba7d6514d6c386b51e1ad2512371b3d",
    "comments_url": "https://api.github.com/repos/apache/archiva/commits/a36035b49ba7d6514d6c386b51e1ad2512371b3d/comments",
    "author": {
        "login": "effrafax",
        "id": 870744,
        "node_id": "MDQ6VXNlcjg3MDc0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/870744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/effrafax",
        "html_url": "https://github.com/effrafax",
        "followers_url": "https://api.github.com/users/effrafax/followers",
        "following_url": "https://api.github.com/users/effrafax/following{/other_user}",
        "gists_url": "https://api.github.com/users/effrafax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/effrafax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/effrafax/subscriptions",
        "organizations_url": "https://api.github.com/users/effrafax/orgs",
        "repos_url": "https://api.github.com/users/effrafax/repos",
        "events_url": "https://api.github.com/users/effrafax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/effrafax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "effrafax",
        "id": 870744,
        "node_id": "MDQ6VXNlcjg3MDc0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/870744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/effrafax",
        "html_url": "https://github.com/effrafax",
        "followers_url": "https://api.github.com/users/effrafax/followers",
        "following_url": "https://api.github.com/users/effrafax/following{/other_user}",
        "gists_url": "https://api.github.com/users/effrafax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/effrafax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/effrafax/subscriptions",
        "organizations_url": "https://api.github.com/users/effrafax/orgs",
        "repos_url": "https://api.github.com/users/effrafax/repos",
        "events_url": "https://api.github.com/users/effrafax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/effrafax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "63154a6af822384907566f3998c7948d6d34eed8",
            "url": "https://api.github.com/repos/apache/archiva/commits/63154a6af822384907566f3998c7948d6d34eed8",
            "html_url": "https://github.com/apache/archiva/commit/63154a6af822384907566f3998c7948d6d34eed8"
        }
    ],
    "stats": {
        "total": 61,
        "additions": 58,
        "deletions": 3
    },
    "files": [
        {
            "sha": "8f065c1288a6c793c1d184d593a450d01b61154b",
            "filename": "archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultArchivaAdministration.java",
            "status": "modified",
            "additions": 21,
            "deletions": 3,
            "changes": 24,
            "blob_url": "https://github.com/apache/archiva/blob/a36035b49ba7d6514d6c386b51e1ad2512371b3d/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java",
            "raw_url": "https://github.com/apache/archiva/raw/a36035b49ba7d6514d6c386b51e1ad2512371b3d/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java?ref=a36035b49ba7d6514d6c386b51e1ad2512371b3d",
            "patch": "@@ -36,9 +36,14 @@\n import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\n import org.apache.maven.wagon.providers.http.HttpWagon;\n import org.springframework.stereotype.Service;\n+import org.springframework.util.ResourceUtils;\n \n import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n+import java.io.UnsupportedEncodingException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLEncoder;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -321,16 +326,29 @@ public OrganisationInformation getOrganisationInformation()\n         return getModelMapper().map( organisationInformation, OrganisationInformation.class );\n     }\n \n+    private void checkUrl(String url, String propertyName)  throws RepositoryAdminException {\n+        if ( StringUtils.isNotEmpty( url ) )\n+        {\n+            if ( !ResourceUtils.isUrl( url ) )\n+            {\n+                throw new RepositoryAdminException( \"Bad URL in \" + propertyName + \": \" + url );\n+            }\n+        }\n+\n+    }\n+\n     @Override\n     public void setOrganisationInformation( OrganisationInformation organisationInformation )\n         throws RepositoryAdminException\n     {\n-        Configuration configuration = getArchivaConfiguration().getConfiguration();\n+        checkUrl(organisationInformation.getUrl(), \"url\");\n+        checkUrl( organisationInformation.getLogoLocation(), \"logoLocation\" );\n+        Configuration configuration = getArchivaConfiguration( ).getConfiguration( );\n         if ( organisationInformation != null )\n         {\n             org.apache.archiva.configuration.OrganisationInformation organisationInformationModel =\n-                getModelMapper().map( organisationInformation,\n-                                      org.apache.archiva.configuration.OrganisationInformation.class );\n+                getModelMapper( ).map( organisationInformation,\n+                    org.apache.archiva.configuration.OrganisationInformation.class );\n             configuration.setOrganisationInfo( organisationInformationModel );\n         }\n         else"
        },
        {
            "sha": "6e3fbd6717902f636ce3112f1824236837236802",
            "filename": "archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java",
            "status": "modified",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/apache/archiva/blob/a36035b49ba7d6514d6c386b51e1ad2512371b3d/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java",
            "raw_url": "https://github.com/apache/archiva/raw/a36035b49ba7d6514d6c386b51e1ad2512371b3d/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java?ref=a36035b49ba7d6514d6c386b51e1ad2512371b3d",
            "patch": "@@ -216,6 +216,43 @@ public void organisationInfoUpdate()\n \n     }\n \n+    @Test\n+    public void badOrganisationInfoLogoLocation( )\n+    {\n+        try\n+        {\n+            OrganisationInformation newOrganisationInformation = new OrganisationInformation( );\n+            newOrganisationInformation.setLogoLocation( \"'/><svg/onload=alert(/logoLocation_xss/)>\" );\n+            newOrganisationInformation.setName( \"foo org\" );\n+            newOrganisationInformation.setUrl( \"http://foo.com\" );\n+            archivaAdministration.setOrganisationInformation( newOrganisationInformation );\n+            fail( \"RepositoryAdminException expected. Bad URL content should not be allowed for logo location.\" );\n+        }\n+        catch ( RepositoryAdminException e )\n+        {\n+            // OK\n+        }\n+    }\n+\n+    @Test\n+    public void badOrganisationInfoUrl( )\n+    {\n+        try\n+        {\n+            OrganisationInformation newOrganisationInformation = new OrganisationInformation( );\n+            newOrganisationInformation.setUrl( \"'/><svg/onload=alert(/url_xss/)>\" );\n+            newOrganisationInformation.setName( \"foo org\" );\n+            newOrganisationInformation.setLogoLocation( \"http://foo.com/bar.png\" );\n+            archivaAdministration.setOrganisationInformation( newOrganisationInformation );\n+            fail( \"RepositoryAdminException expected. Bad URL content should not be allowed for logo location.\" );\n+        }\n+        catch ( RepositoryAdminException e )\n+        {\n+            // OK\n+        }\n+\n+    }\n+\n     @Test\n     public void uiConfiguration()\n         throws Exception"
        }
    ]
}