{
    "sha": "341ecefb8db8d99918c8a69fe57436f72bac509a",
    "node_id": "MDY6Q29tbWl0MjY2Mjg5NTQ6MzQxZWNlZmI4ZGI4ZDk5OTE4YzhhNjlmZTU3NDM2ZjcyYmFjNTA5YQ==",
    "commit": {
        "author": {
            "name": "Paulo Lopes",
            "email": "paulo@mlopes.net",
            "date": "2015-10-14T06:59:29Z"
        },
        "committer": {
            "name": "Paulo Lopes",
            "email": "paulo@mlopes.net",
            "date": "2015-10-14T06:59:29Z"
        },
        "message": "Fixes #222 : Allow UA FORMS to work with XSRF",
        "tree": {
            "sha": "7e869299eb08cfb11a1e4543fdf8625f160dc035",
            "url": "https://api.github.com/repos/vert-x3/vertx-web/git/trees/7e869299eb08cfb11a1e4543fdf8625f160dc035"
        },
        "url": "https://api.github.com/repos/vert-x3/vertx-web/git/commits/341ecefb8db8d99918c8a69fe57436f72bac509a",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/vert-x3/vertx-web/commits/341ecefb8db8d99918c8a69fe57436f72bac509a",
    "html_url": "https://github.com/vert-x3/vertx-web/commit/341ecefb8db8d99918c8a69fe57436f72bac509a",
    "comments_url": "https://api.github.com/repos/vert-x3/vertx-web/commits/341ecefb8db8d99918c8a69fe57436f72bac509a/comments",
    "author": {
        "login": "pmlopes",
        "id": 849467,
        "node_id": "MDQ6VXNlcjg0OTQ2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/849467?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pmlopes",
        "html_url": "https://github.com/pmlopes",
        "followers_url": "https://api.github.com/users/pmlopes/followers",
        "following_url": "https://api.github.com/users/pmlopes/following{/other_user}",
        "gists_url": "https://api.github.com/users/pmlopes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pmlopes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pmlopes/subscriptions",
        "organizations_url": "https://api.github.com/users/pmlopes/orgs",
        "repos_url": "https://api.github.com/users/pmlopes/repos",
        "events_url": "https://api.github.com/users/pmlopes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pmlopes/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "pmlopes",
        "id": 849467,
        "node_id": "MDQ6VXNlcjg0OTQ2Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/849467?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pmlopes",
        "html_url": "https://github.com/pmlopes",
        "followers_url": "https://api.github.com/users/pmlopes/followers",
        "following_url": "https://api.github.com/users/pmlopes/following{/other_user}",
        "gists_url": "https://api.github.com/users/pmlopes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pmlopes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pmlopes/subscriptions",
        "organizations_url": "https://api.github.com/users/pmlopes/orgs",
        "repos_url": "https://api.github.com/users/pmlopes/repos",
        "events_url": "https://api.github.com/users/pmlopes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pmlopes/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "06a946d0015aa961ecfa0a55ed77e54044f88daa",
            "url": "https://api.github.com/repos/vert-x3/vertx-web/commits/06a946d0015aa961ecfa0a55ed77e54044f88daa",
            "html_url": "https://github.com/vert-x3/vertx-web/commit/06a946d0015aa961ecfa0a55ed77e54044f88daa"
        }
    ],
    "stats": {
        "total": 164,
        "additions": 130,
        "deletions": 34
    },
    "files": [
        {
            "sha": "e21235d40338bdb7c68e9be7a89613f5a304eba2",
            "filename": "vertx-web/src/main/asciidoc/groovy/index.adoc",
            "status": "modified",
            "additions": 21,
            "deletions": 8,
            "changes": 29,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fgroovy%2Findex.adoc",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fgroovy%2Findex.adoc",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fgroovy%2Findex.adoc?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -74,15 +74,15 @@ To use vert.x web, add the following dependency to the _dependencies_ section of\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n </dependency>\n ----\n \n * Gradle (in your `build.gradle` file):\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT\n ----\n \n \n@@ -1902,7 +1902,7 @@ router.getWithRegex(\".+\\\\.hbs\").handler(handler)\n === MVEL template engine\n \n To use MVEL, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-mvel:3.1.0`. Create an instance of the MVEL template engine using:\n+`io.vertx:vertx-web-templ-mvel:3.2.0-SNAPSHOT`. Create an instance of the MVEL template engine using:\n `io.vertx.ext.web.templ.MVELTemplateEngine#create()`\n \n When using the MVEL template engine, it will by default look for\n@@ -1928,7 +1928,7 @@ MVEL templates.\n === Jade template engine\n \n To use the Jade template engine, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-jade:3.1.0`. Create an instance of the Jade template engine using:\n+`io.vertx:vertx-web-templ-jade:3.2.0-SNAPSHOT`. Create an instance of the Jade template engine using:\n `io.vertx.ext.web.templ.JadeTemplateEngine#create()`.\n \n When using the Jade template engine, it will by default look for\n@@ -1954,7 +1954,7 @@ Jade templates.\n === Handlebars template engine\n \n To use Handlebars, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-handlebars:3.1.0`. Create an instance of the Handlebars template engine\n+`io.vertx:vertx-web-templ-handlebars:3.2.0-SNAPSHOT`. Create an instance of the Handlebars template engine\n using: `io.vertx.ext.web.templ.HandlebarsTemplateEngine#create()`.\n \n When using the Handlebars template engine, it will by default look for\n@@ -1993,7 +1993,7 @@ handlebars templates.\n === Thymeleaf template engine\n \n To use Thymeleaf, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-thymeleaf:3.1.0`. Create an instance of the Thymeleaf template engine\n+`io.vertx:vertx-web-templ-thymeleaf:3.2.0-SNAPSHOT`. Create an instance of the Thymeleaf template engine\n using: `io.vertx.ext.web.templ.ThymeleafTemplateEngine#create()`.\n \n When using the Thymeleaf template engine, it will by default look for\n@@ -2282,7 +2282,7 @@ You can retrieve the client library using a dependency manager:\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n   <classifier>client</classifier>\n </dependency>\n ----\n@@ -2291,7 +2291,7 @@ You can retrieve the client library using a dependency manager:\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0:client\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT:client\n ----\n \n The library is also available on https://www.npmjs.com/package/vertx3-eventbus-client[NPM] and on\n@@ -2621,6 +2621,19 @@ On each get request under this handler a cookie is added to the response with a\n expected to return this token back in a header. Since cookies are sent it is required that the cookie handler is also\n present on the router.\n \n+When developing non single page applications that rely on the User-Agent to perform the `POST` action, Headers cannot\n+be specified on HTML Forms. In order to solve this problem the header value will also be checked if and only if no\n+header was present in the Form attributes under the same name as the header, e.g.:\n+\n+[source,html]\n+---\n+<form action=\"/submit\" method=\"POST\">\n+<input type=\"hidden\" name=\"X-XSRF-TOKEN\" value=\"abracadabra\">\n+</form>\n+---\n+\n+It is the responsability of the user to fill in the right value for the form field.\n+\n [source,groovy]\n ----\n import io.vertx.groovy.ext.web.handler.CookieHandler"
        },
        {
            "sha": "5b9f1c8861dc13bcc5b6f4a18f88a5db28e41a2f",
            "filename": "vertx-web/src/main/asciidoc/java/index.adoc",
            "status": "modified",
            "additions": 21,
            "deletions": 8,
            "changes": 29,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjava%2Findex.adoc",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjava%2Findex.adoc",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjava%2Findex.adoc?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -74,15 +74,15 @@ To use vert.x web, add the following dependency to the _dependencies_ section of\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n </dependency>\n ----\n \n * Gradle (in your `build.gradle` file):\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT\n ----\n \n \n@@ -1708,7 +1708,7 @@ router.getWithRegex(\".+\\\\.hbs\").handler(handler);\n === MVEL template engine\n \n To use MVEL, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-mvel:3.1.0`. Create an instance of the MVEL template engine using:\n+`io.vertx:vertx-web-templ-mvel:3.2.0-SNAPSHOT`. Create an instance of the MVEL template engine using:\n `io.vertx.ext.web.templ.MVELTemplateEngine#create()`\n \n When using the MVEL template engine, it will by default look for\n@@ -1734,7 +1734,7 @@ MVEL templates.\n === Jade template engine\n \n To use the Jade template engine, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-jade:3.1.0`. Create an instance of the Jade template engine using:\n+`io.vertx:vertx-web-templ-jade:3.2.0-SNAPSHOT`. Create an instance of the Jade template engine using:\n `io.vertx.ext.web.templ.JadeTemplateEngine#create()`.\n \n When using the Jade template engine, it will by default look for\n@@ -1760,7 +1760,7 @@ Jade templates.\n === Handlebars template engine\n \n To use Handlebars, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-handlebars:3.1.0`. Create an instance of the Handlebars template engine\n+`io.vertx:vertx-web-templ-handlebars:3.2.0-SNAPSHOT`. Create an instance of the Handlebars template engine\n using: `io.vertx.ext.web.templ.HandlebarsTemplateEngine#create()`.\n \n When using the Handlebars template engine, it will by default look for\n@@ -1795,7 +1795,7 @@ handlebars templates.\n === Thymeleaf template engine\n \n To use Thymeleaf, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-thymeleaf:3.1.0`. Create an instance of the Thymeleaf template engine\n+`io.vertx:vertx-web-templ-thymeleaf:3.2.0-SNAPSHOT`. Create an instance of the Thymeleaf template engine\n using: `io.vertx.ext.web.templ.ThymeleafTemplateEngine#create()`.\n \n When using the Thymeleaf template engine, it will by default look for\n@@ -2064,7 +2064,7 @@ You can retrieve the client library using a dependency manager:\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n   <classifier>client</classifier>\n </dependency>\n ----\n@@ -2073,7 +2073,7 @@ You can retrieve the client library using a dependency manager:\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0:client\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT:client\n ----\n \n The library is also available on https://www.npmjs.com/package/vertx3-eventbus-client[NPM] and on\n@@ -2328,6 +2328,19 @@ On each get request under this handler a cookie is added to the response with a\n expected to return this token back in a header. Since cookies are sent it is required that the cookie handler is also\n present on the router.\n \n+When developing non single page applications that rely on the User-Agent to perform the `POST` action, Headers cannot\n+be specified on HTML Forms. In order to solve this problem the header value will also be checked if and only if no\n+header was present in the Form attributes under the same name as the header, e.g.:\n+\n+[source,html]\n+---\n+<form action=\"/submit\" method=\"POST\">\n+<input type=\"hidden\" name=\"X-XSRF-TOKEN\" value=\"abracadabra\">\n+</form>\n+---\n+\n+It is the responsability of the user to fill in the right value for the form field.\n+\n [source,java]\n ----\n router.route().handler(CookieHandler.create());"
        },
        {
            "sha": "5fcc20f22bb067cf70e202279a290ad5693632ab",
            "filename": "vertx-web/src/main/asciidoc/js/index.adoc",
            "status": "modified",
            "additions": 21,
            "deletions": 8,
            "changes": 29,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjs%2Findex.adoc",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjs%2Findex.adoc",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fjs%2Findex.adoc?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -74,15 +74,15 @@ To use vert.x web, add the following dependency to the _dependencies_ section of\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n </dependency>\n ----\n \n * Gradle (in your `build.gradle` file):\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT\n ----\n \n \n@@ -1898,7 +1898,7 @@ router.getWithRegex(\".+\\\\.hbs\").handler(handler.handle);\n === MVEL template engine\n \n To use MVEL, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-mvel:3.1.0`. Create an instance of the MVEL template engine using:\n+`io.vertx:vertx-web-templ-mvel:3.2.0-SNAPSHOT`. Create an instance of the MVEL template engine using:\n `io.vertx.ext.web.templ.MVELTemplateEngine#create()`\n \n When using the MVEL template engine, it will by default look for\n@@ -1924,7 +1924,7 @@ MVEL templates.\n === Jade template engine\n \n To use the Jade template engine, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-jade:3.1.0`. Create an instance of the Jade template engine using:\n+`io.vertx:vertx-web-templ-jade:3.2.0-SNAPSHOT`. Create an instance of the Jade template engine using:\n `io.vertx.ext.web.templ.JadeTemplateEngine#create()`.\n \n When using the Jade template engine, it will by default look for\n@@ -1950,7 +1950,7 @@ Jade templates.\n === Handlebars template engine\n \n To use Handlebars, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-handlebars:3.1.0`. Create an instance of the Handlebars template engine\n+`io.vertx:vertx-web-templ-handlebars:3.2.0-SNAPSHOT`. Create an instance of the Handlebars template engine\n using: `io.vertx.ext.web.templ.HandlebarsTemplateEngine#create()`.\n \n When using the Handlebars template engine, it will by default look for\n@@ -1989,7 +1989,7 @@ handlebars templates.\n === Thymeleaf template engine\n \n To use Thymeleaf, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-thymeleaf:3.1.0`. Create an instance of the Thymeleaf template engine\n+`io.vertx:vertx-web-templ-thymeleaf:3.2.0-SNAPSHOT`. Create an instance of the Thymeleaf template engine\n using: `io.vertx.ext.web.templ.ThymeleafTemplateEngine#create()`.\n \n When using the Thymeleaf template engine, it will by default look for\n@@ -2279,7 +2279,7 @@ You can retrieve the client library using a dependency manager:\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n   <classifier>client</classifier>\n </dependency>\n ----\n@@ -2288,7 +2288,7 @@ You can retrieve the client library using a dependency manager:\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0:client\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT:client\n ----\n \n The library is also available on https://www.npmjs.com/package/vertx3-eventbus-client[NPM] and on\n@@ -2616,6 +2616,19 @@ On each get request under this handler a cookie is added to the response with a\n expected to return this token back in a header. Since cookies are sent it is required that the cookie handler is also\n present on the router.\n \n+When developing non single page applications that rely on the User-Agent to perform the `POST` action, Headers cannot\n+be specified on HTML Forms. In order to solve this problem the header value will also be checked if and only if no\n+header was present in the Form attributes under the same name as the header, e.g.:\n+\n+[source,html]\n+---\n+<form action=\"/submit\" method=\"POST\">\n+<input type=\"hidden\" name=\"X-XSRF-TOKEN\" value=\"abracadabra\">\n+</form>\n+---\n+\n+It is the responsability of the user to fill in the right value for the form field.\n+\n [source,js]\n ----\n var CookieHandler = require(\"vertx-web-js/cookie_handler\");"
        },
        {
            "sha": "126039349669bd145e2e765b5b830e7d71bc112e",
            "filename": "vertx-web/src/main/asciidoc/ruby/index.adoc",
            "status": "modified",
            "additions": 21,
            "deletions": 8,
            "changes": 29,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fruby%2Findex.adoc",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fruby%2Findex.adoc",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fasciidoc%2Fruby%2Findex.adoc?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -74,15 +74,15 @@ To use vert.x web, add the following dependency to the _dependencies_ section of\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n </dependency>\n ----\n \n * Gradle (in your `build.gradle` file):\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT\n ----\n \n \n@@ -1898,7 +1898,7 @@ router.get_with_regex(\".+\\\\.hbs\").handler(&handler.method(:handle))\n === MVEL template engine\n \n To use MVEL, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-mvel:3.1.0`. Create an instance of the MVEL template engine using:\n+`io.vertx:vertx-web-templ-mvel:3.2.0-SNAPSHOT`. Create an instance of the MVEL template engine using:\n `io.vertx.ext.web.templ.MVELTemplateEngine#create()`\n \n When using the MVEL template engine, it will by default look for\n@@ -1924,7 +1924,7 @@ MVEL templates.\n === Jade template engine\n \n To use the Jade template engine, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-jade:3.1.0`. Create an instance of the Jade template engine using:\n+`io.vertx:vertx-web-templ-jade:3.2.0-SNAPSHOT`. Create an instance of the Jade template engine using:\n `io.vertx.ext.web.templ.JadeTemplateEngine#create()`.\n \n When using the Jade template engine, it will by default look for\n@@ -1950,7 +1950,7 @@ Jade templates.\n === Handlebars template engine\n \n To use Handlebars, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-handlebars:3.1.0`. Create an instance of the Handlebars template engine\n+`io.vertx:vertx-web-templ-handlebars:3.2.0-SNAPSHOT`. Create an instance of the Handlebars template engine\n using: `io.vertx.ext.web.templ.HandlebarsTemplateEngine#create()`.\n \n When using the Handlebars template engine, it will by default look for\n@@ -1989,7 +1989,7 @@ handlebars templates.\n === Thymeleaf template engine\n \n To use Thymeleaf, you need to add the following _dependency_ to your project:\n-`io.vertx:vertx-web-templ-thymeleaf:3.1.0`. Create an instance of the Thymeleaf template engine\n+`io.vertx:vertx-web-templ-thymeleaf:3.2.0-SNAPSHOT`. Create an instance of the Thymeleaf template engine\n using: `io.vertx.ext.web.templ.ThymeleafTemplateEngine#create()`.\n \n When using the Thymeleaf template engine, it will by default look for\n@@ -2279,7 +2279,7 @@ You can retrieve the client library using a dependency manager:\n <dependency>\n   <groupId>io.vertx</groupId>\n   <artifactId>vertx-web</artifactId>\n-  <version>3.1.0</version>\n+  <version>3.2.0-SNAPSHOT</version>\n   <classifier>client</classifier>\n </dependency>\n ----\n@@ -2288,7 +2288,7 @@ You can retrieve the client library using a dependency manager:\n \n [source,groovy,subs=\"+attributes\"]\n ----\n-compile io.vertx:vertx-web:3.1.0:client\n+compile io.vertx:vertx-web:3.2.0-SNAPSHOT:client\n ----\n \n The library is also available on https://www.npmjs.com/package/vertx3-eventbus-client[NPM] and on\n@@ -2616,6 +2616,19 @@ On each get request under this handler a cookie is added to the response with a\n expected to return this token back in a header. Since cookies are sent it is required that the cookie handler is also\n present on the router.\n \n+When developing non single page applications that rely on the User-Agent to perform the `POST` action, Headers cannot\n+be specified on HTML Forms. In order to solve this problem the header value will also be checked if and only if no\n+header was present in the Form attributes under the same name as the header, e.g.:\n+\n+[source,html]\n+---\n+<form action=\"/submit\" method=\"POST\">\n+<input type=\"hidden\" name=\"X-XSRF-TOKEN\" value=\"abracadabra\">\n+</form>\n+---\n+\n+It is the responsability of the user to fill in the right value for the form field.\n+\n [source,ruby]\n ----\n require 'vertx-web/cookie_handler'"
        },
        {
            "sha": "c6fb37188df04e4fef273474bb44a55325c463b9",
            "filename": "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/CSRFHandlerImpl.java",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2Fimpl%2FCSRFHandlerImpl.java",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2Fimpl%2FCSRFHandlerImpl.java",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2Fimpl%2FCSRFHandlerImpl.java?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -138,7 +138,8 @@ public void handle(RoutingContext ctx) {\n       case PUT:\n       case DELETE:\n       case PATCH:\n-        if (validateToken(ctx.request().getHeader(headerName))) {\n+        String header = ctx.request().getHeader(headerName);\n+        if (validateToken(header == null ? ctx.request().getFormAttribute(headerName) : header)) {\n           ctx.next();\n         } else {\n           ctx.fail(403);"
        },
        {
            "sha": "67573def173aae778d4cdcd70f6232c878cc1ec8",
            "filename": "vertx-web/src/main/java/io/vertx/ext/web/package-info.java",
            "status": "modified",
            "additions": 13,
            "deletions": 0,
            "changes": 13,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fpackage-info.java",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fpackage-info.java",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Fmain%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fpackage-info.java?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -1680,6 +1680,19 @@\n  * expected to return this token back in a header. Since cookies are sent it is required that the cookie handler is also\n  * present on the router.\n  *\n+ * When developing non single page applications that rely on the User-Agent to perform the `POST` action, Headers cannot\n+ * be specified on HTML Forms. In order to solve this problem the header value will also be checked if and only if no\n+ * header was present in the Form attributes under the same name as the header, e.g.:\n+ *\n+ * [source,html]\n+ * ---\n+ * <form action=\"/submit\" method=\"POST\">\n+ * <input type=\"hidden\" name=\"X-XSRF-TOKEN\" value=\"abracadabra\">\n+ * </form>\n+ * ---\n+ *\n+ * It is the responsability of the user to fill in the right value for the form field.\n+ *\n  * [source,$lang]\n  * ----\n  * {@link examples.Examples#example54}"
        },
        {
            "sha": "9a306696e7f2c7bf8ceda3bf3a14c8e6ce82bacc",
            "filename": "vertx-web/src/test/java/io/vertx/ext/web/handler/CSRFHandlerTest.java",
            "status": "modified",
            "additions": 31,
            "deletions": 1,
            "changes": 32,
            "blob_url": "https://github.com/vert-x3/vertx-web/blob/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Ftest%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2FCSRFHandlerTest.java",
            "raw_url": "https://github.com/vert-x3/vertx-web/raw/341ecefb8db8d99918c8a69fe57436f72bac509a/vertx-web%2Fsrc%2Ftest%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2FCSRFHandlerTest.java",
            "contents_url": "https://api.github.com/repos/vert-x3/vertx-web/contents/vertx-web%2Fsrc%2Ftest%2Fjava%2Fio%2Fvertx%2Fext%2Fweb%2Fhandler%2FCSRFHandlerTest.java?ref=341ecefb8db8d99918c8a69fe57436f72bac509a",
            "patch": "@@ -16,6 +16,7 @@\n \n package io.vertx.ext.web.handler;\n \n+import io.vertx.core.buffer.Buffer;\n import io.vertx.core.http.HttpMethod;\n import io.vertx.ext.web.WebTestBase;\n import org.junit.Test;\n@@ -65,7 +66,6 @@ public void testPostWithHeader() throws Exception {\n       List<String> cookies = resp.headers().getAll(\"set-cookie\");\n       String cookie = cookies.get(0);\n       tmpCookie = cookie.substring(cookie.indexOf('=') + 1);\n-      System.out.println(tmpCookie);\n     }, 200, \"OK\", null);\n \n     testRequest(HttpMethod.POST, \"/\", req -> {\n@@ -84,4 +84,34 @@ public void testPostWithExpiredCookie() throws Exception {\n           \"4CYp9vQsr2VSQEsi/oVsMu35Ho9TlR0EovcYovlbiBw=.1437037602082.41jwU0FPl/n7ZNZAZEA07GyIUnpKSTKQ8Eju7Nicb34=\");\n     }, null, 403, \"Forbidden\", null);\n   }\n+\n+  @Test\n+  public void testPostWithFormAttribute() throws Exception {\n+\n+    // since we are working with forms we need the body handler to be present\n+    router.route().handler(BodyHandler.create());\n+    router.route().handler(CookieHandler.create());\n+    router.route().handler(CSRFHandler.create(\"Abracadabra\"));\n+    router.route().handler(rc -> rc.response().end());\n+\n+    testRequest(HttpMethod.GET, \"/\", null, resp -> {\n+      List<String> cookies = resp.headers().getAll(\"set-cookie\");\n+      String cookie = cookies.get(0);\n+      tmpCookie = cookie.substring(cookie.indexOf('=') + 1);\n+    }, 200, \"OK\", null);\n+\n+    testRequest(HttpMethod.POST, \"/\", req -> {\n+      // create a HTTP form\n+      String boundary = \"dLV9Wyq26L_-JQxk6ferf-RT153LhOO\";\n+      Buffer buffer = Buffer.buffer();\n+      String str =\n+          \"--\" + boundary + \"\\r\\n\" +\n+          \"Content-Disposition: form-data; name=\\\"\" + CSRFHandler.DEFAULT_HEADER_NAME + \"\\\"\\r\\n\\r\\n\" + tmpCookie + \"\\r\\n\" +\n+          \"--\" + boundary + \"--\\r\\n\";\n+      buffer.appendString(str);\n+      req.headers().set(\"content-length\", String.valueOf(buffer.length()));\n+      req.headers().set(\"content-type\", \"multipart/form-data; boundary=\" + boundary);\n+      req.write(buffer);\n+    }, null, 200, \"OK\", null);\n+  }\n }"
        }
    ]
}