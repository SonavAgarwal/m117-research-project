{
    "sha": "416d12366597ba69358b76e0d17bbb9b3bdfcd5d",
    "node_id": "MDY6Q29tbWl0MTA0MTY2NDg6NDE2ZDEyMzY2NTk3YmE2OTM1OGI3NmUwZDE3YmJiOWIzYmRmY2Q1ZA==",
    "commit": {
        "author": {
            "name": "Peter Dettman",
            "email": "peter.dettman@bouncycastle.org",
            "date": "2014-08-20T12:25:26Z"
        },
        "committer": {
            "name": "Peter Dettman",
            "email": "peter.dettman@bouncycastle.org",
            "date": "2014-08-20T12:25:26Z"
        },
        "message": "Refactoring",
        "tree": {
            "sha": "705623b1ba9a69bc4a5d93d8f2ab0f04305b2ea1",
            "url": "https://api.github.com/repos/bcgit/bc-java/git/trees/705623b1ba9a69bc4a5d93d8f2ab0f04305b2ea1"
        },
        "url": "https://api.github.com/repos/bcgit/bc-java/git/commits/416d12366597ba69358b76e0d17bbb9b3bdfcd5d",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/bcgit/bc-java/commits/416d12366597ba69358b76e0d17bbb9b3bdfcd5d",
    "html_url": "https://github.com/bcgit/bc-java/commit/416d12366597ba69358b76e0d17bbb9b3bdfcd5d",
    "comments_url": "https://api.github.com/repos/bcgit/bc-java/commits/416d12366597ba69358b76e0d17bbb9b3bdfcd5d/comments",
    "author": {
        "login": "peterdettman",
        "id": 3423981,
        "node_id": "MDQ6VXNlcjM0MjM5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3423981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peterdettman",
        "html_url": "https://github.com/peterdettman",
        "followers_url": "https://api.github.com/users/peterdettman/followers",
        "following_url": "https://api.github.com/users/peterdettman/following{/other_user}",
        "gists_url": "https://api.github.com/users/peterdettman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/peterdettman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/peterdettman/subscriptions",
        "organizations_url": "https://api.github.com/users/peterdettman/orgs",
        "repos_url": "https://api.github.com/users/peterdettman/repos",
        "events_url": "https://api.github.com/users/peterdettman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/peterdettman/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "peterdettman",
        "id": 3423981,
        "node_id": "MDQ6VXNlcjM0MjM5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3423981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peterdettman",
        "html_url": "https://github.com/peterdettman",
        "followers_url": "https://api.github.com/users/peterdettman/followers",
        "following_url": "https://api.github.com/users/peterdettman/following{/other_user}",
        "gists_url": "https://api.github.com/users/peterdettman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/peterdettman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/peterdettman/subscriptions",
        "organizations_url": "https://api.github.com/users/peterdettman/orgs",
        "repos_url": "https://api.github.com/users/peterdettman/repos",
        "events_url": "https://api.github.com/users/peterdettman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/peterdettman/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "ce3fa6752476d58fbdb94c3232768a86666b60e5",
            "url": "https://api.github.com/repos/bcgit/bc-java/commits/ce3fa6752476d58fbdb94c3232768a86666b60e5",
            "html_url": "https://github.com/bcgit/bc-java/commit/ce3fa6752476d58fbdb94c3232768a86666b60e5"
        }
    ],
    "stats": {
        "total": 42,
        "additions": 20,
        "deletions": 22
    },
    "files": [
        {
            "sha": "44f838b25b78f9dd9c2c91698ab98eb06e98c777",
            "filename": "core/src/main/java/org/bouncycastle/crypto/signers/DSASigner.java",
            "status": "modified",
            "additions": 20,
            "deletions": 22,
            "changes": 42,
            "blob_url": "https://github.com/bcgit/bc-java/blob/416d12366597ba69358b76e0d17bbb9b3bdfcd5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java",
            "raw_url": "https://github.com/bcgit/bc-java/raw/416d12366597ba69358b76e0d17bbb9b3bdfcd5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java",
            "contents_url": "https://api.github.com/repos/bcgit/bc-java/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java?ref=416d12366597ba69358b76e0d17bbb9b3bdfcd5d",
            "patch": "@@ -80,32 +80,28 @@ public BigInteger[] generateSignature(\n         byte[] message)\n     {\n         DSAParameters   params = key.getParameters();\n-        BigInteger      m = calculateE(params.getQ(), message);\n+        BigInteger      q = params.getQ();\n+        BigInteger      m = calculateE(q, message);\n+        BigInteger      x = ((DSAPrivateKeyParameters)key).getX();\n \n         if (kCalculator.isDeterministic())\n         {\n-            kCalculator.init(params.getQ(), ((DSAPrivateKeyParameters)key).getX(), message);\n+            kCalculator.init(q, x, message);\n         }\n         else\n         {\n-            kCalculator.init(params.getQ(), random);\n+            kCalculator.init(q, random);\n         }\n \n         BigInteger  k = kCalculator.nextK();\n \n-        BigInteger  r = params.getG().modPow(k, params.getP()).mod(params.getQ());\n+        BigInteger  r = params.getG().modPow(k, params.getP()).mod(q);\n \n-        k = k.modInverse(params.getQ()).multiply(\n-                    m.add(((DSAPrivateKeyParameters)key).getX().multiply(r)));\n+        k = k.modInverse(q).multiply(m.add(x.multiply(r)));\n \n-        BigInteger  s = k.mod(params.getQ());\n+        BigInteger  s = k.mod(q);\n \n-        BigInteger[]  res = new BigInteger[2];\n-\n-        res[0] = r;\n-        res[1] = s;\n-\n-        return res;\n+        return new BigInteger[]{ r, s };\n     }\n \n     /**\n@@ -119,28 +115,30 @@ public boolean verifySignature(\n         BigInteger  s)\n     {\n         DSAParameters   params = key.getParameters();\n-        BigInteger      m = calculateE(params.getQ(), message);\n+        BigInteger      q = params.getQ();\n+        BigInteger      m = calculateE(q, message);\n         BigInteger      zero = BigInteger.valueOf(0);\n \n-        if (zero.compareTo(r) >= 0 || params.getQ().compareTo(r) <= 0)\n+        if (zero.compareTo(r) >= 0 || q.compareTo(r) <= 0)\n         {\n             return false;\n         }\n \n-        if (zero.compareTo(s) >= 0 || params.getQ().compareTo(s) <= 0)\n+        if (zero.compareTo(s) >= 0 || q.compareTo(s) <= 0)\n         {\n             return false;\n         }\n \n-        BigInteger  w = s.modInverse(params.getQ());\n+        BigInteger  w = s.modInverse(q);\n \n-        BigInteger  u1 = m.multiply(w).mod(params.getQ());\n-        BigInteger  u2 = r.multiply(w).mod(params.getQ());\n+        BigInteger  u1 = m.multiply(w).mod(q);\n+        BigInteger  u2 = r.multiply(w).mod(q);\n \n-        u1 = params.getG().modPow(u1, params.getP());\n-        u2 = ((DSAPublicKeyParameters)key).getY().modPow(u2, params.getP());\n+        BigInteger p = params.getP();\n+        u1 = params.getG().modPow(u1, p);\n+        u2 = ((DSAPublicKeyParameters)key).getY().modPow(u2, p);\n \n-        BigInteger  v = u1.multiply(u2).mod(params.getP()).mod(params.getQ());\n+        BigInteger  v = u1.multiply(u2).mod(p).mod(q);\n \n         return v.equals(r);\n     }"
        }
    ]
}