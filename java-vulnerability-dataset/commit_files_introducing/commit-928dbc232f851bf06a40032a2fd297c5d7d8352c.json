{
    "sha": "928dbc232f851bf06a40032a2fd297c5d7d8352c",
    "node_id": "MDY6Q29tbWl0NTgyMDg2OTM6OTI4ZGJjMjMyZjg1MWJmMDZhNDAwMzJhMmZkMjk3YzVkN2Q4MzUyYw==",
    "commit": {
        "author": {
            "name": "Kevin Herron",
            "email": "kevinherron@gmail.com",
            "date": "2016-05-11T13:41:44Z"
        },
        "committer": {
            "name": "Kevin Herron",
            "email": "kevinherron@gmail.com",
            "date": "2016-05-11T13:41:44Z"
        },
        "message": "Initial contribution",
        "tree": {
            "sha": "a8767953adf1ca4c3a971dce9501370c06cffdd1",
            "url": "https://api.github.com/repos/eclipse-milo/milo/git/trees/a8767953adf1ca4c3a971dce9501370c06cffdd1"
        },
        "url": "https://api.github.com/repos/eclipse-milo/milo/git/commits/928dbc232f851bf06a40032a2fd297c5d7d8352c",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/eclipse-milo/milo/commits/928dbc232f851bf06a40032a2fd297c5d7d8352c",
    "html_url": "https://github.com/eclipse-milo/milo/commit/928dbc232f851bf06a40032a2fd297c5d7d8352c",
    "comments_url": "https://api.github.com/repos/eclipse-milo/milo/commits/928dbc232f851bf06a40032a2fd297c5d7d8352c/comments",
    "author": {
        "login": "kevinherron",
        "id": 340273,
        "node_id": "MDQ6VXNlcjM0MDI3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/340273?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinherron",
        "html_url": "https://github.com/kevinherron",
        "followers_url": "https://api.github.com/users/kevinherron/followers",
        "following_url": "https://api.github.com/users/kevinherron/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinherron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinherron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinherron/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinherron/orgs",
        "repos_url": "https://api.github.com/users/kevinherron/repos",
        "events_url": "https://api.github.com/users/kevinherron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinherron/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "kevinherron",
        "id": 340273,
        "node_id": "MDQ6VXNlcjM0MDI3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/340273?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinherron",
        "html_url": "https://github.com/kevinherron",
        "followers_url": "https://api.github.com/users/kevinherron/followers",
        "following_url": "https://api.github.com/users/kevinherron/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinherron/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinherron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinherron/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinherron/orgs",
        "repos_url": "https://api.github.com/users/kevinherron/repos",
        "events_url": "https://api.github.com/users/kevinherron/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinherron/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "87c851973bf188b13602d95c40f805a88eaaf0e4",
            "url": "https://api.github.com/repos/eclipse-milo/milo/commits/87c851973bf188b13602d95c40f805a88eaaf0e4",
            "html_url": "https://github.com/eclipse-milo/milo/commit/87c851973bf188b13602d95c40f805a88eaaf0e4"
        }
    ],
    "stats": {
        "total": 126165,
        "additions": 126165,
        "deletions": 0
    },
    "files": [
        {
            "sha": "98a9bbcbd5cb51387ea4e2070b0561a1123d7e92",
            "filename": ".gitignore",
            "status": "added",
            "additions": 14,
            "deletions": 0,
            "changes": 14,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/.gitignore",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/.gitignore",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/.gitignore?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,14 @@\n+*.class\n+\n+# Package Files #\n+*.jar\n+*.war\n+*.ear\n+\n+# IntelliJ #\n+*.iml\n+.idea/*\n+\n+# Maven #\n+**/target/*\n+target/*"
        },
        {
            "sha": "c28bb44ed3a0fa481ff79167534ff0e030f2d931",
            "filename": "opc-ua-sdk/findbugs-exclude.xml",
            "status": "added",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Ffindbugs-exclude.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Ffindbugs-exclude.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Ffindbugs-exclude.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<FindBugsFilter>\n+    <Bug code=\"EI\"/>\n+    <Bug pattern=\"EI_EXPOSE_REP2\"/>\n+</FindBugsFilter>"
        },
        {
            "sha": "934aaf79102e272ed9a131b8ffff1b42eea4046d",
            "filename": "opc-ua-sdk/jacoco-report/pom.xml",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fjacoco-report%2Fpom.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fjacoco-report%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fjacoco-report%2Fpom.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.eclipse.milo</groupId>\n+        <artifactId>opc-ua-sdk</artifactId>\n+        <version>0.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>jacoco-report</artifactId>\n+    <packaging>pom</packaging>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>sdk-core</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>sdk-client</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>sdk-server</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>sdk-tests</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>jacoco-site</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>report-aggregate</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "08811f9600e071e778b14df676a9655ecb02c057",
            "filename": "opc-ua-sdk/pom.xml",
            "status": "added",
            "additions": 142,
            "deletions": 0,
            "changes": 142,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fpom.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fpom.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,142 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.eclipse.milo</groupId>\n+        <artifactId>milo</artifactId>\n+        <version>0.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>opc-ua-sdk</artifactId>\n+    <packaging>pom</packaging>\n+\n+    <properties>\n+        <metrics.version>3.1.2</metrics.version>\n+        <protonpack.version>1.8</protonpack.version>\n+        <reflections.version>0.9.10</reflections.version>\n+        <slf4j.version>1.7.21</slf4j.version>\n+        <testng.version>6.9.10</testng.version>\n+    </properties>\n+\n+    <modules>\n+        <module>jacoco-report</module>\n+        <module>sdk-client</module>\n+        <module>sdk-core</module>\n+        <module>sdk-server</module>\n+        <module>sdk-tests</module>\n+    </modules>\n+\n+    <build>\n+        <pluginManagement>\n+            <plugins>\n+                <plugin>\n+                    <groupId>org.jacoco</groupId>\n+                    <artifactId>jacoco-maven-plugin</artifactId>\n+                    <version>0.7.7-SNAPSHOT</version>\n+                    <configuration>\n+                        <append>true</append>\n+                    </configuration>\n+                    <executions>\n+                        <execution>\n+                            <id>agent-for-ut</id>\n+                            <goals>\n+                                <goal>prepare-agent</goal>\n+                            </goals>\n+                        </execution>\n+                        <execution>\n+                            <id>agent-for-it</id>\n+                            <goals>\n+                                <goal>prepare-agent-integration</goal>\n+                            </goals>\n+                        </execution>\n+                        <execution>\n+                            <id>jacoco-site</id>\n+                            <phase>verify</phase>\n+                            <goals>\n+                                <goal>report</goal>\n+                            </goals>\n+                        </execution>\n+                    </executions>\n+                </plugin>\n+            </plugins>\n+        </pluginManagement>\n+\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <!-- configuration inherited from pluginManagement -->\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jar-plugin</artifactId>\n+                <!-- configuration inherited from pluginManagement -->\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-release-plugin</artifactId>\n+                <!-- configuration inherited from pluginManagement -->\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <version>2.4.0</version>\n+                <executions>\n+                    <execution>\n+                        <id>generate-manifest</id>\n+                        <phase>process-classes</phase>\n+                        <goals>\n+                            <goal>manifest</goal>\n+                        </goals>\n+                        <configuration>\n+                            <supportedProjectTypes>\n+                                <supportedProjectType>jar</supportedProjectType>\n+                                <supportedProjectType>bundle</supportedProjectType>\n+                            </supportedProjectTypes>\n+                            <instructions>\n+                                <Export-Package>${project.groupId}.opcua.sdk.*</Export-Package>\n+\n+                                <!-- enforce JVM vendor package as optional -->\n+                                <Import-Package>\n+                                    *,sun.misc.*;resolution:=optional,sun.nio.ch;resolution:=optional,sun.security.*;resolution:=optional\n+                                </Import-Package>\n+\n+                                <!-- override \"internal\" private package convention -->\n+                                <Private-Package>!*</Private-Package>\n+                            </instructions>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>findbugs-maven-plugin</artifactId>\n+                <version>3.0.3</version>\n+                <configuration>\n+                    <excludeFilterFile>${basedir}/../findbugs-exclude.xml</excludeFilterFile>\n+                </configuration>\n+            </plugin>\n+\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>sonatype-oss-snapshots</id>\n+            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+            <releases>\n+                <enabled>false</enabled>\n+            </releases>\n+            <snapshots>\n+                <enabled>true</enabled>\n+            </snapshots>\n+        </pluginRepository>\n+    </pluginRepositories>\n+\n+</project>"
        },
        {
            "sha": "4269c8bf422b77c86d8a14eb38c5bd22153703f3",
            "filename": "opc-ua-sdk/sdk-client/pom.xml",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fpom.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fpom.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.eclipse.milo</groupId>\n+        <artifactId>opc-ua-sdk</artifactId>\n+        <version>0.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>sdk-client</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>stack-client</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.codepoetics</groupId>\n+            <artifactId>protonpack</artifactId>\n+            <version>${protonpack.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <!-- configuration inherited from pluginManagement -->\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "aa25fe18a755a4ee095a768b905a42f1a8accc47",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/ClientSessionManager.java",
            "status": "added",
            "additions": 779,
            "deletions": 0,
            "changes": 779,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FClientSessionManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FClientSessionManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FClientSessionManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,779 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client;\n+\n+import java.nio.ByteBuffer;\n+import java.security.PrivateKey;\n+import java.security.cert.CertificateEncodingException;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import com.codepoetics.protonpack.StreamUtils;\n+import com.google.common.collect.ImmutableList;\n+import io.netty.channel.Channel;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscription;\n+import org.eclipse.milo.opcua.sdk.client.subscriptions.OpcUaSubscriptionManager;\n+import org.eclipse.milo.opcua.stack.client.UaTcpStackClient;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.channel.ClientSecureChannel;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityAlgorithm;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExtensionObject;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RequestHeader;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.util.NonceUtil;\n+import org.eclipse.milo.opcua.stack.core.util.SignatureUtil;\n+import org.eclipse.milo.opcua.stack.core.util.Unit;\n+import org.jooq.lambda.tuple.Tuple2;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.collect.Lists.newCopyOnWriteArrayList;\n+import static java.util.concurrent.CompletableFuture.completedFuture;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+class ClientSessionManager {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final List<SessionActivityListener> listeners = newCopyOnWriteArrayList();\n+\n+    private final AtomicReference<State> state = new AtomicReference<>(new Inactive());\n+\n+    private final OpcUaClient client;\n+\n+    ClientSessionManager(OpcUaClient client) {\n+        this.client = client;\n+\n+        Predicate<StatusCode> sessionError = statusCode -> {\n+            long status = statusCode.getValue();\n+\n+            return status == StatusCodes.Bad_SessionClosed ||\n+                status == StatusCodes.Bad_SessionIdInvalid ||\n+                status == StatusCodes.Bad_SessionNotActivated;\n+        };\n+\n+        Predicate<StatusCode> secureChannelError = statusCode -> {\n+            long status = statusCode.getValue();\n+\n+            return status == StatusCodes.Bad_SecureChannelIdInvalid ||\n+                status == StatusCodes.Bad_SecurityChecksFailed ||\n+                status == StatusCodes.Bad_TcpSecureChannelUnknown;\n+        };\n+\n+        client.addFaultListener(serviceFault -> {\n+            StatusCode serviceResult = serviceFault.getResponseHeader().getServiceResult();\n+\n+            if (sessionError.or(secureChannelError).test(serviceResult)) {\n+\n+                logger.debug(\"ServiceFault: {}\", serviceResult);\n+\n+                State currentState = state.get();\n+\n+                if (currentState instanceof Active) {\n+                    Creating creating = new Creating();\n+\n+                    if (state.compareAndSet(currentState, creating)) {\n+                        OpcUaSession session = ((Active) currentState).session;\n+\n+                        notifySessionInactive(session);\n+\n+                        client.getStackClient().disconnect()\n+                            .whenCompleteAsync((v, ex) -> createSession(creating));\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    void addListener(SessionActivityListener listener) {\n+        listeners.add(listener);\n+    }\n+\n+    void removeListener(SessionActivityListener listener) {\n+        listeners.remove(listener);\n+    }\n+\n+    CompletableFuture<OpcUaSession> getSession() {\n+        State currentState = state.get();\n+\n+        logger.trace(\"getSession(), currentState={}\",\n+            currentState.getClass().getSimpleName());\n+\n+        if (currentState instanceof Inactive) {\n+            Creating creatingState = new Creating();\n+\n+            if (state.compareAndSet(currentState, creatingState)) {\n+                CompletableFuture<OpcUaSession> sessionFuture = creatingState.sessionFuture;\n+\n+                createSession(creatingState);\n+\n+                return sessionFuture;\n+            } else {\n+                return getSession();\n+            }\n+        } else if (currentState instanceof Creating) {\n+            return ((Creating) currentState).sessionFuture;\n+        } else if (currentState instanceof Activating) {\n+            return ((Activating) currentState).sessionFuture;\n+        } else if (currentState instanceof Transferring) {\n+            return ((Transferring) currentState).sessionFuture;\n+        } else if (currentState instanceof Active) {\n+            return ((Active) currentState).sessionFuture;\n+        } else if (currentState instanceof Reactivating) {\n+            return ((Reactivating) currentState).sessionFuture;\n+        } else if (currentState instanceof Closing) {\n+            CompletableFuture<OpcUaSession> future = new CompletableFuture<>();\n+\n+            ((Closing) currentState).closeFuture.whenCompleteAsync((oldSession, ex) ->\n+                getSession().whenComplete((session, ex2) -> {\n+                    if (session != null) future.complete(session);\n+                    else future.completeExceptionally(ex2);\n+                })\n+            );\n+\n+            return future;\n+        } else {\n+            throw new IllegalStateException(\"unexpected state: \" + currentState.getClass());\n+        }\n+    }\n+\n+    CompletableFuture<Unit> closeSession() {\n+        State currentState = state.get();\n+\n+        logger.trace(\"closeSession(), currentState={}\",\n+            currentState.getClass().getSimpleName());\n+\n+        if (currentState instanceof Inactive) {\n+            return CompletableFuture.completedFuture(Unit.VALUE);\n+        } else if (currentState instanceof Closing) {\n+            return ((Closing) currentState).closeFuture\n+                .thenApply(s -> Unit.VALUE)\n+                .exceptionally(ex -> Unit.VALUE);\n+        } else if (currentState instanceof Creating) {\n+            Closing closingState = new Closing();\n+\n+            if (state.compareAndSet(currentState, closingState)) {\n+                closeSession(closingState, ((Creating) currentState).sessionFuture);\n+\n+                return closingState.closeFuture\n+                    .thenApply(s -> Unit.VALUE)\n+                    .exceptionally(ex -> Unit.VALUE);\n+            } else {\n+                return closeSession();\n+            }\n+        } else if (currentState instanceof Activating) {\n+            Closing closingState = new Closing();\n+\n+            if (state.compareAndSet(currentState, closingState)) {\n+                closeSession(closingState, ((Activating) currentState).sessionFuture);\n+\n+                return closingState.closeFuture\n+                    .thenApply(s -> Unit.VALUE)\n+                    .exceptionally(ex -> Unit.VALUE);\n+            } else {\n+                return closeSession();\n+            }\n+        } else if (currentState instanceof Reactivating) {\n+            Closing closingState = new Closing();\n+\n+            if (state.compareAndSet(currentState, closingState)) {\n+                closeSession(closingState, ((Reactivating) currentState).sessionFuture);\n+\n+                return closingState.closeFuture\n+                    .thenApply(s -> Unit.VALUE)\n+                    .exceptionally(ex -> Unit.VALUE);\n+            } else {\n+                return closeSession();\n+            }\n+        } else if (currentState instanceof Transferring) {\n+            Closing closingState = new Closing();\n+\n+            if (state.compareAndSet(currentState, closingState)) {\n+                closeSession(closingState, ((Transferring) currentState).sessionFuture);\n+\n+                return closingState.closeFuture\n+                    .thenApply(s -> Unit.VALUE)\n+                    .exceptionally(ex -> Unit.VALUE);\n+            } else {\n+                return closeSession();\n+            }\n+        } else if (currentState instanceof Active) {\n+            Closing closingState = new Closing();\n+\n+            if (state.compareAndSet(currentState, closingState)) {\n+                closeSession(closingState, ((Active) currentState).sessionFuture);\n+\n+                return closingState.closeFuture\n+                    .thenApply(s -> Unit.VALUE)\n+                    .exceptionally(ex -> Unit.VALUE);\n+            } else {\n+                return closeSession();\n+            }\n+        } else {\n+            throw new IllegalStateException(\"unexpected state: \" + currentState.getClass());\n+        }\n+    }\n+\n+    private void notifySessionActive(OpcUaSession session) {\n+        listeners.forEach(listener -> {\n+            try {\n+                listener.onSessionActive(session);\n+            } catch (Throwable t) {\n+                logger.warn(\"Uncaught Throwable notifying listener: {}\", listener, t);\n+            }\n+        });\n+    }\n+\n+    private void notifySessionInactive(OpcUaSession session) {\n+        listeners.forEach(listener -> {\n+            try {\n+                listener.onSessionInactive(session);\n+            } catch (Throwable t) {\n+                logger.warn(\"Uncaught Throwable notifying listener: {}\", listener, t);\n+            }\n+        });\n+    }\n+\n+    private void createSession(Creating creatingState) {\n+        UaTcpStackClient stackClient = client.getStackClient();\n+\n+        String serverUri = stackClient.getEndpoint().flatMap(e -> {\n+            String gatewayServerUri = e.getServer().getGatewayServerUri();\n+            if (gatewayServerUri != null && !gatewayServerUri.isEmpty()) {\n+                return Optional.ofNullable(e.getServer().getApplicationUri());\n+            } else {\n+                return Optional.empty();\n+            }\n+        }).orElse(null);\n+\n+        ByteString clientNonce = NonceUtil.generateNonce(32);\n+\n+        ByteString clientCertificate = stackClient.getConfig().getCertificate().map(c -> {\n+            try {\n+                return ByteString.of(c.getEncoded());\n+            } catch (CertificateEncodingException e) {\n+                return ByteString.NULL_VALUE;\n+            }\n+        }).orElse(ByteString.NULL_VALUE);\n+\n+        CreateSessionRequest request = new CreateSessionRequest(\n+            client.newRequestHeader(),\n+            stackClient.getApplication(),\n+            serverUri,\n+            stackClient.getEndpointUrl(),\n+            client.getConfig().getSessionName().get(),\n+            clientNonce,\n+            clientCertificate,\n+            client.getConfig().getSessionTimeout().doubleValue(),\n+            client.getConfig().getMaxResponseMessageSize()\n+        );\n+\n+        logger.debug(\"Sending CreateSessionRequest...\");\n+\n+        stackClient.<CreateSessionResponse>sendRequest(request).whenCompleteAsync((csr, ex) -> {\n+            CompletableFuture<OpcUaSession> sessionFuture = creatingState.sessionFuture;\n+\n+            if (csr != null) {\n+                logger.debug(\"Session created: {}\", csr.getSessionId());\n+\n+                Activating activatingState = new Activating(sessionFuture);\n+\n+                if (state.compareAndSet(creatingState, activatingState)) {\n+                    activateSession(activatingState, csr);\n+                }\n+            } else {\n+                logger.debug(\"CreateSession failed: {}\", ex.getMessage(), ex);\n+\n+                state.compareAndSet(creatingState, new Inactive());\n+                sessionFuture.completeExceptionally(ex);\n+            }\n+        });\n+    }\n+\n+    private void activateSession(Activating activatingState, CreateSessionResponse csr) {\n+        UaTcpStackClient stackClient = client.getStackClient();\n+\n+        Function<ClientSecureChannel, CompletableFuture<ActivateSessionResponse>> activate = secureChannel -> {\n+            try {\n+                Channel channel = secureChannel.getChannel();\n+\n+                channel.pipeline().addLast(new InactivityHandler());\n+\n+                EndpointDescription endpoint = stackClient.getEndpoint()\n+                    .orElseThrow(() -> new Exception(\"cannot create session with no endpoint configured\"));\n+\n+                Tuple2<UserIdentityToken, SignatureData> tuple =\n+                    client.getConfig().getIdentityProvider()\n+                        .getIdentityToken(endpoint, csr.getServerNonce());\n+\n+                UserIdentityToken userIdentityToken = tuple.v1();\n+                SignatureData userTokenSignature = tuple.v2();\n+\n+                ActivateSessionRequest request = new ActivateSessionRequest(\n+                    client.newRequestHeader(csr.getAuthenticationToken()),\n+                    buildClientSignature(secureChannel, csr),\n+                    new SignedSoftwareCertificate[0],\n+                    new String[0],\n+                    ExtensionObject.encode(userIdentityToken),\n+                    userTokenSignature\n+                );\n+\n+                logger.debug(\n+                    \"Sending ActivateSessionRequest, secureChannelId={}, channel={}...\",\n+                    secureChannel.getChannelId(), secureChannel.getChannel());\n+\n+                return stackClient.sendRequest(request);\n+            } catch (Exception e) {\n+                CompletableFuture<ActivateSessionResponse> f = new CompletableFuture<>();\n+                f.completeExceptionally(e);\n+                return f;\n+            }\n+        };\n+\n+        stackClient.getChannelFuture().thenCompose(activate).whenCompleteAsync((asr, ex) -> {\n+            CompletableFuture<OpcUaSession> sessionFuture = activatingState.sessionFuture;\n+\n+            if (asr != null) {\n+                logger.debug(\"Session activated: {}\", csr.getSessionId());\n+\n+                OpcUaSession session = new OpcUaSession(\n+                    csr.getAuthenticationToken(),\n+                    csr.getSessionId(),\n+                    client.getConfig().getSessionName().get(),\n+                    csr.getRevisedSessionTimeout(),\n+                    csr.getMaxRequestMessageSize(),\n+                    csr.getServerCertificate(),\n+                    csr.getServerSoftwareCertificates()\n+                );\n+\n+                session.setServerNonce(asr.getServerNonce());\n+\n+                OpcUaSubscriptionManager subscriptionManager = client.getSubscriptionManager();\n+                int subscriptionCount = subscriptionManager.getSubscriptions().size();\n+                boolean transferNeeded = subscriptionCount > 0;\n+\n+                logger.debug(\n+                    \"subscriptionCount={}, transferNeeded={}\",\n+                    subscriptionCount, transferNeeded);\n+\n+                if (transferNeeded) {\n+                    Transferring transferringState = new Transferring(sessionFuture);\n+\n+                    if (state.compareAndSet(activatingState, transferringState)) {\n+                        transferSubscriptions(transferringState, session);\n+                    }\n+                } else {\n+                    state.compareAndSet(activatingState, new Active(session, sessionFuture));\n+                    sessionFuture.complete(session);\n+                }\n+            } else {\n+                logger.debug(\"ActivateSession failed: {}\", ex.getMessage(), ex);\n+\n+                state.compareAndSet(activatingState, new Inactive());\n+                sessionFuture.completeExceptionally(ex);\n+            }\n+        });\n+    }\n+\n+    private void reactivateSession(Reactivating reactivatingState, OpcUaSession previousSession) {\n+        UaTcpStackClient stackClient = client.getStackClient();\n+\n+        Function<ClientSecureChannel, CompletionStage<ActivateSessionResponse>> activate = secureChannel -> {\n+            try {\n+                EndpointDescription endpoint = stackClient.getEndpoint()\n+                    .orElseThrow(() -> new Exception(\"cannot create session with no endpoint configured\"));\n+\n+                Tuple2<UserIdentityToken, SignatureData> tuple =\n+                    client.getConfig().getIdentityProvider()\n+                        .getIdentityToken(endpoint, previousSession.getServerNonce());\n+\n+                UserIdentityToken userIdentityToken = tuple.v1();\n+                SignatureData userTokenSignature = tuple.v2();\n+\n+                SignatureData clientSignature = buildClientSignature(\n+                    secureChannel,\n+                    previousSession.getServerCertificate(),\n+                    previousSession.getServerNonce()\n+                );\n+\n+                ActivateSessionRequest request = new ActivateSessionRequest(\n+                    client.newRequestHeader(previousSession.getAuthenticationToken()),\n+                    clientSignature,\n+                    new SignedSoftwareCertificate[0],\n+                    new String[0],\n+                    ExtensionObject.encode(userIdentityToken),\n+                    userTokenSignature\n+                );\n+\n+                logger.debug(\n+                    \"Sending (re)ActivateSessionRequest, secureChannelId={}, channel={}...\",\n+                    secureChannel.getChannelId(), secureChannel.getChannel());\n+\n+                return stackClient.sendRequest(request);\n+            } catch (Exception e) {\n+                CompletableFuture<ActivateSessionResponse> f = new CompletableFuture<>();\n+                f.completeExceptionally(e);\n+                return f;\n+            }\n+        };\n+\n+\n+        stackClient.getChannelFuture().thenCompose(activate).whenCompleteAsync((asr, ex) -> {\n+            CompletableFuture<OpcUaSession> sessionFuture = reactivatingState.sessionFuture;\n+\n+            if (asr != null) {\n+                logger.debug(\"Session reactivated: {}\", previousSession.getSessionId());\n+\n+                OpcUaSession newSession = new OpcUaSession(\n+                    previousSession.getAuthenticationToken(),\n+                    previousSession.getSessionId(),\n+                    client.getConfig().getSessionName().get(),\n+                    previousSession.getSessionTimeout(),\n+                    previousSession.getMaxRequestSize(),\n+                    previousSession.getServerCertificate(),\n+                    previousSession.getServerSoftwareCertificates()\n+                );\n+\n+                newSession.setServerNonce(asr.getServerNonce());\n+\n+                state.compareAndSet(reactivatingState, new Active(newSession, sessionFuture));\n+\n+                sessionFuture.complete(newSession);\n+            } else {\n+                logger.debug(\"(re)ActivateSession failed: {}\", ex.getMessage(), ex);\n+\n+                StatusCode statusCode = UaException.extract(ex)\n+                    .map(UaException::getStatusCode)\n+                    .orElse(StatusCode.BAD);\n+\n+                if (statusCode.getValue() == StatusCodes.Bad_SessionClosed ||\n+                    statusCode.getValue() == StatusCodes.Bad_SessionIdInvalid ||\n+                    statusCode.getValue() == StatusCodes.Bad_SessionNotActivated ||\n+                    statusCode.getValue() == StatusCodes.Bad_SecurityChecksFailed) {\n+\n+                    // A session-related error means the session is no longer valid.\n+                    // Create a new session re-using the current future.\n+                    Creating creating = new Creating(sessionFuture);\n+\n+                    if (state.compareAndSet(reactivatingState, creating)) {\n+                        createSession(creating);\n+                    } else {\n+                        // We're no longer re-activating for whatever reason (asked to close?).\n+                        // The only way this sessionFuture can be completed is exceptionally.\n+                        sessionFuture.completeExceptionally(ex);\n+                    }\n+                } else {\n+                    // A non-session-related error, such as not being connected yet.\n+                    // Fail the current future and try again.\n+                    Reactivating reactivatingAgain = new Reactivating();\n+\n+                    if (state.compareAndSet(reactivatingState, reactivatingAgain)) {\n+                        reactivateSession(reactivatingAgain, previousSession);\n+                    }\n+\n+                    sessionFuture.completeExceptionally(ex);\n+                }\n+            }\n+        });\n+    }\n+\n+    private void transferSubscriptions(Transferring transferringState, OpcUaSession session) {\n+        UaTcpStackClient stackClient = client.getStackClient();\n+        OpcUaSubscriptionManager subscriptionManager = client.getSubscriptionManager();\n+        ImmutableList<UaSubscription> subscriptions = subscriptionManager.getSubscriptions();\n+\n+        UInteger[] subscriptionIdsArray = subscriptions.stream()\n+            .map(UaSubscription::getSubscriptionId)\n+            .toArray(UInteger[]::new);\n+\n+        TransferSubscriptionsRequest request = new TransferSubscriptionsRequest(\n+            client.newRequestHeader(session.getAuthenticationToken()),\n+            subscriptionIdsArray,\n+            true\n+        );\n+\n+        logger.debug(\"Sending TransferSubscriptionsRequest...\");\n+\n+        stackClient.<TransferSubscriptionsResponse>sendRequest(request).whenCompleteAsync((tsr, ex) -> {\n+            CompletableFuture<OpcUaSession> sessionFuture = transferringState.sessionFuture;\n+\n+            if (tsr != null) {\n+                TransferResult[] results = tsr.getResults();\n+\n+                for (int i = 0; i < results.length; i++) {\n+                    TransferResult result = results[i];\n+\n+                    if (!result.getStatusCode().isGood()) {\n+                        UaSubscription subscription = subscriptions.get(i);\n+\n+                        subscriptionManager.transferFailed(\n+                            subscription.getSubscriptionId(),\n+                            result.getStatusCode()\n+                        );\n+                    }\n+                }\n+\n+                if (logger.isDebugEnabled()) {\n+                    Stream<UInteger> subscriptionIds = subscriptions.stream()\n+                        .map(UaSubscription::getSubscriptionId);\n+                    Stream<StatusCode> statusCodes = Arrays.stream(results)\n+                        .map(TransferResult::getStatusCode);\n+\n+                    String[] ss = StreamUtils.zip(\n+                        subscriptionIds, statusCodes,\n+                        (i, s) -> String.format(\"id=%s/%s\",\n+                            i, StatusCodes.lookup(s.getValue())\n+                                .map(sa -> sa[0]).orElse(s.toString()))\n+                    ).toArray(String[]::new);\n+\n+                    logger.debug(\"TransferSubscriptions results: {}\", Arrays.toString(ss));\n+                }\n+\n+                state.compareAndSet(transferringState, new Active(session, sessionFuture));\n+                sessionFuture.complete(session);\n+            } else {\n+                StatusCode statusCode = UaException.extract(ex)\n+                    .map(UaException::getStatusCode)\n+                    .orElse(StatusCode.BAD);\n+\n+                // Bad_ServiceUnsupported is the correct response when transfers aren't supported but\n+                // server implementations tend to interpret the spec in their own unique way...\n+                if (statusCode.getValue() == StatusCodes.Bad_NotImplemented ||\n+                    statusCode.getValue() == StatusCodes.Bad_NotSupported ||\n+                    statusCode.getValue() == StatusCodes.Bad_OutOfService ||\n+                    statusCode.getValue() == StatusCodes.Bad_ServiceUnsupported) {\n+\n+                    logger.debug(\"TransferSubscriptions not supported: {}\", statusCode);\n+\n+                    // transferFailed() will remove the subscription, but that is okay\n+                    // because the list from getSubscriptions() above is a copy.\n+                    for (UaSubscription subscription : subscriptions) {\n+                        subscriptionManager.transferFailed(\n+                            subscription.getSubscriptionId(), statusCode);\n+                    }\n+\n+                    state.compareAndSet(transferringState, new Active(session, sessionFuture));\n+                    sessionFuture.complete(session);\n+                } else {\n+                    logger.debug(\"TransferSubscriptions failed: {}\", statusCode);\n+\n+                    Closing closing = new Closing();\n+\n+                    if (state.compareAndSet(transferringState, closing)) {\n+                        closeSession(closing, completedFuture(session));\n+\n+                        closing.closeFuture.whenComplete((v, ex2) ->\n+                            sessionFuture.completeExceptionally(ex));\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    private void closeSession(Closing closingState, CompletableFuture<OpcUaSession> sessionFuture) {\n+        sessionFuture.whenComplete((session, ex) -> {\n+            if (session != null) {\n+                UaTcpStackClient stackClient = client.getStackClient();\n+\n+                RequestHeader requestHeader = new RequestHeader(\n+                    session.getAuthenticationToken(),\n+                    DateTime.now(),\n+                    client.nextRequestHandle(),\n+                    uint(0),\n+                    null,\n+                    uint(5000),\n+                    null\n+                );\n+\n+                CloseSessionRequest request = new CloseSessionRequest(requestHeader, true);\n+\n+                logger.debug(\"Sending CloseSessionRequest...\");\n+\n+                stackClient.<CloseSessionResponse>sendRequest(request).whenCompleteAsync((csr, ex2) -> {\n+                    if (ex2 != null) {\n+                        logger.debug(\"CloseSession failed: {}\", ex2.getMessage(), ex2);\n+                    } else {\n+                        logger.debug(\"Session closed: {}\", session.getSessionId());\n+                    }\n+\n+                    state.compareAndSet(closingState, new Inactive());\n+                    closingState.closeFuture.complete(session);\n+                });\n+            } else {\n+                state.compareAndSet(closingState, new Inactive());\n+                closingState.closeFuture.completeExceptionally(ex);\n+            }\n+        });\n+    }\n+\n+    private SignatureData buildClientSignature(ClientSecureChannel secureChannel, CreateSessionResponse response) {\n+        ByteString serverCert = response.getServerCertificate() != null ?\n+            response.getServerCertificate() : ByteString.NULL_VALUE;\n+        ByteString serverNonce = response.getServerNonce() != null ?\n+            response.getServerNonce() : ByteString.NULL_VALUE;\n+\n+        return buildClientSignature(secureChannel, serverCert, serverNonce);\n+    }\n+\n+    private SignatureData buildClientSignature(ClientSecureChannel secureChannel,\n+                                               ByteString serverCertificate,\n+                                               ByteString serverNonce) {\n+\n+        byte[] serverNonceBytes = Optional.ofNullable(serverNonce.bytes()).orElse(new byte[0]);\n+        byte[] serverCertificateBytes = Optional.ofNullable(serverCertificate.bytes()).orElse(new byte[0]);\n+\n+        // Signature is serverCert + serverNonce signed with our private key.\n+        byte[] signature = new byte[serverCertificateBytes.length + serverNonceBytes.length];\n+        System.arraycopy(serverCertificateBytes, 0, signature, 0, serverCertificateBytes.length);\n+        System.arraycopy(serverNonceBytes, 0, signature, serverCertificateBytes.length, serverNonceBytes.length);\n+\n+        SecurityAlgorithm signatureAlgorithm = secureChannel.getSecurityPolicy().getAsymmetricSignatureAlgorithm();\n+\n+        if (secureChannel.getSecurityPolicy() != SecurityPolicy.None) {\n+            try {\n+                PrivateKey privateKey = secureChannel.getKeyPair().getPrivate();\n+\n+                signature = SignatureUtil.sign(\n+                    signatureAlgorithm,\n+                    privateKey,\n+                    ByteBuffer.wrap(signature)\n+                );\n+            } catch (Throwable t) {\n+                logger.warn(\"Asymmetric signing failed: {}\", t.getMessage(), t);\n+            }\n+        }\n+\n+        return new SignatureData(signatureAlgorithm.getUri(), ByteString.of(signature));\n+    }\n+\n+    private class InactivityHandler extends ChannelInboundHandlerAdapter {\n+        @Override\n+        public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n+            State currentState = state.get();\n+\n+            if (currentState instanceof Active) {\n+                Reactivating reactivating = new Reactivating();\n+\n+                if (state.compareAndSet(currentState, reactivating)) {\n+                    OpcUaSession session = ((Active) currentState).session;\n+\n+                    notifySessionInactive(session);\n+\n+                    reactivateSession(reactivating, session);\n+                }\n+            }\n+\n+            super.channelInactive(ctx);\n+        }\n+    }\n+\n+    private interface State {\n+    }\n+\n+    private static class Inactive implements State {\n+    }\n+\n+    private class Creating implements State {\n+        final CompletableFuture<OpcUaSession> sessionFuture;\n+\n+        Creating() {\n+            sessionFuture = new CompletableFuture<>();\n+\n+            sessionFuture.thenAccept(session -> {\n+                client.getSubscriptionManager().startPublishing();\n+\n+                notifySessionActive(session);\n+            });\n+        }\n+\n+        Creating(CompletableFuture<OpcUaSession> sessionFuture) {\n+            this.sessionFuture = sessionFuture;\n+        }\n+\n+    }\n+\n+    private static class Activating implements State {\n+        final CompletableFuture<OpcUaSession> sessionFuture;\n+\n+        Activating(CompletableFuture<OpcUaSession> sessionFuture) {\n+            this.sessionFuture = sessionFuture;\n+        }\n+    }\n+\n+    private static class Transferring implements State {\n+        final CompletableFuture<OpcUaSession> sessionFuture;\n+\n+        Transferring(CompletableFuture<OpcUaSession> sessionFuture) {\n+            this.sessionFuture = sessionFuture;\n+        }\n+    }\n+\n+    private static class Active implements State {\n+        final OpcUaSession session;\n+        final CompletableFuture<OpcUaSession> sessionFuture;\n+\n+        Active(OpcUaSession session, CompletableFuture<OpcUaSession> sessionFuture) {\n+            this.session = session;\n+            this.sessionFuture = sessionFuture;\n+        }\n+    }\n+\n+    private class Reactivating implements State {\n+        final CompletableFuture<OpcUaSession> sessionFuture = new CompletableFuture<>();\n+\n+        Reactivating() {\n+            sessionFuture.thenAccept(session -> {\n+                client.getSubscriptionManager().startPublishing();\n+\n+                notifySessionActive(session);\n+            });\n+        }\n+    }\n+\n+    private class Closing implements State {\n+        final CompletableFuture<OpcUaSession> closeFuture = new CompletableFuture<>();\n+\n+        Closing() {\n+            closeFuture.thenAccept(ClientSessionManager.this::notifySessionInactive);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "4bd0f87c40a77b7d31a92f8e1444517c7fdb5d1d",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/OpcUaClient.java",
            "status": "added",
            "additions": 604,
            "deletions": 0,
            "changes": 604,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaClient.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaClient.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaClient.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,604 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.ServiceFaultListener;\n+import org.eclipse.milo.opcua.sdk.client.api.UaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.UaSession;\n+import org.eclipse.milo.opcua.sdk.client.api.config.OpcUaClientConfig;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.AddressSpace;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.NodeCache;\n+import org.eclipse.milo.opcua.sdk.client.nodes.DefaultAddressSpace;\n+import org.eclipse.milo.opcua.sdk.client.nodes.DefaultNodeCache;\n+import org.eclipse.milo.opcua.sdk.client.subscriptions.OpcUaSubscriptionManager;\n+import org.eclipse.milo.opcua.stack.client.UaTcpStackClient;\n+import org.eclipse.milo.opcua.stack.core.UaServiceFaultException;\n+import org.eclipse.milo.opcua.stack.core.serialization.UaRequestMessage;\n+import org.eclipse.milo.opcua.stack.core.serialization.UaResponseMessage;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExtensionObject;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseNextRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseNextResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowsePath;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteSubscriptionsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadDetails;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateDetails;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemCreateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemModifyRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RegisterNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RegisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RequestHeader;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ServiceFault;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetPublishingModeRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetPublishingModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetTriggeringRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetTriggeringResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SubscriptionAcknowledgement;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TranslateBrowsePathsToNodeIdsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TranslateBrowsePathsToNodeIdsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UnregisterNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UnregisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ViewDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteValue;\n+import org.eclipse.milo.opcua.stack.core.util.ExecutionQueue;\n+import org.eclipse.milo.opcua.stack.core.util.LongSequence;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.collect.Lists.newCopyOnWriteArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+import static org.eclipse.milo.opcua.stack.core.util.ConversionUtil.a;\n+\n+public class OpcUaClient implements UaClient {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final LongSequence requestHandles = new LongSequence(0, UInteger.MAX_VALUE);\n+\n+    private final List<ServiceFaultListener> faultListeners = newCopyOnWriteArrayList();\n+    private final ExecutionQueue faultNotificationQueue;\n+\n+    private final AddressSpace addressSpace;\n+    private final NodeCache nodeCache = new DefaultNodeCache();\n+    private final OpcUaSubscriptionManager subscriptionManager;\n+\n+    private final UaTcpStackClient stackClient;\n+    private final ClientSessionManager sessionManager;\n+\n+    private final OpcUaClientConfig config;\n+\n+    public OpcUaClient(OpcUaClientConfig config) {\n+        this.config = config;\n+\n+        sessionManager = new ClientSessionManager(this);\n+\n+        stackClient = new UaTcpStackClient(config);\n+\n+        faultNotificationQueue = new ExecutionQueue(config.getExecutor());\n+\n+        addressSpace = new DefaultAddressSpace(this);\n+        subscriptionManager = new OpcUaSubscriptionManager(this);\n+    }\n+\n+    @Override\n+    public OpcUaClientConfig getConfig() {\n+        return config;\n+    }\n+\n+    public UaTcpStackClient getStackClient() {\n+        return stackClient;\n+    }\n+\n+    @Override\n+    public NodeCache getNodeCache() {\n+        return nodeCache;\n+    }\n+\n+    @Override\n+    public AddressSpace getAddressSpace() {\n+        return addressSpace;\n+    }\n+\n+    /**\n+     * Build a new {@link RequestHeader} using a null authentication token.\n+     *\n+     * @return a new {@link RequestHeader} with a null authentication token.\n+     */\n+    public RequestHeader newRequestHeader() {\n+        return newRequestHeader(NodeId.NULL_VALUE);\n+    }\n+\n+    /**\n+     * Build a new {@link RequestHeader} using {@code authToken}.\n+     *\n+     * @param authToken the authentication token (from the session) to use.\n+     * @return a new {@link RequestHeader}.\n+     */\n+    public RequestHeader newRequestHeader(NodeId authToken) {\n+        return new RequestHeader(\n+            authToken,\n+            DateTime.now(),\n+            uint(requestHandles.getAndIncrement()),\n+            uint(0),\n+            null,\n+            config.getRequestTimeout(),\n+            null);\n+    }\n+\n+    /**\n+     * @return the next {@link UInteger} to use as a request handle.\n+     */\n+    public UInteger nextRequestHandle() {\n+        return uint(requestHandles.getAndIncrement());\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaClient> connect() {\n+        return stackClient.connect().thenCompose(\n+            c -> getSession().thenApply(s -> OpcUaClient.this));\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaClient> disconnect() {\n+        // Subscriptions must be cleared first, effectively stopping new\n+        // PublishRequests from being sent, otherwise continued PublishRequests\n+        // will initiate reconnection and re-activation.\n+        subscriptionManager.clearSubscriptions();\n+\n+        return sessionManager\n+            .closeSession()\n+            .thenCompose(v -> stackClient.disconnect())\n+            .thenApply(c -> (UaClient) OpcUaClient.this)\n+            .exceptionally(ex -> OpcUaClient.this);\n+    }\n+\n+    @Override\n+    public OpcUaSubscriptionManager getSubscriptionManager() {\n+        return subscriptionManager;\n+    }\n+\n+    @Override\n+    public CompletableFuture<ReadResponse> read(double maxAge,\n+                                                TimestampsToReturn timestampsToReturn,\n+                                                List<ReadValueId> readValueIds) {\n+\n+        return getSession().thenCompose(session -> {\n+            ReadRequest request = new ReadRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                maxAge,\n+                timestampsToReturn,\n+                a(readValueIds, ReadValueId.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<WriteResponse> write(List<WriteValue> writeValues) {\n+        return getSession().thenCompose(session -> {\n+            WriteRequest request = new WriteRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(writeValues, WriteValue.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<HistoryReadResponse> historyRead(HistoryReadDetails historyReadDetails,\n+                                                              TimestampsToReturn timestampsToReturn,\n+                                                              boolean releaseContinuationPoints,\n+                                                              List<HistoryReadValueId> nodesToRead) {\n+\n+        return getSession().thenCompose(session -> {\n+            HistoryReadRequest request = new HistoryReadRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                ExtensionObject.encode(historyReadDetails),\n+                timestampsToReturn,\n+                releaseContinuationPoints,\n+                a(nodesToRead, HistoryReadValueId.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<HistoryUpdateResponse> historyUpdate(List<HistoryUpdateDetails> historyUpdateDetails) {\n+        return getSession().thenCompose(session -> {\n+            ExtensionObject[] details = historyUpdateDetails.stream()\n+                .map(ExtensionObject::encode)\n+                .toArray(ExtensionObject[]::new);\n+\n+            HistoryUpdateRequest request = new HistoryUpdateRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                details);\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<BrowseResponse> browse(ViewDescription viewDescription,\n+                                                    UInteger maxReferencesPerNode,\n+                                                    List<BrowseDescription> nodesToBrowse) {\n+\n+        return getSession().thenCompose(session -> {\n+            BrowseRequest request = new BrowseRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                viewDescription,\n+                maxReferencesPerNode,\n+                a(nodesToBrowse, BrowseDescription.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<BrowseNextResponse> browseNext(boolean releaseContinuationPoints,\n+                                                            List<ByteString> continuationPoints) {\n+\n+        return getSession().thenCompose(session -> {\n+            BrowseNextRequest request = new BrowseNextRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                releaseContinuationPoints,\n+                a(continuationPoints, ByteString.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<TranslateBrowsePathsToNodeIdsResponse> translateBrowsePaths(List<BrowsePath> browsePaths) {\n+        return getSession().thenCompose(session -> {\n+            TranslateBrowsePathsToNodeIdsRequest request = new TranslateBrowsePathsToNodeIdsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(browsePaths, BrowsePath.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<RegisterNodesResponse> registerNodes(List<NodeId> nodesToRegister) {\n+        return getSession().thenCompose(session -> {\n+            RegisterNodesRequest request = new RegisterNodesRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(nodesToRegister, NodeId.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<UnregisterNodesResponse> unregisterNodes(List<NodeId> nodesToUnregister) {\n+        return getSession().thenCompose(session -> {\n+            UnregisterNodesRequest request = new UnregisterNodesRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(nodesToUnregister, NodeId.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<CallResponse> call(List<CallMethodRequest> methodsToCall) {\n+        return getSession().thenCompose(session -> {\n+            CallRequest request = new CallRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(methodsToCall, CallMethodRequest.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<CreateSubscriptionResponse> createSubscription(double requestedPublishingInterval,\n+                                                                            UInteger requestedLifetimeCount,\n+                                                                            UInteger requestedMaxKeepAliveCount,\n+                                                                            UInteger maxNotificationsPerPublish,\n+                                                                            boolean publishingEnabled,\n+                                                                            UByte priority) {\n+\n+        return getSession().thenCompose(session -> {\n+            CreateSubscriptionRequest request = new CreateSubscriptionRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                requestedPublishingInterval,\n+                requestedLifetimeCount,\n+                requestedMaxKeepAliveCount,\n+                maxNotificationsPerPublish,\n+                publishingEnabled,\n+                priority);\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<ModifySubscriptionResponse> modifySubscription(UInteger subscriptionId,\n+                                                                            double requestedPublishingInterval,\n+                                                                            UInteger requestedLifetimeCount,\n+                                                                            UInteger requestedMaxKeepAliveCount,\n+                                                                            UInteger maxNotificationsPerPublish,\n+                                                                            UByte priority) {\n+\n+        return getSession().thenCompose(session -> {\n+            ModifySubscriptionRequest request = new ModifySubscriptionRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                requestedPublishingInterval,\n+                requestedLifetimeCount,\n+                requestedMaxKeepAliveCount,\n+                maxNotificationsPerPublish,\n+                priority);\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<DeleteSubscriptionsResponse> deleteSubscriptions(List<UInteger> subscriptionIds) {\n+        return getSession().thenCompose(session -> {\n+            DeleteSubscriptionsRequest request = new DeleteSubscriptionsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(subscriptionIds, UInteger.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<TransferSubscriptionsResponse> transferSubscriptions(List<UInteger> subscriptionIds,\n+                                                                                  boolean sendInitialValues) {\n+\n+        return getSession().thenCompose(session -> {\n+            TransferSubscriptionsRequest request = new TransferSubscriptionsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(subscriptionIds, UInteger.class),\n+                sendInitialValues);\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<SetPublishingModeResponse> setPublishingMode(boolean publishingEnabled,\n+                                                                          List<UInteger> subscriptionIds) {\n+\n+        return getSession().thenCompose(session -> {\n+            SetPublishingModeRequest request = new SetPublishingModeRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                publishingEnabled,\n+                a(subscriptionIds, UInteger.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<PublishResponse> publish(List<SubscriptionAcknowledgement> subscriptionAcknowledgements) {\n+        return getSession().thenCompose(session -> {\n+            PublishRequest request = new PublishRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                a(subscriptionAcknowledgements, SubscriptionAcknowledgement.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<RepublishResponse> republish(UInteger subscriptionId, UInteger retransmitSequenceNumber) {\n+        return getSession().thenCompose(session -> {\n+            RepublishRequest request = new RepublishRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                retransmitSequenceNumber);\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<CreateMonitoredItemsResponse> createMonitoredItems(UInteger subscriptionId,\n+                                                                                TimestampsToReturn timestampsToReturn,\n+                                                                                List<MonitoredItemCreateRequest> itemsToCreate) {\n+\n+        return getSession().thenCompose(session -> {\n+            CreateMonitoredItemsRequest request = new CreateMonitoredItemsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                timestampsToReturn,\n+                a(itemsToCreate, MonitoredItemCreateRequest.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<ModifyMonitoredItemsResponse> modifyMonitoredItems(UInteger subscriptionId,\n+                                                                                TimestampsToReturn timestampsToReturn,\n+                                                                                List<MonitoredItemModifyRequest> itemsToModify) {\n+\n+        return getSession().thenCompose(session -> {\n+            ModifyMonitoredItemsRequest request = new ModifyMonitoredItemsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                timestampsToReturn,\n+                a(itemsToModify, MonitoredItemModifyRequest.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<DeleteMonitoredItemsResponse> deleteMonitoredItems(UInteger subscriptionId,\n+                                                                                List<UInteger> monitoredItemIds) {\n+\n+        return getSession().thenCompose(session -> {\n+            DeleteMonitoredItemsRequest request = new DeleteMonitoredItemsRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                a(monitoredItemIds, UInteger.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<SetMonitoringModeResponse> setMonitoringMode(UInteger subscriptionId,\n+                                                                          MonitoringMode monitoringMode,\n+                                                                          List<UInteger> monitoredItemIds) {\n+\n+        return getSession().thenCompose(session -> {\n+            SetMonitoringModeRequest request = new SetMonitoringModeRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                monitoringMode,\n+                a(monitoredItemIds, UInteger.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<SetTriggeringResponse> setTriggering(UInteger subscriptionId,\n+                                                                  UInteger triggeringItemId,\n+                                                                  List<UInteger> linksToAdd,\n+                                                                  List<UInteger> linksToRemove) {\n+\n+        return getSession().thenCompose(session -> {\n+            SetTriggeringRequest request = new SetTriggeringRequest(\n+                newRequestHeader(session.getAuthenticationToken()),\n+                subscriptionId,\n+                triggeringItemId,\n+                a(linksToAdd, UInteger.class),\n+                a(linksToRemove, UInteger.class));\n+\n+            return sendRequest(request);\n+        });\n+    }\n+\n+    @Override\n+    public final CompletableFuture<UaSession> getSession() {\n+        return sessionManager.getSession().thenApply(s -> (UaSession) s);\n+    }\n+\n+    @Override\n+    public <T extends UaResponseMessage> CompletableFuture<T> sendRequest(UaRequestMessage request) {\n+        CompletableFuture<T> f = stackClient.sendRequest(request);\n+\n+        if (faultListeners.size() > 0) {\n+            f.whenComplete(this::maybeHandleServiceFault);\n+        }\n+\n+        return f;\n+    }\n+\n+    @Override\n+    public void sendRequests(List<? extends UaRequestMessage> requests,\n+                             List<CompletableFuture<? extends UaResponseMessage>> futures) {\n+\n+        futures.forEach(f -> f.whenComplete(this::maybeHandleServiceFault));\n+\n+        stackClient.sendRequests(requests, futures);\n+    }\n+\n+    private void maybeHandleServiceFault(UaResponseMessage response, Throwable ex) {\n+        if (faultListeners.isEmpty()) return;\n+\n+        if (ex != null) {\n+            if (ex instanceof UaServiceFaultException) {\n+                UaServiceFaultException faultException = (UaServiceFaultException) ex;\n+                ServiceFault serviceFault = faultException.getServiceFault();\n+\n+                logger.debug(\"Notifying {} ServiceFaultListeners\", faultListeners.size());\n+\n+                faultNotificationQueue.submit(() ->\n+                    faultListeners.stream().forEach(h -> h.onServiceFault(serviceFault)));\n+            } else if (ex.getCause() instanceof UaServiceFaultException) {\n+                UaServiceFaultException faultException = (UaServiceFaultException) ex.getCause();\n+                ServiceFault serviceFault = faultException.getServiceFault();\n+\n+                logger.debug(\"Notifying {} ServiceFaultListeners\", faultListeners.size());\n+\n+                faultNotificationQueue.submit(() ->\n+                    faultListeners.stream().forEach(h -> h.onServiceFault(serviceFault)));\n+            }\n+        }\n+    }\n+\n+    public void addFaultListener(ServiceFaultListener faultListener) {\n+        faultListeners.add(faultListener);\n+        logger.debug(\"Added ServiceFaultListener: {}\", faultListener);\n+    }\n+\n+    public void removeFaultListener(ServiceFaultListener faultListener) {\n+        faultListeners.remove(faultListener);\n+        logger.debug(\"Removed ServiceFaultListener: {}\", faultListener);\n+    }\n+\n+    public void addSessionActivityListener(SessionActivityListener listener) {\n+        sessionManager.addListener(listener);\n+        logger.debug(\"Added SessionActivityListener: {}\", listener);\n+    }\n+\n+    public void removeSessionActivityListener(SessionActivityListener listener) {\n+        sessionManager.removeListener(listener);\n+        logger.debug(\"Removed SessionActivityListener: {}\", listener);\n+    }\n+\n+}"
        },
        {
            "sha": "0c2db792caf056f9fbbeba49d01a0c18443dcd9c",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/OpcUaSession.java",
            "status": "added",
            "additions": 95,
            "deletions": 0,
            "changes": 95,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaSession.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaSession.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FOpcUaSession.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.UaSession;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+\n+public class OpcUaSession implements UaSession {\n+\n+    private volatile ByteString serverNonce = ByteString.NULL_VALUE;\n+\n+    private final NodeId authToken;\n+    private final NodeId sessionId;\n+    private final String sessionName;\n+    private final double sessionTimeout;\n+    private final UInteger maxRequestSize;\n+    private final ByteString serverCertificate;\n+    private final SignedSoftwareCertificate[] serverSoftwareCertificates;\n+\n+    public OpcUaSession(NodeId authToken,\n+                        NodeId sessionId,\n+                        String sessionName,\n+                        double sessionTimeout,\n+                        UInteger maxRequestSize,\n+                        ByteString serverCertificate,\n+                        SignedSoftwareCertificate[] serverSoftwareCertificates) {\n+\n+        this.authToken = authToken;\n+        this.sessionId = sessionId;\n+        this.sessionName = sessionName;\n+        this.sessionTimeout = sessionTimeout;\n+        this.maxRequestSize = maxRequestSize;\n+        this.serverCertificate = serverCertificate;\n+        this.serverSoftwareCertificates = serverSoftwareCertificates;\n+    }\n+\n+    @Override\n+    public NodeId getAuthenticationToken() {\n+        return authToken;\n+    }\n+\n+    @Override\n+    public NodeId getSessionId() {\n+        return sessionId;\n+    }\n+\n+    @Override\n+    public String getSessionName() {\n+        return sessionName;\n+    }\n+\n+    @Override\n+    public Double getSessionTimeout() {\n+        return sessionTimeout;\n+    }\n+\n+    @Override\n+    public UInteger getMaxRequestSize() {\n+        return maxRequestSize;\n+    }\n+\n+    @Override\n+    public SignedSoftwareCertificate[] getServerSoftwareCertificates() {\n+        return serverSoftwareCertificates;\n+    }\n+\n+    @Override\n+    public ByteString getServerCertificate() {\n+        return serverCertificate;\n+    }\n+\n+    @Override\n+    public ByteString getServerNonce() {\n+        return serverNonce;\n+    }\n+\n+    public void setServerNonce(ByteString serverNonce) {\n+        this.serverNonce = serverNonce;\n+    }\n+\n+}"
        },
        {
            "sha": "4675e8ff10b7dc9c1a8dc80e3b4ba0931fe6c28c",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/SessionActivityListener.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FSessionActivityListener.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FSessionActivityListener.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2FSessionActivityListener.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.UaSession;\n+\n+public interface SessionActivityListener {\n+\n+    /**\n+     * An activated {@link UaSession} is now available.\n+     * <p>\n+     * Holding a reference to this session is not necessary or advised;\n+     * it is provided merely for informational purposes.\n+     */\n+    default void onSessionActive(UaSession session) {}\n+\n+    /**\n+     * The previously activated {@link UaSession} is no longer available.\n+     * <p>\n+     * Holding a reference to this session is not necessary or advised;\n+     * it is provided merely for informational purposes.\n+     */\n+    default void onSessionInactive(UaSession session) {}\n+\n+}"
        },
        {
            "sha": "5d23bbdb2b3e214f64f97c120040572afd292d1c",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/ServiceFaultListener.java",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FServiceFaultListener.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FServiceFaultListener.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FServiceFaultListener.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api;\n+\n+import org.eclipse.milo.opcua.stack.core.types.structured.ServiceFault;\n+\n+public interface ServiceFaultListener {\n+\n+    /**\n+     * A {@link ServiceFault} has occurred.\n+     *\n+     * @param serviceFault the {@link ServiceFault}.\n+     */\n+    void onServiceFault(ServiceFault serviceFault);\n+\n+}"
        },
        {
            "sha": "66b2c4567b0f0ef59dd9c651e31786fcf6f75aff",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/UaClient.java",
            "status": "added",
            "additions": 91,
            "deletions": 0,
            "changes": 91,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaClient.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaClient.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaClient.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.config.OpcUaClientConfig;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.AddressSpace;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.NodeCache;\n+import org.eclipse.milo.opcua.sdk.client.api.services.AttributeServices;\n+import org.eclipse.milo.opcua.sdk.client.api.services.MethodServices;\n+import org.eclipse.milo.opcua.sdk.client.api.services.MonitoredItemServices;\n+import org.eclipse.milo.opcua.sdk.client.api.services.SubscriptionServices;\n+import org.eclipse.milo.opcua.sdk.client.api.services.ViewServices;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscriptionManager;\n+import org.eclipse.milo.opcua.sdk.client.subscriptions.OpcUaSubscriptionManager;\n+import org.eclipse.milo.opcua.stack.core.serialization.UaRequestMessage;\n+import org.eclipse.milo.opcua.stack.core.serialization.UaResponseMessage;\n+\n+public interface UaClient extends AttributeServices, MethodServices, MonitoredItemServices, SubscriptionServices, ViewServices {\n+\n+    /**\n+     * @return the {@link OpcUaClientConfig} for this client.\n+     */\n+    OpcUaClientConfig getConfig();\n+\n+    /**\n+     * Connect to the configured endpoint.\n+     *\n+     * @return a {@link CompletableFuture} holding this client instance.\n+     */\n+    CompletableFuture<UaClient> connect();\n+\n+    /**\n+     * Disconnect from the configured endpoint.\n+     *\n+     * @return a {@link CompletableFuture} holding this client instance.\n+     */\n+    CompletableFuture<UaClient> disconnect();\n+\n+    /**\n+     * @return a {@link CompletableFuture} holding the {@link UaSession}.\n+     */\n+    CompletableFuture<UaSession> getSession();\n+\n+    /**\n+     * @return the {@link AddressSpace}.\n+     */\n+    AddressSpace getAddressSpace();\n+\n+    /**\n+     * @return the {@link NodeCache}.\n+     */\n+    NodeCache getNodeCache();\n+\n+    /**\n+     * @return the {@link OpcUaSubscriptionManager} for this client.\n+     */\n+    UaSubscriptionManager getSubscriptionManager();\n+\n+    /**\n+     * Send a {@link UaRequestMessage}.\n+     *\n+     * @param request the request to send.\n+     * @return a {@link CompletableFuture} holding the response.\n+     */\n+    <T extends UaResponseMessage> CompletableFuture<T> sendRequest(UaRequestMessage request);\n+\n+    /**\n+     * Send multiple {@link UaRequestMessage}s.\n+     *\n+     * @param requests the requests to send.\n+     * @param futures  the {@link CompletableFuture}s to complete when responses arrive.\n+     */\n+    void sendRequests(List<? extends UaRequestMessage> requests,\n+                      List<CompletableFuture<? extends UaResponseMessage>> futures);\n+\n+\n+}"
        },
        {
            "sha": "9701368008f0dd8f85fecea74cc36bfaafa3a45b",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/UaSession.java",
            "status": "added",
            "additions": 72,
            "deletions": 0,
            "changes": 72,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaSession.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaSession.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2FUaSession.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+\n+public interface UaSession {\n+\n+    /**\n+     * Get the authentication token assigned by the server.\n+     *\n+     * @return a unique {@link NodeId} assigned by the server to the session.\n+     */\n+    NodeId getAuthenticationToken();\n+\n+    /**\n+     * Get the session id assigned by the server.\n+     * <p>\n+     * This identifier is used to access the diagnostics information for the session in the server address space. It is\n+     * also used in the audit logs and any events that report information related to the session.\n+     *\n+     * @return a unique {@link NodeId} assigned by the server to the session.\n+     */\n+    NodeId getSessionId();\n+\n+    /**\n+     * @return the human-readable name assigned to this session by the client.\n+     */\n+    String getSessionName();\n+\n+    /**\n+     * Get the revised session timeout, that is, the number of milliseconds a session may remain open without activity.\n+     *\n+     * @return the revised session timeout.\n+     */\n+    Double getSessionTimeout();\n+\n+    /**\n+     * @return the maximum allowable size for any request sent to the server.\n+     */\n+    UInteger getMaxRequestSize();\n+\n+    /**\n+     * @return the last nonce received from the server.\n+     */\n+    ByteString getServerNonce();\n+\n+    /**\n+     * @return the server application instance certificate.\n+     */\n+    ByteString getServerCertificate();\n+\n+    /**\n+     * @return the server {@link SignedSoftwareCertificate}s.\n+     */\n+    SignedSoftwareCertificate[] getServerSoftwareCertificates();\n+\n+}"
        },
        {
            "sha": "0fa124498485cbbab9125e1770bc9a8b8c735901",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/config/OpcUaClientConfig.java",
            "status": "added",
            "additions": 59,
            "deletions": 0,
            "changes": 59,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfig.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfig.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfig.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.config;\n+\n+import java.util.function.Supplier;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.identity.IdentityProvider;\n+import org.eclipse.milo.opcua.stack.client.config.UaTcpStackClientConfig;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishRequest;\n+\n+public interface OpcUaClientConfig extends UaTcpStackClientConfig {\n+\n+    /**\n+     * @return a {@link Supplier} for the session name.\n+     */\n+    Supplier<String> getSessionName();\n+\n+    /**\n+     * @return the session timeout, in milliseconds, to request.\n+     */\n+    UInteger getSessionTimeout();\n+\n+    /**\n+     * @return the timeout, in milliseconds, before failing a request due to timeout.\n+     */\n+    UInteger getRequestTimeout();\n+\n+    /**\n+     * @return the maximum size for a response from the server.\n+     */\n+    UInteger getMaxResponseMessageSize();\n+\n+    /**\n+     * @return the maximum number of outstanding {@link PublishRequest}s allowed at any given time.\n+     */\n+    UInteger getMaxPendingPublishRequests();\n+\n+    /**\n+     * @return an {@link IdentityProvider} to use when activating a session.\n+     */\n+    IdentityProvider getIdentityProvider();\n+\n+    static OpcUaClientConfigBuilder builder() {\n+        return new OpcUaClientConfigBuilder();\n+    }\n+\n+}"
        },
        {
            "sha": "021435b375838294f5d5984a3766df25e2ee76a2",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/config/OpcUaClientConfigBuilder.java",
            "status": "added",
            "additions": 296,
            "deletions": 0,
            "changes": 296,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfigBuilder.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfigBuilder.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fconfig%2FOpcUaClientConfigBuilder.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,296 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.config;\n+\n+import java.security.KeyPair;\n+import java.security.cert.X509Certificate;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.function.Supplier;\n+\n+import io.netty.channel.nio.NioEventLoopGroup;\n+import io.netty.util.HashedWheelTimer;\n+import org.eclipse.milo.opcua.sdk.client.api.identity.AnonymousProvider;\n+import org.eclipse.milo.opcua.sdk.client.api.identity.IdentityProvider;\n+import org.eclipse.milo.opcua.stack.client.config.UaTcpStackClientConfig;\n+import org.eclipse.milo.opcua.stack.client.config.UaTcpStackClientConfigBuilder;\n+import org.eclipse.milo.opcua.stack.core.channel.ChannelConfig;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class OpcUaClientConfigBuilder extends UaTcpStackClientConfigBuilder {\n+\n+    private Supplier<String> sessionName;\n+\n+    private UInteger sessionTimeout = uint(120000);\n+    private UInteger maxResponseMessageSize = uint(0);\n+    private UInteger requestTimeout = uint(60000);\n+    private UInteger maxPendingPublishRequests = uint(UInteger.MAX_VALUE);\n+    private IdentityProvider identityProvider = new AnonymousProvider();\n+\n+    public OpcUaClientConfigBuilder setSessionName(Supplier<String> sessionName) {\n+        this.sessionName = sessionName;\n+        return this;\n+    }\n+\n+    public OpcUaClientConfigBuilder setSessionTimeout(UInteger sessionTimeout) {\n+        this.sessionTimeout = sessionTimeout;\n+        return this;\n+    }\n+\n+    public OpcUaClientConfigBuilder setMaxResponseMessageSize(UInteger maxResponseMessageSize) {\n+        this.maxResponseMessageSize = maxResponseMessageSize;\n+        return this;\n+    }\n+\n+    public OpcUaClientConfigBuilder setMaxPendingPublishRequests(UInteger maxPendingPublishRequests) {\n+        this.maxPendingPublishRequests = maxPendingPublishRequests;\n+        return this;\n+    }\n+\n+    public OpcUaClientConfigBuilder setRequestTimeout(UInteger requestTimeout) {\n+        this.requestTimeout = requestTimeout;\n+        return this;\n+    }\n+\n+    public OpcUaClientConfigBuilder setIdentityProvider(IdentityProvider identityProvider) {\n+        this.identityProvider = identityProvider;\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setEndpointUrl(String endpointUrl) {\n+        super.setEndpointUrl(endpointUrl);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setEndpoint(EndpointDescription endpoint) {\n+        super.setEndpoint(endpoint);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setKeyPair(KeyPair keyPair) {\n+        super.setKeyPair(keyPair);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setCertificate(X509Certificate certificate) {\n+        super.setCertificate(certificate);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setApplicationName(LocalizedText applicationName) {\n+        super.setApplicationName(applicationName);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setApplicationUri(String applicationUri) {\n+        super.setApplicationUri(applicationUri);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setProductUri(String productUri) {\n+        super.setProductUri(productUri);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setChannelConfig(ChannelConfig channelConfig) {\n+        super.setChannelConfig(channelConfig);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setChannelLifetime(UInteger channelLifetime) {\n+        super.setChannelLifetime(channelLifetime);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setExecutor(ExecutorService executor) {\n+        super.setExecutor(executor);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setEventLoop(NioEventLoopGroup eventLoop) {\n+        super.setEventLoop(eventLoop);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setWheelTimer(HashedWheelTimer wheelTimer) {\n+        super.setWheelTimer(wheelTimer);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaClientConfigBuilder setSecureChannelReauthenticationEnabled(boolean secureChannelReauthenticationEnabled) {\n+        super.setSecureChannelReauthenticationEnabled(secureChannelReauthenticationEnabled);\n+        return this;\n+    }\n+\n+    public OpcUaClientConfig build() {\n+        UaTcpStackClientConfig stackClientConfig = super.build();\n+\n+        if (sessionName == null) {\n+            sessionName = () -> String.format(\"UaSession:%s:%s\",\n+                stackClientConfig.getApplicationName().getText(),\n+                System.currentTimeMillis());\n+        }\n+\n+        return new OpcUaClientConfigImpl(\n+            stackClientConfig,\n+            sessionName,\n+            sessionTimeout,\n+            maxResponseMessageSize,\n+            maxPendingPublishRequests,\n+            requestTimeout,\n+            identityProvider);\n+    }\n+\n+    public static class OpcUaClientConfigImpl implements OpcUaClientConfig {\n+\n+        private final UaTcpStackClientConfig stackClientConfig;\n+        private final Supplier<String> sessionName;\n+        private final UInteger sessionTimeout;\n+        private final UInteger maxResponseMessageSize;\n+        private final UInteger maxPendingPublishRequests;\n+        private final UInteger requestTimeout;\n+        private final IdentityProvider identityProvider;\n+\n+        public OpcUaClientConfigImpl(UaTcpStackClientConfig stackClientConfig,\n+                                     Supplier<String> sessionName,\n+                                     UInteger sessionTimeout,\n+                                     UInteger maxResponseMessageSize,\n+                                     UInteger maxPendingPublishRequests,\n+                                     UInteger requestTimeout,\n+                                     IdentityProvider identityProvider) {\n+\n+            this.stackClientConfig = stackClientConfig;\n+            this.sessionName = sessionName;\n+            this.sessionTimeout = sessionTimeout;\n+            this.maxResponseMessageSize = maxResponseMessageSize;\n+            this.maxPendingPublishRequests = maxPendingPublishRequests;\n+            this.requestTimeout = requestTimeout;\n+            this.identityProvider = identityProvider;\n+        }\n+\n+        @Override\n+        public Supplier<String> getSessionName() {\n+            return sessionName;\n+        }\n+\n+        @Override\n+        public UInteger getSessionTimeout() {\n+            return sessionTimeout;\n+        }\n+\n+        @Override\n+        public UInteger getMaxResponseMessageSize() {\n+            return maxResponseMessageSize;\n+        }\n+\n+        @Override\n+        public UInteger getMaxPendingPublishRequests() {\n+            return maxPendingPublishRequests;\n+        }\n+\n+        @Override\n+        public UInteger getRequestTimeout() {\n+            return requestTimeout;\n+        }\n+\n+        @Override\n+        public IdentityProvider getIdentityProvider() {\n+            return identityProvider;\n+        }\n+\n+        @Override\n+        public Optional<String> getEndpointUrl() {\n+            return stackClientConfig.getEndpointUrl();\n+        }\n+\n+        @Override\n+        public Optional<EndpointDescription> getEndpoint() {\n+            return stackClientConfig.getEndpoint();\n+        }\n+\n+        @Override\n+        public Optional<KeyPair> getKeyPair() {\n+            return stackClientConfig.getKeyPair();\n+        }\n+\n+        @Override\n+        public Optional<X509Certificate> getCertificate() {\n+            return stackClientConfig.getCertificate();\n+        }\n+\n+        @Override\n+        public LocalizedText getApplicationName() {\n+            return stackClientConfig.getApplicationName();\n+        }\n+\n+        @Override\n+        public String getApplicationUri() {\n+            return stackClientConfig.getApplicationUri();\n+        }\n+\n+        @Override\n+        public String getProductUri() {\n+            return stackClientConfig.getProductUri();\n+        }\n+\n+        @Override\n+        public ChannelConfig getChannelConfig() {\n+            return stackClientConfig.getChannelConfig();\n+        }\n+\n+        @Override\n+        public UInteger getChannelLifetime() {\n+            return stackClientConfig.getChannelLifetime();\n+        }\n+\n+        @Override\n+        public ExecutorService getExecutor() {\n+            return stackClientConfig.getExecutor();\n+        }\n+\n+        @Override\n+        public NioEventLoopGroup getEventLoop() {\n+            return stackClientConfig.getEventLoop();\n+        }\n+\n+        @Override\n+        public HashedWheelTimer getWheelTimer() {\n+            return stackClientConfig.getWheelTimer();\n+        }\n+\n+        @Override\n+        public boolean isSecureChannelReauthenticationEnabled() {\n+            return stackClientConfig.isSecureChannelReauthenticationEnabled();\n+        }\n+\n+    }\n+\n+}"
        },
        {
            "sha": "81f27e0b36e5a522fd075af28a931af9c64a22b8",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/identity/AnonymousProvider.java",
            "status": "added",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FAnonymousProvider.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FAnonymousProvider.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FAnonymousProvider.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.identity;\n+\n+import java.util.Arrays;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.UserTokenType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AnonymousIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.jooq.lambda.tuple.Tuple2;\n+\n+/**\n+ * An {@link IdentityProvider} that will choose the first available anonymous {@link UserTokenPolicy}.\n+ */\n+public class AnonymousProvider implements IdentityProvider {\n+\n+    @Override\n+    public Tuple2<UserIdentityToken, SignatureData> getIdentityToken(EndpointDescription endpoint,\n+                                                                     ByteString serverNonce) throws Exception {\n+\n+        String policyId = Arrays.stream(endpoint.getUserIdentityTokens())\n+            .filter(t -> t.getTokenType() == UserTokenType.Anonymous)\n+            .findFirst()\n+            .map(policy -> {\n+                String id = policy.getPolicyId();\n+\n+                // treat a null id as empty string\n+                // else this becomes an empty Optional.\n+                return id == null ? \"\" : id;\n+            })\n+            .orElseThrow(() -> new Exception(\"no anonymous token policy found\"));\n+\n+        return new Tuple2<>(new AnonymousIdentityToken(policyId), new SignatureData());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AnonymousProvider{}\";\n+    }\n+\n+}"
        },
        {
            "sha": "562abd062e59440e6fa70433a8afc7e6a7fb04f9",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/identity/CompositeProvider.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FCompositeProvider.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FCompositeProvider.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FCompositeProvider.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.identity;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.jooq.lambda.tuple.Tuple2;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * A composite {@link IdentityProvider} that tries its component {@link IdentityProvider}s in the order provided.\n+ */\n+public class CompositeProvider implements IdentityProvider {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final ImmutableList<IdentityProvider> providers;\n+\n+    public CompositeProvider(IdentityProvider... providers) {\n+        this(ImmutableList.copyOf(providers));\n+    }\n+\n+    public CompositeProvider(List<IdentityProvider> providers) {\n+        this.providers = ImmutableList.copyOf(providers);\n+\n+    }\n+\n+    @Override\n+    public Tuple2<UserIdentityToken, SignatureData> getIdentityToken(EndpointDescription endpoint,\n+                                                                     ByteString serverNonce) throws Exception {\n+\n+        Iterator<IdentityProvider> iterator = providers.iterator();\n+\n+        while (iterator.hasNext()) {\n+            IdentityProvider provider = iterator.next();\n+\n+            try {\n+                return provider.getIdentityToken(endpoint, serverNonce);\n+            } catch (Exception e) {\n+                if (!iterator.hasNext()) {\n+                    throw e;\n+                }\n+\n+                logger.debug(\"IdentityProvider={} failed, trying next...\", provider.toString());\n+            }\n+        }\n+\n+        throw new Exception(\"no sufficient UserTokenPolicy found\");\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CompositeProvider{\" +\n+            \"providers=\" + providers +\n+            '}';\n+    }\n+\n+}"
        },
        {
            "sha": "fd02a3b0c7e168efcdb03e8139dc485051479135",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/identity/IdentityProvider.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FIdentityProvider.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FIdentityProvider.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FIdentityProvider.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.identity;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.jooq.lambda.tuple.Tuple2;\n+\n+public interface IdentityProvider {\n+\n+    /**\n+     * Return the {@link UserIdentityToken} and {@link SignatureData} (if applicable for the token) to use when\n+     * activating a session.\n+     *\n+     * @param endpoint the {@link EndpointDescription} being connected to.\n+     * @return a {@link Tuple2} containing the {@link UserIdentityToken} and {@link SignatureData}.\n+     */\n+    Tuple2<UserIdentityToken, SignatureData> getIdentityToken(EndpointDescription endpoint,\n+                                                              ByteString serverNonce) throws Exception;\n+\n+}"
        },
        {
            "sha": "22575adff3b4183972f8f79898b332f8812ca812",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/identity/UsernameProvider.java",
            "status": "added",
            "additions": 194,
            "deletions": 0,
            "changes": 194,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FUsernameProvider.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FUsernameProvider.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fidentity%2FUsernameProvider.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.identity;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.security.GeneralSecurityException;\n+import java.security.PublicKey;\n+import java.security.cert.X509Certificate;\n+import java.security.interfaces.RSAPublicKey;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import javax.crypto.Cipher;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityAlgorithm;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.UserTokenType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserNameIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.eclipse.milo.opcua.stack.core.util.CertificateUtil;\n+import org.jooq.lambda.tuple.Tuple2;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * An {@link IdentityProvider} that will choose the first available username+password {@link UserTokenPolicy}.\n+ */\n+public class UsernameProvider implements IdentityProvider {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final String username;\n+    private final String password;\n+\n+    public UsernameProvider(String username, String password) {\n+        this.username = username;\n+        this.password = password;\n+    }\n+\n+    @Override\n+    public Tuple2<UserIdentityToken, SignatureData> getIdentityToken(EndpointDescription endpoint,\n+                                                                     ByteString serverNonce) throws Exception {\n+\n+        UserTokenPolicy tokenPolicy = Arrays.stream(endpoint.getUserIdentityTokens())\n+            .filter(t -> t.getTokenType() == UserTokenType.UserName)\n+            .findFirst().orElseThrow(() -> new Exception(\"no username token policy found\"));\n+\n+        String policyId = tokenPolicy.getPolicyId();\n+\n+        SecurityPolicy securityPolicy = SecurityPolicy.None;\n+\n+        String securityPolicyUri = tokenPolicy.getSecurityPolicyUri();\n+        try {\n+            if (securityPolicyUri != null && !securityPolicyUri.isEmpty()) {\n+                securityPolicy = SecurityPolicy.fromUri(securityPolicyUri);\n+            } else {\n+                securityPolicyUri = endpoint.getSecurityPolicyUri();\n+                securityPolicy = SecurityPolicy.fromUri(securityPolicyUri);\n+            }\n+        } catch (Throwable t) {\n+            logger.warn(\"Error parsing SecurityPolicy for uri={}, falling back to no security.\", securityPolicyUri);\n+        }\n+\n+        byte[] passwordBytes = password.getBytes(\"UTF-8\");\n+        byte[] nonceBytes = Optional.ofNullable(serverNonce.bytes()).orElse(new byte[0]);\n+\n+        ByteBuf buffer = Unpooled.buffer().order(ByteOrder.LITTLE_ENDIAN);\n+\n+        if (securityPolicy == SecurityPolicy.None) {\n+            buffer.writeBytes(passwordBytes);\n+        } else {\n+            buffer.writeInt(passwordBytes.length + nonceBytes.length);\n+            buffer.writeBytes(passwordBytes);\n+            buffer.writeBytes(nonceBytes);\n+\n+            ByteString bs = endpoint.getServerCertificate();\n+            X509Certificate certificate = CertificateUtil.decodeCertificate(bs.bytes());\n+\n+            int plainTextBlockSize = getPlainTextBlockSize(certificate, securityPolicy);\n+            int cipherTextBlockSize = getCipherTextBlockSize(certificate, securityPolicy);\n+            int blockCount = (buffer.readableBytes() + plainTextBlockSize - 1) / plainTextBlockSize;\n+            Cipher cipher = getAndInitializeCipher(certificate, securityPolicy);\n+\n+            ByteBuffer plainTextNioBuffer = buffer.nioBuffer();\n+            ByteBuffer cipherTextNioBuffer = Unpooled.buffer(cipherTextBlockSize * blockCount)\n+                .order(ByteOrder.LITTLE_ENDIAN)\n+                .nioBuffer(0, cipherTextBlockSize * blockCount);\n+\n+            for (int blockNumber = 0; blockNumber < blockCount; blockNumber++) {\n+                int position = blockNumber * plainTextBlockSize;\n+                int limit = Math.min(buffer.readableBytes(), (blockNumber + 1) * plainTextBlockSize);\n+                plainTextNioBuffer.position(position).limit(limit);\n+\n+                cipher.doFinal(plainTextNioBuffer, cipherTextNioBuffer);\n+            }\n+\n+            cipherTextNioBuffer.flip();\n+            buffer = Unpooled.wrappedBuffer(cipherTextNioBuffer);\n+        }\n+\n+        byte[] bs = new byte[buffer.readableBytes()];\n+        buffer.readBytes(bs);\n+\n+        // UA Part 4, Section 7.35.3 UserNameIdentityToken:\n+        // encryptionAlgorithm parameter is null if the password is not encrypted.\n+        String securityAlgorithmUri = securityPolicy.getAsymmetricEncryptionAlgorithm().getUri();\n+        String encryptionAlgorithm = securityAlgorithmUri.isEmpty() ? null : securityAlgorithmUri;\n+\n+        UserNameIdentityToken token = new UserNameIdentityToken(\n+            policyId,\n+            username,\n+            ByteString.of(bs),\n+            encryptionAlgorithm\n+        );\n+\n+        return new Tuple2<>(token, new SignatureData());\n+    }\n+\n+    public Cipher getAndInitializeCipher(X509Certificate serverCertificate,\n+                                         SecurityPolicy securityPolicy) throws UaException {\n+\n+        assert (serverCertificate != null);\n+\n+        try {\n+            String transformation = securityPolicy.getAsymmetricEncryptionAlgorithm().getTransformation();\n+            Cipher cipher = Cipher.getInstance(transformation);\n+            cipher.init(Cipher.ENCRYPT_MODE, serverCertificate.getPublicKey());\n+            return cipher;\n+        } catch (GeneralSecurityException e) {\n+            throw new UaException(StatusCodes.Bad_SecurityChecksFailed, e);\n+        }\n+    }\n+\n+    public int getPlainTextBlockSize(X509Certificate certificate, SecurityPolicy securityPolicy) {\n+        SecurityAlgorithm algorithm = securityPolicy.getAsymmetricEncryptionAlgorithm();\n+\n+        switch (algorithm) {\n+            case Rsa15:\n+                return (getAsymmetricKeyLength(certificate) + 1) / 8 - 11;\n+            case RsaOaep:\n+                return (getAsymmetricKeyLength(certificate) + 1) / 8 - 42;\n+        }\n+\n+        return 1;\n+    }\n+\n+    public int getCipherTextBlockSize(X509Certificate certificate, SecurityPolicy securityPolicy) {\n+        SecurityAlgorithm algorithm = securityPolicy.getAsymmetricEncryptionAlgorithm();\n+\n+        switch (algorithm) {\n+            case Rsa15:\n+            case RsaOaep:\n+                return (getAsymmetricKeyLength(certificate) + 1) / 8;\n+        }\n+\n+        return 1;\n+    }\n+\n+\n+    private int getAsymmetricKeyLength(X509Certificate certificate) {\n+        PublicKey publicKey = certificate != null ?\n+            certificate.getPublicKey() : null;\n+\n+        return (publicKey instanceof RSAPublicKey) ?\n+            ((RSAPublicKey) publicKey).getModulus().bitLength() : 0;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"UsernameProvider{\" +\n+            \"username='\" + username + '\\'' +\n+            '}';\n+    }\n+\n+}"
        },
        {
            "sha": "83feba0d98e3d34e6b92df38f4dc08b13a2302c7",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/AddressSpace.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FAddressSpace.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FAddressSpace.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FAddressSpace.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaDataTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaMethodNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaReferenceTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaViewNode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+\n+public interface AddressSpace {\n+\n+    CompletableFuture<UaNode> getNode(NodeId nodeId);\n+\n+    UaDataTypeNode getDataTypeNode(NodeId nodeId);\n+\n+    UaMethodNode getMethodNode(NodeId nodeId);\n+\n+    UaObjectNode getObjectNode(NodeId nodeId);\n+\n+    UaObjectTypeNode getObjectTypeNode(NodeId nodeId);\n+\n+    UaReferenceTypeNode getReferenceTypeNode(NodeId nodeId);\n+\n+    UaVariableNode getVariableNode(NodeId nodeId);\n+\n+    UaVariableTypeNode getVariableTypeNode(NodeId nodeId);\n+\n+    UaViewNode getViewNode(NodeId nodeId);\n+\n+}"
        },
        {
            "sha": "f840bf3e8acf384445960e498e83045c5aee5edc",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/NodeCache.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeCache.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeCache.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeCache.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+\n+public interface NodeCache {\n+\n+    Optional<DataValue> getAttribute(NodeId nodeId, AttributeId attributeId);\n+\n+    void putAttribute(NodeId nodeId, AttributeId attributeId, DataValue value);\n+\n+    void invalidate(NodeId nodeId);\n+\n+    void invalidate(NodeId nodeId, AttributeId attributeId);\n+\n+    void invalidateAll();\n+\n+}"
        },
        {
            "sha": "9e2edf4eb27af4eddd75c3700f6130ed5af840f9",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/NodeManager.java",
            "status": "added",
            "additions": 17,
            "deletions": 0,
            "changes": 17,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2FNodeManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,17 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes;\n+\n+public interface NodeManager {\n+}"
        },
        {
            "sha": "d0a1a73c37c5db2127f84dca91ad5fae7d81b17f",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaDataTypeNode.java",
            "status": "added",
            "additions": 60,
            "deletions": 0,
            "changes": 60,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaDataTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaDataTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaDataTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+\n+public interface UaDataTypeNode extends UaNode {\n+\n+    /**\n+     * Read the IsAbstract attribute {@link DataValue}.\n+     *\n+     * @return the IsAbstract attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readIsAbstract();\n+\n+    /**\n+     * Read the IsAbstract attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readIsAbstract()}.\n+     *\n+     * @return the IsAbstract attribute.\n+     */\n+    default CompletableFuture<Boolean> readIsAbstractAttribute() {\n+        return readIsAbstract().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the IsAbstract attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeIsAbstract(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the IsAbstract attribute.\n+     *\n+     * @param isAbstract the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeIsAbstractAttribute(Boolean isAbstract) {\n+        return writeIsAbstract(new DataValue(new Variant(isAbstract)));\n+    }\n+\n+}"
        },
        {
            "sha": "678ec296504f7a7ad8269e93942300523993ebce",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaMethodNode.java",
            "status": "added",
            "additions": 96,
            "deletions": 0,
            "changes": 96,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaMethodNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaMethodNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaMethodNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+\n+public interface UaMethodNode extends UaNode {\n+\n+    /**\n+     * Read the Executable attribute {@link DataValue}.\n+     *\n+     * @return the Executable attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readExecutable();\n+\n+    /**\n+     * Read the Executable attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readExecutable()}.\n+     *\n+     * @return the Executable attribute.\n+     */\n+    default CompletableFuture<Boolean> readExecutableAttribute() {\n+        return readExecutable().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the UserExecutable attribute {@link DataValue}.\n+     *\n+     * @return the UserExecutable attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readUserExecutable();\n+\n+    /**\n+     * Read the UserExecutable attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readUserExecutable()}.\n+     *\n+     * @return the UserExecutable attribute.\n+     */\n+    default CompletableFuture<Boolean> readUserExecutableAttribute() {\n+        return readUserExecutable().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Executable attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeExecutable(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the Executable attribute.\n+     *\n+     * @param executable the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeExecutableAttribute(Boolean executable) {\n+        return writeExecutable(new DataValue(new Variant(executable)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the UserExecutable attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeUserExecutable(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the UserExecutable attribute.\n+     *\n+     * @param userExecutable the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeUserExecutableAttribute(Boolean userExecutable) {\n+        return writeExecutable(new DataValue(new Variant(userExecutable)));\n+    }\n+\n+}"
        },
        {
            "sha": "514f5ee240fd37873d01fa79f53e484c8192a4ba",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaNode.java",
            "status": "added",
            "additions": 309,
            "deletions": 0,
            "changes": 309,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,309 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;\n+\n+public interface UaNode {\n+\n+    /**\n+     * Read the NodeId attribute {@link DataValue}.\n+     *\n+     * @return the NodeId attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readNodeId();\n+\n+    /**\n+     * Read the NodeId attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readNodeId()}.\n+     *\n+     * @return the NodeId attribute.\n+     * @see #readNodeId()\n+     */\n+    default CompletableFuture<NodeId> readNodeIdAttribute() {\n+        return readNodeId().thenApply(v -> (NodeId) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the NodeClass attribute {@link DataValue}.\n+     *\n+     * @return the NodeClass attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readNodeClass();\n+\n+    /**\n+     * Read the NodeClass attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readNodeClass()}.\n+     *\n+     * @return the NodeClass attribute.\n+     * @see #readNodeClass()\n+     */\n+    default CompletableFuture<NodeClass> readNodeClassAttribute() {\n+        return readNodeClass().thenApply(v -> NodeClass.from((Integer) v.getValue().getValue()));\n+    }\n+\n+    /**\n+     * Read the BrowseName attribute {@link DataValue}.\n+     *\n+     * @return the BrowseName attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readBrowseName();\n+\n+    /**\n+     * Read the BrowseName attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readBrowseName()}.\n+     *\n+     * @return the BrowseName attribute.\n+     */\n+    default CompletableFuture<QualifiedName> readBrowseNameAttribute() {\n+        return readBrowseName().thenApply(v -> (QualifiedName) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the DisplayName attribute {@link DataValue}.\n+     *\n+     * @return the DisplayName attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readDisplayName();\n+\n+    /**\n+     * Read the DisplayName attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readDisplayName()}.\n+     *\n+     * @return the DisplayName attribute.\n+     */\n+    default CompletableFuture<LocalizedText> readDisplayNameAttribute() {\n+        return readDisplayName().thenApply(v -> (LocalizedText) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the Description attribute {@link DataValue}.\n+     *\n+     * @return the Description attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readDescription();\n+\n+    /**\n+     * Read the Description attribute.\n+     * <p>\n+     * If quality and timestamp are required, see {@link #readDescription()}.\n+     *\n+     * @return the Description attribute, if present.\n+     */\n+    default CompletableFuture<Optional<LocalizedText>> readDescriptionAttribute() {\n+        return readDescription().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((LocalizedText) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the WriteMask attribute {@link DataValue}.\n+     *\n+     * @return the WriteMask attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readWriteMask();\n+\n+    /**\n+     * Read the WriteMask attribute.\n+     * <p>\n+     * If quality and timestamp are required, see {@link #readWriteMask()}.\n+     *\n+     * @return the WriteMask attribute, if present.\n+     */\n+    default CompletableFuture<Optional<UInteger>> readWriteMaskAttribute() {\n+        return readWriteMask().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((UInteger) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the UserWriteMask attribute {@link DataValue}.\n+     *\n+     * @return the UserWriteMask attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readUserWriteMask();\n+\n+    /**\n+     * Read the UserWriteMask attribute.\n+     * <p>\n+     * If quality and timestamp are required, see {@link #readUserWriteMask()}.\n+     *\n+     * @return the UserWriteMask attribute, if present.\n+     */\n+    default CompletableFuture<Optional<UInteger>> readUserWriteMaskAttribute() {\n+        return readUserWriteMask().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((UInteger) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the NodeId attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeNodeId(DataValue value);\n+\n+    /**\n+     * Write a {@link NodeId} to the NodeId attribute.\n+     *\n+     * @param nodeId the {@link NodeId} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeNodeIdAttribute(NodeId nodeId) {\n+        return writeNodeId(new DataValue(new Variant(nodeId)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the NodeClass attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeNodeClass(DataValue value);\n+\n+    /**\n+     * Write a {@link NodeClass} to the NodeClass attribute.\n+     *\n+     * @param nodeClass the {@link NodeClass} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeNodeClassAttribute(NodeClass nodeClass) {\n+        return writeNodeClass(new DataValue(new Variant(nodeClass)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the BrowseName attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeBrowseName(DataValue value);\n+\n+    /**\n+     * Write a {@link QualifiedName} to the BrowseName attribute.\n+     *\n+     * @param browseName the {@link QualifiedName} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeBrowseNameAttribute(QualifiedName browseName) {\n+        return writeBrowseName(new DataValue(new Variant(browseName)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the DisplayName attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeDisplayName(DataValue value);\n+\n+    /**\n+     * Write a {@link LocalizedText} to the DisplayName attribute.\n+     *\n+     * @param displayName the {@link LocalizedText} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeDisplayNameAttribute(LocalizedText displayName) {\n+        return writeDisplayName(new DataValue(new Variant(displayName)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Description attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeDescription(DataValue value);\n+\n+    /**\n+     * Write a {@link LocalizedText} to the Description attribute.\n+     *\n+     * @param description the {@link LocalizedText} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeDescriptionAttribute(LocalizedText description) {\n+        return writeDescription(new DataValue(new Variant(description)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the WriteMask attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeWriteMask(DataValue value);\n+\n+    /**\n+     * Write a {@link UInteger} to the WriteMask attribute.\n+     *\n+     * @param writeMask the {@link UInteger} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeWriteMaskAttribute(UInteger writeMask) {\n+        return writeWriteMask(new DataValue(new Variant(writeMask)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the UserWriteMask attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeUserWriteMask(DataValue value);\n+\n+    /**\n+     * Write a {@link UInteger} to the UserWriteMask attribute.\n+     *\n+     * @param userWriteMask the {@link UInteger} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeUserWriteMaskAttribute(UInteger userWriteMask) {\n+        return writeUserWriteMask(new DataValue(new Variant(userWriteMask)));\n+    }\n+\n+}"
        },
        {
            "sha": "ce8de2004d562d65cffb423dd3d21f5faf0d60cc",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaObjectNode.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public interface UaObjectNode extends UaNode {\n+\n+    /**\n+     * Read the EventNotifier attribute {@link DataValue}.\n+     *\n+     * @return the EventNotifier attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readEventNotifier();\n+\n+    /**\n+     * Read the EventNotifier attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readEventNotifier()}.\n+     *\n+     * @return the EventNotifier attribute.\n+     */\n+    default CompletableFuture<UByte> readEventNotifierAttribute() {\n+        return readEventNotifier().thenApply(v -> (UByte) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the EventNotifier attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeEventNotifier(DataValue value);\n+\n+    /**\n+     * Write a {@link UByte} to the EventNotifier attribute.\n+     *\n+     * @param eventNotifier the {@link UByte} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeEventNotifierAttribute(UByte eventNotifier) {\n+        return writeEventNotifier(new DataValue(new Variant(eventNotifier)));\n+    }\n+\n+}"
        },
        {
            "sha": "26c23a81d1f0da2145ea0a0855e75026b1bd8523",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaObjectTypeNode.java",
            "status": "added",
            "additions": 60,
            "deletions": 0,
            "changes": 60,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaObjectTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+\n+public interface UaObjectTypeNode extends UaNode {\n+\n+    /**\n+     * Read the IsAbstract attribute {@link DataValue}.\n+     *\n+     * @return the IsAbstract attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readIsAbstract();\n+\n+    /**\n+     * Read the IsAbstract attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readIsAbstract()}.\n+     *\n+     * @return the IsAbstract attribute.\n+     */\n+    default CompletableFuture<Boolean> readIsAbstractAttribute() {\n+        return readIsAbstract().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the IsAbstract attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeIsAbstract(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the IsAbstract attribute.\n+     *\n+     * @param isAbstract the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeIsAbstractAttribute(boolean isAbstract) {\n+        return writeIsAbstract(new DataValue(new Variant(isAbstract)));\n+    }\n+\n+}"
        },
        {
            "sha": "b5e97314cd085ac43bf61ee2958e064099fa25fc",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaReferenceTypeNode.java",
            "status": "added",
            "additions": 143,
            "deletions": 0,
            "changes": 143,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaReferenceTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaReferenceTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaReferenceTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+\n+public interface UaReferenceTypeNode {\n+\n+    /**\n+     * Read the IsAbstract {@link DataValue}.\n+     *\n+     * @return the IsAbstract {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readIsAbstract();\n+\n+    /**\n+     * Read the IsAbstract attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readIsAbstract()}.\n+     *\n+     * @return the IsAbstract attribute.\n+     */\n+    default CompletableFuture<Boolean> readIsAbstractAttribute() {\n+        return readIsAbstract().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the Symmetric attribute {@link DataValue}.\n+     *\n+     * @return the Symmetric attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readSymmetric();\n+\n+    /**\n+     * Read the Symmetric attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readSymmetric()}.\n+     *\n+     * @return the Symmetric attribute.\n+     */\n+    default CompletableFuture<Boolean> readSymmetricAttribute() {\n+        return readSymmetric().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the InverseName attribute {@link DataValue}.\n+     *\n+     * @return the InverseName attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readInverseName();\n+\n+    /**\n+     * Read the InverseName attribute.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readInverseName()}.\n+     *\n+     * @return the InverseName attribute.\n+     */\n+    default CompletableFuture<Optional<LocalizedText>> readInverseNameAttribute() {\n+        return readInverseName().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((LocalizedText) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the IsAbstract attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeIsAbstract(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the IsAbstract attribute.\n+     *\n+     * @param isAbstract the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeIsAbstractAttribute(boolean isAbstract) {\n+        return writeIsAbstract(new DataValue(new Variant(isAbstract)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Symmetric attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeSymmetric(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the Symmetric attribute.\n+     *\n+     * @param symmetric the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeSymmetricAttribute(boolean symmetric) {\n+        return writeSymmetric(new DataValue(new Variant(symmetric)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the InverseName attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeInverseName(DataValue value);\n+\n+    /**\n+     * Write a {@link LocalizedText} to the InverseName attribute.\n+     *\n+     * @param inverseName the {@link LocalizedText} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeInverseNameAttribute(LocalizedText inverseName) {\n+        return writeInverseName(new DataValue(new Variant(inverseName)));\n+    }\n+\n+}"
        },
        {
            "sha": "85cfef3041a501714016f29c5c4daf0bec67144f",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaVariableNode.java",
            "status": "added",
            "additions": 333,
            "deletions": 0,
            "changes": 333,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,333 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface UaVariableNode extends UaNode {\n+\n+    /**\n+     * Read the Value attribute {@link DataValue}.\n+     *\n+     * @return the Value attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readValue();\n+\n+    /**\n+     * Read the Value attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readValue()}.\n+     *\n+     * @return the Value attribute value.\n+     */\n+    default CompletableFuture<Object> readValueAttribute() {\n+        return readValue().thenApply(v -> v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the DataType attribute {@link DataValue}.\n+     *\n+     * @return the DataType attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readDataType();\n+\n+    /**\n+     * Read the DataType attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readDataType()}.\n+     *\n+     * @return the DataType attribute value.\n+     */\n+    default CompletableFuture<NodeId> readDataTypeAttribute() {\n+        return readDataType().thenApply(v -> (NodeId) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the ValueRank attribute {@link DataValue}.\n+     *\n+     * @return the ValueRank attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readValueRank();\n+\n+    /**\n+     * Read the ValueRank attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readValueRank()}.\n+     *\n+     * @return the ValueRank attribute value, if present.\n+     */\n+    default CompletableFuture<Integer> readValueRankAttribute() {\n+        return readValueRank().thenApply(v -> (Integer) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the ArrayDimensions attribute {@link DataValue}.\n+     *\n+     * @return the ArrayDimensions attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readArrayDimensions();\n+\n+    /**\n+     * Read the ArrayDimensions attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readArrayDimensions()}.\n+     *\n+     * @return the ArrayDimensions attribute value, if present.\n+     */\n+    default CompletableFuture<Optional<UInteger[]>> readArrayDimensionsAttribute() {\n+        return readArrayDimensions().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((UInteger[]) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the AccessLevel attribute {@link DataValue}.\n+     *\n+     * @return the AccessLevel attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readAccessLevel();\n+\n+    /**\n+     * Read the AccessLevel attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readAccessLevel()}.\n+     *\n+     * @return the AccessLevel attribute value.\n+     */\n+    default CompletableFuture<UByte> readAccessLevelAttribute() {\n+        return readAccessLevel().thenApply(v -> (UByte) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the UserAccessLevel attribute {@link DataValue}.\n+     *\n+     * @return the UserAccessLevel attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readUserAccessLevel();\n+\n+    /**\n+     * Read the UserAccessLevel attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readUserAccessLevel()}.\n+     *\n+     * @return the UserAccessLevel attribute value.\n+     */\n+    default CompletableFuture<UByte> readUserAccessLevelAttribute() {\n+        return readUserAccessLevel().thenApply(v -> (UByte) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the MinimumSamplingInterval attribute {@link DataValue}.\n+     *\n+     * @return the MinimumSamplingInterval attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readMinimumSamplingInterval();\n+\n+    /**\n+     * the MinimumSamplingInterval attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readMinimumSamplingInterval()}.\n+     *\n+     * @return the MinimumSamplingInterval attribute value, if present.\n+     */\n+    default CompletableFuture<Optional<Double>> readMinimumSamplingIntervalAttribute() {\n+        return readMinimumSamplingInterval().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((Double) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the Historizing attribute {@link DataValue}.\n+     *\n+     * @return the Historizing attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readHistorizing();\n+\n+    /**\n+     * Read the Historizing attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readHistorizing()}.\n+     *\n+     * @return the Historizing attribute value.\n+     */\n+    default CompletableFuture<Boolean> readHistorizingAttribute() {\n+        return readHistorizing().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Value attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeValue(DataValue value);\n+\n+    /**\n+     * Write an {@link Object} to the Value attribute.\n+     *\n+     * @param value the {@link Object} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeValueAttribute(Object value) {\n+        return writeValue(new DataValue(new Variant(value)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the DataType attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeDataType(DataValue value);\n+\n+    /**\n+     * Write a {@link NodeId} to the DataType attribute.\n+     *\n+     * @param dataType the {@link NodeId} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeDataTypeAttribute(NodeId dataType) {\n+        return writeDataType(new DataValue(new Variant(dataType)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the ValueRank attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeValueRank(DataValue value);\n+\n+    /**\n+     * Write an {@link Integer} to the ValueRank attribute.\n+     *\n+     * @param valueRank the {@link Integer} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeValueRankAttribute(Integer valueRank) {\n+        return writeValueRank(new DataValue(new Variant(valueRank)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the ArrayDimensions attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeArrayDimensions(DataValue value);\n+\n+    /**\n+     * Write a {@link UInteger}[] to the ArrayDimensions attribute.\n+     *\n+     * @param arrayDimensions the {@link UInteger}[] to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeArrayDimensionsAttribute(UInteger[] arrayDimensions) {\n+        return writeArrayDimensions(new DataValue(new Variant(arrayDimensions)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the AccessLevel attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeAccessLevel(DataValue value);\n+\n+    /**\n+     * Write a {@link UByte} to the AccessLevel attribute.\n+     *\n+     * @param accessLevel the {@link UByte} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeAccessLevelAttribute(UByte accessLevel) {\n+        return writeAccessLevel(new DataValue(new Variant(accessLevel)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the UserAccessLevel attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeUserAccessLevel(DataValue value);\n+\n+    /**\n+     * Write a {@link UByte} to the UserAccessLevel attribute.\n+     *\n+     * @param userAccessLevel the {@link UByte} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeUserAccessLevelAttribute(UByte userAccessLevel) {\n+        return writeUserAccessLevel(new DataValue(new Variant(userAccessLevel)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the MinimumSamplingInterval attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeMinimumSamplingInterval(DataValue value);\n+\n+    /**\n+     * Write a {@link Double} to the MinimumSamplingInterval attribute.\n+     *\n+     * @param minimumSamplingInterval the {@link Double} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeMinimumSamplingIntervalAttribute(Double minimumSamplingInterval) {\n+        return writeMinimumSamplingInterval(new DataValue(new Variant(minimumSamplingInterval)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Historizing attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeHistorizing(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the Historizing attribute.\n+     *\n+     * @param historizing the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeHistorizingAttribute(Boolean historizing) {\n+        return writeHistorizing(new DataValue(new Variant(historizing)));\n+    }\n+\n+}"
        },
        {
            "sha": "015f14b0eca5efbe97b01242a44acde6d6210215",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaVariableTypeNode.java",
            "status": "added",
            "additions": 216,
            "deletions": 0,
            "changes": 216,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaVariableTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface UaVariableTypeNode extends UaNode {\n+\n+    /**\n+     * Read the Value attribute {@link DataValue}.\n+     *\n+     * @return the Value attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readValue();\n+\n+    /**\n+     * Read the Value attribute value.\n+     * <p>\n+     * If quality and timestamps are required, see {@link #readValue()}.\n+     *\n+     * @return the Value attribute value.\n+     */\n+    default CompletableFuture<Optional<Object>> readValueAttribute() {\n+        return readValue().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable(v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the DataType attribute {@link DataValue}.\n+     *\n+     * @return the DataType attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readDataType();\n+\n+    /**\n+     * Read the DataType attribute value.\n+     *\n+     * @return the DataType attribute value.\n+     */\n+    default CompletableFuture<NodeId> readDataTypeAttribute() {\n+        return readDataType().thenApply(v -> (NodeId) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the ValueRank attribute {@link DataValue}.\n+     *\n+     * @return the ValueRank attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readValueRank();\n+\n+    /**\n+     * Read the ValueRank attribute value.\n+     *\n+     * @return the ValueRank attribute value.\n+     */\n+    default CompletableFuture<Integer> readValueRankAttribute() {\n+        return readValueRank().thenApply(v -> (Integer) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the ArrayDimensions attribute {@link DataValue}.\n+     *\n+     * @return the ArrayDimensions attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readArrayDimensions();\n+\n+    /**\n+     * Read the ArrayDimensions attribute value.\n+     *\n+     * @return the ArrayDimensions attribute value.\n+     */\n+    default CompletableFuture<Optional<UInteger[]>> readArrayDimensionsAttribute() {\n+        return readArrayDimensions().thenApply(v -> {\n+            StatusCode statusCode = v.getStatusCode();\n+\n+            if (statusCode.getValue() == StatusCodes.Bad_AttributeIdInvalid) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.ofNullable((UInteger[]) v.getValue().getValue());\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Read the IsAbstract attribute {@link DataValue}.\n+     *\n+     * @return the IsAbstract attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readIsAbstract();\n+\n+    /**\n+     * Read the IsAbstract attribute value.\n+     *\n+     * @return the IsAbstract attribute value.\n+     */\n+    default CompletableFuture<Boolean> readIsAbstractAttribute() {\n+        return readIsAbstract().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the Value attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeValue(DataValue value);\n+\n+    /**\n+     * Write an {@link Object} to the Value attribute.\n+     *\n+     * @param value the {@link Object} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeValueAttribute(Object value) {\n+        return writeValue(new DataValue(new Variant(value)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the DataType attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeDataType(DataValue value);\n+\n+    /**\n+     * Write a {@link NodeId} to the DataType attribute.\n+     *\n+     * @param dataType the {@link NodeId} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeDataTypeAttribute(NodeId dataType) {\n+        return writeDataType(new DataValue(new Variant(dataType)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the ValueRank attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeValueRank(DataValue value);\n+\n+    /**\n+     * Write an {@link Integer} to the ValueRank attribute.\n+     *\n+     * @param valueRank the {@link Integer} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeValueRankAttribute(Integer valueRank) {\n+        return writeValueRank(new DataValue(new Variant(valueRank)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the ArrayDimensions attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeArrayDimensions(DataValue value);\n+\n+    /**\n+     * Write a {@link UInteger}[] to the ArrayDimensions attribute.\n+     *\n+     * @param arrayDimensions the {@link UInteger}[] to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeArrayDimensionsAttribute(UInteger[] arrayDimensions) {\n+        return writeArrayDimensions(new DataValue(new Variant(arrayDimensions)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the IsAbstract attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeIsAbstract(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the IsAbstract attribute.\n+     *\n+     * @param isAbstract the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeIsAbstractAttribute(DataValue isAbstract) {\n+        return writeIsAbstract(new DataValue(new Variant(isAbstract)));\n+    }\n+\n+}"
        },
        {
            "sha": "12bba17ee474ea55f147aa03587e3195b9b3117e",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/attached/UaViewNode.java",
            "status": "added",
            "additions": 93,
            "deletions": 0,
            "changes": 93,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaViewNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaViewNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fattached%2FUaViewNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public interface UaViewNode extends UaNode {\n+\n+    /**\n+     * Read the ContainsNoLoops attribute {@link DataValue}.\n+     *\n+     * @return the ContainsNoLoops attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readContainsNoLoops();\n+\n+    /**\n+     * Read the ContainsNoLoops attribute value.\n+     *\n+     * @return the ContainsNoLoops attribute value.\n+     */\n+    default CompletableFuture<Boolean> readContainsNoLoopsAttribute() {\n+        return readContainsNoLoops().thenApply(v -> (Boolean) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Read the EventNotifier attribute {@link DataValue}.\n+     *\n+     * @return the EventNotifier attribute {@link DataValue}.\n+     */\n+    CompletableFuture<DataValue> readEventNotifier();\n+\n+    /**\n+     * Read the EventNotifier attribute value.\n+     *\n+     * @return the EventNotifier attribute value.\n+     */\n+    default CompletableFuture<UByte> readEventNotifierAttribute() {\n+        return readEventNotifier().thenApply(v -> (UByte) v.getValue().getValue());\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the ContainsNoLoops attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeContainsNoLoops(DataValue value);\n+\n+    /**\n+     * Write a {@link Boolean} to the ContainsNoLoops attribute.\n+     *\n+     * @param containsNoLoops the {@link Boolean} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeContainsNoLoopsAttribute(Boolean containsNoLoops) {\n+        return writeContainsNoLoops(new DataValue(new Variant(containsNoLoops)));\n+    }\n+\n+    /**\n+     * Write a {@link DataValue} to the EventNotifier attribute.\n+     *\n+     * @param value the {@link DataValue} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    CompletableFuture<StatusCode> writeEventNotifier(DataValue value);\n+\n+    /**\n+     * Write a {@link UByte} to the EventNotifier attribute.\n+     *\n+     * @param eventNotifier the {@link UByte} to write.\n+     * @return the {@link StatusCode} of the write operation.\n+     */\n+    default CompletableFuture<StatusCode> writeEventNotifierAttribute(UByte eventNotifier) {\n+        return writeEventNotifier(new DataValue(new Variant(eventNotifier)));\n+    }\n+\n+}"
        },
        {
            "sha": "1f24bc5679ec2736337ceb926ed2f972cb837fa6",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/nodes/detached/UaDetachedNode.java",
            "status": "added",
            "additions": 75,
            "deletions": 0,
            "changes": 75,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fdetached%2FUaDetachedNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fdetached%2FUaDetachedNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fnodes%2Fdetached%2FUaDetachedNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.nodes.detached;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;\n+\n+public interface UaDetachedNode {\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.2.\n+     *\n+     * @return the NodeId ({@link NodeId}) of this node.\n+     */\n+    NodeId getNodeId();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.3.\n+     *\n+     * @return the NodeClass ({@link NodeClass}) of this node.\n+     */\n+    NodeClass getNodeClass();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.4.\n+     *\n+     * @return the BrowseName ({@link QualifiedName}) of this node.\n+     */\n+    QualifiedName getBrowseName();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.5.\n+     *\n+     * @return the DisplayName ({@link QualifiedName}) of this node.\n+     */\n+    LocalizedText getDisplayName();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.6.\n+     *\n+     * @return if this attribute is present, the Description ({@link LocalizedText}).\n+     */\n+    Optional<LocalizedText> getDescription();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.7.\n+     *\n+     * @return if this attribute is present, the WriteMask ({@link UInteger}).\n+     */\n+    Optional<UInteger> getWriteMask();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.8.\n+     *\n+     * @return if this attribute is present, the UserWriteMask ({@link UInteger}).\n+     */\n+    Optional<UInteger> getUserWriteMask();\n+\n+}"
        },
        {
            "sha": "e846fce39388c3d4fcd2cf9067a46d676f51ff82",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/AttributeServices.java",
            "status": "added",
            "additions": 170,
            "deletions": 0,
            "changes": 170,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FAttributeServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FAttributeServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FAttributeServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import com.codepoetics.protonpack.StreamUtils;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadDetails;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateDetails;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteValue;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public interface AttributeServices {\n+\n+    /**\n+     * This service is used to read one or more attributes of one or more nodes.\n+     *\n+     * @param maxAge             the requested max age of the value, in milliseconds. If maxAge is set to 0, the Server\n+     *                           shall attempt to read a new value from the data source. If maxAge is set to the max\n+     *                           Int32 value or greater, the Server shall attempt to get a cached value. Negative values\n+     *                           are invalid for maxAge.\n+     * @param timestampsToReturn the requested {@link TimestampsToReturn}.\n+     * @param readValueIds       the {@link ReadValueId}s identifying the nodes and attributes to read.\n+     * @return {@link CompletableFuture} containing the {@link ReadResponse}.\n+     */\n+    CompletableFuture<ReadResponse> read(double maxAge,\n+                                         TimestampsToReturn timestampsToReturn,\n+                                         List<ReadValueId> readValueIds);\n+\n+    /**\n+     * This service is used to read one or more attributes of one or more nodes.\n+     *\n+     * @param maxAge             the requested max age of the value, in milliseconds. If maxAge is set to 0, the Server\n+     *                           shall attempt to read a new value from the data source. If maxAge is set to the max\n+     *                           Int32 value or greater, the Server shall attempt to get a cached value. Negative values\n+     *                           are invalid for maxAge.\n+     * @param timestampsToReturn the requested {@link TimestampsToReturn}.\n+     * @param nodeIds            the {@link NodeId}s identifying the nodes to read.\n+     * @param attributeIds       the attribute ids to read, the size and order matching the provided {@link NodeId}s.\n+     * @return a {@link CompletableFuture} containing a list of {@link DataValue}s, the size and order matching the\n+     * provided {@link NodeId}s.\n+     */\n+    default CompletableFuture<List<DataValue>> read(double maxAge,\n+                                                    TimestampsToReturn timestampsToReturn,\n+                                                    List<NodeId> nodeIds,\n+                                                    List<UInteger> attributeIds) {\n+\n+        if (nodeIds.size() != attributeIds.size()) {\n+            CompletableFuture<List<DataValue>> failed = new CompletableFuture<>();\n+            failed.completeExceptionally(new IllegalArgumentException(\"nodeIds.size() != attributeIds.size()\"));\n+            return failed;\n+        } else {\n+            Stream<ReadValueId> stream = StreamUtils.zip(\n+                nodeIds.stream(), attributeIds.stream(),\n+                (nId, aId) -> new ReadValueId(nId, aId, null, QualifiedName.NULL_VALUE));\n+\n+            return read(maxAge, timestampsToReturn, stream.collect(Collectors.toList()))\n+                .thenApply(r -> newArrayList(r.getResults()));\n+        }\n+    }\n+\n+    /**\n+     * This service is used to read the value attribute of one or more Nodes.\n+     *\n+     * @param maxAge             the requested max age of the value, in milliseconds. If maxAge is set to 0, the Server\n+     *                           shall attempt to read a new value from the data source. If maxAge is set to the max\n+     *                           Int32 value or greater, the Server shall attempt to get a cached value. Negative values\n+     *                           are invalid for maxAge.\n+     * @param timestampsToReturn the requested {@link TimestampsToReturn}.\n+     * @param nodeIds            the {@link NodeId}s identifying the nodes to read.\n+     * @return a {@link CompletableFuture} containing a list of {@link DataValue}s, the size and order matching the\n+     * provided {@link NodeId}s.\n+     */\n+    default CompletableFuture<List<DataValue>> readValues(double maxAge,\n+                                                          TimestampsToReturn timestampsToReturn,\n+                                                          List<NodeId> nodeIds) {\n+\n+        List<ReadValueId> readValueIds = nodeIds.stream()\n+            .map(nodeId -> new ReadValueId(nodeId, AttributeId.Value.uid(), null, QualifiedName.NULL_VALUE))\n+            .collect(Collectors.toList());\n+\n+        return read(maxAge, timestampsToReturn, readValueIds)\n+            .thenApply(r -> newArrayList(r.getResults()));\n+    }\n+\n+    /**\n+     * This service is used to write values to one or more attributes of one or more nodes.\n+     *\n+     * @param writeValues the list of nodes and their attributes to write.\n+     * @return a {@link CompletableFuture} containing the {@link WriteResponse}.\n+     */\n+    CompletableFuture<WriteResponse> write(List<WriteValue> writeValues);\n+\n+    /**\n+     * This service is used to write to the value attribute of one or more nodes.\n+     *\n+     * @param nodeIds the {@link NodeId}s identifying the nodes to write to.\n+     * @param values  the {@link DataValue}s to write.\n+     * @return a {@link CompletableFuture} containing a list of results for the writes.\n+     */\n+    default CompletableFuture<List<StatusCode>> writeValues(List<NodeId> nodeIds, List<DataValue> values) {\n+        if (nodeIds.size() != values.size()) {\n+            CompletableFuture<List<StatusCode>> failed = new CompletableFuture<>();\n+            failed.completeExceptionally(new IllegalArgumentException(\"nodeIds.size() != values.size()\"));\n+            return failed;\n+        } else {\n+            Stream<WriteValue> stream = StreamUtils.zip(\n+                nodeIds.stream(), values.stream(),\n+                (nodeId, value) -> new WriteValue(nodeId, uint(13), null, value));\n+\n+            return write(stream.collect(Collectors.toList()))\n+                .thenApply(response -> newArrayList(response.getResults()));\n+        }\n+    }\n+\n+    /**\n+     * This Service is used to read historical values or Events of one or more Nodes.\n+     *\n+     * @param historyReadDetails        defines the types of history read to be performed.\n+     * @param timestampsToReturn        specifies the timestamps to be returned for each requested value attribute.\n+     * @param releaseContinuationPoints if {@code true}, passed continuationPoints shall be reset to free resources in\n+     *                                  the Server. if {@code false}, passed continuationPoints shall be used to get the\n+     *                                  next set of historical information.\n+     * @param nodesToRead               the list of items upon which the historical retrieval is to be performed.\n+     * @return a {@link CompletableFuture} containing the {@link HistoryReadResponse}.\n+     */\n+    CompletableFuture<HistoryReadResponse> historyRead(HistoryReadDetails historyReadDetails,\n+                                                       TimestampsToReturn timestampsToReturn,\n+                                                       boolean releaseContinuationPoints,\n+                                                       List<HistoryReadValueId> nodesToRead);\n+\n+\n+    /**\n+     * This Service is used to update historical values or Events of one or more Nodes.\n+     *\n+     * @param historyUpdateDetails the details defined for this update.\n+     * @return a {@link CompletableFuture} containing the {@link HistoryUpdateResponse}.\n+     */\n+    CompletableFuture<HistoryUpdateResponse> historyUpdate(List<HistoryUpdateDetails> historyUpdateDetails);\n+\n+}"
        },
        {
            "sha": "4be5a558c049c06eb8b2981dd74733662028513f",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/MethodServices.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMethodServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMethodServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMethodServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallResponse;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+\n+public interface MethodServices {\n+\n+    /**\n+     * This service is used to call (invoke) a list of methods. Each method call is invoked within the context of an\n+     * existing session. If the session is terminated, the results of the method\u2019s execution cannot be returned to the\n+     * client and are discarded. This is independent of the task actually performed at the server.\n+     *\n+     * @param methodsToCall a list of methods to call.\n+     * @return a {@link CompletableFuture} containing the {@link CallResponse}.\n+     */\n+    CompletableFuture<CallResponse> call(List<CallMethodRequest> methodsToCall);\n+\n+    /**\n+     * Call (invoke) a method.\n+     *\n+     * @param request the {@link CallMethodRequest} describing the method to invoke.\n+     * @return a {@link CompletableFuture} containing the {@link CallMethodResult}.\n+     * @see #call(List)\n+     */\n+    default CompletableFuture<CallMethodResult> call(CallMethodRequest request) {\n+        return call(newArrayList(request))\n+            .thenApply(response -> response.getResults()[0]);\n+    }\n+\n+}"
        },
        {
            "sha": "f5a01454772d20e57385235447d4908ea8d86249",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/MonitoredItemServices.java",
            "status": "added",
            "additions": 100,
            "deletions": 0,
            "changes": 100,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMonitoredItemServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMonitoredItemServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FMonitoredItemServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemCreateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemModifyRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetTriggeringResponse;\n+\n+public interface MonitoredItemServices {\n+\n+    /**\n+     * This service is used to create and add one or more monitored items to a subscription.\n+     *\n+     * @param subscriptionId     the server-assigned identifier for the subscription that will report notifications for\n+     *                           the monitored items.\n+     * @param timestampsToReturn the {@link TimestampsToReturn}.\n+     * @param itemsToCreate      a list of monitored items to be created and assigned to the specified subscription.\n+     * @return a {@link CompletableFuture} containing the {@link CreateMonitoredItemsResponse}.\n+     */\n+    CompletableFuture<CreateMonitoredItemsResponse> createMonitoredItems(UInteger subscriptionId,\n+                                                                         TimestampsToReturn timestampsToReturn,\n+                                                                         List<MonitoredItemCreateRequest> itemsToCreate);\n+\n+    /**\n+     * This service is used to modify monitored items of a subscription.\n+     *\n+     * @param subscriptionId     the server-assigned identifier of the subscription the items to modify belong to.\n+     * @param timestampsToReturn the {@link TimestampsToReturn}.\n+     * @param itemsToModify      a list of monitored items to modify.\n+     * @return a {@link CompletableFuture} containing the {@link ModifyMonitoredItemsResponse}.\n+     */\n+    CompletableFuture<ModifyMonitoredItemsResponse> modifyMonitoredItems(UInteger subscriptionId,\n+                                                                         TimestampsToReturn timestampsToReturn,\n+                                                                         List<MonitoredItemModifyRequest> itemsToModify);\n+\n+    /**\n+     * This service is used to remove one or more monitored items of a subscription.\n+     *\n+     * @param subscriptionId   the server-assigned identifier of the subscription the items to delete belong to.\n+     * @param monitoredItemIds a list of server-assigned identifiers for the items to delete.\n+     * @return a {@link CompletableFuture} containing the {@link DeleteMonitoredItemsResponse}.\n+     */\n+    CompletableFuture<DeleteMonitoredItemsResponse> deleteMonitoredItems(UInteger subscriptionId,\n+                                                                         List<UInteger> monitoredItemIds);\n+\n+    /**\n+     * This service is used to set the {@link MonitoringMode} for one or more monitored items of a subscription.\n+     * <p>\n+     * Setting the mode to {@link MonitoringMode#Disabled} causes all queued notifications to be deleted.\n+     *\n+     * @param subscriptionId   the server-assigned identifier of the subscription the items belong to.\n+     * @param monitoringMode   the {@link MonitoringMode} to be set for the monitored items.\n+     * @param monitoredItemIds a list of server-assigned identifiers for the items whose {@link MonitoringMode} will\n+     *                         be set.\n+     * @return a {@link CompletableFuture} containing the {@link SetMonitoringModeResponse}.\n+     */\n+    CompletableFuture<SetMonitoringModeResponse> setMonitoringMode(UInteger subscriptionId,\n+                                                                   MonitoringMode monitoringMode,\n+                                                                   List<UInteger> monitoredItemIds);\n+\n+    /**\n+     * This service is used to create and delete triggering links for a triggering item. The triggering item and the\n+     * items to report shall belong to the same subscription.\n+     *\n+     * @param subscriptionId   the server-assigned identifier for the subscription that contains the triggering item and\n+     *                         the items to report.\n+     * @param triggeringItemId the server-assigned identifier for the monitored item used as the triggering item.\n+     * @param linksToAdd       the list of server-assigned identifiers of the items to report that are to be added as\n+     *                         triggering links. The list of links to remove is processed before the links to add.\n+     * @param linksToRemove    the list of server-assigned identifiers of the items to report for the triggering links\n+     *                         to be removed. The list of links to remove is processed before the links to add.\n+     * @return a {@link CompletableFuture} containing the {@link SetTriggeringResponse}.\n+     */\n+    CompletableFuture<SetTriggeringResponse> setTriggering(UInteger subscriptionId,\n+                                                           UInteger triggeringItemId,\n+                                                           List<UInteger> linksToAdd,\n+                                                           List<UInteger> linksToRemove);\n+\n+}"
        },
        {
            "sha": "63d56139a7bdd3104186e633fca7a32ea43cb12e",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/NodeManagementServices.java",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FNodeManagementServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FNodeManagementServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FNodeManagementServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesResponse;\n+\n+public interface NodeManagementServices {\n+\n+    CompletableFuture<AddNodesResponse> addNodes(List<AddNodesItem> nodesToAdd);\n+\n+    CompletableFuture<AddReferencesResponse> addReferences(List<AddReferencesItem> referencesToAdd);\n+\n+    CompletableFuture<DeleteNodesResponse> deleteNodes(List<DeleteNodesItem> nodesToDelete);\n+\n+    CompletableFuture<DeleteReferencesResponse> deleteReferences(List<DeleteReferencesItem> referencesToDelete);\n+\n+}"
        },
        {
            "sha": "fc6e8511e726224359cd3498769dc632d017d1a1",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/QueryServices.java",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FQueryServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FQueryServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FQueryServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ContentFilter;\n+import org.eclipse.milo.opcua.stack.core.types.structured.NodeTypeDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryDataSet;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryFirstResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryNextResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ViewDescription;\n+\n+public interface QueryServices {\n+\n+    /**\n+     * This service is used to issue a query to the server.\n+     *\n+     * @param view                  specifies a View and temporal context to a server.\n+     * @param nodeTypes             the {@link NodeTypeDescription}.\n+     * @param filter                the {@link ContentFilter}. Resulting Nodes shall be limited to the Nodes matching\n+     *                              the criteria defined by the filter.\n+     * @param maxDataSetsToReturn   the number of {@link QueryDataSet}s that the client wants the server to return in\n+     *                              the response and on each subsequent continuation call response. The server is\n+     *                              allowed to further limit the response, but shall not exceed this limit. A value of 0\n+     *                              indicates that the client is imposing no limitation.\n+     * @param maxReferencesToReturn the number of References that the client wants the server to return in the response\n+     *                              for each {@link QueryDataSet} and on each subsequent continuation call response. The\n+     *                              server is allowed to further limit the response, but shall not exceed this limit. A\n+     *                              value of 0 indicates that the client is imposing no limitation.\n+     * @return a {@link CompletableFuture} containing the {@link QueryFirstResponse}.\n+     */\n+    CompletableFuture<QueryFirstResponse> queryFirst(ViewDescription view,\n+                                                     List<NodeTypeDescription> nodeTypes,\n+                                                     ContentFilter filter,\n+                                                     UInteger maxDataSetsToReturn,\n+                                                     UInteger maxReferencesToReturn);\n+\n+    /**\n+     * This Service is used to request the next set of QueryFirst or QueryNext response information that is too large to\n+     * be sent in a single response.\n+     *\n+     * @param releaseContinuationPoint if {@code true}, passed continuationPoints shall be reset to free resources in\n+     *                                 the server. If {@code false}, passed continuationPoints shall be used to get the\n+     *                                 next set of browse information.\n+     * @param continuationPoint        a server-defined opaque value that represents the continuation point.\n+     * @return a {@link CompletableFuture} containing the {@link QueryNextResponse}.\n+     */\n+    CompletableFuture<QueryNextResponse> queryNext(boolean releaseContinuationPoint,\n+                                                   ByteString continuationPoint);\n+\n+}"
        },
        {
            "sha": "2479dddb056283c605b2cf8e14a88ce867adec06",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/SubscriptionServices.java",
            "status": "added",
            "additions": 134,
            "deletions": 0,
            "changes": 134,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FSubscriptionServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FSubscriptionServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FSubscriptionServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetPublishingModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SubscriptionAcknowledgement;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsResponse;\n+\n+public interface SubscriptionServices {\n+\n+    /**\n+     * This service is used to create a subscription. Subscriptions monitor a set of monitored items for notifications\n+     * and return them to the client in response to Publish requests.\n+     *\n+     * @param requestedPublishingInterval this interval defines the cyclic rate that the subscription is being requested\n+     *                                    to return notifications to the client. This interval is expressed in\n+     *                                    milliseconds.\n+     * @param requestedLifetimeCount      the requested lifetime count. The lifetime count shall be a minimum of three\n+     *                                    times the keep keep-alive count.\n+     * @param requestedMaxKeepAliveCount  the requested maximum keep-alive count. When the publishing timer has expired\n+     *                                    this number of times without requiring any notification to be sent, the\n+     *                                    subscription sends a keep-alive message to the client.\n+     * @param maxNotificationsPerPublish  the maximum number of notifications that the client wishes to receive in a\n+     *                                    single publish response. A value of zero indicates that there is no limit.\n+     * @param publishingEnabled           if {@code true}, publishing is enabled for this subscription.\n+     * @param priority                    indicates the relative priority of the subscription.\n+     * @return a {@link CompletableFuture} containing the {@link CreateSubscriptionResponse}.\n+     */\n+    CompletableFuture<CreateSubscriptionResponse> createSubscription(double requestedPublishingInterval,\n+                                                                     UInteger requestedLifetimeCount,\n+                                                                     UInteger requestedMaxKeepAliveCount,\n+                                                                     UInteger maxNotificationsPerPublish,\n+                                                                     boolean publishingEnabled,\n+                                                                     UByte priority);\n+\n+    /**\n+     * This service is used to modify a subscription.\n+     *\n+     * @param subscriptionId              the server-assigned identifier for the subscription.\n+     * @param requestedPublishingInterval this interval defines the cyclic rate that the subscription is being requested\n+     *                                    to return notifications to the client. This interval is expressed in\n+     *                                    milliseconds.\n+     * @param requestedLifetimeCount      the requested lifetime count. The lifetime count shall be a minimum of three\n+     *                                    times the keep keep-alive count.\n+     * @param requestedMaxKeepAliveCount  the requested maximum keep-alive count. When the publishing timer has expired\n+     *                                    this number of times without requiring any notification to be sent, the\n+     *                                    subscription sends a keep-alive message to the client.\n+     * @param maxNotificationsPerPublish  the maximum number of notifications that the client wishes to receive in a\n+     *                                    single publish response. A value of zero indicates that there is no limit.\n+     * @param priority                    indicates the relative priority of the subscription.\n+     * @return a {@link CompletableFuture} containing the {@link ModifySubscriptionResponse}.\n+     */\n+    CompletableFuture<ModifySubscriptionResponse> modifySubscription(UInteger subscriptionId,\n+                                                                     double requestedPublishingInterval,\n+                                                                     UInteger requestedLifetimeCount,\n+                                                                     UInteger requestedMaxKeepAliveCount,\n+                                                                     UInteger maxNotificationsPerPublish,\n+                                                                     UByte priority);\n+\n+    /**\n+     * This service is invoked to delete one or more subscriptions that belong to the client's session.\n+     *\n+     * @param subscriptionIds the server-assigned identifiers for the subscriptions.\n+     * @return a {@link CompletableFuture} containing the {@link DeleteSubscriptionsResponse}.\n+     */\n+    CompletableFuture<DeleteSubscriptionsResponse> deleteSubscriptions(List<UInteger> subscriptionIds);\n+\n+    /**\n+     * This service is used to transfer a subscription and its monitored items from one session to another.\n+     *\n+     * @param subscriptionIds   the server-assigned identifiers for the subscriptions to transfer.\n+     * @param sendInitialValues if {@code true}, the first Publish response after the TransferSubscriptions service\n+     *                          call shall contain the current values of all monitored items in the\n+     *                          subscription where the {@link MonitoringMode} is set to {@link MonitoringMode#Reporting}.\n+     * @return a {@link CompletableFuture} containing the {@link TransferSubscriptionsResponse}.\n+     */\n+    CompletableFuture<TransferSubscriptionsResponse> transferSubscriptions(List<UInteger> subscriptionIds,\n+                                                                           boolean sendInitialValues);\n+\n+    /**\n+     * This service is used to enable sending of notifications on one or more subscriptions.\n+     *\n+     * @param publishingEnabled {@code true} if publishing of notification messages is to be enabled.\n+     * @param subscriptionIds   a list of server-assigned subscription identifiers to enable or disable publishing on.\n+     * @return a {@link CompletableFuture} containing the {@link SetPublishingModeResponse}.\n+     */\n+    CompletableFuture<SetPublishingModeResponse> setPublishingMode(boolean publishingEnabled,\n+                                                                   List<UInteger> subscriptionIds);\n+\n+    /**\n+     * This service is used for two purposes. First, it is used to acknowledge the receipt of notification messages for\n+     * one or more subscriptions. Second, it is used to request the server to return a notification message or a\n+     * keep-alive message.\n+     *\n+     * @param subscriptionAcknowledgements the list of acknowledgements for one or more subscriptions. This list may\n+     *                                     contain multiple acknowledgements for the same subscription (multiple entries\n+     *                                     with the same subscriptionId).\n+     * @return a {@link CompletableFuture} containing the {@link PublishResponse}.\n+     */\n+    CompletableFuture<PublishResponse> publish(List<SubscriptionAcknowledgement> subscriptionAcknowledgements);\n+\n+    /**\n+     * This service requests the subscription to republish a notification message from its retransmission queue. If the\n+     * server does not have the requested message in its retransmission queue, it returns an error response.\n+     *\n+     * @param subscriptionId           the server-assigned identifier for the subscription to be republished.\n+     * @param retransmitSequenceNumber the sequence number of a specific notification message to be republished.\n+     * @return a {@link CompletableFuture} containing the {@link RepublishResponse}.\n+     */\n+    CompletableFuture<RepublishResponse> republish(UInteger subscriptionId, UInteger retransmitSequenceNumber);\n+\n+}"
        },
        {
            "sha": "b2e6869298dc942e9f64eef20e765ec84df8828c",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/services/ViewServices.java",
            "status": "added",
            "additions": 123,
            "deletions": 0,
            "changes": 123,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FViewServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FViewServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fservices%2FViewServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.services;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseNextResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowsePath;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RegisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RelativePath;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TranslateBrowsePathsToNodeIdsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UnregisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ViewDescription;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public interface ViewServices {\n+\n+    /**\n+     * This service is used to discover the references of a specified node.\n+     * <p>\n+     * The browse can be further limited by the use of a view. The Browse service also supports a primitive filtering\n+     * capability.\n+     *\n+     * @param viewDescription      a description of the view to browse. An empty {@link ViewDescription} indicates a\n+     *                             view of the entire address space.\n+     * @param maxReferencesPerNode the maximum number of references to return for each starting node specified in the\n+     *                             request.\n+     * @param nodesToBrowse        a list of nodes to browse.\n+     * @return a {@link CompletableFuture} containing the {@link BrowseResponse}.\n+     */\n+    CompletableFuture<BrowseResponse> browse(ViewDescription viewDescription,\n+                                             UInteger maxReferencesPerNode,\n+                                             List<BrowseDescription> nodesToBrowse);\n+\n+    /**\n+     * Browse a single node, with no view and no max references specified.\n+     *\n+     * @param nodeToBrowse the node to browse.\n+     * @return a {@link CompletableFuture} containing the {@link BrowseResult}.\n+     */\n+    default CompletableFuture<BrowseResult> browse(BrowseDescription nodeToBrowse) {\n+        return browse(newArrayList(nodeToBrowse)).thenApply(rs -> rs.get(0));\n+    }\n+\n+    /**\n+     * Browse a list of nodes, with no view and no max references specified.\n+     *\n+     * @param nodesToBrowse the nodes to browse.\n+     * @return a {@link CompletableFuture} containing the {@link BrowseResult}s.\n+     */\n+    default CompletableFuture<List<BrowseResult>> browse(List<BrowseDescription> nodesToBrowse) {\n+        return browse(new ViewDescription(NodeId.NULL_VALUE, DateTime.MIN_VALUE, uint(0)), uint(0), nodesToBrowse)\n+            .thenApply(r -> newArrayList(r.getResults()));\n+    }\n+\n+    /**\n+     * This service is used to request the next set of Browse or BrowseNext response information that is too large to\n+     * be sent in a single response.\n+     * <p>\n+     * \u201cToo large\u201d in this context means that the server is not able to return a larger response or that the number of\n+     * results to return exceeds the maximum number of results to return that was specified by the client in the\n+     * original Browse request.\n+     *\n+     * @param releaseContinuationPoints if {@code true}, passed continuationPoints shall be reset to free resources in\n+     *                                  the server. If {@code false}, passed continuationPoints shall be used to get the\n+     *                                  next set of browse information.\n+     * @param continuationPoints        a list of server-defined opaque values that represent continuation points.\n+     * @return a {@link CompletableFuture} containing the {@link BrowseNextResponse}.\n+     */\n+    CompletableFuture<BrowseNextResponse> browseNext(boolean releaseContinuationPoints,\n+                                                     List<ByteString> continuationPoints);\n+\n+    /**\n+     * This service is used to request that the server translates one or more browse paths to {@link NodeId}s.\n+     * <p>\n+     * Each browse path is constructed of a starting {@link NodeId} and a {@link RelativePath}. The specified starting\n+     * node identifies the node from which the {@link RelativePath} is based.\n+     *\n+     * @param browsePaths a list of browse paths for which {@link NodeId}s are being requested.\n+     * @return a {@link CompletableFuture} containing the {@link TranslateBrowsePathsToNodeIdsResponse}.\n+     */\n+    CompletableFuture<TranslateBrowsePathsToNodeIdsResponse> translateBrowsePaths(List<BrowsePath> browsePaths);\n+\n+    /**\n+     * The RegisterNodes service can be used by clients to register the nodes that they know they will access repeatedly\n+     * (e.g. Write, Call). It allows servers to set up anything needed so that the access operations will be more\n+     * efficient.\n+     *\n+     * @param nodesToRegister a list of {@link NodeId}s to register.\n+     * @return a {@link CompletableFuture} containing the {@link RegisterNodesResponse}.\n+     */\n+    CompletableFuture<RegisterNodesResponse> registerNodes(List<NodeId> nodesToRegister);\n+\n+    /**\n+     * This service is used to unregister {@link NodeId}s that have been register via the RegisterNodes service.\n+     *\n+     * @param nodesToUnregister a list of {@link NodeId}s to unregister.\n+     * @return a {@link CompletableFuture} containing the {@link UnregisterNodesResponse}.\n+     */\n+    CompletableFuture<UnregisterNodesResponse> unregisterNodes(List<NodeId> nodesToUnregister);\n+\n+}"
        },
        {
            "sha": "2e682f893753c6479b2427a7df0ff54c5829a13e",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/subscriptions/UaMonitoredItem.java",
            "status": "added",
            "additions": 100,
            "deletions": 0,
            "changes": 100,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaMonitoredItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaMonitoredItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaMonitoredItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.subscriptions;\n+\n+import java.util.function.Consumer;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExtensionObject;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+\n+public interface UaMonitoredItem {\n+\n+    /**\n+     * Get the client-assigned id.\n+     * <p>\n+     * This handle is used in the subscription to match incoming values to the corresponding monitored item.\n+     *\n+     * @return the client-assigned id.\n+     */\n+    UInteger getClientHandle();\n+\n+    /**\n+     * Get the server-assigned id.\n+     *\n+     * @return the server-assigned id.\n+     */\n+    UInteger getMonitoredItemId();\n+\n+    /**\n+     * Get the {@link ReadValueId}.\n+     *\n+     * @return the {@link ReadValueId}.\n+     */\n+    ReadValueId getReadValueId();\n+\n+    /**\n+     * Get the {@link StatusCode} of the last operation.\n+     *\n+     * @return the {@link StatusCode} of the last operation.\n+     */\n+    StatusCode getStatusCode();\n+\n+    /**\n+     * Get the revised sampling interval.\n+     *\n+     * @return the revised sampling interval.\n+     */\n+    double getRevisedSamplingInterval();\n+\n+    /**\n+     * Get the revised queue size.\n+     *\n+     * @return the revised queue size.\n+     */\n+    UInteger getRevisedQueueSize();\n+\n+    /**\n+     * Get the filter result {@link ExtensionObject}.\n+     *\n+     * @return the filter result {@link ExtensionObject}.\n+     */\n+    ExtensionObject getFilterResult();\n+\n+    /**\n+     * Get the {@link MonitoringMode}.\n+     *\n+     * @return the {@link MonitoringMode}.\n+     */\n+    MonitoringMode getMonitoringMode();\n+\n+    /**\n+     * Set the {@link Consumer} that will receive values as they arrive from the server.\n+     *\n+     * @param valueConsumer the {@link Consumer} that will receive values as they arrive from the server.\n+     */\n+    void setValueConsumer(Consumer<DataValue> valueConsumer);\n+\n+    /**\n+     * Set the {@link Consumer} that will receive events as they arrive from the server.\n+     *\n+     * @param eventConsumer the {@link Consumer} that will receive events as they arrive from the server.\n+     */\n+    void setEventConsumer(Consumer<Variant[]> eventConsumer);\n+\n+}"
        },
        {
            "sha": "4b0dcae24d46a71256e15bf258f69137d1b0bf65",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/subscriptions/UaSubscription.java",
            "status": "added",
            "additions": 122,
            "deletions": 0,
            "changes": 122,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscription.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscription.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscription.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.subscriptions;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemCreateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemModifyRequest;\n+\n+public interface UaSubscription {\n+\n+    /**\n+     * @return the server-assigned id for this {@link UaSubscription}.\n+     */\n+    UInteger getSubscriptionId();\n+\n+    /**\n+     * @return the actual/revised publishing interval of this {@link UaSubscription}.\n+     */\n+    double getRevisedPublishingInterval();\n+\n+    /**\n+     * @return the actual/revised lifetime count of this {@link UaSubscription}.\n+     */\n+    UInteger getRevisedLifetimeCount();\n+\n+    /**\n+     * @return the actual/revised max keep-alive count of this {@link UaSubscription}.\n+     */\n+    UInteger getRevisedMaxKeepAliveCount();\n+\n+    /**\n+     * @return the maximum number of notifications that will be returned in any publish response.\n+     */\n+    UInteger getMaxNotificationsPerPublish();\n+\n+    /**\n+     * @return {@code true} if publishing is enabled.\n+     */\n+    boolean isPublishingEnabled();\n+\n+    /**\n+     * @return the relative priority assigned to this {@link UaSubscription}.\n+     */\n+    UByte getPriority();\n+\n+    /**\n+     * @return an {@link ImmutableList} of this {@link UaSubscription}'s {@link UaMonitoredItem}s.\n+     */\n+    ImmutableList<UaMonitoredItem> getMonitoredItems();\n+\n+    /**\n+     * Create one or more {@link UaMonitoredItem}s.\n+     * <p>\n+     * Callers must check the quality of each of the returned {@link UaMonitoredItem}s; it is not to be assumed that\n+     * all items were created successfully. Any item with a bad quality will not be updated nor will it be part of the\n+     * subscription's bookkeeping.\n+     *\n+     * @param timestampsToReturn the {@link TimestampsToReturn}.\n+     * @param itemsToCreate      a list of {@link MonitoredItemCreateRequest}s.\n+     * @return a list of {@link UaMonitoredItem}s.\n+     */\n+    CompletableFuture<List<UaMonitoredItem>> createMonitoredItems(TimestampsToReturn timestampsToReturn,\n+                                                                  List<MonitoredItemCreateRequest> itemsToCreate);\n+\n+    /**\n+     * Modify one or more {@link UaMonitoredItem}s.\n+     *\n+     * @param timestampsToReturn the {@link TimestampsToReturn} to set for each item.\n+     * @param itemsToModify      a list of {@link MonitoredItemModifyRequest}s.\n+     * @return a {@link CompletableFuture} containing a list of {@link StatusCode}s, the size and order matching that\n+     * of {@code itemsToModify}.\n+     */\n+    CompletableFuture<List<StatusCode>> modifyMonitoredItems(TimestampsToReturn timestampsToReturn,\n+                                                             List<MonitoredItemModifyRequest> itemsToModify);\n+\n+    /**\n+     * Delete on or more {@link UaMonitoredItem}s.\n+     *\n+     * @param itemsToDelete the items to delete.\n+     * @return a {@link CompletableFuture} containing a list of {@link StatusCode}s, the size and order matching that\n+     * of {@code itemsToDelete}.\n+     */\n+    CompletableFuture<List<StatusCode>> deleteMonitoredItems(List<UaMonitoredItem> itemsToDelete);\n+\n+    /**\n+     * Set the {@link MonitoringMode} for one or more {@link UaMonitoredItem}s.\n+     *\n+     * @param monitoringMode the {@link MonitoringMode} to set.\n+     * @param items          the {@link UaMonitoredItem}s to set the mode on.\n+     * @return a {@link CompletableFuture} containing a list of {@link StatusCode}s, the size and order matching that\n+     * of {@code items}.\n+     */\n+    CompletableFuture<List<StatusCode>> setMonitoringMode(MonitoringMode monitoringMode, List<UaMonitoredItem> items);\n+\n+    /**\n+     * Set the publishing mode for this subscription.\n+     *\n+     * @param publishingEnabled {@code true} if publishing should be enabled.\n+     * @return a {@link CompletableFuture} containing a {@link StatusCode} representing the result of this operation.\n+     */\n+    CompletableFuture<StatusCode> setPublishingMode(boolean publishingEnabled);\n+\n+}"
        },
        {
            "sha": "1128e61b796936f23ba2f6401e8e2fe59be48a64",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/api/subscriptions/UaSubscriptionManager.java",
            "status": "added",
            "additions": 160,
            "deletions": 0,
            "changes": 160,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscriptionManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscriptionManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fapi%2Fsubscriptions%2FUaSubscriptionManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.api.subscriptions;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.eclipse.milo.opcua.sdk.client.api.UaSession;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface UaSubscriptionManager {\n+\n+    /**\n+     * Create a {@link UaSubscription} using default parameters.\n+     *\n+     * @param requestedPublishingInterval the requested publishing interval of the subscription.\n+     * @return a {@link CompletableFuture} containing the {@link UaSubscription}.\n+     */\n+    CompletableFuture<UaSubscription> createSubscription(double requestedPublishingInterval);\n+\n+    /**\n+     * Create a {@link UaSubscription}.\n+     *\n+     * @param requestedPublishingInterval the requested publishing interval.\n+     * @param requestedLifetimeCount      the requested lifetime count.\n+     * @param requestedMaxKeepAliveCount  the requested max keep-alive count.\n+     * @param maxNotificationsPerPublish  the maximum number of notifications allowed in a publish response.\n+     * @param priority                    the relative priority to assign to the subscription.\n+     * @return a {@link CompletableFuture} containing the {@link UaSubscription}.\n+     */\n+    CompletableFuture<UaSubscription> createSubscription(double requestedPublishingInterval,\n+                                                         UInteger requestedLifetimeCount,\n+                                                         UInteger requestedMaxKeepAliveCount,\n+                                                         UInteger maxNotificationsPerPublish,\n+                                                         boolean publishingEnabled,\n+                                                         UByte priority);\n+\n+    /**\n+     * Request a new publishing interval for a {@link UaSubscription}.\n+     * <p>\n+     * The requested max keep-alive count and lifetime count will be derived from the requested publishing interval.\n+     *\n+     * @param subscriptionId              the server-assigned id of the {@link UaSubscription} to modify.\n+     * @param requestedPublishingInterval the requested publishing interval.\n+     * @return a {@link CompletableFuture} containing the {@link UaSubscription}.\n+     */\n+    CompletableFuture<UaSubscription> modifySubscription(UInteger subscriptionId,\n+                                                         double requestedPublishingInterval);\n+\n+    /**\n+     * Modify a {@link UaSubscription}.\n+     *\n+     * @param subscriptionId              the server-assigned id of the {@link UaSubscription} to modify.\n+     * @param requestedPublishingInterval the requested publishing interval.\n+     * @param requestedLifetimeCount      the requested lifetime count.\n+     * @param requestedMaxKeepAliveCount  the requested max keep-alive count.\n+     * @param maxNotificationsPerPublish  the maximum number of notifications allowed in a publish response.\n+     * @param priority                    the relative priority to assign to the subscription.\n+     * @return a {@link CompletableFuture} containing the {@link UaSubscription}.\n+     */\n+    CompletableFuture<UaSubscription> modifySubscription(UInteger subscriptionId,\n+                                                         double requestedPublishingInterval,\n+                                                         UInteger requestedLifetimeCount,\n+                                                         UInteger requestedMaxKeepAliveCount,\n+                                                         UInteger maxNotificationsPerPublish,\n+                                                         UByte priority);\n+\n+    /**\n+     * Delete a {@link UaSubscription}.\n+     *\n+     * @param subscriptionId the server-assigned id of the {@link UaSubscription} to delete.\n+     * @return a {@link CompletableFuture} containing the deleted {@link UaSubscription}.\n+     */\n+    CompletableFuture<UaSubscription> deleteSubscription(UInteger subscriptionId);\n+\n+    /**\n+     * @return an {@link ImmutableList} of {@link UaSubscription}s managed by this {@link UaSubscriptionManager}.\n+     */\n+    ImmutableList<UaSubscription> getSubscriptions();\n+\n+    /**\n+     * Add a {@link SubscriptionListener}.\n+     *\n+     * @param listener the {@link SubscriptionListener} to add.\n+     */\n+    void addSubscriptionListener(SubscriptionListener listener);\n+\n+    /**\n+     * Remove a {@link SubscriptionListener}.\n+     *\n+     * @param listener the {@link SubscriptionListener} to remove.\n+     */\n+    void removeSubscriptionListener(SubscriptionListener listener);\n+\n+    interface SubscriptionListener {\n+\n+        /**\n+         * A keep-alive message was received.\n+         *\n+         * @param subscription the {@link UaSubscription} that received the keep-alive.\n+         * @param publishTime  the time the server published the keep-alive.\n+         */\n+        void onKeepAlive(UaSubscription subscription, DateTime publishTime);\n+\n+        /**\n+         * A status change notification was received.\n+         *\n+         * @param subscription the {@link UaSubscription} that received the status change.\n+         * @param status       the new subscription status.\n+         */\n+        void onStatusChanged(UaSubscription subscription, StatusCode status);\n+\n+        /**\n+         * A publish failure has occurred.\n+         * <p>\n+         * No additional action is required.\n+         *\n+         * @param exception the cause of the failure.\n+         */\n+        void onPublishFailure(UaException exception);\n+\n+        /**\n+         * Attempts to recover missed notification data have failed.\n+         * <p>\n+         * When a notification is missed a series of Republish requests are initiated to recover the missing data. If\n+         * republishing fails, or any of the notifications are no longer available, this callback will be invoked.\n+         *\n+         * @param subscription the subscription that missed notification data.\n+         */\n+        void onNotificationDataLost(UaSubscription subscription);\n+\n+        /**\n+         * A new {@link UaSession} was established, and upon attempting to transfer an existing subscription to this\n+         * new session, a failure occurred.\n+         * <p>\n+         * This subscription will be removed from {@link UaSubscriptionManager}'s bookkeeping. It must be re-created.\n+         *\n+         * @param subscription the {@link UaSubscription} that could not be transferred.\n+         * @param statusCode   the {@link StatusCode} for the transfer failure.\n+         */\n+        void onSubscriptionTransferFailed(UaSubscription subscription, StatusCode statusCode);\n+\n+    }\n+\n+}"
        },
        {
            "sha": "0b78b0acc239b684e6396b21c7d4fd2c695f2aa1",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/methods/AbstractUaMethod.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FAbstractUaMethod.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FAbstractUaMethod.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FAbstractUaMethod.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.methods;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.UaClient;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodRequest;\n+\n+public abstract class AbstractUaMethod {\n+\n+    private final UaClient client;\n+    private final NodeId objectId;\n+    private final NodeId methodId;\n+\n+    public AbstractUaMethod(UaClient client, NodeId objectId, NodeId methodId) {\n+        this.client = client;\n+        this.objectId = objectId;\n+        this.methodId = methodId;\n+    }\n+\n+    public CompletableFuture<Variant[]> invoke(Variant[] inputArguments) {\n+        CallMethodRequest request = new CallMethodRequest(\n+            objectId, methodId, inputArguments);\n+\n+        return client.call(request).thenCompose(result -> {\n+            StatusCode statusCode = result.getStatusCode();\n+\n+            if (statusCode.isGood()) {\n+                Variant[] outputArguments = result.getOutputArguments();\n+\n+                return CompletableFuture.completedFuture(outputArguments);\n+            } else {\n+                UaMethodException ex = new UaMethodException(\n+                    statusCode,\n+                    result.getInputArgumentResults(),\n+                    result.getInputArgumentDiagnosticInfos()\n+                );\n+\n+                CompletableFuture<Variant[]> f = new CompletableFuture<>();\n+                f.completeExceptionally(ex);\n+                return f;\n+            }\n+        });\n+    }\n+\n+}"
        },
        {
            "sha": "26ff88b7ffeb4a2d11a699bb81c41120999dfd86",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/methods/GetMonitoredItems.java",
            "status": "added",
            "additions": 62,
            "deletions": 0,
            "changes": 62,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FGetMonitoredItems.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FGetMonitoredItems.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FGetMonitoredItems.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.methods;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.UaClient;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.jooq.lambda.tuple.Tuple2;\n+\n+public class GetMonitoredItems extends AbstractUaMethod {\n+\n+    public GetMonitoredItems(UaClient client, NodeId objectId, NodeId methodId) {\n+        super(client, objectId, methodId);\n+    }\n+\n+    /**\n+     * GetMonitoredItems is used to get information about monitored items of a subscription.\n+     *\n+     * @param subscriptionId identifier of the subscription.\n+     * @return a {@link Tuple2} containing the output arguments.\n+     * <p>\n+     * serverHandles (UInt32[]) - array of serverHandles for all MonitoredItems of the subscription identified by\n+     * subscriptionId.\n+     * <p>\n+     * clientHandles (UInt32[]) - array of clientHandles for all MonitoredItems of the subscription identified by\n+     * subscriptionId.\n+     */\n+    public CompletableFuture<Tuple2<UInteger[], UInteger[]>> invoke(UInteger subscriptionId) {\n+        Variant[] inputArguments = new Variant[]{\n+            new Variant(subscriptionId)\n+        };\n+\n+        return invoke(inputArguments).thenCompose(outputArguments -> {\n+            try {\n+                UInteger[] v0 = (UInteger[]) outputArguments[0].getValue();\n+                UInteger[] v1 = (UInteger[]) outputArguments[1].getValue();\n+\n+                return CompletableFuture.completedFuture(new Tuple2<>(v0, v1));\n+            } catch (Throwable t) {\n+                CompletableFuture<Tuple2<UInteger[], UInteger[]>> f = new CompletableFuture<>();\n+                f.completeExceptionally(new UaException(t));\n+                return f;\n+            }\n+        });\n+    }\n+\n+}"
        },
        {
            "sha": "aa7f56f699e67c9f189781455ae485c9305387e9",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/methods/UaMethodException.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FUaMethodException.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FUaMethodException.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fmethods%2FUaMethodException.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.methods;\n+\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DiagnosticInfo;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class UaMethodException extends UaException {\n+\n+    private final StatusCode[] inputArgumentResults;\n+    private final DiagnosticInfo[] inputArgumentDiagnostics;\n+\n+    public UaMethodException(StatusCode statusCode,\n+                             StatusCode[] inputArgumentResults,\n+                             DiagnosticInfo[] inputArgumentDiagnostics) {\n+        super(statusCode);\n+\n+        this.inputArgumentResults = inputArgumentResults;\n+        this.inputArgumentDiagnostics = inputArgumentDiagnostics;\n+    }\n+\n+    public UaMethodException(long statusCode,\n+                             StatusCode[] inputArgumentResults,\n+                             DiagnosticInfo[] inputArgumentDiagnostics) {\n+        super(statusCode);\n+\n+        this.inputArgumentResults = inputArgumentResults;\n+        this.inputArgumentDiagnostics = inputArgumentDiagnostics;\n+    }\n+\n+    public StatusCode[] getInputArgumentResults() {\n+        return inputArgumentResults;\n+    }\n+\n+    public DiagnosticInfo[] getInputArgumentDiagnostics() {\n+        return inputArgumentDiagnostics;\n+    }\n+\n+}"
        },
        {
            "sha": "c12fae26edfd2064586485c799d48bebcd03d89d",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/DefaultAddressSpace.java",
            "status": "added",
            "additions": 148,
            "deletions": 0,
            "changes": 148,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultAddressSpace.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultAddressSpace.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultAddressSpace.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.AddressSpace;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaDataTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaMethodNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaReferenceTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaViewNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedDataTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedMethodNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedObjectNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedObjectTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedReferenceTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedVariableNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedVariableTypeNode;\n+import org.eclipse.milo.opcua.sdk.client.nodes.attached.AttachedViewNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+\n+public class DefaultAddressSpace implements AddressSpace {\n+\n+    private final OpcUaClient client;\n+\n+    public DefaultAddressSpace(OpcUaClient client) {\n+        this.client = client;\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaNode> getNode(NodeId nodeId) {\n+        ReadValueId readValueId = new ReadValueId(\n+            nodeId, AttributeId.NodeClass.uid(), null, QualifiedName.NULL_VALUE);\n+\n+        CompletableFuture<ReadResponse> future =\n+            client.read(0.0, TimestampsToReturn.Neither, newArrayList(readValueId));\n+\n+        return future.thenCompose(response -> {\n+            DataValue value = response.getResults()[0];\n+            NodeClass nodeClass = (NodeClass) value.getValue().getValue();\n+\n+            if (nodeClass != null) {\n+                client.getNodeCache().putAttribute(nodeId, AttributeId.NodeClass, value);\n+\n+                return CompletableFuture.completedFuture(createNode(nodeId, nodeClass));\n+            } else {\n+                return failedFuture(new UaException(value.getStatusCode(), \"NodeClass was null\"));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public UaDataTypeNode getDataTypeNode(NodeId nodeId) {\n+        return new AttachedDataTypeNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaMethodNode getMethodNode(NodeId nodeId) {\n+        return new AttachedMethodNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaObjectNode getObjectNode(NodeId nodeId) {\n+        return new AttachedObjectNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaObjectTypeNode getObjectTypeNode(NodeId nodeId) {\n+        return new AttachedObjectTypeNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaReferenceTypeNode getReferenceTypeNode(NodeId nodeId) {\n+        return new AttachedReferenceTypeNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaVariableNode getVariableNode(NodeId nodeId) {\n+        return new AttachedVariableNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaVariableTypeNode getVariableTypeNode(NodeId nodeId) {\n+        return new AttachedVariableTypeNode(client, nodeId);\n+    }\n+\n+    @Override\n+    public UaViewNode getViewNode(NodeId nodeId) {\n+        return new AttachedViewNode(client, nodeId);\n+    }\n+\n+    private UaNode createNode(NodeId nodeId, NodeClass nodeClass) {\n+        switch (nodeClass) {\n+            case DataType:\n+                return new AttachedDataTypeNode(client, nodeId);\n+            case Method:\n+                return new AttachedMethodNode(client, nodeId);\n+            case Object:\n+                return new AttachedObjectNode(client, nodeId);\n+            case ObjectType:\n+                return new AttachedObjectTypeNode(client, nodeId);\n+            case ReferenceType:\n+                return new AttachedReferenceTypeNode(client, nodeId);\n+            case Variable:\n+                return new AttachedVariableNode(client, nodeId);\n+            case VariableType:\n+                return new AttachedVariableTypeNode(client, nodeId);\n+            case View:\n+                return new AttachedViewNode(client, nodeId);\n+            default:\n+                throw new IllegalStateException(\"unhandled NodeClass: \" + nodeClass);\n+        }\n+    }\n+\n+    private static <T> CompletableFuture<T> failedFuture(UaException exception) {\n+        CompletableFuture<T> f = new CompletableFuture<>();\n+        f.completeExceptionally(exception);\n+        return f;\n+    }\n+\n+}"
        },
        {
            "sha": "11c3c299bc33d42a059631118ba59f108761e810",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/DefaultNodeCache.java",
            "status": "added",
            "additions": 117,
            "deletions": 0,
            "changes": 117,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultNodeCache.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultNodeCache.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2FDefaultNodeCache.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes;\n+\n+import java.time.Duration;\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheStats;\n+import com.google.common.collect.Maps;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.NodeCache;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DefaultNodeCache implements NodeCache {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private volatile long expireAfterNanos = Duration.ofMinutes(2).toNanos();\n+    private volatile long maximumSize = 1024;\n+\n+    private volatile Cache<NodeId, Map<AttributeId, DataValue>> cache = buildCache();\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Optional<DataValue> getAttribute(NodeId nodeId, AttributeId attributeId) {\n+        Map<AttributeId, DataValue> attributes = cache.getIfPresent(nodeId);\n+\n+        try {\n+            return attributes == null ?\n+                Optional.empty() :\n+                Optional.ofNullable(attributes.get(attributeId));\n+        } catch (ClassCastException e) {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    @Override\n+    public void putAttribute(NodeId nodeId, AttributeId attributeId, DataValue attribute) {\n+        try {\n+            Map<AttributeId, DataValue> attributes = cache.get(nodeId,\n+                () -> Collections.synchronizedMap(Maps.newEnumMap(AttributeId.class)));\n+\n+            attributes.put(attributeId, attribute);\n+        } catch (ExecutionException e) {\n+            logger.error(\"Error loading value: {}\", e.getMessage(), e);\n+        }\n+    }\n+\n+    @Override\n+    public void invalidate(NodeId nodeId) {\n+        cache.invalidate(nodeId);\n+    }\n+\n+    @Override\n+    public void invalidate(NodeId nodeId, AttributeId attributeId) {\n+        Optional.ofNullable(cache.getIfPresent(nodeId))\n+            .ifPresent(attributes -> attributes.remove(attributeId));\n+    }\n+\n+    @Override\n+    public void invalidateAll() {\n+        cache.invalidateAll();\n+    }\n+\n+    public CacheStats getStats() {\n+        return cache.stats();\n+    }\n+\n+    public synchronized void setExpireAfter(long duration, TimeUnit unit) {\n+        this.expireAfterNanos = unit.toNanos(duration);\n+\n+        Cache<NodeId, Map<AttributeId, DataValue>> newCache = buildCache();\n+\n+        newCache.putAll(cache.asMap());\n+\n+        cache = newCache;\n+    }\n+\n+    public synchronized void setMaximumSize(long maximumSize) {\n+        this.maximumSize = maximumSize;\n+\n+        Cache<NodeId, Map<AttributeId, DataValue>> newCache = buildCache();\n+\n+        newCache.putAll(cache.asMap());\n+\n+        cache = newCache;\n+    }\n+\n+    private Cache<NodeId, Map<AttributeId, DataValue>> buildCache() {\n+        return CacheBuilder.newBuilder()\n+            .expireAfterWrite(expireAfterNanos, TimeUnit.NANOSECONDS)\n+            .maximumSize(maximumSize)\n+            .recordStats()\n+            .build();\n+    }\n+\n+}"
        },
        {
            "sha": "afed1358d21f5555664061afe1b409e5adcde188",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedDataTypeNode.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedDataTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedDataTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedDataTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaDataTypeNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedDataTypeNode extends AttachedNode implements UaDataTypeNode {\n+\n+    public AttachedDataTypeNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readIsAbstract() {\n+        return readAttribute(AttributeId.IsAbstract);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeIsAbstract(DataValue value) {\n+        return writeAttribute(AttributeId.IsAbstract, value);\n+    }\n+\n+}"
        },
        {
            "sha": "e0196ae828b19d6f46249c99171bc3575e99aea3",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedMethodNode.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedMethodNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedMethodNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedMethodNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaMethodNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedMethodNode extends AttachedNode implements UaMethodNode {\n+\n+    public AttachedMethodNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readExecutable() {\n+        return readAttribute(AttributeId.Executable);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readUserExecutable() {\n+        return readAttribute(AttributeId.UserExecutable);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeExecutable(DataValue value) {\n+        return writeAttribute(AttributeId.Executable, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeUserExecutable(DataValue value) {\n+        return writeAttribute(AttributeId.UserExecutable, value);\n+    }\n+\n+}"
        },
        {
            "sha": "3f3185d0d62d2868c119d8dd72880d1b3f492ae7",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedNode.java",
            "status": "added",
            "additions": 157,
            "deletions": 0,
            "changes": 157,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.NodeCache;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteValue;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+\n+public class AttachedNode implements UaNode {\n+\n+    protected final NodeCache nodeCache;\n+\n+    protected final OpcUaClient client;\n+    protected final NodeId nodeId;\n+\n+    public AttachedNode(OpcUaClient client, NodeId nodeId) {\n+        this.client = client;\n+        this.nodeId = nodeId;\n+\n+        nodeCache = client.getNodeCache();\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readNodeId() {\n+        return readAttribute(AttributeId.NodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readNodeClass() {\n+        return readAttribute(AttributeId.NodeClass);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readBrowseName() {\n+        return readAttribute(AttributeId.BrowseName);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readDisplayName() {\n+        return readAttribute(AttributeId.DisplayName);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readDescription() {\n+        return readAttribute(AttributeId.Description);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readWriteMask() {\n+        return readAttribute(AttributeId.WriteMask);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readUserWriteMask() {\n+        return readAttribute(AttributeId.UserWriteMask);\n+    }\n+\n+    protected CompletableFuture<DataValue> readAttribute(AttributeId attributeId) {\n+        Optional<DataValue> opt =\n+            AttributeId.BASE_NODE_ATTRIBUTES.contains(attributeId) ?\n+                nodeCache.getAttribute(nodeId, attributeId) : Optional.empty();\n+\n+        return opt.map(CompletableFuture::completedFuture).orElseGet(() -> {\n+            ReadValueId readValueId = new ReadValueId(\n+                nodeId, attributeId.uid(), null, QualifiedName.NULL_VALUE);\n+\n+            CompletableFuture<ReadResponse> future =\n+                client.read(0.0, TimestampsToReturn.Neither, newArrayList(readValueId));\n+\n+            return future.thenApply(response -> {\n+                DataValue value = response.getResults()[0];\n+\n+                if (attributeId != AttributeId.Value) {\n+                    nodeCache.putAttribute(nodeId, attributeId, value);\n+                }\n+\n+                return value;\n+            });\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeNodeId(DataValue value) {\n+        return writeAttribute(AttributeId.NodeId, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeNodeClass(DataValue value) {\n+        return writeAttribute(AttributeId.NodeClass, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeBrowseName(DataValue value) {\n+        return writeAttribute(AttributeId.BrowseName, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeDisplayName(DataValue value) {\n+        return writeAttribute(AttributeId.DisplayName, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeDescription(DataValue value) {\n+        return writeAttribute(AttributeId.Description, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeWriteMask(DataValue value) {\n+        return writeAttribute(AttributeId.WriteMask, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeUserWriteMask(DataValue value) {\n+        return writeAttribute(AttributeId.UserWriteMask, value);\n+    }\n+\n+    protected CompletableFuture<StatusCode> writeAttribute(AttributeId attributeId, DataValue value) {\n+        WriteValue writeValue = new WriteValue(\n+            nodeId, attributeId.uid(), null, value);\n+\n+        return client.write(newArrayList(writeValue)).thenApply(response -> {\n+            StatusCode statusCode = response.getResults()[0];\n+\n+            if (statusCode.isGood()) {\n+                nodeCache.invalidate(nodeId, attributeId);\n+            }\n+\n+            return statusCode;\n+        });\n+    }\n+\n+}"
        },
        {
            "sha": "6b3c14b2402fd6faade00468a2a66557651bc2ab",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedObjectNode.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedObjectNode extends AttachedNode implements UaObjectNode {\n+\n+    public AttachedObjectNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readEventNotifier() {\n+        return readAttribute(AttributeId.EventNotifier);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeEventNotifier(DataValue value) {\n+        return writeAttribute(AttributeId.EventNotifier, value);\n+    }\n+\n+}"
        },
        {
            "sha": "520eb2d02d0cf9f6ab6787bcdda8ae27486222c0",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedObjectTypeNode.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedObjectTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaObjectTypeNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedObjectTypeNode extends AttachedNode implements UaObjectTypeNode {\n+\n+    public AttachedObjectTypeNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readIsAbstract() {\n+        return readAttribute(AttributeId.IsAbstract);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeIsAbstract(DataValue value) {\n+        return writeAttribute(AttributeId.IsAbstract, value);\n+    }\n+\n+}"
        },
        {
            "sha": "fed2cb992f6aa3c6a4af181aa7a3215bba9bf95a",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedReferenceTypeNode.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedReferenceTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedReferenceTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedReferenceTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaReferenceTypeNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedReferenceTypeNode extends AttachedNode implements UaReferenceTypeNode {\n+\n+    public AttachedReferenceTypeNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readIsAbstract() {\n+        return readAttribute(AttributeId.IsAbstract);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readSymmetric() {\n+        return readAttribute(AttributeId.Symmetric);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readInverseName() {\n+        return readAttribute(AttributeId.InverseName);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeIsAbstract(DataValue value) {\n+        return writeAttribute(AttributeId.IsAbstract, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeSymmetric(DataValue value) {\n+        return writeAttribute(AttributeId.Symmetric, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeInverseName(DataValue value) {\n+        return writeAttribute(AttributeId.InverseName, value);\n+    }\n+\n+}"
        },
        {
            "sha": "b64346f545a382d71da4158c8156b5c2a716756d",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedVariableNode.java",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedVariableNode extends AttachedNode implements UaVariableNode {\n+\n+    public AttachedVariableNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readValue() {\n+        return readAttribute(AttributeId.Value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readDataType() {\n+        return readAttribute(AttributeId.DataType);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readValueRank() {\n+        return readAttribute(AttributeId.ValueRank);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readArrayDimensions() {\n+        return readAttribute(AttributeId.ArrayDimensions);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readAccessLevel() {\n+        return readAttribute(AttributeId.AccessLevel);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readUserAccessLevel() {\n+        return readAttribute(AttributeId.UserAccessLevel);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readMinimumSamplingInterval() {\n+        return readAttribute(AttributeId.MinimumSamplingInterval);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readHistorizing() {\n+        return readAttribute(AttributeId.Historizing);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeValue(DataValue value) {\n+        return writeAttribute(AttributeId.Value, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeDataType(DataValue value) {\n+        return writeAttribute(AttributeId.DataType, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeValueRank(DataValue value) {\n+        return writeAttribute(AttributeId.ValueRank, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeArrayDimensions(DataValue value) {\n+        return writeAttribute(AttributeId.ArrayDimensions, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeAccessLevel(DataValue value) {\n+        return writeAttribute(AttributeId.AccessLevel, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeUserAccessLevel(DataValue value) {\n+        return writeAttribute(AttributeId.UserAccessLevel, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeMinimumSamplingInterval(DataValue value) {\n+        return writeAttribute(AttributeId.MinimumSamplingInterval, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeHistorizing(DataValue value) {\n+        return writeAttribute(AttributeId.Historizing, value);\n+    }\n+\n+}"
        },
        {
            "sha": "01d54448ef25ce2038e759b8644cc18b96cecc08",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedVariableTypeNode.java",
            "status": "added",
            "additions": 81,
            "deletions": 0,
            "changes": 81,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedVariableTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaVariableTypeNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedVariableTypeNode extends AttachedNode implements UaVariableTypeNode {\n+\n+    public AttachedVariableTypeNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readValue() {\n+        return readAttribute(AttributeId.Value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readDataType() {\n+        return readAttribute(AttributeId.DataType);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readValueRank() {\n+        return readAttribute(AttributeId.ValueRank);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readArrayDimensions() {\n+        return readAttribute(AttributeId.ArrayDimensions);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readIsAbstract() {\n+        return readAttribute(AttributeId.IsAbstract);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeValue(DataValue value) {\n+        return writeAttribute(AttributeId.Value, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeDataType(DataValue value) {\n+        return writeAttribute(AttributeId.DataType, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeValueRank(DataValue value) {\n+        return writeAttribute(AttributeId.ValueRank, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeArrayDimensions(DataValue value) {\n+        return writeAttribute(AttributeId.ArrayDimensions, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeIsAbstract(DataValue value) {\n+        return writeAttribute(AttributeId.IsAbstract, value);\n+    }\n+\n+}"
        },
        {
            "sha": "45e17dc1315ba67e9702319b86c0c6c8b28c0afe",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/nodes/attached/AttachedViewNode.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedViewNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedViewNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fnodes%2Fattached%2FAttachedViewNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.nodes.attached;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.nodes.attached.UaViewNode;\n+import org.eclipse.milo.opcua.stack.core.AttributeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class AttachedViewNode extends AttachedNode implements UaViewNode {\n+\n+    public AttachedViewNode(OpcUaClient client, NodeId nodeId) {\n+        super(client, nodeId);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readContainsNoLoops() {\n+        return readAttribute(AttributeId.ContainsNoLoops);\n+    }\n+\n+    @Override\n+    public CompletableFuture<DataValue> readEventNotifier() {\n+        return readAttribute(AttributeId.EventNotifier);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeContainsNoLoops(DataValue value) {\n+        return writeAttribute(AttributeId.ContainsNoLoops, value);\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> writeEventNotifier(DataValue value) {\n+        return writeAttribute(AttributeId.EventNotifier, value);\n+    }\n+\n+}"
        },
        {
            "sha": "5180f629ab9e171b58dd0809e0d29a927a1b70c8",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/subscriptions/OpcUaMonitoredItem.java",
            "status": "added",
            "additions": 143,
            "deletions": 0,
            "changes": 143,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaMonitoredItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaMonitoredItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaMonitoredItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.subscriptions;\n+\n+import java.util.function.Consumer;\n+\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaMonitoredItem;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExtensionObject;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class OpcUaMonitoredItem implements UaMonitoredItem {\n+\n+    private volatile Consumer<DataValue> valueConsumer;\n+    private volatile Consumer<Variant[]> eventConsumer;\n+\n+    private volatile StatusCode statusCode;\n+    private volatile double revisedSamplingInterval = 0.0;\n+    private volatile UInteger revisedQueueSize = uint(0);\n+    private volatile ExtensionObject filterResult;\n+    private volatile MonitoringMode monitoringMode = MonitoringMode.Disabled;\n+\n+    private final UInteger clientHandle;\n+    private final ReadValueId readValueId;\n+    private final UInteger monitoredItemId;\n+\n+    public OpcUaMonitoredItem(UInteger clientHandle,\n+                              ReadValueId readValueId,\n+                              UInteger monitoredItemId,\n+                              StatusCode statusCode,\n+                              double revisedSamplingInterval,\n+                              UInteger revisedQueueSize,\n+                              ExtensionObject filterResult,\n+                              MonitoringMode monitoringMode) {\n+\n+        this.clientHandle = clientHandle;\n+        this.readValueId = readValueId;\n+        this.monitoredItemId = monitoredItemId;\n+        this.statusCode = statusCode;\n+        this.revisedSamplingInterval = revisedSamplingInterval;\n+        this.revisedQueueSize = revisedQueueSize;\n+        this.filterResult = filterResult;\n+        this.monitoringMode = monitoringMode;\n+    }\n+\n+    @Override\n+    public UInteger getClientHandle() {\n+        return clientHandle;\n+    }\n+\n+    @Override\n+    public ReadValueId getReadValueId() {\n+        return readValueId;\n+    }\n+\n+    @Override\n+    public UInteger getMonitoredItemId() {\n+        return monitoredItemId;\n+    }\n+\n+    @Override\n+    public StatusCode getStatusCode() {\n+        return statusCode;\n+    }\n+\n+    @Override\n+    public double getRevisedSamplingInterval() {\n+        return revisedSamplingInterval;\n+    }\n+\n+    @Override\n+    public UInteger getRevisedQueueSize() {\n+        return revisedQueueSize;\n+    }\n+\n+    @Override\n+    public ExtensionObject getFilterResult() {\n+        return filterResult;\n+    }\n+\n+    @Override\n+    public MonitoringMode getMonitoringMode() {\n+        return monitoringMode;\n+    }\n+\n+    @Override\n+    public void setValueConsumer(Consumer<DataValue> valueConsumer) {\n+        this.valueConsumer = valueConsumer;\n+    }\n+\n+    @Override\n+    public void setEventConsumer(Consumer<Variant[]> eventConsumer) {\n+        this.eventConsumer = eventConsumer;\n+    }\n+\n+    void setStatusCode(StatusCode statusCode) {\n+        this.statusCode = statusCode;\n+    }\n+\n+    void setFilterResult(ExtensionObject filterResult) {\n+        this.filterResult = filterResult;\n+    }\n+\n+    void setRevisedSamplingInterval(double revisedSamplingInterval) {\n+        this.revisedSamplingInterval = revisedSamplingInterval;\n+    }\n+\n+    void setRevisedQueueSize(UInteger revisedQueueSize) {\n+        this.revisedQueueSize = revisedQueueSize;\n+    }\n+\n+    void setMonitoringMode(MonitoringMode monitoringMode) {\n+        this.monitoringMode = monitoringMode;\n+    }\n+\n+    void onValueArrived(DataValue value) {\n+        Consumer<DataValue> c = valueConsumer;\n+        if (c != null) c.accept(value);\n+    }\n+\n+    void onEventArrived(Variant[] values) {\n+        Consumer<Variant[]> c = eventConsumer;\n+        if (c != null) c.accept(values);\n+    }\n+\n+}"
        },
        {
            "sha": "5979f6d5cf77dc36a8e1ac93244383405542a2f0",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/subscriptions/OpcUaSubscription.java",
            "status": "added",
            "additions": 292,
            "deletions": 0,
            "changes": 292,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscription.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscription.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscription.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,292 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.subscriptions;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Maps;\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaMonitoredItem;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscription;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemCreateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemCreateResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemModifyRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemModifyResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeResponse;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class OpcUaSubscription implements UaSubscription {\n+\n+    private final Map<UInteger, OpcUaMonitoredItem> itemsByClientHandle = Maps.newConcurrentMap();\n+    private final Map<UInteger, OpcUaMonitoredItem> itemsByServerHandle = Maps.newConcurrentMap();\n+\n+    private volatile long lastSequenceNumber = 0L;\n+    private volatile double revisedPublishingInterval = 0.0;\n+\n+    private volatile UInteger revisedLifetimeCount = uint(0);\n+\n+    private volatile UInteger revisedMaxKeepAliveCount = uint(0);\n+    private volatile UInteger maxNotificationsPerPublish;\n+    private volatile boolean publishingEnabled;\n+    private volatile UByte priority;\n+\n+    private final OpcUaClient client;\n+    private final UInteger subscriptionId;\n+\n+    public OpcUaSubscription(OpcUaClient client, UInteger subscriptionId,\n+                             double revisedPublishingInterval,\n+                             UInteger revisedLifetimeCount,\n+                             UInteger revisedMaxKeepAliveCount,\n+                             UInteger maxNotificationsPerPublish,\n+                             boolean publishingEnabled,\n+                             UByte priority) {\n+\n+        this.client = client;\n+        this.subscriptionId = subscriptionId;\n+        this.revisedPublishingInterval = revisedPublishingInterval;\n+        this.revisedLifetimeCount = revisedLifetimeCount;\n+        this.revisedMaxKeepAliveCount = revisedMaxKeepAliveCount;\n+        this.maxNotificationsPerPublish = maxNotificationsPerPublish;\n+        this.publishingEnabled = publishingEnabled;\n+        this.priority = priority;\n+    }\n+\n+    @Override\n+    public CompletableFuture<List<UaMonitoredItem>> createMonitoredItems(TimestampsToReturn timestampsToReturn,\n+                                                                         List<MonitoredItemCreateRequest> itemsToCreate) {\n+\n+        return client.createMonitoredItems(\n+            subscriptionId,\n+            timestampsToReturn,\n+            itemsToCreate).thenApply(response -> {\n+\n+            List<UaMonitoredItem> createdItems = newArrayList();\n+\n+            MonitoredItemCreateResult[] results = response.getResults();\n+\n+            for (int i = 0; i < itemsToCreate.size(); i++) {\n+                MonitoredItemCreateRequest request = itemsToCreate.get(i);\n+                MonitoredItemCreateResult result = results[i];\n+\n+                OpcUaMonitoredItem item = new OpcUaMonitoredItem(\n+                    request.getRequestedParameters().getClientHandle(),\n+                    request.getItemToMonitor(),\n+                    result.getMonitoredItemId(),\n+                    result.getStatusCode(),\n+                    result.getRevisedSamplingInterval(),\n+                    result.getRevisedQueueSize(),\n+                    result.getFilterResult(),\n+                    request.getMonitoringMode());\n+\n+                if (item.getStatusCode().isGood()) {\n+                    itemsByClientHandle.put(item.getClientHandle(), item);\n+                    itemsByServerHandle.put(item.getMonitoredItemId(), item);\n+                }\n+\n+                createdItems.add(item);\n+            }\n+\n+            return createdItems;\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<List<StatusCode>> modifyMonitoredItems(TimestampsToReturn timestampsToReturn,\n+                                                                    List<MonitoredItemModifyRequest> itemsToModify) {\n+\n+        CompletableFuture<ModifyMonitoredItemsResponse> future =\n+            client.modifyMonitoredItems(subscriptionId, timestampsToReturn, itemsToModify);\n+\n+        return future.thenApply(response -> {\n+            List<StatusCode> statusCodes = newArrayList();\n+\n+            MonitoredItemModifyResult[] results = response.getResults();\n+\n+            for (int i = 0; i < results.length; i++) {\n+                MonitoredItemModifyRequest request = itemsToModify.get(i);\n+                MonitoredItemModifyResult result = results[i];\n+                StatusCode statusCode = result.getStatusCode();\n+\n+                OpcUaMonitoredItem item = itemsByServerHandle.get(request.getMonitoredItemId());\n+\n+                if (item != null) {\n+                    item.setStatusCode(statusCode);\n+                    item.setRevisedSamplingInterval(result.getRevisedSamplingInterval());\n+                    item.setRevisedQueueSize(result.getRevisedQueueSize());\n+                    item.setFilterResult(result.getFilterResult());\n+                }\n+\n+                statusCodes.add(statusCode);\n+            }\n+\n+            return statusCodes;\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<List<StatusCode>> deleteMonitoredItems(List<UaMonitoredItem> itemsToDelete) {\n+\n+        List<UInteger> monitoredItemIds = itemsToDelete.stream()\n+            .map(UaMonitoredItem::getMonitoredItemId)\n+            .collect(Collectors.toList());\n+\n+        return client.deleteMonitoredItems(subscriptionId, monitoredItemIds).thenApply(response -> {\n+            StatusCode[] results = response.getResults();\n+\n+            for (UaMonitoredItem item : itemsToDelete) {\n+                itemsByClientHandle.remove(item.getClientHandle());\n+                itemsByServerHandle.remove(item.getMonitoredItemId());\n+            }\n+\n+            return Arrays.asList(results);\n+        });\n+    }\n+\n+\n+    @Override\n+    public CompletableFuture<List<StatusCode>> setMonitoringMode(MonitoringMode monitoringMode,\n+                                                                 List<UaMonitoredItem> items) {\n+\n+        List<UInteger> monitoredItemIds = items.stream()\n+            .map(UaMonitoredItem::getMonitoredItemId)\n+            .collect(Collectors.toList());\n+\n+        CompletableFuture<SetMonitoringModeResponse> future =\n+            client.setMonitoringMode(subscriptionId, monitoringMode, monitoredItemIds);\n+\n+        return future.thenApply(response -> {\n+            StatusCode[] results = response.getResults();\n+\n+            for (int i = 0; i < monitoredItemIds.size(); i++) {\n+                UInteger id = monitoredItemIds.get(i);\n+                OpcUaMonitoredItem item = itemsByServerHandle.get(id);\n+\n+                StatusCode result = results[i];\n+                if (result.isGood() && item != null) {\n+                    item.setMonitoringMode(monitoringMode);\n+                }\n+            }\n+\n+            return Arrays.asList(results);\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<StatusCode> setPublishingMode(boolean publishingEnabled) {\n+        return client.setPublishingMode(publishingEnabled, newArrayList(subscriptionId))\n+            .thenApply(response -> {\n+                StatusCode statusCode = response.getResults()[0];\n+\n+                if (statusCode.isGood()) {\n+                    setPublishingEnabled(publishingEnabled);\n+                }\n+\n+                return statusCode;\n+            });\n+    }\n+\n+    @Override\n+    public UInteger getSubscriptionId() {\n+        return subscriptionId;\n+    }\n+\n+    @Override\n+    public double getRevisedPublishingInterval() {\n+        return revisedPublishingInterval;\n+    }\n+\n+    @Override\n+    public UInteger getRevisedLifetimeCount() {\n+        return revisedLifetimeCount;\n+    }\n+\n+    @Override\n+    public UInteger getRevisedMaxKeepAliveCount() {\n+        return revisedMaxKeepAliveCount;\n+    }\n+\n+    @Override\n+    public UInteger getMaxNotificationsPerPublish() {\n+        return maxNotificationsPerPublish;\n+    }\n+\n+    @Override\n+    public boolean isPublishingEnabled() {\n+        return publishingEnabled;\n+    }\n+\n+    @Override\n+    public UByte getPriority() {\n+        return priority;\n+    }\n+\n+    @Override\n+    public ImmutableList<UaMonitoredItem> getMonitoredItems() {\n+        return ImmutableList.copyOf(itemsByClientHandle.values());\n+    }\n+\n+    Map<UInteger, OpcUaMonitoredItem> getItemsByClientHandle() {\n+        return itemsByClientHandle;\n+    }\n+\n+    Map<UInteger, OpcUaMonitoredItem> getItemsByServerHandle() {\n+        return itemsByServerHandle;\n+    }\n+\n+    long getLastSequenceNumber() {\n+        return lastSequenceNumber;\n+    }\n+\n+    void setRevisedPublishingInterval(double revisedPublishingInterval) {\n+        this.revisedPublishingInterval = revisedPublishingInterval;\n+    }\n+\n+    void setRevisedLifetimeCount(UInteger revisedLifetimeCount) {\n+        this.revisedLifetimeCount = revisedLifetimeCount;\n+    }\n+\n+    void setRevisedMaxKeepAliveCount(UInteger revisedMaxKeepAliveCount) {\n+        this.revisedMaxKeepAliveCount = revisedMaxKeepAliveCount;\n+    }\n+\n+    void setMaxNotificationsPerPublish(UInteger maxNotificationsPerPublish) {\n+        this.maxNotificationsPerPublish = maxNotificationsPerPublish;\n+    }\n+\n+    void setPublishingEnabled(boolean publishingEnabled) {\n+        this.publishingEnabled = publishingEnabled;\n+    }\n+\n+    void setPriority(UByte priority) {\n+        this.priority = priority;\n+    }\n+\n+    void setLastSequenceNumber(long lastSequenceNumber) {\n+        this.lastSequenceNumber = lastSequenceNumber;\n+    }\n+\n+}"
        },
        {
            "sha": "0ea64b6650f7ad744537fd9689a7cec2d8ea5e37",
            "filename": "opc-ua-sdk/sdk-client/src/main/java/org/eclipse/milo/opcua/sdk/client/subscriptions/OpcUaSubscriptionManager.java",
            "status": "added",
            "additions": 551,
            "deletions": 0,
            "changes": 551,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscriptionManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscriptionManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-client%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fclient%2Fsubscriptions%2FOpcUaSubscriptionManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,551 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.client.subscriptions;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import org.eclipse.milo.opcua.sdk.client.OpcUaClient;\n+import org.eclipse.milo.opcua.sdk.client.SessionActivityListener;\n+import org.eclipse.milo.opcua.sdk.client.api.UaSession;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscription;\n+import org.eclipse.milo.opcua.sdk.client.api.subscriptions.UaSubscriptionManager;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExtensionObject;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DataChangeNotification;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EventFieldList;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EventNotificationList;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.MonitoredItemNotification;\n+import org.eclipse.milo.opcua.stack.core.types.structured.NotificationMessage;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RequestHeader;\n+import org.eclipse.milo.opcua.stack.core.types.structured.StatusChangeNotification;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SubscriptionAcknowledgement;\n+import org.eclipse.milo.opcua.stack.core.util.ExecutionQueue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.ubyte;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class OpcUaSubscriptionManager implements UaSubscriptionManager {\n+\n+    public static final UInteger DEFAULT_MAX_NOTIFICATIONS_PER_PUBLISH = uint(65535);\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final Map<UInteger, OpcUaSubscription> subscriptions = Maps.newConcurrentMap();\n+\n+    private final List<SubscriptionListener> subscriptionListeners = Lists.newCopyOnWriteArrayList();\n+\n+    private final ConcurrentMap<NodeId, AtomicLong> pendingCountMap = Maps.newConcurrentMap();\n+\n+    private final List<SubscriptionAcknowledgement> acknowledgements = newArrayList();\n+\n+    private final ExecutionQueue deliveryQueue;\n+    private final ExecutionQueue processingQueue;\n+\n+    private final OpcUaClient client;\n+\n+    public OpcUaSubscriptionManager(OpcUaClient client) {\n+        this.client = client;\n+\n+        deliveryQueue = new ExecutionQueue(client.getConfig().getExecutor());\n+        processingQueue = new ExecutionQueue(client.getConfig().getExecutor());\n+\n+        client.addSessionActivityListener(new SessionActivityListener() {\n+            @Override\n+            public void onSessionInactive(UaSession session) {\n+                // This allows a session that gets re-activated to immediately start\n+                // publishing again instead of waiting for outstanding PublishRequests\n+                // from before the re-activation to expire/timeout.\n+                pendingCountMap.replace(session.getSessionId(), new AtomicLong(0));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaSubscription> createSubscription(double requestedPublishingInterval) {\n+        // Keep-alive every ~10-12s or every publishing interval if longer.\n+        UInteger maxKeepAliveCount = uint(Math.max(1, (int) Math.ceil(10000.0 / requestedPublishingInterval)));\n+\n+        // Lifetime must be 3x (or greater) the keep-alive count.\n+        UInteger maxLifetimeCount = uint(maxKeepAliveCount.intValue() * 6);\n+\n+        return createSubscription(\n+            requestedPublishingInterval,\n+            maxLifetimeCount,\n+            maxKeepAliveCount,\n+            DEFAULT_MAX_NOTIFICATIONS_PER_PUBLISH,\n+            true, ubyte(0)\n+        );\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaSubscription> createSubscription(\n+        double requestedPublishingInterval,\n+        UInteger requestedLifetimeCount,\n+        UInteger requestedMaxKeepAliveCount,\n+        UInteger maxNotificationsPerPublish,\n+        boolean publishingEnabled,\n+        UByte priority) {\n+\n+        CompletableFuture<CreateSubscriptionResponse> future = client.createSubscription(\n+            requestedPublishingInterval,\n+            requestedLifetimeCount,\n+            requestedMaxKeepAliveCount,\n+            maxNotificationsPerPublish,\n+            publishingEnabled, priority\n+        );\n+\n+        return future.thenApply(response -> {\n+            OpcUaSubscription subscription = new OpcUaSubscription(\n+                client,\n+                response.getSubscriptionId(),\n+                response.getRevisedPublishingInterval(),\n+                response.getRevisedLifetimeCount(),\n+                response.getRevisedMaxKeepAliveCount(),\n+                maxNotificationsPerPublish,\n+                publishingEnabled, priority);\n+\n+            subscriptions.put(subscription.getSubscriptionId(), subscription);\n+\n+            maybeSendPublishRequests();\n+\n+            return subscription;\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaSubscription> modifySubscription(\n+        UInteger subscriptionId,\n+        double requestedPublishingInterval) {\n+\n+        OpcUaSubscription subscription = subscriptions.get(subscriptionId);\n+\n+        if (subscription == null) {\n+            CompletableFuture<UaSubscription> f = new CompletableFuture<>();\n+            f.completeExceptionally(new UaException(StatusCodes.Bad_SubscriptionIdInvalid));\n+            return f;\n+        }\n+\n+        // Keep-alive every ~10-12s or every publishing interval if longer.\n+        UInteger requestedMaxKeepAliveCount = uint(Math.max(1, (int) Math.ceil(10000.0 / requestedPublishingInterval)));\n+\n+        // Lifetime must be 3x (or greater) the keep-alive count.\n+        UInteger requestedLifetimeCount = uint(requestedMaxKeepAliveCount.intValue() * 6);\n+\n+        CompletableFuture<UaSubscription> future = modifySubscription(\n+            subscriptionId,\n+            requestedPublishingInterval,\n+            requestedLifetimeCount,\n+            requestedMaxKeepAliveCount,\n+            subscription.getMaxNotificationsPerPublish(),\n+            subscription.getPriority()\n+        );\n+\n+        future.thenRun(this::maybeSendPublishRequests);\n+\n+        return future;\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaSubscription> modifySubscription(\n+        UInteger subscriptionId,\n+        double requestedPublishingInterval,\n+        UInteger requestedLifetimeCount,\n+        UInteger requestedMaxKeepAliveCount,\n+        UInteger maxNotificationsPerPublish,\n+        UByte priority) {\n+\n+        OpcUaSubscription subscription = subscriptions.get(subscriptionId);\n+\n+        if (subscription == null) {\n+            CompletableFuture<UaSubscription> f = new CompletableFuture<>();\n+            f.completeExceptionally(new UaException(StatusCodes.Bad_SubscriptionIdInvalid));\n+            return f;\n+        }\n+\n+        CompletableFuture<ModifySubscriptionResponse> future = client.modifySubscription(\n+            subscriptionId,\n+            requestedPublishingInterval,\n+            requestedLifetimeCount,\n+            requestedMaxKeepAliveCount,\n+            maxNotificationsPerPublish,\n+            priority\n+        );\n+\n+        return future.thenApply(response -> {\n+            subscription.setRevisedPublishingInterval(response.getRevisedPublishingInterval());\n+            subscription.setRevisedLifetimeCount(response.getRevisedLifetimeCount());\n+            subscription.setRevisedMaxKeepAliveCount(response.getRevisedMaxKeepAliveCount());\n+            subscription.setMaxNotificationsPerPublish(maxNotificationsPerPublish);\n+            subscription.setPriority(priority);\n+\n+            maybeSendPublishRequests();\n+\n+            return subscription;\n+        });\n+    }\n+\n+    @Override\n+    public CompletableFuture<UaSubscription> deleteSubscription(UInteger subscriptionId) {\n+        List<UInteger> subscriptionIds = newArrayList(subscriptionId);\n+\n+        return client.deleteSubscriptions(subscriptionIds).thenApply(r -> {\n+            OpcUaSubscription subscription = subscriptions.remove(subscriptionId);\n+\n+            maybeSendPublishRequests();\n+\n+            return subscription;\n+        });\n+    }\n+\n+    public void transferFailed(UInteger subscriptionId, StatusCode statusCode) {\n+        OpcUaSubscription subscription = subscriptions.remove(subscriptionId);\n+\n+        if (subscription != null) {\n+            subscriptionListeners.forEach(l -> l.onSubscriptionTransferFailed(subscription, statusCode));\n+        }\n+    }\n+\n+    @Override\n+    public ImmutableList<UaSubscription> getSubscriptions() {\n+        return ImmutableList.copyOf(subscriptions.values());\n+    }\n+\n+    @Override\n+    public void addSubscriptionListener(SubscriptionListener listener) {\n+        subscriptionListeners.add(listener);\n+    }\n+\n+    @Override\n+    public void removeSubscriptionListener(SubscriptionListener listener) {\n+        subscriptionListeners.remove(listener);\n+    }\n+\n+    private long getMaxPendingPublishes() {\n+        long maxPendingPublishRequests = client.getConfig().getMaxPendingPublishRequests().longValue();\n+\n+        return Math.min(subscriptions.size() * 2, maxPendingPublishRequests);\n+    }\n+\n+    private UInteger getTimeoutHint() {\n+        double minKeepAlive = subscriptions.values().stream()\n+            .map(s -> s.getRevisedPublishingInterval() * s.getRevisedMaxKeepAliveCount().doubleValue())\n+            .min(Comparator.<Double>naturalOrder())\n+            .orElse(client.getConfig().getRequestTimeout().doubleValue());\n+\n+        long timeoutHint = (long) (getMaxPendingPublishes() * minKeepAlive * 1.25);\n+\n+        return uint(timeoutHint);\n+    }\n+\n+    private void maybeSendPublishRequests() {\n+        long maxPendingPublishes = getMaxPendingPublishes();\n+\n+        if (maxPendingPublishes == 0) return;\n+\n+        client.getSession().thenAccept(session -> {\n+            AtomicLong pendingCount = pendingCountMap.computeIfAbsent(\n+                session.getSessionId(), id -> new AtomicLong(0L));\n+\n+            for (long i = pendingCount.get(); i < maxPendingPublishes; i++) {\n+                if (pendingCount.incrementAndGet() <= maxPendingPublishes) {\n+                    sendPublishRequest(session, pendingCount);\n+                } else {\n+                    pendingCount.getAndUpdate(p -> (p > 0) ? p - 1 : 0);\n+                }\n+            }\n+\n+            if (pendingCountMap.size() > 1) {\n+                // Prune any old sessions...\n+                pendingCountMap.entrySet().removeIf(e ->\n+                    !e.getKey().equals(session.getSessionId()));\n+            }\n+        });\n+    }\n+\n+    private void sendPublishRequest(UaSession session, AtomicLong pendingCount) {\n+        SubscriptionAcknowledgement[] subscriptionAcknowledgements;\n+\n+        synchronized (acknowledgements) {\n+            subscriptionAcknowledgements = acknowledgements.toArray(\n+                new SubscriptionAcknowledgement[acknowledgements.size()]);\n+\n+            acknowledgements.clear();\n+        }\n+\n+        final UInteger requestHandle = client.nextRequestHandle();\n+\n+        RequestHeader requestHeader = new RequestHeader(\n+            session.getAuthenticationToken(),\n+            DateTime.now(),\n+            requestHandle,\n+            uint(0),\n+            null,\n+            getTimeoutHint(),\n+            null\n+        );\n+\n+        PublishRequest request = new PublishRequest(\n+            requestHeader,\n+            subscriptionAcknowledgements\n+        );\n+\n+        if (logger.isDebugEnabled()) {\n+            String[] ackStrings = Arrays.stream(subscriptionAcknowledgements)\n+                .map(ack -> String.format(\"id=%s/seq=%s\",\n+                    ack.getSubscriptionId(), ack.getSequenceNumber()))\n+                .toArray(String[]::new);\n+\n+            logger.debug(\n+                \"Sending PublishRequest, requestHandle={}, acknowledgements={}\",\n+                requestHandle, Arrays.toString(ackStrings));\n+        }\n+\n+        client.<PublishResponse>sendRequest(request).whenCompleteAsync((response, ex) -> {\n+\n+            pendingCount.getAndUpdate(p -> (p > 0) ? p - 1 : 0);\n+\n+            if (response != null) {\n+                logger.debug(\"Received PublishResponse, sequenceNumber={}\",\n+                    response.getNotificationMessage().getSequenceNumber());\n+\n+                processingQueue.submit(() -> onPublishComplete(response));\n+\n+                maybeSendPublishRequests();\n+            } else {\n+                StatusCode statusCode = UaException.extract(ex)\n+                    .map(UaException::getStatusCode)\n+                    .orElse(StatusCode.BAD);\n+\n+                logger.debug(\"Publish service failure: {}\", statusCode, ex);\n+\n+                if (statusCode.getValue() != StatusCodes.Bad_TooManyPublishRequests) {\n+                    maybeSendPublishRequests();\n+                }\n+\n+                synchronized (this.acknowledgements) {\n+                    Collections.addAll(this.acknowledgements, subscriptionAcknowledgements);\n+                }\n+\n+                UaException uax = UaException.extract(ex).orElse(new UaException(ex));\n+                subscriptionListeners.forEach(l -> l.onPublishFailure(uax));\n+            }\n+        }, client.getConfig().getExecutor());\n+    }\n+\n+    private void onPublishComplete(PublishResponse response) {\n+        logger.debug(\"onPublishComplete() response for subscriptionId={}\", response.getSubscriptionId());\n+\n+        UInteger subscriptionId = response.getSubscriptionId();\n+        OpcUaSubscription subscription = subscriptions.get(subscriptionId);\n+\n+        if (subscription == null) return;\n+\n+        NotificationMessage notificationMessage = response.getNotificationMessage();\n+\n+        long sequenceNumber = notificationMessage.getSequenceNumber().longValue();\n+        long expectedSequenceNumber = subscription.getLastSequenceNumber() + 1;\n+\n+        if (sequenceNumber > expectedSequenceNumber) {\n+            logger.warn(\"[id={}] expected sequence={}, received sequence={}. Calling Republish service...\",\n+                subscriptionId, expectedSequenceNumber, sequenceNumber);\n+\n+            processingQueue.pause();\n+            processingQueue.submitToHead(() -> onPublishComplete(response));\n+\n+            republish(subscriptionId, expectedSequenceNumber, sequenceNumber).whenComplete((dataLost, ex) -> {\n+                if (ex != null) {\n+                    logger.debug(\"Republish failed: {}\", ex.getMessage(), ex);\n+\n+                    subscriptionListeners.forEach(l -> l.onNotificationDataLost(subscription));\n+                } else {\n+                    // Republish succeeded, possibly with some data loss, resume processing.\n+                    if (dataLost) {\n+                        subscriptionListeners.forEach(l -> l.onNotificationDataLost(subscription));\n+                    }\n+                }\n+\n+                subscription.setLastSequenceNumber(sequenceNumber - 1);\n+                processingQueue.resume();\n+            });\n+\n+            return;\n+        }\n+\n+        subscription.setLastSequenceNumber(sequenceNumber);\n+\n+        synchronized (acknowledgements) {\n+            for (UInteger available : response.getAvailableSequenceNumbers()) {\n+                acknowledgements.add(new SubscriptionAcknowledgement(subscriptionId, available));\n+            }\n+\n+            if (logger.isDebugEnabled()) {\n+                String[] seqStrings = Arrays.stream(response.getAvailableSequenceNumbers())\n+                    .map(sequence -> String.format(\"id=%s/seq=%s\", subscriptionId, sequence))\n+                    .toArray(String[]::new);\n+\n+                logger.debug(\n+                    \"[id={}] PublishResponse sequence={}, available sequences={}\",\n+                    subscriptionId, sequenceNumber, Arrays.toString(seqStrings));\n+            }\n+        }\n+\n+        deliveryQueue.submit(() -> onNotificationMessage(subscriptionId, notificationMessage));\n+    }\n+\n+    private CompletableFuture<Boolean> republish(UInteger subscriptionId, long fromSequence, long toSequence) {\n+        CompletableFuture<Boolean> future = new CompletableFuture<>();\n+\n+        republish(subscriptionId, fromSequence, toSequence, false, future);\n+\n+        return future;\n+    }\n+\n+    private void republish(UInteger subscriptionId,\n+                           long fromSequence,\n+                           long toSequence,\n+                           boolean dataLost,\n+                           CompletableFuture<Boolean> future) {\n+\n+        if (fromSequence == toSequence) {\n+            future.complete(dataLost);\n+        } else {\n+            client.republish(subscriptionId, uint(fromSequence)).whenComplete((response, ex) -> {\n+                if (response != null) {\n+                    try {\n+                        onRepublishComplete(subscriptionId, response, uint(fromSequence));\n+\n+                        republish(subscriptionId, fromSequence + 1, toSequence, dataLost, future);\n+                    } catch (UaException e) {\n+                        republish(subscriptionId, fromSequence + 1, toSequence, true, future);\n+                    }\n+                } else {\n+                    StatusCode statusCode = UaException.extract(ex)\n+                        .map(UaException::getStatusCode)\n+                        .orElse(StatusCode.BAD);\n+\n+                    if (statusCode.getValue() == StatusCodes.Bad_MessageNotAvailable) {\n+                        republish(subscriptionId, fromSequence + 1, toSequence, true, future);\n+                    } else {\n+                        future.completeExceptionally(ex);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+\n+    private void onRepublishComplete(UInteger subscriptionId,\n+                                     RepublishResponse response,\n+                                     UInteger expectedSequenceNumber) throws UaException {\n+\n+        NotificationMessage notificationMessage = response.getNotificationMessage();\n+        UInteger sequenceNumber = notificationMessage.getSequenceNumber();\n+\n+        if (!sequenceNumber.equals(expectedSequenceNumber)) {\n+            throw new UaException(StatusCodes.Bad_SequenceNumberInvalid,\n+                \"expected sequence=\" + expectedSequenceNumber + \", received sequence=\" + sequenceNumber);\n+        }\n+\n+        deliveryQueue.submit(() -> onNotificationMessage(subscriptionId, notificationMessage));\n+    }\n+\n+    private void onNotificationMessage(UInteger subscriptionId, NotificationMessage notificationMessage) {\n+        DateTime publishTime = notificationMessage.getPublishTime();\n+\n+        logger.debug(\"onNotificationMessage(), subscriptionId={}, sequenceNumber={}, publishTime={}\",\n+            subscriptionId, notificationMessage.getSequenceNumber(), publishTime);\n+\n+        OpcUaSubscription subscription = subscriptions.get(subscriptionId);\n+        if (subscription == null) return;\n+\n+        Map<UInteger, OpcUaMonitoredItem> items = subscription.getItemsByClientHandle();\n+\n+        for (ExtensionObject xo : notificationMessage.getNotificationData()) {\n+            Object o = xo.decode();\n+\n+            if (o instanceof DataChangeNotification) {\n+                DataChangeNotification dcn = (DataChangeNotification) o;\n+                int notificationCount = dcn.getMonitoredItems().length;\n+\n+                logger.debug(\"Received {} MonitoredItemNotifications\", notificationCount);\n+\n+                for (MonitoredItemNotification min : dcn.getMonitoredItems()) {\n+                    logger.trace(\"MonitoredItemNotification: clientHandle={}, value={}\",\n+                        min.getClientHandle(), min.getValue());\n+\n+                    OpcUaMonitoredItem item = items.get(min.getClientHandle());\n+                    if (item != null) item.onValueArrived(min.getValue());\n+                    else logger.warn(\"no item for clientHandle=\" + min.getClientHandle());\n+                }\n+\n+                if (notificationCount == 0) {\n+                    subscriptionListeners.forEach(l -> l.onKeepAlive(subscription, publishTime));\n+                }\n+            } else if (o instanceof EventNotificationList) {\n+                EventNotificationList enl = (EventNotificationList) o;\n+\n+                for (EventFieldList efl : enl.getEvents()) {\n+                    logger.trace(\"EventFieldList: clientHandle={}, values={}\",\n+                        efl.getClientHandle(), Arrays.toString(efl.getEventFields()));\n+\n+                    OpcUaMonitoredItem item = items.get(efl.getClientHandle());\n+                    if (item != null) item.onEventArrived(efl.getEventFields());\n+                }\n+            } else if (o instanceof StatusChangeNotification) {\n+                StatusChangeNotification scn = (StatusChangeNotification) o;\n+\n+                logger.debug(\"StatusChangeNotification: {}\", scn.getStatus());\n+\n+                subscriptionListeners.forEach(l -> l.onStatusChanged(subscription, scn.getStatus()));\n+\n+                if (scn.getStatus().getValue() == StatusCodes.Bad_Timeout) {\n+                    subscriptions.remove(subscriptionId);\n+                    maybeSendPublishRequests();\n+                }\n+            }\n+        }\n+    }\n+\n+    public void startPublishing() {\n+        maybeSendPublishRequests();\n+    }\n+\n+    public void clearSubscriptions() {\n+        subscriptions.clear();\n+    }\n+\n+}"
        },
        {
            "sha": "b460e455f4e44a09f2d5bd1b423d3f1e8fdd2127",
            "filename": "opc-ua-sdk/sdk-core/pom.xml",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fpom.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fpom.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.eclipse.milo</groupId>\n+        <artifactId>opc-ua-sdk</artifactId>\n+        <version>0.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>sdk-core</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>stack-core</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <!-- configuration inherited from pluginManagement -->\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "5ca58150331b94cc1fa8932876056b36440bb4c3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/AccessLevel.java",
            "status": "added",
            "additions": 72,
            "deletions": 0,
            "changes": 72,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FAccessLevel.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FAccessLevel.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FAccessLevel.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public enum AccessLevel {\n+\n+    CurrentRead(0x01),\n+    CurrentWrite(0x02),\n+    HistoryRead(0x04),\n+    HistoryWrite(0x08),\n+    SemanticChange(0x10);\n+\n+    public static final ImmutableSet<AccessLevel> NONE = ImmutableSet.of();\n+    public static final ImmutableSet<AccessLevel> READ_ONLY = ImmutableSet.of(CurrentRead);\n+    public static final ImmutableSet<AccessLevel> READ_WRITE = ImmutableSet.of(CurrentRead, CurrentWrite);\n+    public static final ImmutableSet<AccessLevel> HISTORY_READ_ONLY = ImmutableSet.of(HistoryRead);\n+    public static final ImmutableSet<AccessLevel> HISTORY_READ_WRITE = ImmutableSet.of(HistoryRead, HistoryWrite);\n+\n+    private final int value;\n+\n+    AccessLevel(int value) {\n+        this.value = value;\n+    }\n+\n+    public int getValue() {\n+        return value;\n+    }\n+\n+    public static int getMask(AccessLevel... levels) {\n+        short result = 0;\n+        for (AccessLevel level : levels) result |= level.value;\n+        return result;\n+    }\n+\n+    public static int getMask(Set<AccessLevel> levels) {\n+        int result = 0;\n+        for (AccessLevel level : levels) result |= level.value;\n+        return result;\n+    }\n+\n+    public static EnumSet<AccessLevel> fromMask(int accessLevel) {\n+        EnumSet<AccessLevel> e = EnumSet.noneOf(AccessLevel.class);\n+        for (AccessLevel al : values()) {\n+            if ((al.value & accessLevel) != 0) {\n+                e.add(al);\n+            }\n+        }\n+        return e;\n+    }\n+\n+    public static EnumSet<AccessLevel> fromMask(UByte accessLevel) {\n+        return fromMask(accessLevel.intValue());\n+    }\n+\n+}"
        },
        {
            "sha": "c058e6a0591b854cb242b5fac64fde8d9da28943",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/BasicProperty.java",
            "status": "added",
            "additions": 53,
            "deletions": 0,
            "changes": 53,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FBasicProperty.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FBasicProperty.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FBasicProperty.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public final class BasicProperty<T> implements Property<T> {\n+\n+    private final QualifiedName browseName;\n+    private final NodeId dataType;\n+    private final Integer valueRank;\n+    private final Class<T> javaType;\n+\n+    public BasicProperty(QualifiedName browseName, NodeId dataType, Integer valueRank, Class<T> javaType) {\n+        this.browseName = browseName;\n+        this.dataType = dataType;\n+        this.valueRank = valueRank;\n+        this.javaType = javaType;\n+    }\n+\n+    @Override\n+    public QualifiedName getBrowseName() {\n+        return browseName;\n+    }\n+\n+    @Override\n+    public NodeId getDataType() {\n+        return dataType;\n+    }\n+\n+    @Override\n+    public Integer getValueRank() {\n+        return valueRank;\n+    }\n+\n+    @Override\n+    public Class<T> getJavaType() {\n+        return javaType;\n+    }\n+\n+}"
        },
        {
            "sha": "095e36b85ce526aaf79486d609ebf5976bfd824d",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/Property.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FProperty.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FProperty.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FProperty.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface Property<T> {\n+\n+    QualifiedName getBrowseName();\n+\n+    NodeId getDataType();\n+\n+    Integer getValueRank();\n+\n+    Class<T> getJavaType();\n+\n+    default Optional<UInteger[]> getArrayDimensions() {\n+        return Optional.empty();\n+    }\n+\n+}"
        },
        {
            "sha": "455f77f62f36a92fb1619edfc4e85a6b950af0b9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/UaMandatory.java",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaMandatory.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaMandatory.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaMandatory.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target(ElementType.METHOD)\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface UaMandatory {\n+\n+    /**\n+     * @return The BrowseName of the annotated property.\n+     */\n+    String value();\n+\n+}"
        },
        {
            "sha": "4867a6f5672abb1c68ac6d9e34e98e5fdd8ad501",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/UaOptional.java",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaOptional.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaOptional.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2FUaOptional.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target(ElementType.METHOD)\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface UaOptional {\n+\n+    /**\n+     * @return the BrowseName of the annotated property.\n+     */\n+    String value();\n+\n+}"
        },
        {
            "sha": "67d769d4bf3bd7103387427657616aab2d7eea74",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AcknowledgeableConditionType.java",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAcknowledgeableConditionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAcknowledgeableConditionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAcknowledgeableConditionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface AcknowledgeableConditionType extends ConditionType {\n+\n+    LocalizedText getEnabledState();\n+\n+    TwoStateVariableType getEnabledStateNode();\n+\n+    void setEnabledState(LocalizedText value);\n+\n+    LocalizedText getAckedState();\n+\n+    TwoStateVariableType getAckedStateNode();\n+\n+    void setAckedState(LocalizedText value);\n+\n+    LocalizedText getConfirmedState();\n+\n+    TwoStateVariableType getConfirmedStateNode();\n+\n+    void setConfirmedState(LocalizedText value);\n+}"
        },
        {
            "sha": "8184aaf383aa6d55e8bcb85ce8d32066e1d0e843",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AddressSpaceFileType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAddressSpaceFileType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAddressSpaceFileType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAddressSpaceFileType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AddressSpaceFileType extends FileType {\n+\n+}"
        },
        {
            "sha": "f050074a751bc1ec686f059a036436ae51cc740c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AggregateConfigurationType.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateConfigurationType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateConfigurationType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateConfigurationType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public interface AggregateConfigurationType extends BaseObjectType {\n+\n+    Property<Boolean> TREAT_UNCERTAIN_AS_BAD = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TreatUncertainAsBad\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<UByte> PERCENT_DATA_BAD = new BasicProperty<>(\n+        QualifiedName.parse(\"0:PercentDataBad\"),\n+        NodeId.parse(\"ns=0;i=3\"),\n+        -1,\n+        UByte.class\n+    );\n+\n+    Property<UByte> PERCENT_DATA_GOOD = new BasicProperty<>(\n+        QualifiedName.parse(\"0:PercentDataGood\"),\n+        NodeId.parse(\"ns=0;i=3\"),\n+        -1,\n+        UByte.class\n+    );\n+\n+    Property<Boolean> USE_SLOPED_EXTRAPOLATION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UseSlopedExtrapolation\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Boolean getTreatUncertainAsBad();\n+\n+    PropertyType getTreatUncertainAsBadNode();\n+\n+    void setTreatUncertainAsBad(Boolean value);\n+\n+    UByte getPercentDataBad();\n+\n+    PropertyType getPercentDataBadNode();\n+\n+    void setPercentDataBad(UByte value);\n+\n+    UByte getPercentDataGood();\n+\n+    PropertyType getPercentDataGoodNode();\n+\n+    void setPercentDataGood(UByte value);\n+\n+    Boolean getUseSlopedExtrapolation();\n+\n+    PropertyType getUseSlopedExtrapolationNode();\n+\n+    void setUseSlopedExtrapolation(Boolean value);\n+}"
        },
        {
            "sha": "d0243ccdcb06020d5b6599b6df274f3ce5f42fec",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AggregateFunctionType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateFunctionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateFunctionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAggregateFunctionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AggregateFunctionType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "ce4026393043bfa40dab1b30bf5691b01884bc9e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AlarmConditionType.java",
            "status": "added",
            "additions": 84,
            "deletions": 0,
            "changes": 84,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAlarmConditionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAlarmConditionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAlarmConditionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AlarmConditionType extends AcknowledgeableConditionType {\n+\n+    Property<NodeId> INPUT_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InputNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<Boolean> SUPPRESSED_OR_SHELVED = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SuppressedOrShelved\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Double> MAX_TIME_SHELVED = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxTimeShelved\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    NodeId getInputNode();\n+\n+    PropertyType getInputNodeNode();\n+\n+    void setInputNode(NodeId value);\n+\n+    Boolean getSuppressedOrShelved();\n+\n+    PropertyType getSuppressedOrShelvedNode();\n+\n+    void setSuppressedOrShelved(Boolean value);\n+\n+    Double getMaxTimeShelved();\n+\n+    PropertyType getMaxTimeShelvedNode();\n+\n+    void setMaxTimeShelved(Double value);\n+\n+    ShelvedStateMachineType getShelvingStateNode();\n+\n+    LocalizedText getEnabledState();\n+\n+    TwoStateVariableType getEnabledStateNode();\n+\n+    void setEnabledState(LocalizedText value);\n+\n+    LocalizedText getActiveState();\n+\n+    TwoStateVariableType getActiveStateNode();\n+\n+    void setActiveState(LocalizedText value);\n+\n+    LocalizedText getSuppressedState();\n+\n+    TwoStateVariableType getSuppressedStateNode();\n+\n+    void setSuppressedState(LocalizedText value);\n+}"
        },
        {
            "sha": "c56499fe9d7c7d4cb10b3a224cd63e6844091c41",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ApplicationCertificateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationCertificateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationCertificateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationCertificateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ApplicationCertificateType extends CertificateType {\n+\n+}"
        },
        {
            "sha": "646317e1311065c813da0f161ef4a470148c16cf",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ApplicationRegistrationChangedAuditEventType.java",
            "status": "added",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationRegistrationChangedAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationRegistrationChangedAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FApplicationRegistrationChangedAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ApplicationRegistrationChangedAuditEventType extends AuditUpdateMethodEventType {\n+\n+    String getApplicationUri();\n+\n+    void setApplicationUri(String applicationUri);\n+\n+}"
        },
        {
            "sha": "493e5474aeda8d68e0f81f7d5460167fa9953ff9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditActivateSessionEventType.java",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditActivateSessionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditActivateSessionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditActivateSessionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+\n+public interface AuditActivateSessionEventType extends AuditSessionEventType {\n+\n+    Property<SignedSoftwareCertificate[]> CLIENT_SOFTWARE_CERTIFICATES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientSoftwareCertificates\"),\n+        NodeId.parse(\"ns=0;i=344\"),\n+        1,\n+        SignedSoftwareCertificate[].class\n+    );\n+\n+    Property<UserIdentityToken> USER_IDENTITY_TOKEN = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UserIdentityToken\"),\n+        NodeId.parse(\"ns=0;i=316\"),\n+        -1,\n+        UserIdentityToken.class\n+    );\n+\n+    Property<String> SECURE_CHANNEL_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SecureChannelId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    SignedSoftwareCertificate[] getClientSoftwareCertificates();\n+\n+    PropertyType getClientSoftwareCertificatesNode();\n+\n+    void setClientSoftwareCertificates(SignedSoftwareCertificate[] value);\n+\n+    UserIdentityToken getUserIdentityToken();\n+\n+    PropertyType getUserIdentityTokenNode();\n+\n+    void setUserIdentityToken(UserIdentityToken value);\n+\n+    String getSecureChannelId();\n+\n+    PropertyType getSecureChannelIdNode();\n+\n+    void setSecureChannelId(String value);\n+}"
        },
        {
            "sha": "9c425bc8eb812522e2dd276d23b73b2fc0b4cb34",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditAddNodesEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddNodesEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddNodesEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddNodesEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesItem;\n+\n+public interface AuditAddNodesEventType extends AuditNodeManagementEventType {\n+\n+    Property<AddNodesItem[]> NODES_TO_ADD = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NodesToAdd\"),\n+        NodeId.parse(\"ns=0;i=376\"),\n+        1,\n+        AddNodesItem[].class\n+    );\n+\n+    AddNodesItem[] getNodesToAdd();\n+\n+    PropertyType getNodesToAddNode();\n+\n+    void setNodesToAdd(AddNodesItem[] value);\n+}"
        },
        {
            "sha": "41515de024ee8f2649c945ad969d09f825bbbf1f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditAddReferencesEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddReferencesEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddReferencesEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditAddReferencesEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesItem;\n+\n+public interface AuditAddReferencesEventType extends AuditNodeManagementEventType {\n+\n+    Property<AddReferencesItem[]> REFERENCES_TO_ADD = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReferencesToAdd\"),\n+        NodeId.parse(\"ns=0;i=379\"),\n+        1,\n+        AddReferencesItem[].class\n+    );\n+\n+    AddReferencesItem[] getReferencesToAdd();\n+\n+    PropertyType getReferencesToAddNode();\n+\n+    void setReferencesToAdd(AddReferencesItem[] value);\n+}"
        },
        {
            "sha": "fac5b087fe5db6280a17dd9e667dfe3e662af6ba",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCancelEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCancelEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCancelEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCancelEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface AuditCancelEventType extends AuditSessionEventType {\n+\n+    Property<UInteger> REQUEST_HANDLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RequestHandle\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    UInteger getRequestHandle();\n+\n+    PropertyType getRequestHandleNode();\n+\n+    void setRequestHandle(UInteger value);\n+}"
        },
        {
            "sha": "d4bf6ae0647d4f678b917f90e90fda7e524507cb",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateDataMismatchEventType.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateDataMismatchEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateDataMismatchEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateDataMismatchEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditCertificateDataMismatchEventType extends AuditCertificateEventType {\n+\n+    Property<String> INVALID_HOSTNAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InvalidHostname\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<String> INVALID_URI = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InvalidUri\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    String getInvalidHostname();\n+\n+    PropertyType getInvalidHostnameNode();\n+\n+    void setInvalidHostname(String value);\n+\n+    String getInvalidUri();\n+\n+    PropertyType getInvalidUriNode();\n+\n+    void setInvalidUri(String value);\n+}"
        },
        {
            "sha": "cb4e1b9d867efdacb4302f4e1ab07a8c615ae5e3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditCertificateEventType extends AuditSecurityEventType {\n+\n+    Property<ByteString> CERTIFICATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Certificate\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    ByteString getCertificate();\n+\n+    PropertyType getCertificateNode();\n+\n+    void setCertificate(ByteString value);\n+}"
        },
        {
            "sha": "a78d11b19883539d94b17a62613bb08c402a9acf",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateExpiredEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateExpiredEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateExpiredEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateExpiredEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditCertificateExpiredEventType extends AuditCertificateEventType {\n+\n+}"
        },
        {
            "sha": "109e30f23f5339ee07714a2025831727f37a055e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateInvalidEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateInvalidEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateInvalidEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateInvalidEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditCertificateInvalidEventType extends AuditCertificateEventType {\n+\n+}"
        },
        {
            "sha": "cd59f7b47ba55f62a6f1ee38096487061c4d750d",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateMismatchEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateMismatchEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateMismatchEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateMismatchEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditCertificateMismatchEventType extends AuditCertificateEventType {\n+\n+}"
        },
        {
            "sha": "25010d2fcbb4affd8926725564670ec419111fc5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateRevokedEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateRevokedEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateRevokedEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateRevokedEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditCertificateRevokedEventType extends AuditCertificateEventType {\n+\n+}"
        },
        {
            "sha": "72ab5b84a6d508658a7213bd58807f55dfd5d7e5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCertificateUntrustedEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateUntrustedEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateUntrustedEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCertificateUntrustedEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditCertificateUntrustedEventType extends AuditCertificateEventType {\n+\n+}"
        },
        {
            "sha": "750319dc9a68919955860dec90a5b87b19a8520a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditChannelEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditChannelEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditChannelEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditChannelEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditChannelEventType extends AuditSecurityEventType {\n+\n+    Property<String> SECURE_CHANNEL_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SecureChannelId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    String getSecureChannelId();\n+\n+    PropertyType getSecureChannelIdNode();\n+\n+    void setSecureChannelId(String value);\n+}"
        },
        {
            "sha": "d84405e32dad66d497037c30aa76871f7c7c4680",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionAcknowledgeEventType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionAcknowledgeEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionAcknowledgeEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionAcknowledgeEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditConditionAcknowledgeEventType extends AuditConditionEventType {\n+\n+    Property<ByteString> EVENT_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventId\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<LocalizedText> COMMENT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Comment\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    ByteString getEventId();\n+\n+    PropertyType getEventIdNode();\n+\n+    void setEventId(ByteString value);\n+\n+    LocalizedText getComment();\n+\n+    PropertyType getCommentNode();\n+\n+    void setComment(LocalizedText value);\n+}"
        },
        {
            "sha": "a9f37ec97a7435c7baa2a9e101f0b280dd65b11f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionCommentEventType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionCommentEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionCommentEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionCommentEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditConditionCommentEventType extends AuditConditionEventType {\n+\n+    Property<ByteString> EVENT_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventId\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<LocalizedText> COMMENT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Comment\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    ByteString getEventId();\n+\n+    PropertyType getEventIdNode();\n+\n+    void setEventId(ByteString value);\n+\n+    LocalizedText getComment();\n+\n+    PropertyType getCommentNode();\n+\n+    void setComment(LocalizedText value);\n+}"
        },
        {
            "sha": "1b4663d38b69e94b56589485d85178633ba6abf9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionConfirmEventType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionConfirmEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionConfirmEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionConfirmEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditConditionConfirmEventType extends AuditConditionEventType {\n+\n+    Property<ByteString> EVENT_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventId\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<LocalizedText> COMMENT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Comment\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    ByteString getEventId();\n+\n+    PropertyType getEventIdNode();\n+\n+    void setEventId(ByteString value);\n+\n+    LocalizedText getComment();\n+\n+    PropertyType getCommentNode();\n+\n+    void setComment(LocalizedText value);\n+}"
        },
        {
            "sha": "300f1812031c9bad32ea155f913cee7d122998ad",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionEnableEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEnableEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEnableEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEnableEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditConditionEnableEventType extends AuditConditionEventType {\n+\n+}"
        },
        {
            "sha": "ef4a332e86640e501c926e5bc26a7ad671ab5eea",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditConditionEventType extends AuditUpdateMethodEventType {\n+\n+}"
        },
        {
            "sha": "8edf823d114cac2c8d738634fd22d3fa0a0ec8df",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionRespondEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionRespondEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionRespondEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionRespondEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditConditionRespondEventType extends AuditConditionEventType {\n+\n+    Property<Integer> SELECTED_RESPONSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SelectedResponse\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    Integer getSelectedResponse();\n+\n+    PropertyType getSelectedResponseNode();\n+\n+    void setSelectedResponse(Integer value);\n+}"
        },
        {
            "sha": "a58e5f58feb817667d1901494c6c3314ec3fdd35",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditConditionShelvingEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionShelvingEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionShelvingEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditConditionShelvingEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditConditionShelvingEventType extends AuditConditionEventType {\n+\n+    Property<Double> SHELVING_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ShelvingTime\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Double getShelvingTime();\n+\n+    PropertyType getShelvingTimeNode();\n+\n+    void setShelvingTime(Double value);\n+}"
        },
        {
            "sha": "93f48cef093f13bbc4069c16db13c78a1f892f58",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditCreateSessionEventType.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCreateSessionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCreateSessionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditCreateSessionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditCreateSessionEventType extends AuditSessionEventType {\n+\n+    Property<String> SECURE_CHANNEL_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SecureChannelId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<ByteString> CLIENT_CERTIFICATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientCertificate\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<String> CLIENT_CERTIFICATE_THUMBPRINT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientCertificateThumbprint\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<Double> REVISED_SESSION_TIMEOUT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RevisedSessionTimeout\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    String getSecureChannelId();\n+\n+    PropertyType getSecureChannelIdNode();\n+\n+    void setSecureChannelId(String value);\n+\n+    ByteString getClientCertificate();\n+\n+    PropertyType getClientCertificateNode();\n+\n+    void setClientCertificate(ByteString value);\n+\n+    String getClientCertificateThumbprint();\n+\n+    PropertyType getClientCertificateThumbprintNode();\n+\n+    void setClientCertificateThumbprint(String value);\n+\n+    Double getRevisedSessionTimeout();\n+\n+    PropertyType getRevisedSessionTimeoutNode();\n+\n+    void setRevisedSessionTimeout(Double value);\n+}"
        },
        {
            "sha": "cefa01d40cda34617e5386856c3c28d8e4e93718",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditDeleteNodesEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteNodesEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteNodesEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteNodesEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesItem;\n+\n+public interface AuditDeleteNodesEventType extends AuditNodeManagementEventType {\n+\n+    Property<DeleteNodesItem[]> NODES_TO_DELETE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NodesToDelete\"),\n+        NodeId.parse(\"ns=0;i=382\"),\n+        1,\n+        DeleteNodesItem[].class\n+    );\n+\n+    DeleteNodesItem[] getNodesToDelete();\n+\n+    PropertyType getNodesToDeleteNode();\n+\n+    void setNodesToDelete(DeleteNodesItem[] value);\n+}"
        },
        {
            "sha": "7838e2c064e6cc5dfacf1d3ed8cd298e4feae890",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditDeleteReferencesEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteReferencesEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteReferencesEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditDeleteReferencesEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesItem;\n+\n+public interface AuditDeleteReferencesEventType extends AuditNodeManagementEventType {\n+\n+    Property<DeleteReferencesItem[]> REFERENCES_TO_DELETE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReferencesToDelete\"),\n+        NodeId.parse(\"ns=0;i=385\"),\n+        1,\n+        DeleteReferencesItem[].class\n+    );\n+\n+    DeleteReferencesItem[] getReferencesToDelete();\n+\n+    PropertyType getReferencesToDeleteNode();\n+\n+    void setReferencesToDelete(DeleteReferencesItem[] value);\n+}"
        },
        {
            "sha": "3451c805a1d55fad0bc019129e5772d2c83a6268",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditEventType.java",
            "status": "added",
            "additions": 89,
            "deletions": 0,
            "changes": 89,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditEventType extends BaseEventType {\n+\n+    Property<DateTime> ACTION_TIME_STAMP = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ActionTimeStamp\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<Boolean> STATUS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Status\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<String> SERVER_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<String> CLIENT_AUDIT_ENTRY_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientAuditEntryId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<String> CLIENT_USER_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientUserId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    DateTime getActionTimeStamp();\n+\n+    PropertyType getActionTimeStampNode();\n+\n+    void setActionTimeStamp(DateTime value);\n+\n+    Boolean getStatus();\n+\n+    PropertyType getStatusNode();\n+\n+    void setStatus(Boolean value);\n+\n+    String getServerId();\n+\n+    PropertyType getServerIdNode();\n+\n+    void setServerId(String value);\n+\n+    String getClientAuditEntryId();\n+\n+    PropertyType getClientAuditEntryIdNode();\n+\n+    void setClientAuditEntryId(String value);\n+\n+    String getClientUserId();\n+\n+    PropertyType getClientUserIdNode();\n+\n+    void setClientUserId(String value);\n+}"
        },
        {
            "sha": "1ed11fade87e853f234ecb31cc4beb78acf50773",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryAtTimeDeleteEventType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryAtTimeDeleteEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryAtTimeDeleteEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryAtTimeDeleteEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditHistoryAtTimeDeleteEventType extends AuditHistoryDeleteEventType {\n+\n+    Property<DateTime[]> REQ_TIMES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReqTimes\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        1,\n+        DateTime[].class\n+    );\n+\n+    Property<DataValue[]> OLD_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValues\"),\n+        NodeId.parse(\"ns=0;i=23\"),\n+        1,\n+        DataValue[].class\n+    );\n+\n+    DateTime[] getReqTimes();\n+\n+    PropertyType getReqTimesNode();\n+\n+    void setReqTimes(DateTime[] value);\n+\n+    DataValue[] getOldValues();\n+\n+    PropertyType getOldValuesNode();\n+\n+    void setOldValues(DataValue[] value);\n+}"
        },
        {
            "sha": "e09adf2be404773c1970471fb8f024e19298cf2d",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryDeleteEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryDeleteEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryDeleteEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryDeleteEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditHistoryDeleteEventType extends AuditHistoryUpdateEventType {\n+\n+    Property<NodeId> UPDATED_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UpdatedNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getUpdatedNode();\n+\n+    PropertyType getUpdatedNodeNode();\n+\n+    void setUpdatedNode(NodeId value);\n+}"
        },
        {
            "sha": "d7ed860306fbd1d497f498f22a5b9ef33849a02b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryEventDeleteEventType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventDeleteEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventDeleteEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventDeleteEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryEventFieldList;\n+\n+public interface AuditHistoryEventDeleteEventType extends AuditHistoryDeleteEventType {\n+\n+    Property<ByteString[]> EVENT_IDS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventIds\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        1,\n+        ByteString[].class\n+    );\n+\n+    Property<HistoryEventFieldList> OLD_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValues\"),\n+        NodeId.parse(\"ns=0;i=920\"),\n+        -1,\n+        HistoryEventFieldList.class\n+    );\n+\n+    ByteString[] getEventIds();\n+\n+    PropertyType getEventIdsNode();\n+\n+    void setEventIds(ByteString[] value);\n+\n+    HistoryEventFieldList getOldValues();\n+\n+    PropertyType getOldValuesNode();\n+\n+    void setOldValues(HistoryEventFieldList value);\n+}"
        },
        {
            "sha": "3a66e59b18631bdb9f1ac39268917cdc87c09b2c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryEventUpdateEventType.java",
            "status": "added",
            "additions": 91,
            "deletions": 0,
            "changes": 91,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventUpdateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventUpdateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryEventUpdateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.PerformUpdateType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EventFilter;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryEventFieldList;\n+\n+public interface AuditHistoryEventUpdateEventType extends AuditHistoryUpdateEventType {\n+\n+    Property<NodeId> UPDATED_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UpdatedNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<PerformUpdateType> PERFORM_INSERT_REPLACE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:PerformInsertReplace\"),\n+        NodeId.parse(\"ns=0;i=11293\"),\n+        -1,\n+        PerformUpdateType.class\n+    );\n+\n+    Property<EventFilter> FILTER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Filter\"),\n+        NodeId.parse(\"ns=0;i=725\"),\n+        -1,\n+        EventFilter.class\n+    );\n+\n+    Property<HistoryEventFieldList[]> NEW_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NewValues\"),\n+        NodeId.parse(\"ns=0;i=920\"),\n+        1,\n+        HistoryEventFieldList[].class\n+    );\n+\n+    Property<HistoryEventFieldList[]> OLD_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValues\"),\n+        NodeId.parse(\"ns=0;i=920\"),\n+        1,\n+        HistoryEventFieldList[].class\n+    );\n+\n+    NodeId getUpdatedNode();\n+\n+    PropertyType getUpdatedNodeNode();\n+\n+    void setUpdatedNode(NodeId value);\n+\n+    PerformUpdateType getPerformInsertReplace();\n+\n+    PropertyType getPerformInsertReplaceNode();\n+\n+    void setPerformInsertReplace(PerformUpdateType value);\n+\n+    EventFilter getFilter();\n+\n+    PropertyType getFilterNode();\n+\n+    void setFilter(EventFilter value);\n+\n+    HistoryEventFieldList[] getNewValues();\n+\n+    PropertyType getNewValuesNode();\n+\n+    void setNewValues(HistoryEventFieldList[] value);\n+\n+    HistoryEventFieldList[] getOldValues();\n+\n+    PropertyType getOldValuesNode();\n+\n+    void setOldValues(HistoryEventFieldList[] value);\n+}"
        },
        {
            "sha": "23703c4ece6e8cbdf294e46bbd08b097d37a5d04",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryRawModifyDeleteEventType.java",
            "status": "added",
            "additions": 77,
            "deletions": 0,
            "changes": 77,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryRawModifyDeleteEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryRawModifyDeleteEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryRawModifyDeleteEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditHistoryRawModifyDeleteEventType extends AuditHistoryDeleteEventType {\n+\n+    Property<Boolean> IS_DELETE_MODIFIED = new BasicProperty<>(\n+        QualifiedName.parse(\"0:IsDeleteModified\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<DateTime> START_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StartTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> END_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EndTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DataValue[]> OLD_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValues\"),\n+        NodeId.parse(\"ns=0;i=23\"),\n+        1,\n+        DataValue[].class\n+    );\n+\n+    Boolean getIsDeleteModified();\n+\n+    PropertyType getIsDeleteModifiedNode();\n+\n+    void setIsDeleteModified(Boolean value);\n+\n+    DateTime getStartTime();\n+\n+    PropertyType getStartTimeNode();\n+\n+    void setStartTime(DateTime value);\n+\n+    DateTime getEndTime();\n+\n+    PropertyType getEndTimeNode();\n+\n+    void setEndTime(DateTime value);\n+\n+    DataValue[] getOldValues();\n+\n+    PropertyType getOldValuesNode();\n+\n+    void setOldValues(DataValue[] value);\n+}"
        },
        {
            "sha": "2f1c7a213f2c70b9c494f92321c9d3c984d32d89",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryUpdateEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryUpdateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryUpdateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryUpdateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditHistoryUpdateEventType extends AuditUpdateEventType {\n+\n+    Property<NodeId> PARAMETER_DATA_TYPE_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ParameterDataTypeId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getParameterDataTypeId();\n+\n+    PropertyType getParameterDataTypeIdNode();\n+\n+    void setParameterDataTypeId(NodeId value);\n+}"
        },
        {
            "sha": "d899e805feb4c8f7869f79531cd2fbd41f272610",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditHistoryValueUpdateEventType.java",
            "status": "added",
            "additions": 77,
            "deletions": 0,
            "changes": 77,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryValueUpdateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryValueUpdateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditHistoryValueUpdateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.PerformUpdateType;\n+\n+public interface AuditHistoryValueUpdateEventType extends AuditHistoryUpdateEventType {\n+\n+    Property<NodeId> UPDATED_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UpdatedNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<PerformUpdateType> PERFORM_INSERT_REPLACE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:PerformInsertReplace\"),\n+        NodeId.parse(\"ns=0;i=11293\"),\n+        -1,\n+        PerformUpdateType.class\n+    );\n+\n+    Property<DataValue[]> NEW_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NewValues\"),\n+        NodeId.parse(\"ns=0;i=23\"),\n+        1,\n+        DataValue[].class\n+    );\n+\n+    Property<DataValue[]> OLD_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValues\"),\n+        NodeId.parse(\"ns=0;i=23\"),\n+        1,\n+        DataValue[].class\n+    );\n+\n+    NodeId getUpdatedNode();\n+\n+    PropertyType getUpdatedNodeNode();\n+\n+    void setUpdatedNode(NodeId value);\n+\n+    PerformUpdateType getPerformInsertReplace();\n+\n+    PropertyType getPerformInsertReplaceNode();\n+\n+    void setPerformInsertReplace(PerformUpdateType value);\n+\n+    DataValue[] getNewValues();\n+\n+    PropertyType getNewValuesNode();\n+\n+    void setNewValues(DataValue[] value);\n+\n+    DataValue[] getOldValues();\n+\n+    PropertyType getOldValuesNode();\n+\n+    void setOldValues(DataValue[] value);\n+}"
        },
        {
            "sha": "eadfe83fd5559dfb7a70f7968195035c5669854a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditNodeManagementEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditNodeManagementEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditNodeManagementEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditNodeManagementEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditNodeManagementEventType extends AuditEventType {\n+\n+}"
        },
        {
            "sha": "d8bc2bef42e6f62c1e657612141352a3e956563b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditOpenSecureChannelEventType.java",
            "status": "added",
            "additions": 104,
            "deletions": 0,
            "changes": 104,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditOpenSecureChannelEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditOpenSecureChannelEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditOpenSecureChannelEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MessageSecurityMode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.SecurityTokenRequestType;\n+\n+public interface AuditOpenSecureChannelEventType extends AuditChannelEventType {\n+\n+    Property<ByteString> CLIENT_CERTIFICATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientCertificate\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<String> CLIENT_CERTIFICATE_THUMBPRINT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientCertificateThumbprint\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<SecurityTokenRequestType> REQUEST_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RequestType\"),\n+        NodeId.parse(\"ns=0;i=315\"),\n+        -1,\n+        SecurityTokenRequestType.class\n+    );\n+\n+    Property<String> SECURITY_POLICY_URI = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SecurityPolicyUri\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<MessageSecurityMode> SECURITY_MODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SecurityMode\"),\n+        NodeId.parse(\"ns=0;i=302\"),\n+        -1,\n+        MessageSecurityMode.class\n+    );\n+\n+    Property<Double> REQUESTED_LIFETIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RequestedLifetime\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    ByteString getClientCertificate();\n+\n+    PropertyType getClientCertificateNode();\n+\n+    void setClientCertificate(ByteString value);\n+\n+    String getClientCertificateThumbprint();\n+\n+    PropertyType getClientCertificateThumbprintNode();\n+\n+    void setClientCertificateThumbprint(String value);\n+\n+    SecurityTokenRequestType getRequestType();\n+\n+    PropertyType getRequestTypeNode();\n+\n+    void setRequestType(SecurityTokenRequestType value);\n+\n+    String getSecurityPolicyUri();\n+\n+    PropertyType getSecurityPolicyUriNode();\n+\n+    void setSecurityPolicyUri(String value);\n+\n+    MessageSecurityMode getSecurityMode();\n+\n+    PropertyType getSecurityModeNode();\n+\n+    void setSecurityMode(MessageSecurityMode value);\n+\n+    Double getRequestedLifetime();\n+\n+    PropertyType getRequestedLifetimeNode();\n+\n+    void setRequestedLifetime(Double value);\n+}"
        },
        {
            "sha": "65180071b171e1799eaceeb99414d470ac5e913b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditProgramTransitionEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditProgramTransitionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditProgramTransitionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditProgramTransitionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface AuditProgramTransitionEventType extends AuditUpdateStateEventType {\n+\n+    Property<UInteger> TRANSITION_NUMBER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TransitionNumber\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    UInteger getTransitionNumber();\n+\n+    PropertyType getTransitionNumberNode();\n+\n+    void setTransitionNumber(UInteger value);\n+}"
        },
        {
            "sha": "62a24d067de4991e141c4270cd381cc88ebcc318",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditSecurityEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSecurityEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSecurityEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSecurityEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditSecurityEventType extends AuditEventType {\n+\n+}"
        },
        {
            "sha": "01c4977feb4a3effeae9e600c877d964786d7c61",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditSessionEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSessionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSessionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditSessionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditSessionEventType extends AuditSecurityEventType {\n+\n+    Property<NodeId> SESSION_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SessionId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getSessionId();\n+\n+    PropertyType getSessionIdNode();\n+\n+    void setSessionId(NodeId value);\n+}"
        },
        {
            "sha": "e902326488562ffe05c99348b6ba1688ae0dfd2b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditUpdateEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface AuditUpdateEventType extends AuditEventType {\n+\n+}"
        },
        {
            "sha": "c3da332780d9e400b0c279dc8ece66d62444d9bd",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditUpdateMethodEventType.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateMethodEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateMethodEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateMethodEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditUpdateMethodEventType extends AuditEventType {\n+\n+    Property<NodeId> METHOD_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MethodId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<Object[]> INPUT_ARGUMENTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InputArguments\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        1,\n+        Object[].class\n+    );\n+\n+    NodeId getMethodId();\n+\n+    PropertyType getMethodIdNode();\n+\n+    void setMethodId(NodeId value);\n+\n+    Object[] getInputArguments();\n+\n+    PropertyType getInputArgumentsNode();\n+\n+    void setInputArguments(Object[] value);\n+}"
        },
        {
            "sha": "6977da4e8aa789fe43523288dd4be239378bbc56",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditUpdateStateEventType.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateStateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateStateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUpdateStateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditUpdateStateEventType extends AuditUpdateMethodEventType {\n+\n+    Property<Object> OLD_STATE_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldStateId\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Property<Object> NEW_STATE_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NewStateId\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Object getOldStateId();\n+\n+    PropertyType getOldStateIdNode();\n+\n+    void setOldStateId(Object value);\n+\n+    Object getNewStateId();\n+\n+    PropertyType getNewStateIdNode();\n+\n+    void setNewStateId(Object value);\n+}"
        },
        {
            "sha": "b0eb7f733a77ac795c3d052e15b06447c9d50653",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditUrlMismatchEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUrlMismatchEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUrlMismatchEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditUrlMismatchEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface AuditUrlMismatchEventType extends AuditCreateSessionEventType {\n+\n+    Property<String> ENDPOINT_URL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EndpointUrl\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    String getEndpointUrl();\n+\n+    PropertyType getEndpointUrlNode();\n+\n+    void setEndpointUrl(String value);\n+}"
        },
        {
            "sha": "928cc535e77ef2b3b48e40464e14643a7f19bca9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/AuditWriteUpdateEventType.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditWriteUpdateEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditWriteUpdateEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FAuditWriteUpdateEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface AuditWriteUpdateEventType extends AuditUpdateEventType {\n+\n+    Property<UInteger> ATTRIBUTE_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AttributeId\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<String> INDEX_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:IndexRange\"),\n+        NodeId.parse(\"ns=0;i=291\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<Object> OLD_VALUE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OldValue\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Property<Object> NEW_VALUE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NewValue\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    UInteger getAttributeId();\n+\n+    PropertyType getAttributeIdNode();\n+\n+    void setAttributeId(UInteger value);\n+\n+    String getIndexRange();\n+\n+    PropertyType getIndexRangeNode();\n+\n+    void setIndexRange(String value);\n+\n+    Object getOldValue();\n+\n+    PropertyType getOldValueNode();\n+\n+    void setOldValue(Object value);\n+\n+    Object getNewValue();\n+\n+    PropertyType getNewValueNode();\n+\n+    void setNewValue(Object value);\n+}"
        },
        {
            "sha": "80ebc2b1142a2f3fe56838453a15d7797db34b22",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/BaseConditionClassType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseConditionClassType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseConditionClassType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseConditionClassType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface BaseConditionClassType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "1b5cb54b189d2b6ed4ef474cec5788532750b2ba",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/BaseEventType.java",
            "status": "added",
            "additions": 145,
            "deletions": 0,
            "changes": 145,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TimeZoneDataType;\n+\n+public interface BaseEventType extends BaseObjectType {\n+\n+    Property<ByteString> EVENT_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventId\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    Property<NodeId> EVENT_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EventType\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<NodeId> SOURCE_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SourceNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<String> SOURCE_NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SourceName\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<DateTime> TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Time\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> RECEIVE_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReceiveTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<TimeZoneDataType> LOCAL_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LocalTime\"),\n+        NodeId.parse(\"ns=0;i=8912\"),\n+        -1,\n+        TimeZoneDataType.class\n+    );\n+\n+    Property<LocalizedText> MESSAGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Message\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<UShort> SEVERITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Severity\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    ByteString getEventId();\n+\n+    PropertyType getEventIdNode();\n+\n+    void setEventId(ByteString value);\n+\n+    NodeId getEventType();\n+\n+    PropertyType getEventTypeNode();\n+\n+    void setEventType(NodeId value);\n+\n+    NodeId getSourceNode();\n+\n+    PropertyType getSourceNodeNode();\n+\n+    void setSourceNode(NodeId value);\n+\n+    String getSourceName();\n+\n+    PropertyType getSourceNameNode();\n+\n+    void setSourceName(String value);\n+\n+    DateTime getTime();\n+\n+    PropertyType getTimeNode();\n+\n+    void setTime(DateTime value);\n+\n+    DateTime getReceiveTime();\n+\n+    PropertyType getReceiveTimeNode();\n+\n+    void setReceiveTime(DateTime value);\n+\n+    TimeZoneDataType getLocalTime();\n+\n+    PropertyType getLocalTimeNode();\n+\n+    void setLocalTime(TimeZoneDataType value);\n+\n+    LocalizedText getMessage();\n+\n+    PropertyType getMessageNode();\n+\n+    void setMessage(LocalizedText value);\n+\n+    UShort getSeverity();\n+\n+    PropertyType getSeverityNode();\n+\n+    void setSeverity(UShort value);\n+}"
        },
        {
            "sha": "b29efb35b5464f981679c3ce85283c15c4a60d82",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/BaseModelChangeEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseModelChangeEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseModelChangeEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseModelChangeEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface BaseModelChangeEventType extends BaseEventType {\n+\n+}"
        },
        {
            "sha": "0aab1065ca1823a185d29dc92377ddfe225216cd",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/BaseObjectType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseObjectType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseObjectType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FBaseObjectType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface BaseObjectType {\n+\n+}"
        },
        {
            "sha": "45047c2abc34650b19e1ce988ef05e16de719ee9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateDeliveredAuditEventType.java",
            "status": "added",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDeliveredAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDeliveredAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDeliveredAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface CertificateDeliveredAuditEventType extends AuditUpdateMethodEventType {\n+\n+    String getApplicationUri();\n+\n+    void setApplicationUri(String applicationUri);\n+\n+}"
        },
        {
            "sha": "530e75a862a6e89d3c931f6ee63be036a9393e39",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateDirectoryType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDirectoryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDirectoryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateDirectoryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface CertificateDirectoryType extends DirectoryType {\n+\n+\n+}"
        },
        {
            "sha": "7abed86029001fa2ef8acf0cd27ca1cc7d07a48d",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateExpirationAlarmType.java",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateExpirationAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateExpirationAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateExpirationAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface CertificateExpirationAlarmType extends SystemOffNormalAlarmType {\n+\n+    Property<DateTime> EXPIRATION_DATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ExpirationDate\"),\n+        NodeId.parse(\"ns=0;i=13\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<NodeId> CERTIFICATE_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CertificateType\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<ByteString> CERTIFICATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Certificate\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+    DateTime getExpirationDate();\n+\n+    PropertyType getExpirationDateNode();\n+\n+    void setExpirationDate(DateTime value);\n+\n+    NodeId getCertificateType();\n+\n+    PropertyType getCertificateTypeNode();\n+\n+    void setCertificateType(NodeId value);\n+\n+    ByteString getCertificate();\n+\n+    PropertyType getCertificateNode();\n+\n+    void setCertificate(ByteString value);\n+}"
        },
        {
            "sha": "50bc483cc2c9cc0a8d4eb74d6aa3bef29d1353b4",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateGroupFolderType.java",
            "status": "added",
            "additions": 24,
            "deletions": 0,
            "changes": 24,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupFolderType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupFolderType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupFolderType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface CertificateGroupFolderType extends FolderType {\n+\n+    CertificateGroupType getDefaultApplicationGroupNode();\n+\n+    CertificateGroupType getDefaultHttpsGroupNode();\n+\n+    CertificateGroupType getDefaultUserTokenGroupNode();\n+\n+}"
        },
        {
            "sha": "8bfd7a01501801cf92828975211aeaeff95189b1",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateGroupType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateGroupType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface CertificateGroupType extends BaseObjectType {\n+\n+    Property<NodeId[]> CERTIFICATE_TYPES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CertificateTypes\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        1,\n+        NodeId[].class\n+    );\n+\n+    NodeId[] getCertificateTypes();\n+\n+    PropertyType getCertificateTypesNode();\n+\n+    void setCertificateTypes(NodeId[] value);\n+\n+    TrustListType getTrustListNode();\n+\n+}"
        },
        {
            "sha": "afe4c144894757081e2ed3fdc8a8a57fa3b57f0f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateRequestedAuditEventType.java",
            "status": "added",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateRequestedAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateRequestedAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateRequestedAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface CertificateRequestedAuditEventType extends AuditUpdateMethodEventType {\n+\n+    String getApplicationUri();\n+\n+    void setApplicationUri(String applicationUri);\n+\n+}"
        },
        {
            "sha": "faaef28d80ba00ddd601328e48ddb8aa303d3bc1",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface CertificateType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "f12cd5a5913c94ae73621ceacc3a04e98d03660b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/CertificateUpdatedAuditEventType.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateUpdatedAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateUpdatedAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FCertificateUpdatedAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface CertificateUpdatedAuditEventType extends AuditUpdateMethodEventType {\n+\n+    Property<NodeId> CERTIFICATE_GROUP = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CertificateGroup\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<NodeId> CERTIFICATE_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CertificateType\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getCertificateGroup();\n+\n+    PropertyType getCertificateGroupNode();\n+\n+    void setCertificateGroup(NodeId value);\n+\n+    NodeId getCertificateType();\n+\n+    PropertyType getCertificateTypeNode();\n+\n+    void setCertificateType(NodeId value);\n+}"
        },
        {
            "sha": "c6f92ad5731aaf85a3d5a2aa4bb844c499948627",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ConditionType.java",
            "status": "added",
            "additions": 130,
            "deletions": 0,
            "changes": 130,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FConditionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FConditionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FConditionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.ConditionVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+public interface ConditionType extends BaseEventType {\n+\n+    Property<NodeId> CONDITION_CLASS_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ConditionClassId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<LocalizedText> CONDITION_CLASS_NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ConditionClassName\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<String> CONDITION_NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ConditionName\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<NodeId> BRANCH_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:BranchId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<Boolean> RETAIN = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Retain\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<String> CLIENT_USER_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ClientUserId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    NodeId getConditionClassId();\n+\n+    PropertyType getConditionClassIdNode();\n+\n+    void setConditionClassId(NodeId value);\n+\n+    LocalizedText getConditionClassName();\n+\n+    PropertyType getConditionClassNameNode();\n+\n+    void setConditionClassName(LocalizedText value);\n+\n+    String getConditionName();\n+\n+    PropertyType getConditionNameNode();\n+\n+    void setConditionName(String value);\n+\n+    NodeId getBranchId();\n+\n+    PropertyType getBranchIdNode();\n+\n+    void setBranchId(NodeId value);\n+\n+    Boolean getRetain();\n+\n+    PropertyType getRetainNode();\n+\n+    void setRetain(Boolean value);\n+\n+    String getClientUserId();\n+\n+    PropertyType getClientUserIdNode();\n+\n+    void setClientUserId(String value);\n+\n+    LocalizedText getEnabledState();\n+\n+    TwoStateVariableType getEnabledStateNode();\n+\n+    void setEnabledState(LocalizedText value);\n+\n+    StatusCode getQuality();\n+\n+    ConditionVariableType getQualityNode();\n+\n+    void setQuality(StatusCode value);\n+\n+    UShort getLastSeverity();\n+\n+    ConditionVariableType getLastSeverityNode();\n+\n+    void setLastSeverity(UShort value);\n+\n+    LocalizedText getComment();\n+\n+    ConditionVariableType getCommentNode();\n+\n+    void setComment(LocalizedText value);\n+}"
        },
        {
            "sha": "0330a7183cfcf4866d15b78c6a6777495d0135e5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DataTypeEncodingType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeEncodingType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeEncodingType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeEncodingType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface DataTypeEncodingType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "db8a9e0048ca5fc2e64d631ff9ca8ce5c3ea2d8c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DataTypeSystemType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeSystemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeSystemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDataTypeSystemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface DataTypeSystemType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "3a41a7fb5193f5dffb497790ada9fa4f8a28ff64",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DeviceFailureEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDeviceFailureEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDeviceFailureEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDeviceFailureEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface DeviceFailureEventType extends SystemEventType {\n+\n+}"
        },
        {
            "sha": "2145034bd83914860a3882bc76ae72b9d62a9c73",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DialogConditionType.java",
            "status": "added",
            "additions": 115,
            "deletions": 0,
            "changes": 115,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDialogConditionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDialogConditionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDialogConditionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface DialogConditionType extends ConditionType {\n+\n+    Property<LocalizedText> PROMPT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Prompt\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<LocalizedText[]> RESPONSE_OPTION_SET = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ResponseOptionSet\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        1,\n+        LocalizedText[].class\n+    );\n+\n+    Property<Integer> DEFAULT_RESPONSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DefaultResponse\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    Property<Integer> OK_RESPONSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OkResponse\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    Property<Integer> CANCEL_RESPONSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CancelResponse\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    Property<Integer> LAST_RESPONSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastResponse\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    LocalizedText getPrompt();\n+\n+    PropertyType getPromptNode();\n+\n+    void setPrompt(LocalizedText value);\n+\n+    LocalizedText[] getResponseOptionSet();\n+\n+    PropertyType getResponseOptionSetNode();\n+\n+    void setResponseOptionSet(LocalizedText[] value);\n+\n+    Integer getDefaultResponse();\n+\n+    PropertyType getDefaultResponseNode();\n+\n+    void setDefaultResponse(Integer value);\n+\n+    Integer getOkResponse();\n+\n+    PropertyType getOkResponseNode();\n+\n+    void setOkResponse(Integer value);\n+\n+    Integer getCancelResponse();\n+\n+    PropertyType getCancelResponseNode();\n+\n+    void setCancelResponse(Integer value);\n+\n+    Integer getLastResponse();\n+\n+    PropertyType getLastResponseNode();\n+\n+    void setLastResponse(Integer value);\n+\n+    LocalizedText getEnabledState();\n+\n+    TwoStateVariableType getEnabledStateNode();\n+\n+    void setEnabledState(LocalizedText value);\n+\n+    LocalizedText getDialogState();\n+\n+    TwoStateVariableType getDialogStateNode();\n+\n+    void setDialogState(LocalizedText value);\n+}"
        },
        {
            "sha": "6830353eacc22186d7284986968e9805d05cd97a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DirectoryType.java",
            "status": "added",
            "additions": 21,
            "deletions": 0,
            "changes": 21,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDirectoryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDirectoryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDirectoryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface DirectoryType extends FolderType {\n+\n+    FolderType getApplications();\n+\n+\n+}"
        },
        {
            "sha": "d6c07570a25a99d9a4c49abbdd1e92fefbcaa661",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/DiscreteAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDiscreteAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDiscreteAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FDiscreteAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface DiscreteAlarmType extends AlarmConditionType {\n+\n+}"
        },
        {
            "sha": "ba83185714f190546a0d03220b37c9d96d8a750f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/EventQueueOverflowEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FEventQueueOverflowEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FEventQueueOverflowEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FEventQueueOverflowEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface EventQueueOverflowEventType extends BaseEventType {\n+\n+}"
        },
        {
            "sha": "4358cb55b23bdef5286f284e8543016d9c180259",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ExclusiveDeviationAlarmType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveDeviationAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveDeviationAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveDeviationAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface ExclusiveDeviationAlarmType extends ExclusiveLimitAlarmType {\n+\n+    Property<NodeId> SETPOINT_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SetpointNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getSetpointNode();\n+\n+    PropertyType getSetpointNodeNode();\n+\n+    void setSetpointNode(NodeId value);\n+}"
        },
        {
            "sha": "469f5dc0c84be85a1baa2b6fe1fae86d0c7c870a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ExclusiveLevelAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLevelAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLevelAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLevelAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ExclusiveLevelAlarmType extends ExclusiveLimitAlarmType {\n+\n+}"
        },
        {
            "sha": "00594fb39aa384d819f505402b55a958702cffaf",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ExclusiveLimitAlarmType.java",
            "status": "added",
            "additions": 28,
            "deletions": 0,
            "changes": 28,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface ExclusiveLimitAlarmType extends LimitAlarmType {\n+\n+    ExclusiveLimitStateMachineType getLimitStateNode();\n+\n+    LocalizedText getActiveState();\n+\n+    TwoStateVariableType getActiveStateNode();\n+\n+    void setActiveState(LocalizedText value);\n+}"
        },
        {
            "sha": "9d8a8810ce021bd5fa833d8c843633ea3465921b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ExclusiveLimitStateMachineType.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitStateMachineType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitStateMachineType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveLimitStateMachineType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ExclusiveLimitStateMachineType extends FiniteStateMachineType {\n+\n+    StateType getHighHighNode();\n+\n+    StateType getHighNode();\n+\n+    StateType getLowNode();\n+\n+    StateType getLowLowNode();\n+\n+    TransitionType getLowLowToLowNode();\n+\n+    TransitionType getLowToLowLowNode();\n+\n+    TransitionType getHighHighToHighNode();\n+\n+    TransitionType getHighToHighHighNode();\n+\n+}"
        },
        {
            "sha": "51ae7edf0dad2d3a720f1f02aae2eb2bc370bd4b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ExclusiveRateOfChangeAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveRateOfChangeAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveRateOfChangeAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FExclusiveRateOfChangeAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ExclusiveRateOfChangeAlarmType extends ExclusiveLimitAlarmType {\n+\n+}"
        },
        {
            "sha": "3a5043e4aef5494875a5565112be745831b21814",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/FileDirectoryType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileDirectoryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileDirectoryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileDirectoryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface FileDirectoryType extends FolderType {\n+\n+}"
        },
        {
            "sha": "0ed14501c3391f3a545b14b16ec9cc79594b2b31",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/FileType.java",
            "status": "added",
            "additions": 90,
            "deletions": 0,
            "changes": 90,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFileType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.ULong;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+public interface FileType extends BaseObjectType {\n+\n+    Property<ULong> SIZE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Size\"),\n+        NodeId.parse(\"ns=0;i=9\"),\n+        -1,\n+        ULong.class\n+    );\n+\n+    Property<Boolean> WRITABLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Writable\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> USER_WRITABLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UserWritable\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<UShort> OPEN_COUNT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OpenCount\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    Property<String> MIME_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MimeType\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    ULong getSize();\n+\n+    PropertyType getSizeNode();\n+\n+    void setSize(ULong value);\n+\n+    Boolean getWritable();\n+\n+    PropertyType getWritableNode();\n+\n+    void setWritable(Boolean value);\n+\n+    Boolean getUserWritable();\n+\n+    PropertyType getUserWritableNode();\n+\n+    void setUserWritable(Boolean value);\n+\n+    UShort getOpenCount();\n+\n+    PropertyType getOpenCountNode();\n+\n+    void setOpenCount(UShort value);\n+\n+    String getMimeType();\n+\n+    PropertyType getMimeTypeNode();\n+\n+    void setMimeType(String value);\n+}"
        },
        {
            "sha": "1a74dbdf075f5cf62628eb0b1b03c1cf5d164d04",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/FiniteStateMachineType.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFiniteStateMachineType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFiniteStateMachineType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFiniteStateMachineType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.FiniteStateVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.FiniteTransitionVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface FiniteStateMachineType extends StateMachineType {\n+\n+    LocalizedText getCurrentState();\n+\n+    FiniteStateVariableType getCurrentStateNode();\n+\n+    void setCurrentState(LocalizedText value);\n+\n+    LocalizedText getLastTransition();\n+\n+    FiniteTransitionVariableType getLastTransitionNode();\n+\n+    void setLastTransition(LocalizedText value);\n+}"
        },
        {
            "sha": "e92c476194a7b6d5177340427f4188ce94d05f23",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/FolderType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFolderType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFolderType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FFolderType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface FolderType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "ebe07362e5674dc4cc06ae950236a084430fc629",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/GeneralModelChangeEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FGeneralModelChangeEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FGeneralModelChangeEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FGeneralModelChangeEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModelChangeStructureDataType;\n+\n+public interface GeneralModelChangeEventType extends BaseModelChangeEventType {\n+\n+    Property<ModelChangeStructureDataType[]> CHANGES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Changes\"),\n+        NodeId.parse(\"ns=0;i=877\"),\n+        1,\n+        ModelChangeStructureDataType[].class\n+    );\n+\n+    ModelChangeStructureDataType[] getChanges();\n+\n+    PropertyType getChangesNode();\n+\n+    void setChanges(ModelChangeStructureDataType[] value);\n+}"
        },
        {
            "sha": "097d60e226fcb1263641469ffcf1c6ee44a9064b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/HistoricalDataConfigurationType.java",
            "status": "added",
            "additions": 134,
            "deletions": 0,
            "changes": 134,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoricalDataConfigurationType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoricalDataConfigurationType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoricalDataConfigurationType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.ExceptionDeviationFormat;\n+\n+public interface HistoricalDataConfigurationType extends BaseObjectType {\n+\n+    Property<Boolean> STEPPED = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Stepped\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<String> DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Definition\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<Double> MAX_TIME_INTERVAL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxTimeInterval\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<Double> MIN_TIME_INTERVAL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MinTimeInterval\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<Double> EXCEPTION_DEVIATION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ExceptionDeviation\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<ExceptionDeviationFormat> EXCEPTION_DEVIATION_FORMAT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ExceptionDeviationFormat\"),\n+        NodeId.parse(\"ns=0;i=890\"),\n+        -1,\n+        ExceptionDeviationFormat.class\n+    );\n+\n+    Property<DateTime> START_OF_ARCHIVE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StartOfArchive\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> START_OF_ONLINE_ARCHIVE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StartOfOnlineArchive\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Boolean getStepped();\n+\n+    PropertyType getSteppedNode();\n+\n+    void setStepped(Boolean value);\n+\n+    String getDefinition();\n+\n+    PropertyType getDefinitionNode();\n+\n+    void setDefinition(String value);\n+\n+    Double getMaxTimeInterval();\n+\n+    PropertyType getMaxTimeIntervalNode();\n+\n+    void setMaxTimeInterval(Double value);\n+\n+    Double getMinTimeInterval();\n+\n+    PropertyType getMinTimeIntervalNode();\n+\n+    void setMinTimeInterval(Double value);\n+\n+    Double getExceptionDeviation();\n+\n+    PropertyType getExceptionDeviationNode();\n+\n+    void setExceptionDeviation(Double value);\n+\n+    ExceptionDeviationFormat getExceptionDeviationFormat();\n+\n+    PropertyType getExceptionDeviationFormatNode();\n+\n+    void setExceptionDeviationFormat(ExceptionDeviationFormat value);\n+\n+    DateTime getStartOfArchive();\n+\n+    PropertyType getStartOfArchiveNode();\n+\n+    void setStartOfArchive(DateTime value);\n+\n+    DateTime getStartOfOnlineArchive();\n+\n+    PropertyType getStartOfOnlineArchiveNode();\n+\n+    void setStartOfOnlineArchive(DateTime value);\n+\n+    AggregateConfigurationType getAggregateConfigurationNode();\n+\n+    FolderType getAggregateFunctionsNode();\n+\n+}"
        },
        {
            "sha": "0fe5e78fcafedf01455ed4cced08096eafc1a958",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/HistoryServerCapabilitiesType.java",
            "status": "added",
            "additions": 209,
            "deletions": 0,
            "changes": 209,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoryServerCapabilitiesType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoryServerCapabilitiesType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHistoryServerCapabilitiesType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,209 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface HistoryServerCapabilitiesType extends BaseObjectType {\n+\n+    Property<Boolean> ACCESS_HISTORY_DATA_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AccessHistoryDataCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> ACCESS_HISTORY_EVENTS_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AccessHistoryEventsCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<UInteger> MAX_RETURN_DATA_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxReturnDataValues\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_RETURN_EVENT_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxReturnEventValues\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<Boolean> INSERT_DATA_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InsertDataCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> REPLACE_DATA_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReplaceDataCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> UPDATE_DATA_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UpdateDataCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> DELETE_RAW_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DeleteRawCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> DELETE_AT_TIME_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DeleteAtTimeCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> INSERT_EVENT_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InsertEventCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> REPLACE_EVENT_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ReplaceEventCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> UPDATE_EVENT_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UpdateEventCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> DELETE_EVENT_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DeleteEventCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> INSERT_ANNOTATION_CAPABILITY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InsertAnnotationCapability\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Boolean getAccessHistoryDataCapability();\n+\n+    PropertyType getAccessHistoryDataCapabilityNode();\n+\n+    void setAccessHistoryDataCapability(Boolean value);\n+\n+    Boolean getAccessHistoryEventsCapability();\n+\n+    PropertyType getAccessHistoryEventsCapabilityNode();\n+\n+    void setAccessHistoryEventsCapability(Boolean value);\n+\n+    UInteger getMaxReturnDataValues();\n+\n+    PropertyType getMaxReturnDataValuesNode();\n+\n+    void setMaxReturnDataValues(UInteger value);\n+\n+    UInteger getMaxReturnEventValues();\n+\n+    PropertyType getMaxReturnEventValuesNode();\n+\n+    void setMaxReturnEventValues(UInteger value);\n+\n+    Boolean getInsertDataCapability();\n+\n+    PropertyType getInsertDataCapabilityNode();\n+\n+    void setInsertDataCapability(Boolean value);\n+\n+    Boolean getReplaceDataCapability();\n+\n+    PropertyType getReplaceDataCapabilityNode();\n+\n+    void setReplaceDataCapability(Boolean value);\n+\n+    Boolean getUpdateDataCapability();\n+\n+    PropertyType getUpdateDataCapabilityNode();\n+\n+    void setUpdateDataCapability(Boolean value);\n+\n+    Boolean getDeleteRawCapability();\n+\n+    PropertyType getDeleteRawCapabilityNode();\n+\n+    void setDeleteRawCapability(Boolean value);\n+\n+    Boolean getDeleteAtTimeCapability();\n+\n+    PropertyType getDeleteAtTimeCapabilityNode();\n+\n+    void setDeleteAtTimeCapability(Boolean value);\n+\n+    Boolean getInsertEventCapability();\n+\n+    PropertyType getInsertEventCapabilityNode();\n+\n+    void setInsertEventCapability(Boolean value);\n+\n+    Boolean getReplaceEventCapability();\n+\n+    PropertyType getReplaceEventCapabilityNode();\n+\n+    void setReplaceEventCapability(Boolean value);\n+\n+    Boolean getUpdateEventCapability();\n+\n+    PropertyType getUpdateEventCapabilityNode();\n+\n+    void setUpdateEventCapability(Boolean value);\n+\n+    Boolean getDeleteEventCapability();\n+\n+    PropertyType getDeleteEventCapabilityNode();\n+\n+    void setDeleteEventCapability(Boolean value);\n+\n+    Boolean getInsertAnnotationCapability();\n+\n+    PropertyType getInsertAnnotationCapabilityNode();\n+\n+    void setInsertAnnotationCapability(Boolean value);\n+\n+    FolderType getAggregateFunctionsNode();\n+\n+}"
        },
        {
            "sha": "b4437fe1d024a0ddf26469db357b3dd9e40eda4b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/HttpsCertificateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHttpsCertificateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHttpsCertificateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FHttpsCertificateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface HttpsCertificateType extends CertificateType {\n+\n+}"
        },
        {
            "sha": "dc4ae17e14e0be18a8132eb1d51c33ee0d76afa0",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/InitialStateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FInitialStateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FInitialStateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FInitialStateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface InitialStateType extends StateType {\n+\n+}"
        },
        {
            "sha": "cd58c63d547430cc4624f3a860395a9a837b2a4f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/LimitAlarmType.java",
            "status": "added",
            "additions": 75,
            "deletions": 0,
            "changes": 75,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLimitAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLimitAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLimitAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface LimitAlarmType extends AlarmConditionType {\n+\n+    Property<Double> HIGH_HIGH_LIMIT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:HighHighLimit\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<Double> HIGH_LIMIT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:HighLimit\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<Double> LOW_LIMIT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LowLimit\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<Double> LOW_LOW_LIMIT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LowLowLimit\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Double getHighHighLimit();\n+\n+    PropertyType getHighHighLimitNode();\n+\n+    void setHighHighLimit(Double value);\n+\n+    Double getHighLimit();\n+\n+    PropertyType getHighLimitNode();\n+\n+    void setHighLimit(Double value);\n+\n+    Double getLowLimit();\n+\n+    PropertyType getLowLimitNode();\n+\n+    void setLowLimit(Double value);\n+\n+    Double getLowLowLimit();\n+\n+    PropertyType getLowLowLimitNode();\n+\n+    void setLowLowLimit(Double value);\n+}"
        },
        {
            "sha": "bb87670d6f4ec8dc37aad42b3238254c4ae2e800",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/LockType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLockType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLockType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FLockType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface LockType extends BaseObjectType {\n+\n+\n+}"
        },
        {
            "sha": "85e597dd585898aeca31b24883469c8c4059bcb7",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/MaintenanceConditionClassType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FMaintenanceConditionClassType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FMaintenanceConditionClassType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FMaintenanceConditionClassType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface MaintenanceConditionClassType extends BaseConditionClassType {\n+\n+}"
        },
        {
            "sha": "234c471a0da749a40631d16a7c039268cc2e66d4",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ModellingRuleType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FModellingRuleType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FModellingRuleType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FModellingRuleType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NamingRuleType;\n+\n+public interface ModellingRuleType extends BaseObjectType {\n+\n+    Property<NamingRuleType> NAMING_RULE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamingRule\"),\n+        NodeId.parse(\"ns=0;i=120\"),\n+        -1,\n+        NamingRuleType.class\n+    );\n+\n+    NamingRuleType getNamingRule();\n+\n+    PropertyType getNamingRuleNode();\n+\n+    void setNamingRule(NamingRuleType value);\n+}"
        },
        {
            "sha": "bc8c6c6de5e00a99f5072eb81606f0797d592a7e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NamespaceMetadataType.java",
            "status": "added",
            "additions": 119,
            "deletions": 0,
            "changes": 119,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespaceMetadataType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespaceMetadataType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespaceMetadataType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.IdType;\n+\n+public interface NamespaceMetadataType extends BaseObjectType {\n+\n+    Property<String> NAMESPACE_URI = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamespaceUri\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<String> NAMESPACE_VERSION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamespaceVersion\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<DateTime> NAMESPACE_PUBLICATION_DATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamespacePublicationDate\"),\n+        NodeId.parse(\"ns=0;i=13\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<Boolean> IS_NAMESPACE_SUBSET = new BasicProperty<>(\n+        QualifiedName.parse(\"0:IsNamespaceSubset\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<IdType[]> STATIC_NODE_ID_IDENTIFIER_TYPES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StaticNodeIdIdentifierTypes\"),\n+        NodeId.parse(\"ns=0;i=256\"),\n+        1,\n+        IdType[].class\n+    );\n+\n+    Property<String[]> STATIC_NUMERIC_NODE_ID_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StaticNumericNodeIdRange\"),\n+        NodeId.parse(\"ns=0;i=291\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<String[]> STATIC_STRING_NODE_ID_PATTERN = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StaticStringNodeIdPattern\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    String getNamespaceUri();\n+\n+    PropertyType getNamespaceUriNode();\n+\n+    void setNamespaceUri(String value);\n+\n+    String getNamespaceVersion();\n+\n+    PropertyType getNamespaceVersionNode();\n+\n+    void setNamespaceVersion(String value);\n+\n+    DateTime getNamespacePublicationDate();\n+\n+    PropertyType getNamespacePublicationDateNode();\n+\n+    void setNamespacePublicationDate(DateTime value);\n+\n+    Boolean getIsNamespaceSubset();\n+\n+    PropertyType getIsNamespaceSubsetNode();\n+\n+    void setIsNamespaceSubset(Boolean value);\n+\n+    IdType[] getStaticNodeIdIdentifierTypes();\n+\n+    PropertyType getStaticNodeIdIdentifierTypesNode();\n+\n+    void setStaticNodeIdIdentifierTypes(IdType[] value);\n+\n+    String[] getStaticNumericNodeIdRange();\n+\n+    PropertyType getStaticNumericNodeIdRangeNode();\n+\n+    void setStaticNumericNodeIdRange(String[] value);\n+\n+    String[] getStaticStringNodeIdPattern();\n+\n+    PropertyType getStaticStringNodeIdPatternNode();\n+\n+    void setStaticStringNodeIdPattern(String[] value);\n+\n+    AddressSpaceFileType getNamespaceFileNode();\n+\n+}"
        },
        {
            "sha": "29dabd4a6a65690b8ef8548f550db91076ee1d71",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NamespacesType.java",
            "status": "added",
            "additions": 20,
            "deletions": 0,
            "changes": 20,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespacesType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespacesType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNamespacesType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface NamespacesType extends BaseObjectType {\n+\n+    AddressSpaceFileType getAddressSpaceFileNode();\n+\n+}"
        },
        {
            "sha": "4792f1acd729ed58dc8e7e90b34f31bd6c696ca8",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonExclusiveDeviationAlarmType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveDeviationAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveDeviationAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveDeviationAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface NonExclusiveDeviationAlarmType extends NonExclusiveLimitAlarmType {\n+\n+    Property<NodeId> SETPOINT_NODE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SetpointNode\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getSetpointNode();\n+\n+    PropertyType getSetpointNodeNode();\n+\n+    void setSetpointNode(NodeId value);\n+}"
        },
        {
            "sha": "b10516e04c3bd69f6eefe80722b5c9200ae6587a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonExclusiveLevelAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLevelAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLevelAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLevelAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface NonExclusiveLevelAlarmType extends NonExclusiveLimitAlarmType {\n+\n+}"
        },
        {
            "sha": "c962e9d69b5dc6866a30e8952c0365548f1332d3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonExclusiveLimitAlarmType.java",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLimitAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLimitAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveLimitAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TwoStateVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface NonExclusiveLimitAlarmType extends LimitAlarmType {\n+\n+    LocalizedText getActiveState();\n+\n+    TwoStateVariableType getActiveStateNode();\n+\n+    void setActiveState(LocalizedText value);\n+\n+    LocalizedText getHighHighState();\n+\n+    TwoStateVariableType getHighHighStateNode();\n+\n+    void setHighHighState(LocalizedText value);\n+\n+    LocalizedText getHighState();\n+\n+    TwoStateVariableType getHighStateNode();\n+\n+    void setHighState(LocalizedText value);\n+\n+    LocalizedText getLowState();\n+\n+    TwoStateVariableType getLowStateNode();\n+\n+    void setLowState(LocalizedText value);\n+\n+    LocalizedText getLowLowState();\n+\n+    TwoStateVariableType getLowLowStateNode();\n+\n+    void setLowLowState(LocalizedText value);\n+}"
        },
        {
            "sha": "e29624c03caea25a2742e02298cd2d8deb96fee5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonExclusiveRateOfChangeAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveRateOfChangeAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveRateOfChangeAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonExclusiveRateOfChangeAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface NonExclusiveRateOfChangeAlarmType extends NonExclusiveLimitAlarmType {\n+\n+}"
        },
        {
            "sha": "3c014caf0d2858b6e0906f07201cf732b99fbbac",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonTransparentNetworkRedundancyType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentNetworkRedundancyType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentNetworkRedundancyType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentNetworkRedundancyType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.NetworkGroupDataType;\n+\n+public interface NonTransparentNetworkRedundancyType extends NonTransparentRedundancyType {\n+\n+    Property<NetworkGroupDataType[]> SERVER_NETWORK_GROUPS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerNetworkGroups\"),\n+        NodeId.parse(\"ns=0;i=11944\"),\n+        1,\n+        NetworkGroupDataType[].class\n+    );\n+\n+    NetworkGroupDataType[] getServerNetworkGroups();\n+\n+    PropertyType getServerNetworkGroupsNode();\n+\n+    void setServerNetworkGroups(NetworkGroupDataType[] value);\n+}"
        },
        {
            "sha": "f30a8dea0bb9795187236d3a99e14233bc0c8602",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/NonTransparentRedundancyType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentRedundancyType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentRedundancyType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FNonTransparentRedundancyType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface NonTransparentRedundancyType extends ServerRedundancyType {\n+\n+    Property<String[]> SERVER_URI_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerUriArray\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    String[] getServerUriArray();\n+\n+    PropertyType getServerUriArrayNode();\n+\n+    void setServerUriArray(String[] value);\n+}"
        },
        {
            "sha": "8542feea02a64938eb71728cfc220fe8b4f45afd",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/OffNormalAlarmType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOffNormalAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOffNormalAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOffNormalAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface OffNormalAlarmType extends DiscreteAlarmType {\n+\n+    Property<NodeId> NORMAL_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NormalState\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    NodeId getNormalState();\n+\n+    PropertyType getNormalStateNode();\n+\n+    void setNormalState(NodeId value);\n+}"
        },
        {
            "sha": "a926a344bfb2ead4b98fc7f47186fb2890139bcb",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/OperationLimitsType.java",
            "status": "added",
            "additions": 180,
            "deletions": 0,
            "changes": 180,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOperationLimitsType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOperationLimitsType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FOperationLimitsType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,180 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface OperationLimitsType extends BaseObjectType {\n+\n+    Property<UInteger> MAX_NODES_PER_READ = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerRead\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_HISTORY_READ_DATA = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerHistoryReadData\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_HISTORY_READ_EVENTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerHistoryReadEvents\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_WRITE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerWrite\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_HISTORY_UPDATE_DATA = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerHistoryUpdateData\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_HISTORY_UPDATE_EVENTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerHistoryUpdateEvents\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_METHOD_CALL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerMethodCall\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_BROWSE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerBrowse\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_REGISTER_NODES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerRegisterNodes\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_TRANSLATE_BROWSE_PATHS_TO_NODE_IDS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerTranslateBrowsePathsToNodeIds\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_NODES_PER_NODE_MANAGEMENT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxNodesPerNodeManagement\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_MONITORED_ITEMS_PER_CALL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxMonitoredItemsPerCall\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    UInteger getMaxNodesPerRead();\n+\n+    PropertyType getMaxNodesPerReadNode();\n+\n+    void setMaxNodesPerRead(UInteger value);\n+\n+    UInteger getMaxNodesPerHistoryReadData();\n+\n+    PropertyType getMaxNodesPerHistoryReadDataNode();\n+\n+    void setMaxNodesPerHistoryReadData(UInteger value);\n+\n+    UInteger getMaxNodesPerHistoryReadEvents();\n+\n+    PropertyType getMaxNodesPerHistoryReadEventsNode();\n+\n+    void setMaxNodesPerHistoryReadEvents(UInteger value);\n+\n+    UInteger getMaxNodesPerWrite();\n+\n+    PropertyType getMaxNodesPerWriteNode();\n+\n+    void setMaxNodesPerWrite(UInteger value);\n+\n+    UInteger getMaxNodesPerHistoryUpdateData();\n+\n+    PropertyType getMaxNodesPerHistoryUpdateDataNode();\n+\n+    void setMaxNodesPerHistoryUpdateData(UInteger value);\n+\n+    UInteger getMaxNodesPerHistoryUpdateEvents();\n+\n+    PropertyType getMaxNodesPerHistoryUpdateEventsNode();\n+\n+    void setMaxNodesPerHistoryUpdateEvents(UInteger value);\n+\n+    UInteger getMaxNodesPerMethodCall();\n+\n+    PropertyType getMaxNodesPerMethodCallNode();\n+\n+    void setMaxNodesPerMethodCall(UInteger value);\n+\n+    UInteger getMaxNodesPerBrowse();\n+\n+    PropertyType getMaxNodesPerBrowseNode();\n+\n+    void setMaxNodesPerBrowse(UInteger value);\n+\n+    UInteger getMaxNodesPerRegisterNodes();\n+\n+    PropertyType getMaxNodesPerRegisterNodesNode();\n+\n+    void setMaxNodesPerRegisterNodes(UInteger value);\n+\n+    UInteger getMaxNodesPerTranslateBrowsePathsToNodeIds();\n+\n+    PropertyType getMaxNodesPerTranslateBrowsePathsToNodeIdsNode();\n+\n+    void setMaxNodesPerTranslateBrowsePathsToNodeIds(UInteger value);\n+\n+    UInteger getMaxNodesPerNodeManagement();\n+\n+    PropertyType getMaxNodesPerNodeManagementNode();\n+\n+    void setMaxNodesPerNodeManagement(UInteger value);\n+\n+    UInteger getMaxMonitoredItemsPerCall();\n+\n+    PropertyType getMaxMonitoredItemsPerCallNode();\n+\n+    void setMaxMonitoredItemsPerCall(UInteger value);\n+}"
        },
        {
            "sha": "67858420414ba269259f5ac0212b5182e9d85ef5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ProcessConditionClassType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProcessConditionClassType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProcessConditionClassType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProcessConditionClassType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface ProcessConditionClassType extends BaseConditionClassType {\n+\n+}"
        },
        {
            "sha": "03c92115fb464ae88f66adab3cb93ca2c8c34694",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ProgramStateMachineType.java",
            "status": "added",
            "additions": 166,
            "deletions": 0,
            "changes": 166,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramStateMachineType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramStateMachineType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramStateMachineType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,166 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.FiniteStateVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.FiniteTransitionVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.ProgramDiagnosticType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ProgramDiagnosticDataType;\n+\n+public interface ProgramStateMachineType extends FiniteStateMachineType {\n+\n+    Property<Boolean> CREATABLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Creatable\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> DELETABLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Deletable\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Boolean> AUTO_DELETE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AutoDelete\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<Integer> RECYCLE_COUNT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RecycleCount\"),\n+        NodeId.parse(\"ns=0;i=6\"),\n+        -1,\n+        Integer.class\n+    );\n+\n+    Property<UInteger> INSTANCE_COUNT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InstanceCount\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_INSTANCE_COUNT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxInstanceCount\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_RECYCLE_COUNT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxRecycleCount\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Boolean getCreatable();\n+\n+    PropertyType getCreatableNode();\n+\n+    void setCreatable(Boolean value);\n+\n+    Boolean getDeletable();\n+\n+    PropertyType getDeletableNode();\n+\n+    void setDeletable(Boolean value);\n+\n+    Boolean getAutoDelete();\n+\n+    PropertyType getAutoDeleteNode();\n+\n+    void setAutoDelete(Boolean value);\n+\n+    Integer getRecycleCount();\n+\n+    PropertyType getRecycleCountNode();\n+\n+    void setRecycleCount(Integer value);\n+\n+    UInteger getInstanceCount();\n+\n+    PropertyType getInstanceCountNode();\n+\n+    void setInstanceCount(UInteger value);\n+\n+    UInteger getMaxInstanceCount();\n+\n+    PropertyType getMaxInstanceCountNode();\n+\n+    void setMaxInstanceCount(UInteger value);\n+\n+    UInteger getMaxRecycleCount();\n+\n+    PropertyType getMaxRecycleCountNode();\n+\n+    void setMaxRecycleCount(UInteger value);\n+\n+    BaseObjectType getFinalResultDataNode();\n+\n+    StateType getReadyNode();\n+\n+    StateType getRunningNode();\n+\n+    StateType getSuspendedNode();\n+\n+    StateType getHaltedNode();\n+\n+    TransitionType getHaltedToReadyNode();\n+\n+    TransitionType getReadyToRunningNode();\n+\n+    TransitionType getRunningToHaltedNode();\n+\n+    TransitionType getRunningToReadyNode();\n+\n+    TransitionType getRunningToSuspendedNode();\n+\n+    TransitionType getSuspendedToRunningNode();\n+\n+    TransitionType getSuspendedToHaltedNode();\n+\n+    TransitionType getSuspendedToReadyNode();\n+\n+    TransitionType getReadyToHaltedNode();\n+\n+    LocalizedText getCurrentState();\n+\n+    FiniteStateVariableType getCurrentStateNode();\n+\n+    void setCurrentState(LocalizedText value);\n+\n+    LocalizedText getLastTransition();\n+\n+    FiniteTransitionVariableType getLastTransitionNode();\n+\n+    void setLastTransition(LocalizedText value);\n+\n+    ProgramDiagnosticDataType getProgramDiagnostics();\n+\n+    ProgramDiagnosticType getProgramDiagnosticsNode();\n+\n+    void setProgramDiagnostics(ProgramDiagnosticDataType value);\n+}"
        },
        {
            "sha": "036fd04113d4419ed414bd66e3802cfec2bb9ce9",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ProgramTransitionAuditEventType.java",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.FiniteTransitionVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface ProgramTransitionAuditEventType extends AuditUpdateStateEventType {\n+\n+    LocalizedText getTransition();\n+\n+    FiniteTransitionVariableType getTransitionNode();\n+\n+    void setTransition(LocalizedText value);\n+}"
        },
        {
            "sha": "6ea7062c43a91f9f7eb13640b6b2095f7ac6f87b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ProgramTransitionEventType.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgramTransitionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface ProgramTransitionEventType extends TransitionEventType {\n+\n+    Property<Object> INTERMEDIATE_RESULT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:IntermediateResult\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Object getIntermediateResult();\n+\n+    PropertyType getIntermediateResultNode();\n+\n+    void setIntermediateResult(Object value);\n+}"
        },
        {
            "sha": "d5e07fe5c3bf12866a2ec82bfd3ae74f89e71657",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ProgressEventType.java",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgressEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgressEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FProgressEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+public interface ProgressEventType extends BaseEventType {\n+\n+    Property<Object> CONTEXT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Context\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Property<UShort> PROGRESS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Progress\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    Object getContext();\n+\n+    PropertyType getContextNode();\n+\n+    void setContext(Object value);\n+\n+    UShort getProgress();\n+\n+    PropertyType getProgressNode();\n+\n+    void setProgress(UShort value);\n+}"
        },
        {
            "sha": "ef79a6ba1365ce816aaaf7ecb93697f78caf1b26",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/RefreshEndEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshEndEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshEndEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshEndEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface RefreshEndEventType extends SystemEventType {\n+\n+}"
        },
        {
            "sha": "1e9508555b44235c820344747482207e35be8304",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/RefreshRequiredEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshRequiredEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshRequiredEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshRequiredEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface RefreshRequiredEventType extends SystemEventType {\n+\n+}"
        },
        {
            "sha": "78b7097110f1ca085b36c0f3b67cd9890bd19d5c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/RefreshStartEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshStartEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshStartEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRefreshStartEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface RefreshStartEventType extends SystemEventType {\n+\n+}"
        },
        {
            "sha": "67fc4d37e67ee72925dda5b5c9e341d5a3954612",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/RsaMinApplicationCertificateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaMinApplicationCertificateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaMinApplicationCertificateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaMinApplicationCertificateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface RsaMinApplicationCertificateType extends ApplicationCertificateType {\n+\n+}"
        },
        {
            "sha": "1785f89e2459534b30d275048998f69599f8357c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/RsaSha256ApplicationCertificateType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaSha256ApplicationCertificateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaSha256ApplicationCertificateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FRsaSha256ApplicationCertificateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface RsaSha256ApplicationCertificateType extends ApplicationCertificateType {\n+\n+}"
        },
        {
            "sha": "94accb60cddc3cf417a0261501c5ccab56b78ef7",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SemanticChangeEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSemanticChangeEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSemanticChangeEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSemanticChangeEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SemanticChangeStructureDataType;\n+\n+public interface SemanticChangeEventType extends BaseModelChangeEventType {\n+\n+    Property<SemanticChangeStructureDataType[]> CHANGES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Changes\"),\n+        NodeId.parse(\"ns=0;i=897\"),\n+        1,\n+        SemanticChangeStructureDataType[].class\n+    );\n+\n+    SemanticChangeStructureDataType[] getChanges();\n+\n+    PropertyType getChangesNode();\n+\n+    void setChanges(SemanticChangeStructureDataType[] value);\n+}"
        },
        {
            "sha": "2046d51126e480bfed0c4180f4b326e147ef4f2e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ServerCapabilitiesType.java",
            "status": "added",
            "additions": 163,
            "deletions": 0,
            "changes": 163,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerCapabilitiesType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerCapabilitiesType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerCapabilitiesType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+\n+public interface ServerCapabilitiesType extends BaseObjectType {\n+\n+    Property<String[]> SERVER_PROFILE_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerProfileArray\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<String[]> LOCALE_ID_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LocaleIdArray\"),\n+        NodeId.parse(\"ns=0;i=295\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<Double> MIN_SUPPORTED_SAMPLE_RATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MinSupportedSampleRate\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Property<UShort> MAX_BROWSE_CONTINUATION_POINTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxBrowseContinuationPoints\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    Property<UShort> MAX_QUERY_CONTINUATION_POINTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxQueryContinuationPoints\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    Property<UShort> MAX_HISTORY_CONTINUATION_POINTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxHistoryContinuationPoints\"),\n+        NodeId.parse(\"ns=0;i=5\"),\n+        -1,\n+        UShort.class\n+    );\n+\n+    Property<SignedSoftwareCertificate[]> SOFTWARE_CERTIFICATES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SoftwareCertificates\"),\n+        NodeId.parse(\"ns=0;i=344\"),\n+        1,\n+        SignedSoftwareCertificate[].class\n+    );\n+\n+    Property<UInteger> MAX_ARRAY_LENGTH = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxArrayLength\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_STRING_LENGTH = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxStringLength\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<UInteger> MAX_BYTE_STRING_LENGTH = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxByteStringLength\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    String[] getServerProfileArray();\n+\n+    PropertyType getServerProfileArrayNode();\n+\n+    void setServerProfileArray(String[] value);\n+\n+    String[] getLocaleIdArray();\n+\n+    PropertyType getLocaleIdArrayNode();\n+\n+    void setLocaleIdArray(String[] value);\n+\n+    Double getMinSupportedSampleRate();\n+\n+    PropertyType getMinSupportedSampleRateNode();\n+\n+    void setMinSupportedSampleRate(Double value);\n+\n+    UShort getMaxBrowseContinuationPoints();\n+\n+    PropertyType getMaxBrowseContinuationPointsNode();\n+\n+    void setMaxBrowseContinuationPoints(UShort value);\n+\n+    UShort getMaxQueryContinuationPoints();\n+\n+    PropertyType getMaxQueryContinuationPointsNode();\n+\n+    void setMaxQueryContinuationPoints(UShort value);\n+\n+    UShort getMaxHistoryContinuationPoints();\n+\n+    PropertyType getMaxHistoryContinuationPointsNode();\n+\n+    void setMaxHistoryContinuationPoints(UShort value);\n+\n+    SignedSoftwareCertificate[] getSoftwareCertificates();\n+\n+    PropertyType getSoftwareCertificatesNode();\n+\n+    void setSoftwareCertificates(SignedSoftwareCertificate[] value);\n+\n+    UInteger getMaxArrayLength();\n+\n+    PropertyType getMaxArrayLengthNode();\n+\n+    void setMaxArrayLength(UInteger value);\n+\n+    UInteger getMaxStringLength();\n+\n+    PropertyType getMaxStringLengthNode();\n+\n+    void setMaxStringLength(UInteger value);\n+\n+    UInteger getMaxByteStringLength();\n+\n+    PropertyType getMaxByteStringLengthNode();\n+\n+    void setMaxByteStringLength(UInteger value);\n+\n+    OperationLimitsType getOperationLimitsNode();\n+\n+    FolderType getModellingRulesNode();\n+\n+    FolderType getAggregateFunctionsNode();\n+\n+}"
        },
        {
            "sha": "ea6553d1d2d58efdaa41fb7c4cfa701c8232b783",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ServerConfigurationType.java",
            "status": "added",
            "additions": 79,
            "deletions": 0,
            "changes": 79,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerConfigurationType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerConfigurationType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerConfigurationType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface ServerConfigurationType extends BaseObjectType {\n+\n+    Property<String[]> SERVER_CAPABILITIES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerCapabilities\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<String[]> SUPPORTED_PRIVATE_KEY_FORMATS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SupportedPrivateKeyFormats\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<UInteger> MAX_TRUST_LIST_SIZE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MaxTrustListSize\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<Boolean> MULTICAST_DNS_ENABLED = new BasicProperty<>(\n+        QualifiedName.parse(\"0:MulticastDnsEnabled\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    String[] getServerCapabilities();\n+\n+    PropertyType getServerCapabilitiesNode();\n+\n+    void setServerCapabilities(String[] value);\n+\n+    String[] getSupportedPrivateKeyFormats();\n+\n+    PropertyType getSupportedPrivateKeyFormatsNode();\n+\n+    void setSupportedPrivateKeyFormats(String[] value);\n+\n+    UInteger getMaxTrustListSize();\n+\n+    PropertyType getMaxTrustListSizeNode();\n+\n+    void setMaxTrustListSize(UInteger value);\n+\n+    Boolean getMulticastDnsEnabled();\n+\n+    PropertyType getMulticastDnsEnabledNode();\n+\n+    void setMulticastDnsEnabled(Boolean value);\n+\n+    CertificateGroupFolderType getCertificateGroupsNode();\n+\n+}"
        },
        {
            "sha": "4b9af2c1b5c731872b62dcb0801138c419822ee3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ServerDiagnosticsType.java",
            "status": "added",
            "additions": 62,
            "deletions": 0,
            "changes": 62,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerDiagnosticsType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerDiagnosticsType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerDiagnosticsType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SamplingIntervalDiagnosticsArrayType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.ServerDiagnosticsSummaryType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SubscriptionDiagnosticsArrayType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SamplingIntervalDiagnosticsDataType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ServerDiagnosticsSummaryDataType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SubscriptionDiagnosticsDataType;\n+\n+public interface ServerDiagnosticsType extends BaseObjectType {\n+\n+    Property<Boolean> ENABLED_FLAG = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EnabledFlag\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Boolean getEnabledFlag();\n+\n+    PropertyType getEnabledFlagNode();\n+\n+    void setEnabledFlag(Boolean value);\n+\n+    SessionsDiagnosticsSummaryType getSessionsDiagnosticsSummaryNode();\n+\n+    ServerDiagnosticsSummaryDataType getServerDiagnosticsSummary();\n+\n+    ServerDiagnosticsSummaryType getServerDiagnosticsSummaryNode();\n+\n+    void setServerDiagnosticsSummary(ServerDiagnosticsSummaryDataType value);\n+\n+    SamplingIntervalDiagnosticsDataType[] getSamplingIntervalDiagnosticsArray();\n+\n+    SamplingIntervalDiagnosticsArrayType getSamplingIntervalDiagnosticsArrayNode();\n+\n+    void setSamplingIntervalDiagnosticsArray(SamplingIntervalDiagnosticsDataType[] value);\n+\n+    SubscriptionDiagnosticsDataType[] getSubscriptionDiagnosticsArray();\n+\n+    SubscriptionDiagnosticsArrayType getSubscriptionDiagnosticsArrayNode();\n+\n+    void setSubscriptionDiagnosticsArray(SubscriptionDiagnosticsDataType[] value);\n+}"
        },
        {
            "sha": "e7901f47edd415ef4cfd08496ef46cb8658346ae",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ServerRedundancyType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerRedundancyType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerRedundancyType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerRedundancyType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.RedundancySupport;\n+\n+public interface ServerRedundancyType extends BaseObjectType {\n+\n+    Property<RedundancySupport> REDUNDANCY_SUPPORT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RedundancySupport\"),\n+        NodeId.parse(\"ns=0;i=851\"),\n+        -1,\n+        RedundancySupport.class\n+    );\n+\n+    RedundancySupport getRedundancySupport();\n+\n+    PropertyType getRedundancySupportNode();\n+\n+    void setRedundancySupport(RedundancySupport value);\n+}"
        },
        {
            "sha": "a4417b51978139f08dbcbd0452b8ea07b0978db5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ServerType.java",
            "status": "added",
            "additions": 108,
            "deletions": 0,
            "changes": 108,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FServerType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.ServerStatusType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ServerStatusDataType;\n+\n+public interface ServerType extends BaseObjectType {\n+\n+    Property<String[]> SERVER_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServerArray\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<String[]> NAMESPACE_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamespaceArray\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        1,\n+        String[].class\n+    );\n+\n+    Property<UByte> SERVICE_LEVEL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ServiceLevel\"),\n+        NodeId.parse(\"ns=0;i=3\"),\n+        -1,\n+        UByte.class\n+    );\n+\n+    Property<Boolean> AUDITING = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Auditing\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<DateTime> ESTIMATED_RETURN_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EstimatedReturnTime\"),\n+        NodeId.parse(\"ns=0;i=13\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    String[] getServerArray();\n+\n+    PropertyType getServerArrayNode();\n+\n+    void setServerArray(String[] value);\n+\n+    String[] getNamespaceArray();\n+\n+    PropertyType getNamespaceArrayNode();\n+\n+    void setNamespaceArray(String[] value);\n+\n+    UByte getServiceLevel();\n+\n+    PropertyType getServiceLevelNode();\n+\n+    void setServiceLevel(UByte value);\n+\n+    Boolean getAuditing();\n+\n+    PropertyType getAuditingNode();\n+\n+    void setAuditing(Boolean value);\n+\n+    DateTime getEstimatedReturnTime();\n+\n+    PropertyType getEstimatedReturnTimeNode();\n+\n+    void setEstimatedReturnTime(DateTime value);\n+\n+    ServerCapabilitiesType getServerCapabilitiesNode();\n+\n+    ServerDiagnosticsType getServerDiagnosticsNode();\n+\n+    VendorServerInfoType getVendorServerInfoNode();\n+\n+    ServerRedundancyType getServerRedundancyNode();\n+\n+    NamespacesType getNamespacesNode();\n+\n+    ServerStatusDataType getServerStatus();\n+\n+    ServerStatusType getServerStatusNode();\n+\n+    void setServerStatus(ServerStatusDataType value);\n+}"
        },
        {
            "sha": "d7b5fe37e791d81afa94802b40a29079fe3cd2ca",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SessionDiagnosticsObjectType.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionDiagnosticsObjectType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionDiagnosticsObjectType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionDiagnosticsObjectType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SessionDiagnosticsVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SessionSecurityDiagnosticsType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SubscriptionDiagnosticsArrayType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SessionDiagnosticsDataType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SessionSecurityDiagnosticsDataType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SubscriptionDiagnosticsDataType;\n+\n+public interface SessionDiagnosticsObjectType extends BaseObjectType {\n+\n+    SessionDiagnosticsDataType getSessionDiagnostics();\n+\n+    SessionDiagnosticsVariableType getSessionDiagnosticsNode();\n+\n+    void setSessionDiagnostics(SessionDiagnosticsDataType value);\n+\n+    SessionSecurityDiagnosticsDataType getSessionSecurityDiagnostics();\n+\n+    SessionSecurityDiagnosticsType getSessionSecurityDiagnosticsNode();\n+\n+    void setSessionSecurityDiagnostics(SessionSecurityDiagnosticsDataType value);\n+\n+    SubscriptionDiagnosticsDataType[] getSubscriptionDiagnosticsArray();\n+\n+    SubscriptionDiagnosticsArrayType getSubscriptionDiagnosticsArrayNode();\n+\n+    void setSubscriptionDiagnosticsArray(SubscriptionDiagnosticsDataType[] value);\n+}"
        },
        {
            "sha": "f504bfe88780afc5d73d0cf053c14a2d40407ad4",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SessionsDiagnosticsSummaryType.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionsDiagnosticsSummaryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionsDiagnosticsSummaryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSessionsDiagnosticsSummaryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SessionDiagnosticsArrayType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.SessionSecurityDiagnosticsArrayType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SessionDiagnosticsDataType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SessionSecurityDiagnosticsDataType;\n+\n+public interface SessionsDiagnosticsSummaryType extends BaseObjectType {\n+\n+    SessionDiagnosticsDataType[] getSessionDiagnosticsArray();\n+\n+    SessionDiagnosticsArrayType getSessionDiagnosticsArrayNode();\n+\n+    void setSessionDiagnosticsArray(SessionDiagnosticsDataType[] value);\n+\n+    SessionSecurityDiagnosticsDataType[] getSessionSecurityDiagnosticsArray();\n+\n+    SessionSecurityDiagnosticsArrayType getSessionSecurityDiagnosticsArrayNode();\n+\n+    void setSessionSecurityDiagnosticsArray(SessionSecurityDiagnosticsDataType[] value);\n+}"
        },
        {
            "sha": "22f11971268ecfe5c49300f5d26c6a085e699f88",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/ShelvedStateMachineType.java",
            "status": "added",
            "additions": 55,
            "deletions": 0,
            "changes": 55,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FShelvedStateMachineType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FShelvedStateMachineType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FShelvedStateMachineType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface ShelvedStateMachineType extends FiniteStateMachineType {\n+\n+    Property<Double> UNSHELVE_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:UnshelveTime\"),\n+        NodeId.parse(\"ns=0;i=290\"),\n+        -1,\n+        Double.class\n+    );\n+\n+    Double getUnshelveTime();\n+\n+    PropertyType getUnshelveTimeNode();\n+\n+    void setUnshelveTime(Double value);\n+\n+    StateType getUnshelvedNode();\n+\n+    StateType getTimedShelvedNode();\n+\n+    StateType getOneShotShelvedNode();\n+\n+    TransitionType getUnshelvedToTimedShelvedNode();\n+\n+    TransitionType getUnshelvedToOneShotShelvedNode();\n+\n+    TransitionType getTimedShelvedToUnshelvedNode();\n+\n+    TransitionType getTimedShelvedToOneShotShelvedNode();\n+\n+    TransitionType getOneShotShelvedToUnshelvedNode();\n+\n+    TransitionType getOneShotShelvedToTimedShelvedNode();\n+\n+}"
        },
        {
            "sha": "9766028ef6a06fca7144a8dc9b406822c03c145f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/StateMachineType.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateMachineType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateMachineType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateMachineType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.StateVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TransitionVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface StateMachineType extends BaseObjectType {\n+\n+    LocalizedText getCurrentState();\n+\n+    StateVariableType getCurrentStateNode();\n+\n+    void setCurrentState(LocalizedText value);\n+\n+    LocalizedText getLastTransition();\n+\n+    TransitionVariableType getLastTransitionNode();\n+\n+    void setLastTransition(LocalizedText value);\n+}"
        },
        {
            "sha": "6ca020c1b034ec104c4b50a00fa852b68f82bfd2",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/StateType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FStateType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface StateType extends BaseObjectType {\n+\n+    Property<UInteger> STATE_NUMBER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:StateNumber\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    UInteger getStateNumber();\n+\n+    PropertyType getStateNumberNode();\n+\n+    void setStateNumber(UInteger value);\n+}"
        },
        {
            "sha": "179637a7428020a4fe09d688d65fa8a6e7b7d917",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SystemConditionClassType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemConditionClassType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemConditionClassType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemConditionClassType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface SystemConditionClassType extends BaseConditionClassType {\n+\n+}"
        },
        {
            "sha": "980dbe281a2bccbb6293a02b5c6a188c1726b1d8",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SystemEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface SystemEventType extends BaseEventType {\n+\n+}"
        },
        {
            "sha": "e60dead19ed013586e75eac5661bccfddf9e2fd0",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SystemOffNormalAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemOffNormalAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemOffNormalAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemOffNormalAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface SystemOffNormalAlarmType extends OffNormalAlarmType {\n+\n+}"
        },
        {
            "sha": "145dc4cf0a62298a69e6b9fbda0ad374f10a655a",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/SystemStatusChangeEventType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemStatusChangeEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemStatusChangeEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FSystemStatusChangeEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.ServerState;\n+\n+public interface SystemStatusChangeEventType extends SystemEventType {\n+\n+    Property<ServerState> SYSTEM_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SystemState\"),\n+        NodeId.parse(\"ns=0;i=852\"),\n+        -1,\n+        ServerState.class\n+    );\n+\n+    ServerState getSystemState();\n+\n+    PropertyType getSystemStateNode();\n+\n+    void setSystemState(ServerState value);\n+}"
        },
        {
            "sha": "a4fbcc9efc30569ba59a90264bf9dac458e158ab",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TransitionEventType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.variables.StateVariableType;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.TransitionVariableType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface TransitionEventType extends BaseEventType {\n+\n+    LocalizedText getTransition();\n+\n+    TransitionVariableType getTransitionNode();\n+\n+    void setTransition(LocalizedText value);\n+\n+    LocalizedText getFromState();\n+\n+    StateVariableType getFromStateNode();\n+\n+    void setFromState(LocalizedText value);\n+\n+    LocalizedText getToState();\n+\n+    StateVariableType getToStateNode();\n+\n+    void setToState(LocalizedText value);\n+}"
        },
        {
            "sha": "c10fd1a42abf8d162b48de66f422999ded438645",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TransitionType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransitionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface TransitionType extends BaseObjectType {\n+\n+    Property<UInteger> TRANSITION_NUMBER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TransitionNumber\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    UInteger getTransitionNumber();\n+\n+    PropertyType getTransitionNumberNode();\n+\n+    void setTransitionNumber(UInteger value);\n+}"
        },
        {
            "sha": "2995bf036ad4cc3d32eff383a43b07a4ed2d7554",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TransparentRedundancyType.java",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransparentRedundancyType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransparentRedundancyType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTransparentRedundancyType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RedundantServerDataType;\n+\n+public interface TransparentRedundancyType extends ServerRedundancyType {\n+\n+    Property<String> CURRENT_SERVER_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CurrentServerId\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<RedundantServerDataType[]> REDUNDANT_SERVER_ARRAY = new BasicProperty<>(\n+        QualifiedName.parse(\"0:RedundantServerArray\"),\n+        NodeId.parse(\"ns=0;i=853\"),\n+        1,\n+        RedundantServerDataType[].class\n+    );\n+\n+    String getCurrentServerId();\n+\n+    PropertyType getCurrentServerIdNode();\n+\n+    void setCurrentServerId(String value);\n+\n+    RedundantServerDataType[] getRedundantServerArray();\n+\n+    PropertyType getRedundantServerArrayNode();\n+\n+    void setRedundantServerArray(RedundantServerDataType[] value);\n+}"
        },
        {
            "sha": "fff6b59b32dfb8db7170f9e739d1ee613c9329f2",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TripAlarmType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTripAlarmType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTripAlarmType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTripAlarmType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface TripAlarmType extends OffNormalAlarmType {\n+\n+}"
        },
        {
            "sha": "0c8bc023d41c32ddb6b807bd098ce32339d6804f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TrustListType.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.sdk.core.model.variables.PropertyType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+public interface TrustListType extends FileType {\n+\n+    Property<DateTime> LAST_UPDATE_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastUpdateTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    DateTime getLastUpdateTime();\n+\n+    PropertyType getLastUpdateTimeNode();\n+\n+    void setLastUpdateTime(DateTime value);\n+}"
        },
        {
            "sha": "b0bb35d99c066ea6a60407dd422d81e87bd9d2f4",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/TrustListUpdatedAuditEventType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListUpdatedAuditEventType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListUpdatedAuditEventType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FTrustListUpdatedAuditEventType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface TrustListUpdatedAuditEventType extends AuditUpdateMethodEventType {\n+\n+}"
        },
        {
            "sha": "fd1b82c33eae1ff09d2f201af859e6184dab3771",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/objects/VendorServerInfoType.java",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FVendorServerInfoType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FVendorServerInfoType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fobjects%2FVendorServerInfoType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,18 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.objects;\n+\n+public interface VendorServerInfoType extends BaseObjectType {\n+\n+}"
        },
        {
            "sha": "a86668c4e276f7da6d288ad6e8e1d8f32d82b8f3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/AnalogItemType.java",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FAnalogItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FAnalogItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FAnalogItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EUInformation;\n+import org.eclipse.milo.opcua.stack.core.types.structured.Range;\n+\n+\n+public interface AnalogItemType extends DataItemType {\n+\n+    Property<Range> INSTRUMENT_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InstrumentRange\"),\n+        NodeId.parse(\"ns=0;i=884\"),\n+        -1,\n+        Range.class\n+    );\n+\n+    Property<Range> E_U_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EURange\"),\n+        NodeId.parse(\"ns=0;i=884\"),\n+        -1,\n+        Range.class\n+    );\n+\n+    Property<EUInformation> ENGINEERING_UNITS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EngineeringUnits\"),\n+        NodeId.parse(\"ns=0;i=887\"),\n+        -1,\n+        EUInformation.class\n+    );\n+\n+\n+    Range getInstrumentRange();\n+\n+    PropertyType getInstrumentRangeNode();\n+\n+    void setInstrumentRange(Range value);\n+\n+    Range getEURange();\n+\n+    PropertyType getEURangeNode();\n+\n+    void setEURange(Range value);\n+\n+    EUInformation getEngineeringUnits();\n+\n+    PropertyType getEngineeringUnitsNode();\n+\n+    void setEngineeringUnits(EUInformation value);\n+\n+}"
        },
        {
            "sha": "f5d8454d931963f055a4967b4d14c2bfd8aea622",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ArrayItemType.java",
            "status": "added",
            "additions": 94,
            "deletions": 0,
            "changes": 94,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FArrayItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FArrayItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FArrayItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.AxisScaleEnumeration;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EUInformation;\n+import org.eclipse.milo.opcua.stack.core.types.structured.Range;\n+\n+\n+public interface ArrayItemType extends DataItemType {\n+\n+    Property<Range> INSTRUMENT_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InstrumentRange\"),\n+        NodeId.parse(\"ns=0;i=884\"),\n+        -1,\n+        Range.class\n+    );\n+\n+    Property<Range> E_U_RANGE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EURange\"),\n+        NodeId.parse(\"ns=0;i=884\"),\n+        -1,\n+        Range.class\n+    );\n+\n+    Property<EUInformation> ENGINEERING_UNITS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EngineeringUnits\"),\n+        NodeId.parse(\"ns=0;i=887\"),\n+        -1,\n+        EUInformation.class\n+    );\n+\n+    Property<LocalizedText> TITLE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Title\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<AxisScaleEnumeration> AXIS_SCALE_TYPE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AxisScaleType\"),\n+        NodeId.parse(\"ns=0;i=12077\"),\n+        -1,\n+        AxisScaleEnumeration.class\n+    );\n+\n+\n+    Range getInstrumentRange();\n+\n+    PropertyType getInstrumentRangeNode();\n+\n+    void setInstrumentRange(Range value);\n+\n+    Range getEURange();\n+\n+    PropertyType getEURangeNode();\n+\n+    void setEURange(Range value);\n+\n+    EUInformation getEngineeringUnits();\n+\n+    PropertyType getEngineeringUnitsNode();\n+\n+    void setEngineeringUnits(EUInformation value);\n+\n+    LocalizedText getTitle();\n+\n+    PropertyType getTitleNode();\n+\n+    void setTitle(LocalizedText value);\n+\n+    AxisScaleEnumeration getAxisScaleType();\n+\n+    PropertyType getAxisScaleTypeNode();\n+\n+    void setAxisScaleType(AxisScaleEnumeration value);\n+\n+}"
        },
        {
            "sha": "aed226c0157bd5044d7b3a0e6ce90f00f6805e10",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/BaseDataVariableType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseDataVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseDataVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseDataVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface BaseDataVariableType extends BaseVariableType {\n+\n+\n+}"
        },
        {
            "sha": "f07e80a91971d1b35b030908e93f4ad62b844fc7",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/BaseVariableType.java",
            "status": "added",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBaseVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.nodes.VariableNode;\n+\n+\n+public interface BaseVariableType extends VariableNode {\n+\n+\n+}"
        },
        {
            "sha": "9e28df6f8b3533d5ebfe6bac059b0f998cccdd04",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/BuildInfoType.java",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBuildInfoType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBuildInfoType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FBuildInfoType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+\n+\n+public interface BuildInfoType extends BaseDataVariableType {\n+\n+\n+    String getProductUri();\n+\n+    BaseDataVariableType getProductUriNode();\n+\n+    void setProductUri(String value);\n+\n+    String getManufacturerName();\n+\n+    BaseDataVariableType getManufacturerNameNode();\n+\n+    void setManufacturerName(String value);\n+\n+    String getProductName();\n+\n+    BaseDataVariableType getProductNameNode();\n+\n+    void setProductName(String value);\n+\n+    String getSoftwareVersion();\n+\n+    BaseDataVariableType getSoftwareVersionNode();\n+\n+    void setSoftwareVersion(String value);\n+\n+    String getBuildNumber();\n+\n+    BaseDataVariableType getBuildNumberNode();\n+\n+    void setBuildNumber(String value);\n+\n+    DateTime getBuildDate();\n+\n+    BaseDataVariableType getBuildDateNode();\n+\n+    void setBuildDate(DateTime value);\n+}"
        },
        {
            "sha": "3184cc9e62037accb5be30d76a6dc7de5cb95b06",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ConditionVariableType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FConditionVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FConditionVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FConditionVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface ConditionVariableType extends BaseDataVariableType {\n+\n+    Property<DateTime> SOURCE_TIMESTAMP = new BasicProperty<>(\n+        QualifiedName.parse(\"0:SourceTimestamp\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+\n+    DateTime getSourceTimestamp();\n+\n+    PropertyType getSourceTimestampNode();\n+\n+    void setSourceTimestamp(DateTime value);\n+\n+}"
        },
        {
            "sha": "f75e45daea4551a7d6fd3df2f6a8d6e71457e36f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/CubeItemType.java",
            "status": "added",
            "additions": 65,
            "deletions": 0,
            "changes": 65,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FCubeItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FCubeItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FCubeItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AxisInformation;\n+\n+\n+public interface CubeItemType extends ArrayItemType {\n+\n+    Property<AxisInformation> X_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:XAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+    Property<AxisInformation> Y_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:YAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+    Property<AxisInformation> Z_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ZAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+\n+    AxisInformation getXAxisDefinition();\n+\n+    PropertyType getXAxisDefinitionNode();\n+\n+    void setXAxisDefinition(AxisInformation value);\n+\n+    AxisInformation getYAxisDefinition();\n+\n+    PropertyType getYAxisDefinitionNode();\n+\n+    void setYAxisDefinition(AxisInformation value);\n+\n+    AxisInformation getZAxisDefinition();\n+\n+    PropertyType getZAxisDefinitionNode();\n+\n+    void setZAxisDefinition(AxisInformation value);\n+\n+}"
        },
        {
            "sha": "5f7c2f89264d5575fe2c616bfcd8ef29c28ea9a5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/DataItemType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface DataItemType extends BaseDataVariableType {\n+\n+    Property<String> DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Definition\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<Double> VALUE_PRECISION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ValuePrecision\"),\n+        NodeId.parse(\"ns=0;i=11\"),\n+        -1,\n+        Double.class\n+    );\n+\n+\n+    String getDefinition();\n+\n+    PropertyType getDefinitionNode();\n+\n+    void setDefinition(String value);\n+\n+    Double getValuePrecision();\n+\n+    PropertyType getValuePrecisionNode();\n+\n+    void setValuePrecision(Double value);\n+\n+}"
        },
        {
            "sha": "f4f05458b262d84d34bf29b29776c99c33139e60",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/DataTypeDescriptionType.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDescriptionType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDescriptionType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDescriptionType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface DataTypeDescriptionType extends BaseDataVariableType {\n+\n+    Property<String> DATA_TYPE_VERSION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DataTypeVersion\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<ByteString> DICTIONARY_FRAGMENT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DictionaryFragment\"),\n+        NodeId.parse(\"ns=0;i=15\"),\n+        -1,\n+        ByteString.class\n+    );\n+\n+\n+    String getDataTypeVersion();\n+\n+    PropertyType getDataTypeVersionNode();\n+\n+    void setDataTypeVersion(String value);\n+\n+    ByteString getDictionaryFragment();\n+\n+    PropertyType getDictionaryFragmentNode();\n+\n+    void setDictionaryFragment(ByteString value);\n+\n+}"
        },
        {
            "sha": "39b0ce3210a5e7ce795a7de02f56610906e72491",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/DataTypeDictionaryType.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDictionaryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDictionaryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDataTypeDictionaryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface DataTypeDictionaryType extends BaseDataVariableType {\n+\n+    Property<String> DATA_TYPE_VERSION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:DataTypeVersion\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<String> NAMESPACE_URI = new BasicProperty<>(\n+        QualifiedName.parse(\"0:NamespaceUri\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+\n+    String getDataTypeVersion();\n+\n+    PropertyType getDataTypeVersionNode();\n+\n+    void setDataTypeVersion(String value);\n+\n+    String getNamespaceUri();\n+\n+    PropertyType getNamespaceUriNode();\n+\n+    void setNamespaceUri(String value);\n+\n+}"
        },
        {
            "sha": "0c02ff8f82589c55d9d728f9556cae2d77bf3b1b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/DiscreteItemType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDiscreteItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDiscreteItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FDiscreteItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface DiscreteItemType extends DataItemType {\n+\n+\n+}"
        },
        {
            "sha": "de683f029e4613025d836b255d4ab68b8762e352",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/FiniteStateVariableType.java",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteStateVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteStateVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteStateVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface FiniteStateVariableType extends StateVariableType {\n+\n+    Property<NodeId> ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Id\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+\n+    NodeId getId();\n+\n+    PropertyType getIdNode();\n+\n+    void setId(NodeId value);\n+\n+}"
        },
        {
            "sha": "ded74e0f218dc04dbd925817451113609db7c4ba",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/FiniteTransitionVariableType.java",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteTransitionVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteTransitionVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FFiniteTransitionVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface FiniteTransitionVariableType extends TransitionVariableType {\n+\n+    Property<NodeId> ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Id\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+\n+    NodeId getId();\n+\n+    PropertyType getIdNode();\n+\n+    void setId(NodeId value);\n+\n+}"
        },
        {
            "sha": "5877640f80cfa6157a247731e98925a13b89d141",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ImageItemType.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FImageItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FImageItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FImageItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AxisInformation;\n+\n+\n+public interface ImageItemType extends ArrayItemType {\n+\n+    Property<AxisInformation> X_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:XAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+    Property<AxisInformation> Y_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:YAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+\n+    AxisInformation getXAxisDefinition();\n+\n+    PropertyType getXAxisDefinitionNode();\n+\n+    void setXAxisDefinition(AxisInformation value);\n+\n+    AxisInformation getYAxisDefinition();\n+\n+    PropertyType getYAxisDefinitionNode();\n+\n+    void setYAxisDefinition(AxisInformation value);\n+\n+}"
        },
        {
            "sha": "0c7ed903d4f2cf64308691316d52af8d5a6933af",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/MultiStateDiscreteType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateDiscreteType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateDiscreteType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateDiscreteType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface MultiStateDiscreteType extends DiscreteItemType {\n+\n+    Property<LocalizedText[]> ENUM_STRINGS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EnumStrings\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        1,\n+        LocalizedText[].class\n+    );\n+\n+\n+    LocalizedText[] getEnumStrings();\n+\n+    PropertyType getEnumStringsNode();\n+\n+    void setEnumStrings(LocalizedText[] value);\n+\n+}"
        },
        {
            "sha": "3d304bb94d0c683d2ac4c84803eec40d4c7fd9c7",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/MultiStateValueDiscreteType.java",
            "status": "added",
            "additions": 53,
            "deletions": 0,
            "changes": 53,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateValueDiscreteType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateValueDiscreteType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FMultiStateValueDiscreteType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EnumValueType;\n+\n+\n+public interface MultiStateValueDiscreteType extends DiscreteItemType {\n+\n+    Property<EnumValueType[]> ENUM_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EnumValues\"),\n+        NodeId.parse(\"ns=0;i=7594\"),\n+        1,\n+        EnumValueType[].class\n+    );\n+\n+    Property<LocalizedText> VALUE_AS_TEXT = new BasicProperty<>(\n+        QualifiedName.parse(\"0:ValueAsText\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+\n+    EnumValueType[] getEnumValues();\n+\n+    PropertyType getEnumValuesNode();\n+\n+    void setEnumValues(EnumValueType[] value);\n+\n+    LocalizedText getValueAsText();\n+\n+    PropertyType getValueAsTextNode();\n+\n+    void setValueAsText(LocalizedText value);\n+\n+}"
        },
        {
            "sha": "9f0f5f2af60acd44a3d24a5191b38350bee2ac10",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/NDimensionArrayItemType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FNDimensionArrayItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FNDimensionArrayItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FNDimensionArrayItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AxisInformation;\n+\n+\n+public interface NDimensionArrayItemType extends ArrayItemType {\n+\n+    Property<AxisInformation[]> AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:AxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        1,\n+        AxisInformation[].class\n+    );\n+\n+\n+    AxisInformation[] getAxisDefinition();\n+\n+    PropertyType getAxisDefinitionNode();\n+\n+    void setAxisDefinition(AxisInformation[] value);\n+\n+}"
        },
        {
            "sha": "dac6306c1981e67ee8b9ffaeed00b1d9ff553a2f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/OptionSetType.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FOptionSetType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FOptionSetType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FOptionSetType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface OptionSetType extends BaseDataVariableType {\n+\n+    Property<LocalizedText[]> OPTION_SET_VALUES = new BasicProperty<>(\n+        QualifiedName.parse(\"0:OptionSetValues\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        1,\n+        LocalizedText[].class\n+    );\n+\n+    Property<Boolean[]> BIT_MASK = new BasicProperty<>(\n+        QualifiedName.parse(\"0:BitMask\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        1,\n+        Boolean[].class\n+    );\n+\n+\n+    LocalizedText[] getOptionSetValues();\n+\n+    PropertyType getOptionSetValuesNode();\n+\n+    void setOptionSetValues(LocalizedText[] value);\n+\n+    Boolean[] getBitMask();\n+\n+    PropertyType getBitMaskNode();\n+\n+    void setBitMask(Boolean[] value);\n+\n+}"
        },
        {
            "sha": "0b23d357cc34f65a49a182a5465faeed617d56b3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ProgramDiagnosticType.java",
            "status": "added",
            "additions": 158,
            "deletions": 0,
            "changes": 158,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FProgramDiagnosticType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FProgramDiagnosticType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FProgramDiagnosticType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.Argument;\n+import org.eclipse.milo.opcua.stack.core.types.structured.StatusResult;\n+\n+\n+public interface ProgramDiagnosticType extends BaseDataVariableType {\n+\n+    Property<NodeId> CREATE_SESSION_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CreateSessionId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<String> CREATE_CLIENT_NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:CreateClientName\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<DateTime> INVOCATION_CREATION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:InvocationCreationTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> LAST_TRANSITION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastTransitionTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<String> LAST_METHOD_CALL = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodCall\"),\n+        NodeId.parse(\"ns=0;i=12\"),\n+        -1,\n+        String.class\n+    );\n+\n+    Property<NodeId> LAST_METHOD_SESSION_ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodSessionId\"),\n+        NodeId.parse(\"ns=0;i=17\"),\n+        -1,\n+        NodeId.class\n+    );\n+\n+    Property<Argument[]> LAST_METHOD_INPUT_ARGUMENTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodInputArguments\"),\n+        NodeId.parse(\"ns=0;i=296\"),\n+        1,\n+        Argument[].class\n+    );\n+\n+    Property<Argument[]> LAST_METHOD_OUTPUT_ARGUMENTS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodOutputArguments\"),\n+        NodeId.parse(\"ns=0;i=296\"),\n+        1,\n+        Argument[].class\n+    );\n+\n+    Property<DateTime> LAST_METHOD_CALL_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodCallTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<StatusResult> LAST_METHOD_RETURN_STATUS = new BasicProperty<>(\n+        QualifiedName.parse(\"0:LastMethodReturnStatus\"),\n+        NodeId.parse(\"ns=0;i=299\"),\n+        -1,\n+        StatusResult.class\n+    );\n+\n+\n+    NodeId getCreateSessionId();\n+\n+    PropertyType getCreateSessionIdNode();\n+\n+    void setCreateSessionId(NodeId value);\n+\n+    String getCreateClientName();\n+\n+    PropertyType getCreateClientNameNode();\n+\n+    void setCreateClientName(String value);\n+\n+    DateTime getInvocationCreationTime();\n+\n+    PropertyType getInvocationCreationTimeNode();\n+\n+    void setInvocationCreationTime(DateTime value);\n+\n+    DateTime getLastTransitionTime();\n+\n+    PropertyType getLastTransitionTimeNode();\n+\n+    void setLastTransitionTime(DateTime value);\n+\n+    String getLastMethodCall();\n+\n+    PropertyType getLastMethodCallNode();\n+\n+    void setLastMethodCall(String value);\n+\n+    NodeId getLastMethodSessionId();\n+\n+    PropertyType getLastMethodSessionIdNode();\n+\n+    void setLastMethodSessionId(NodeId value);\n+\n+    Argument[] getLastMethodInputArguments();\n+\n+    PropertyType getLastMethodInputArgumentsNode();\n+\n+    void setLastMethodInputArguments(Argument[] value);\n+\n+    Argument[] getLastMethodOutputArguments();\n+\n+    PropertyType getLastMethodOutputArgumentsNode();\n+\n+    void setLastMethodOutputArguments(Argument[] value);\n+\n+    DateTime getLastMethodCallTime();\n+\n+    PropertyType getLastMethodCallTimeNode();\n+\n+    void setLastMethodCallTime(DateTime value);\n+\n+    StatusResult getLastMethodReturnStatus();\n+\n+    PropertyType getLastMethodReturnStatusNode();\n+\n+    void setLastMethodReturnStatus(StatusResult value);\n+\n+}"
        },
        {
            "sha": "c658efb8a3a3f3688e0848aa71de5f5d13f9bea2",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/PropertyType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FPropertyType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FPropertyType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FPropertyType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface PropertyType extends BaseVariableType {\n+\n+\n+}"
        },
        {
            "sha": "6ef956e61c95835dcb5622778f73e14fdef1273e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SamplingIntervalDiagnosticsArrayType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsArrayType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsArrayType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsArrayType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface SamplingIntervalDiagnosticsArrayType extends BaseDataVariableType {\n+\n+\n+}"
        },
        {
            "sha": "9fff8e3d8ebf7e860e2a4e74ca29fff85de1591b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SamplingIntervalDiagnosticsType.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSamplingIntervalDiagnosticsType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+\n+public interface SamplingIntervalDiagnosticsType extends BaseDataVariableType {\n+\n+\n+    Double getSamplingInterval();\n+\n+    BaseDataVariableType getSamplingIntervalNode();\n+\n+    void setSamplingInterval(Double value);\n+\n+    UInteger getSampledMonitoredItemsCount();\n+\n+    BaseDataVariableType getSampledMonitoredItemsCountNode();\n+\n+    void setSampledMonitoredItemsCount(UInteger value);\n+\n+    UInteger getMaxSampledMonitoredItemsCount();\n+\n+    BaseDataVariableType getMaxSampledMonitoredItemsCountNode();\n+\n+    void setMaxSampledMonitoredItemsCount(UInteger value);\n+\n+    UInteger getDisabledMonitoredItemsSamplingCount();\n+\n+    BaseDataVariableType getDisabledMonitoredItemsSamplingCountNode();\n+\n+    void setDisabledMonitoredItemsSamplingCount(UInteger value);\n+}"
        },
        {
            "sha": "7392423b4d5e258a33a45c2d69d8dda2731ca08e",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ServerDiagnosticsSummaryType.java",
            "status": "added",
            "additions": 93,
            "deletions": 0,
            "changes": 93,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerDiagnosticsSummaryType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerDiagnosticsSummaryType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerDiagnosticsSummaryType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+\n+public interface ServerDiagnosticsSummaryType extends BaseDataVariableType {\n+\n+\n+    UInteger getServerViewCount();\n+\n+    BaseDataVariableType getServerViewCountNode();\n+\n+    void setServerViewCount(UInteger value);\n+\n+    UInteger getCurrentSessionCount();\n+\n+    BaseDataVariableType getCurrentSessionCountNode();\n+\n+    void setCurrentSessionCount(UInteger value);\n+\n+    UInteger getCumulatedSessionCount();\n+\n+    BaseDataVariableType getCumulatedSessionCountNode();\n+\n+    void setCumulatedSessionCount(UInteger value);\n+\n+    UInteger getSecurityRejectedSessionCount();\n+\n+    BaseDataVariableType getSecurityRejectedSessionCountNode();\n+\n+    void setSecurityRejectedSessionCount(UInteger value);\n+\n+    UInteger getRejectedSessionCount();\n+\n+    BaseDataVariableType getRejectedSessionCountNode();\n+\n+    void setRejectedSessionCount(UInteger value);\n+\n+    UInteger getSessionTimeoutCount();\n+\n+    BaseDataVariableType getSessionTimeoutCountNode();\n+\n+    void setSessionTimeoutCount(UInteger value);\n+\n+    UInteger getSessionAbortCount();\n+\n+    BaseDataVariableType getSessionAbortCountNode();\n+\n+    void setSessionAbortCount(UInteger value);\n+\n+    UInteger getPublishingIntervalCount();\n+\n+    BaseDataVariableType getPublishingIntervalCountNode();\n+\n+    void setPublishingIntervalCount(UInteger value);\n+\n+    UInteger getCurrentSubscriptionCount();\n+\n+    BaseDataVariableType getCurrentSubscriptionCountNode();\n+\n+    void setCurrentSubscriptionCount(UInteger value);\n+\n+    UInteger getCumulatedSubscriptionCount();\n+\n+    BaseDataVariableType getCumulatedSubscriptionCountNode();\n+\n+    void setCumulatedSubscriptionCount(UInteger value);\n+\n+    UInteger getSecurityRejectedRequestsCount();\n+\n+    BaseDataVariableType getSecurityRejectedRequestsCountNode();\n+\n+    void setSecurityRejectedRequestsCount(UInteger value);\n+\n+    UInteger getRejectedRequestsCount();\n+\n+    BaseDataVariableType getRejectedRequestsCountNode();\n+\n+    void setRejectedRequestsCount(UInteger value);\n+}"
        },
        {
            "sha": "8fbe43e188c64d6dbfd36fc473d1ac7161768789",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ServerStatusType.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerStatusType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerStatusType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerStatusType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.ServerState;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo;\n+\n+\n+public interface ServerStatusType extends BaseDataVariableType {\n+\n+\n+    DateTime getStartTime();\n+\n+    BaseDataVariableType getStartTimeNode();\n+\n+    void setStartTime(DateTime value);\n+\n+    DateTime getCurrentTime();\n+\n+    BaseDataVariableType getCurrentTimeNode();\n+\n+    void setCurrentTime(DateTime value);\n+\n+    ServerState getState();\n+\n+    BaseDataVariableType getStateNode();\n+\n+    void setState(ServerState value);\n+\n+    BuildInfo getBuildInfo();\n+\n+    BuildInfoType getBuildInfoNode();\n+\n+    void setBuildInfo(BuildInfo value);\n+\n+    UInteger getSecondsTillShutdown();\n+\n+    BaseDataVariableType getSecondsTillShutdownNode();\n+\n+    void setSecondsTillShutdown(UInteger value);\n+\n+    LocalizedText getShutdownReason();\n+\n+    BaseDataVariableType getShutdownReasonNode();\n+\n+    void setShutdownReason(LocalizedText value);\n+}"
        },
        {
            "sha": "8b7fc98cc58366952dddb80724cecaa1121a8fb3",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/ServerVendorCapabilityType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerVendorCapabilityType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerVendorCapabilityType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FServerVendorCapabilityType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface ServerVendorCapabilityType extends BaseDataVariableType {\n+\n+\n+}"
        },
        {
            "sha": "739406902948cafd34e92f4a1fd678b2f7ecb917",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SessionDiagnosticsArrayType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsArrayType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsArrayType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsArrayType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface SessionDiagnosticsArrayType extends BaseDataVariableType {\n+\n+\n+}"
        },
        {
            "sha": "4249f3b125f5836a4fbc2fc87d859eca46a4e1a2",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SessionDiagnosticsVariableType.java",
            "status": "added",
            "additions": 283,
            "deletions": 0,
            "changes": 283,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionDiagnosticsVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,283 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ApplicationDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ServiceCounterDataType;\n+\n+\n+public interface SessionDiagnosticsVariableType extends BaseDataVariableType {\n+\n+\n+    NodeId getSessionId();\n+\n+    BaseDataVariableType getSessionIdNode();\n+\n+    void setSessionId(NodeId value);\n+\n+    String getSessionName();\n+\n+    BaseDataVariableType getSessionNameNode();\n+\n+    void setSessionName(String value);\n+\n+    ApplicationDescription getClientDescription();\n+\n+    BaseDataVariableType getClientDescriptionNode();\n+\n+    void setClientDescription(ApplicationDescription value);\n+\n+    String getServerUri();\n+\n+    BaseDataVariableType getServerUriNode();\n+\n+    void setServerUri(String value);\n+\n+    String getEndpointUrl();\n+\n+    BaseDataVariableType getEndpointUrlNode();\n+\n+    void setEndpointUrl(String value);\n+\n+    String[] getLocaleIds();\n+\n+    BaseDataVariableType getLocaleIdsNode();\n+\n+    void setLocaleIds(String[] value);\n+\n+    Double getActualSessionTimeout();\n+\n+    BaseDataVariableType getActualSessionTimeoutNode();\n+\n+    void setActualSessionTimeout(Double value);\n+\n+    UInteger getMaxResponseMessageSize();\n+\n+    BaseDataVariableType getMaxResponseMessageSizeNode();\n+\n+    void setMaxResponseMessageSize(UInteger value);\n+\n+    DateTime getClientConnectionTime();\n+\n+    BaseDataVariableType getClientConnectionTimeNode();\n+\n+    void setClientConnectionTime(DateTime value);\n+\n+    DateTime getClientLastContactTime();\n+\n+    BaseDataVariableType getClientLastContactTimeNode();\n+\n+    void setClientLastContactTime(DateTime value);\n+\n+    UInteger getCurrentSubscriptionsCount();\n+\n+    BaseDataVariableType getCurrentSubscriptionsCountNode();\n+\n+    void setCurrentSubscriptionsCount(UInteger value);\n+\n+    UInteger getCurrentMonitoredItemsCount();\n+\n+    BaseDataVariableType getCurrentMonitoredItemsCountNode();\n+\n+    void setCurrentMonitoredItemsCount(UInteger value);\n+\n+    UInteger getCurrentPublishRequestsInQueue();\n+\n+    BaseDataVariableType getCurrentPublishRequestsInQueueNode();\n+\n+    void setCurrentPublishRequestsInQueue(UInteger value);\n+\n+    ServiceCounterDataType getTotalRequestCount();\n+\n+    BaseDataVariableType getTotalRequestCountNode();\n+\n+    void setTotalRequestCount(ServiceCounterDataType value);\n+\n+    UInteger getUnauthorizedRequestCount();\n+\n+    BaseDataVariableType getUnauthorizedRequestCountNode();\n+\n+    void setUnauthorizedRequestCount(UInteger value);\n+\n+    ServiceCounterDataType getReadCount();\n+\n+    BaseDataVariableType getReadCountNode();\n+\n+    void setReadCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getHistoryReadCount();\n+\n+    BaseDataVariableType getHistoryReadCountNode();\n+\n+    void setHistoryReadCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getWriteCount();\n+\n+    BaseDataVariableType getWriteCountNode();\n+\n+    void setWriteCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getHistoryUpdateCount();\n+\n+    BaseDataVariableType getHistoryUpdateCountNode();\n+\n+    void setHistoryUpdateCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getCallCount();\n+\n+    BaseDataVariableType getCallCountNode();\n+\n+    void setCallCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getCreateMonitoredItemsCount();\n+\n+    BaseDataVariableType getCreateMonitoredItemsCountNode();\n+\n+    void setCreateMonitoredItemsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getModifyMonitoredItemsCount();\n+\n+    BaseDataVariableType getModifyMonitoredItemsCountNode();\n+\n+    void setModifyMonitoredItemsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getSetMonitoringModeCount();\n+\n+    BaseDataVariableType getSetMonitoringModeCountNode();\n+\n+    void setSetMonitoringModeCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getSetTriggeringCount();\n+\n+    BaseDataVariableType getSetTriggeringCountNode();\n+\n+    void setSetTriggeringCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getDeleteMonitoredItemsCount();\n+\n+    BaseDataVariableType getDeleteMonitoredItemsCountNode();\n+\n+    void setDeleteMonitoredItemsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getCreateSubscriptionCount();\n+\n+    BaseDataVariableType getCreateSubscriptionCountNode();\n+\n+    void setCreateSubscriptionCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getModifySubscriptionCount();\n+\n+    BaseDataVariableType getModifySubscriptionCountNode();\n+\n+    void setModifySubscriptionCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getSetPublishingModeCount();\n+\n+    BaseDataVariableType getSetPublishingModeCountNode();\n+\n+    void setSetPublishingModeCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getPublishCount();\n+\n+    BaseDataVariableType getPublishCountNode();\n+\n+    void setPublishCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getRepublishCount();\n+\n+    BaseDataVariableType getRepublishCountNode();\n+\n+    void setRepublishCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getTransferSubscriptionsCount();\n+\n+    BaseDataVariableType getTransferSubscriptionsCountNode();\n+\n+    void setTransferSubscriptionsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getDeleteSubscriptionsCount();\n+\n+    BaseDataVariableType getDeleteSubscriptionsCountNode();\n+\n+    void setDeleteSubscriptionsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getAddNodesCount();\n+\n+    BaseDataVariableType getAddNodesCountNode();\n+\n+    void setAddNodesCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getAddReferencesCount();\n+\n+    BaseDataVariableType getAddReferencesCountNode();\n+\n+    void setAddReferencesCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getDeleteNodesCount();\n+\n+    BaseDataVariableType getDeleteNodesCountNode();\n+\n+    void setDeleteNodesCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getDeleteReferencesCount();\n+\n+    BaseDataVariableType getDeleteReferencesCountNode();\n+\n+    void setDeleteReferencesCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getBrowseCount();\n+\n+    BaseDataVariableType getBrowseCountNode();\n+\n+    void setBrowseCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getBrowseNextCount();\n+\n+    BaseDataVariableType getBrowseNextCountNode();\n+\n+    void setBrowseNextCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getTranslateBrowsePathsToNodeIdsCount();\n+\n+    BaseDataVariableType getTranslateBrowsePathsToNodeIdsCountNode();\n+\n+    void setTranslateBrowsePathsToNodeIdsCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getQueryFirstCount();\n+\n+    BaseDataVariableType getQueryFirstCountNode();\n+\n+    void setQueryFirstCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getQueryNextCount();\n+\n+    BaseDataVariableType getQueryNextCountNode();\n+\n+    void setQueryNextCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getRegisterNodesCount();\n+\n+    BaseDataVariableType getRegisterNodesCountNode();\n+\n+    void setRegisterNodesCount(ServiceCounterDataType value);\n+\n+    ServiceCounterDataType getUnregisterNodesCount();\n+\n+    BaseDataVariableType getUnregisterNodesCountNode();\n+\n+    void setUnregisterNodesCount(ServiceCounterDataType value);\n+}"
        },
        {
            "sha": "ea40214091f77f3df98bdc52cdb83e3d9d56994d",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SessionSecurityDiagnosticsArrayType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsArrayType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsArrayType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsArrayType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface SessionSecurityDiagnosticsArrayType extends BaseDataVariableType {\n+\n+\n+}"
        },
        {
            "sha": "1b3cb451852e1861d8f5dc297de1502d9fb8a759",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SessionSecurityDiagnosticsType.java",
            "status": "added",
            "additions": 77,
            "deletions": 0,
            "changes": 77,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSessionSecurityDiagnosticsType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MessageSecurityMode;\n+\n+\n+public interface SessionSecurityDiagnosticsType extends BaseDataVariableType {\n+\n+\n+    NodeId getSessionId();\n+\n+    BaseDataVariableType getSessionIdNode();\n+\n+    void setSessionId(NodeId value);\n+\n+    String getClientUserIdOfSession();\n+\n+    BaseDataVariableType getClientUserIdOfSessionNode();\n+\n+    void setClientUserIdOfSession(String value);\n+\n+    String[] getClientUserIdHistory();\n+\n+    BaseDataVariableType getClientUserIdHistoryNode();\n+\n+    void setClientUserIdHistory(String[] value);\n+\n+    String getAuthenticationMechanism();\n+\n+    BaseDataVariableType getAuthenticationMechanismNode();\n+\n+    void setAuthenticationMechanism(String value);\n+\n+    String getEncoding();\n+\n+    BaseDataVariableType getEncodingNode();\n+\n+    void setEncoding(String value);\n+\n+    String getTransportProtocol();\n+\n+    BaseDataVariableType getTransportProtocolNode();\n+\n+    void setTransportProtocol(String value);\n+\n+    MessageSecurityMode getSecurityMode();\n+\n+    BaseDataVariableType getSecurityModeNode();\n+\n+    void setSecurityMode(MessageSecurityMode value);\n+\n+    String getSecurityPolicyUri();\n+\n+    BaseDataVariableType getSecurityPolicyUriNode();\n+\n+    void setSecurityPolicyUri(String value);\n+\n+    ByteString getClientCertificate();\n+\n+    BaseDataVariableType getClientCertificateNode();\n+\n+    void setClientCertificate(ByteString value);\n+}"
        },
        {
            "sha": "e16866f2b77cad5a172276cc5ad61bcdecc89e24",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/StateVariableType.java",
            "status": "added",
            "additions": 79,
            "deletions": 0,
            "changes": 79,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FStateVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FStateVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FStateVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+\n+public interface StateVariableType extends BaseDataVariableType {\n+\n+    Property<Object> ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Id\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Property<QualifiedName> NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Name\"),\n+        NodeId.parse(\"ns=0;i=20\"),\n+        -1,\n+        QualifiedName.class\n+    );\n+\n+    Property<UInteger> NUMBER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Number\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<LocalizedText> EFFECTIVE_DISPLAY_NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EffectiveDisplayName\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+\n+    Object getId();\n+\n+    PropertyType getIdNode();\n+\n+    void setId(Object value);\n+\n+    QualifiedName getName();\n+\n+    PropertyType getNameNode();\n+\n+    void setName(QualifiedName value);\n+\n+    UInteger getNumber();\n+\n+    PropertyType getNumberNode();\n+\n+    void setNumber(UInteger value);\n+\n+    LocalizedText getEffectiveDisplayName();\n+\n+    PropertyType getEffectiveDisplayNameNode();\n+\n+    void setEffectiveDisplayName(LocalizedText value);\n+\n+}"
        },
        {
            "sha": "ea693072504c457ee6c060c9ae27b56b15f165fd",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SubscriptionDiagnosticsArrayType.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsArrayType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsArrayType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsArrayType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+public interface SubscriptionDiagnosticsArrayType extends BaseDataVariableType {\n+\n+\n+}"
        },
        {
            "sha": "8f6a26eafc112a6ec1430b22dcd43fb9c09d34fe",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/SubscriptionDiagnosticsType.java",
            "status": "added",
            "additions": 209,
            "deletions": 0,
            "changes": 209,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FSubscriptionDiagnosticsType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,209 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+\n+public interface SubscriptionDiagnosticsType extends BaseDataVariableType {\n+\n+\n+    NodeId getSessionId();\n+\n+    BaseDataVariableType getSessionIdNode();\n+\n+    void setSessionId(NodeId value);\n+\n+    UInteger getSubscriptionId();\n+\n+    BaseDataVariableType getSubscriptionIdNode();\n+\n+    void setSubscriptionId(UInteger value);\n+\n+    UByte getPriority();\n+\n+    BaseDataVariableType getPriorityNode();\n+\n+    void setPriority(UByte value);\n+\n+    Double getPublishingInterval();\n+\n+    BaseDataVariableType getPublishingIntervalNode();\n+\n+    void setPublishingInterval(Double value);\n+\n+    UInteger getMaxKeepAliveCount();\n+\n+    BaseDataVariableType getMaxKeepAliveCountNode();\n+\n+    void setMaxKeepAliveCount(UInteger value);\n+\n+    UInteger getMaxLifetimeCount();\n+\n+    BaseDataVariableType getMaxLifetimeCountNode();\n+\n+    void setMaxLifetimeCount(UInteger value);\n+\n+    UInteger getMaxNotificationsPerPublish();\n+\n+    BaseDataVariableType getMaxNotificationsPerPublishNode();\n+\n+    void setMaxNotificationsPerPublish(UInteger value);\n+\n+    Boolean getPublishingEnabled();\n+\n+    BaseDataVariableType getPublishingEnabledNode();\n+\n+    void setPublishingEnabled(Boolean value);\n+\n+    UInteger getModifyCount();\n+\n+    BaseDataVariableType getModifyCountNode();\n+\n+    void setModifyCount(UInteger value);\n+\n+    UInteger getEnableCount();\n+\n+    BaseDataVariableType getEnableCountNode();\n+\n+    void setEnableCount(UInteger value);\n+\n+    UInteger getDisableCount();\n+\n+    BaseDataVariableType getDisableCountNode();\n+\n+    void setDisableCount(UInteger value);\n+\n+    UInteger getRepublishRequestCount();\n+\n+    BaseDataVariableType getRepublishRequestCountNode();\n+\n+    void setRepublishRequestCount(UInteger value);\n+\n+    UInteger getRepublishMessageRequestCount();\n+\n+    BaseDataVariableType getRepublishMessageRequestCountNode();\n+\n+    void setRepublishMessageRequestCount(UInteger value);\n+\n+    UInteger getRepublishMessageCount();\n+\n+    BaseDataVariableType getRepublishMessageCountNode();\n+\n+    void setRepublishMessageCount(UInteger value);\n+\n+    UInteger getTransferRequestCount();\n+\n+    BaseDataVariableType getTransferRequestCountNode();\n+\n+    void setTransferRequestCount(UInteger value);\n+\n+    UInteger getTransferredToAltClientCount();\n+\n+    BaseDataVariableType getTransferredToAltClientCountNode();\n+\n+    void setTransferredToAltClientCount(UInteger value);\n+\n+    UInteger getTransferredToSameClientCount();\n+\n+    BaseDataVariableType getTransferredToSameClientCountNode();\n+\n+    void setTransferredToSameClientCount(UInteger value);\n+\n+    UInteger getPublishRequestCount();\n+\n+    BaseDataVariableType getPublishRequestCountNode();\n+\n+    void setPublishRequestCount(UInteger value);\n+\n+    UInteger getDataChangeNotificationsCount();\n+\n+    BaseDataVariableType getDataChangeNotificationsCountNode();\n+\n+    void setDataChangeNotificationsCount(UInteger value);\n+\n+    UInteger getEventNotificationsCount();\n+\n+    BaseDataVariableType getEventNotificationsCountNode();\n+\n+    void setEventNotificationsCount(UInteger value);\n+\n+    UInteger getNotificationsCount();\n+\n+    BaseDataVariableType getNotificationsCountNode();\n+\n+    void setNotificationsCount(UInteger value);\n+\n+    UInteger getLatePublishRequestCount();\n+\n+    BaseDataVariableType getLatePublishRequestCountNode();\n+\n+    void setLatePublishRequestCount(UInteger value);\n+\n+    UInteger getCurrentKeepAliveCount();\n+\n+    BaseDataVariableType getCurrentKeepAliveCountNode();\n+\n+    void setCurrentKeepAliveCount(UInteger value);\n+\n+    UInteger getCurrentLifetimeCount();\n+\n+    BaseDataVariableType getCurrentLifetimeCountNode();\n+\n+    void setCurrentLifetimeCount(UInteger value);\n+\n+    UInteger getUnacknowledgedMessageCount();\n+\n+    BaseDataVariableType getUnacknowledgedMessageCountNode();\n+\n+    void setUnacknowledgedMessageCount(UInteger value);\n+\n+    UInteger getDiscardedMessageCount();\n+\n+    BaseDataVariableType getDiscardedMessageCountNode();\n+\n+    void setDiscardedMessageCount(UInteger value);\n+\n+    UInteger getMonitoredItemCount();\n+\n+    BaseDataVariableType getMonitoredItemCountNode();\n+\n+    void setMonitoredItemCount(UInteger value);\n+\n+    UInteger getDisabledMonitoredItemCount();\n+\n+    BaseDataVariableType getDisabledMonitoredItemCountNode();\n+\n+    void setDisabledMonitoredItemCount(UInteger value);\n+\n+    UInteger getMonitoringQueueOverflowCount();\n+\n+    BaseDataVariableType getMonitoringQueueOverflowCountNode();\n+\n+    void setMonitoringQueueOverflowCount(UInteger value);\n+\n+    UInteger getNextSequenceNumber();\n+\n+    BaseDataVariableType getNextSequenceNumberNode();\n+\n+    void setNextSequenceNumber(UInteger value);\n+\n+    UInteger getEventQueueOverFlowCount();\n+\n+    BaseDataVariableType getEventQueueOverFlowCountNode();\n+\n+    void setEventQueueOverFlowCount(UInteger value);\n+}"
        },
        {
            "sha": "4107fb4cba4644a34d7099fc2d2396c09747d725",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/TransitionVariableType.java",
            "status": "added",
            "additions": 92,
            "deletions": 0,
            "changes": 92,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTransitionVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTransitionVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTransitionVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+\n+public interface TransitionVariableType extends BaseDataVariableType {\n+\n+    Property<Object> ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Id\"),\n+        NodeId.parse(\"ns=0;i=24\"),\n+        -1,\n+        Object.class\n+    );\n+\n+    Property<QualifiedName> NAME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Name\"),\n+        NodeId.parse(\"ns=0;i=20\"),\n+        -1,\n+        QualifiedName.class\n+    );\n+\n+    Property<UInteger> NUMBER = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Number\"),\n+        NodeId.parse(\"ns=0;i=7\"),\n+        -1,\n+        UInteger.class\n+    );\n+\n+    Property<DateTime> TRANSITION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TransitionTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> EFFECTIVE_TRANSITION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EffectiveTransitionTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+\n+    Object getId();\n+\n+    PropertyType getIdNode();\n+\n+    void setId(Object value);\n+\n+    QualifiedName getName();\n+\n+    PropertyType getNameNode();\n+\n+    void setName(QualifiedName value);\n+\n+    UInteger getNumber();\n+\n+    PropertyType getNumberNode();\n+\n+    void setNumber(UInteger value);\n+\n+    DateTime getTransitionTime();\n+\n+    PropertyType getTransitionTimeNode();\n+\n+    void setTransitionTime(DateTime value);\n+\n+    DateTime getEffectiveTransitionTime();\n+\n+    PropertyType getEffectiveTransitionTimeNode();\n+\n+    void setEffectiveTransitionTime(DateTime value);\n+\n+}"
        },
        {
            "sha": "66b0e84559296b83937527bf6ce6854993c50142",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/TwoStateDiscreteType.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateDiscreteType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateDiscreteType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateDiscreteType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface TwoStateDiscreteType extends DiscreteItemType {\n+\n+    Property<LocalizedText> FALSE_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:FalseState\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<LocalizedText> TRUE_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TrueState\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+\n+    LocalizedText getFalseState();\n+\n+    PropertyType getFalseStateNode();\n+\n+    void setFalseState(LocalizedText value);\n+\n+    LocalizedText getTrueState();\n+\n+    PropertyType getTrueStateNode();\n+\n+    void setTrueState(LocalizedText value);\n+\n+}"
        },
        {
            "sha": "c412a2b1f0f0e99e692a6b18fd003857ee86074b",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/TwoStateVariableType.java",
            "status": "added",
            "additions": 92,
            "deletions": 0,
            "changes": 92,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateVariableType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateVariableType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FTwoStateVariableType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+\n+\n+public interface TwoStateVariableType extends StateVariableType {\n+\n+    Property<Boolean> ID = new BasicProperty<>(\n+        QualifiedName.parse(\"0:Id\"),\n+        NodeId.parse(\"ns=0;i=1\"),\n+        -1,\n+        Boolean.class\n+    );\n+\n+    Property<DateTime> TRANSITION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TransitionTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<DateTime> EFFECTIVE_TRANSITION_TIME = new BasicProperty<>(\n+        QualifiedName.parse(\"0:EffectiveTransitionTime\"),\n+        NodeId.parse(\"ns=0;i=294\"),\n+        -1,\n+        DateTime.class\n+    );\n+\n+    Property<LocalizedText> TRUE_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:TrueState\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+    Property<LocalizedText> FALSE_STATE = new BasicProperty<>(\n+        QualifiedName.parse(\"0:FalseState\"),\n+        NodeId.parse(\"ns=0;i=21\"),\n+        -1,\n+        LocalizedText.class\n+    );\n+\n+\n+    Boolean getId();\n+\n+    PropertyType getIdNode();\n+\n+    void setId(Boolean value);\n+\n+    DateTime getTransitionTime();\n+\n+    PropertyType getTransitionTimeNode();\n+\n+    void setTransitionTime(DateTime value);\n+\n+    DateTime getEffectiveTransitionTime();\n+\n+    PropertyType getEffectiveTransitionTimeNode();\n+\n+    void setEffectiveTransitionTime(DateTime value);\n+\n+    LocalizedText getTrueState();\n+\n+    PropertyType getTrueStateNode();\n+\n+    void setTrueState(LocalizedText value);\n+\n+    LocalizedText getFalseState();\n+\n+    PropertyType getFalseStateNode();\n+\n+    void setFalseState(LocalizedText value);\n+\n+}"
        },
        {
            "sha": "423d82f07ee7bf0b73fae2676d7b42ce6a983bca",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/XYArrayItemType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FXYArrayItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FXYArrayItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FXYArrayItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AxisInformation;\n+\n+\n+public interface XYArrayItemType extends ArrayItemType {\n+\n+    Property<AxisInformation> X_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:XAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+\n+    AxisInformation getXAxisDefinition();\n+\n+    PropertyType getXAxisDefinitionNode();\n+\n+    void setXAxisDefinition(AxisInformation value);\n+\n+}"
        },
        {
            "sha": "013c09813247b50db4a3e1595c69e60bee4f378f",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/model/variables/YArrayItemType.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FYArrayItemType.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FYArrayItemType.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fmodel%2Fvariables%2FYArrayItemType.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.model.variables;\n+\n+import org.eclipse.milo.opcua.sdk.core.model.BasicProperty;\n+import org.eclipse.milo.opcua.sdk.core.model.Property;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AxisInformation;\n+\n+\n+public interface YArrayItemType extends ArrayItemType {\n+\n+    Property<AxisInformation> X_AXIS_DEFINITION = new BasicProperty<>(\n+        QualifiedName.parse(\"0:XAxisDefinition\"),\n+        NodeId.parse(\"ns=0;i=12079\"),\n+        -1,\n+        AxisInformation.class\n+    );\n+\n+\n+    AxisInformation getXAxisDefinition();\n+\n+    PropertyType getXAxisDefinitionNode();\n+\n+    void setXAxisDefinition(AxisInformation value);\n+\n+}"
        },
        {
            "sha": "8a51a5a22cfbfbb9d81ef2c4a84d71e3c80fed24",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/DataTypeNode.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FDataTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FDataTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FDataTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+public interface DataTypeNode extends Node {\n+\n+    /**\n+     * The IsAbstract attribute specifies if the DataType is abstract or not.\n+     * <p>\n+     * Abstract DataTypes can be used in the AddressSpace, i.e. Variables and VariableTypes can point with their\n+     * DataType Attribute to an abstract DataType. However, concrete values can never be of an abstract DataType and\n+     * shall always be of a concrete subtype of the abstract DataType.\n+     *\n+     * @return {@code true} if the DataType is abstract.\n+     */\n+    Boolean getIsAbstract();\n+\n+    /**\n+     * Set the IsAbstract attribute of this DataType.\n+     *\n+     * @param isAbstract {@code true} if this\n+     */\n+    void setIsAbstract(boolean isAbstract);\n+\n+}"
        },
        {
            "sha": "ddff0eb4144036ecc3e154f2589738f3ed9fe9eb",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/MethodNode.java",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FMethodNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FMethodNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FMethodNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+public interface MethodNode extends Node {\n+\n+    /**\n+     * The Executable attribute indicates whether the Method is executable, not taking user access rights into account.\n+     * If the OPC UA Server cannot get the Executable information from the underlying system, it should state that it\n+     * is executable.\n+     * <p>\n+     * See OPC-UA Part 3, Section 5.7.\n+     *\n+     * @return {@code true} if this method is executable, not taking user access rights into account.\n+     */\n+    Boolean isExecutable();\n+\n+    /**\n+     * The UserExecutable attribute indicates whether the Method is executable, taking user access rights into account.\n+     * If the OPC UA Server cannot get any user rights related information from the underlying system, it should use\n+     * the same value as used in the Executable attribute.\n+     * <p>\n+     * See OPC-UA Part 3, Section 5.7.\n+     *\n+     * @return {@code true} if this method is executable, taking user access rights into account.\n+     */\n+    Boolean isUserExecutable();\n+\n+    /**\n+     * Set the Executable attribute of this Method.\n+     *\n+     * @param executable {@code true} if the method is executable.\n+     */\n+    void setExecutable(boolean executable);\n+\n+    /**\n+     * Set the UserExecutable attribute of this Method.\n+     *\n+     * @param userExecutable {@code true} if the method is executable, taking access rights into account.\n+     */\n+    void setUserExecutable(boolean userExecutable);\n+\n+}"
        },
        {
            "sha": "7542eaad596c6068230ad7a8ed189a850713180c",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/Node.java",
            "status": "added",
            "additions": 124,
            "deletions": 0,
            "changes": 124,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;\n+\n+public interface Node {\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.2.\n+     *\n+     * @return the NodeId ({@link NodeId}) of this node.\n+     */\n+    NodeId getNodeId();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.3.\n+     *\n+     * @return the NodeClass ({@link NodeClass}) of this node.\n+     */\n+    NodeClass getNodeClass();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.4.\n+     *\n+     * @return the BrowseName ({@link QualifiedName}) of this node.\n+     */\n+    QualifiedName getBrowseName();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.5.\n+     *\n+     * @return the DisplayName ({@link QualifiedName}) of this node.\n+     */\n+    LocalizedText getDisplayName();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.6.\n+     *\n+     * @return if this attribute is present, the Description ({@link LocalizedText}).\n+     */\n+    Optional<LocalizedText> getDescription();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.7.\n+     *\n+     * @return if this attribute is present, the WriteMask ({@link UInteger}).\n+     */\n+    Optional<UInteger> getWriteMask();\n+\n+    /**\n+     * See OPC-UA Part 3, section 5.2.8.\n+     *\n+     * @return if this attribute is present, the UserWriteMask ({@link UInteger}).\n+     */\n+    Optional<UInteger> getUserWriteMask();\n+\n+    /**\n+     * Set the NodeId attribute of this Node.\n+     *\n+     * @param nodeId the NodeId to set.\n+     */\n+    void setNodeId(NodeId nodeId);\n+\n+    /**\n+     * Set the NodeClass attribute of this Node.\n+     *\n+     * @param nodeClass the NodeClass to set.\n+     */\n+    void setNodeClass(NodeClass nodeClass);\n+\n+    /**\n+     * Set the BrowseName attribute of this Node.\n+     *\n+     * @param browseName the BrowseName to set.\n+     */\n+    void setBrowseName(QualifiedName browseName);\n+\n+    /**\n+     * Set the DisplayName attribute of this Node.\n+     *\n+     * @param displayName the DisplayName to set.\n+     */\n+    void setDisplayName(LocalizedText displayName);\n+\n+    /**\n+     * Set the Description attribute of this Node.\n+     *\n+     * @param description the Description to set.\n+     */\n+    void setDescription(Optional<LocalizedText> description);\n+\n+    /**\n+     * Set the WriteMask attribute of this Node.\n+     *\n+     * @param writeMask the WriteMask to set.\n+     */\n+    void setWriteMask(Optional<UInteger> writeMask);\n+\n+    /**\n+     * Set the UserWriteMask attribute of this Node.\n+     *\n+     * @param userWriteMask the UserWriteMask to set.\n+     */\n+    void setUserWriteMask(Optional<UInteger> userWriteMask);\n+\n+}"
        },
        {
            "sha": "8e618b83c4cb9fc61a24068c6215f46d502d7edd",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/ObjectNode.java",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public interface ObjectNode extends Node {\n+\n+    /**\n+     * The EventNotifier attribute identifies whether the Object can be used to subscribe to Events or to read and\n+     * write the history of the Events.\n+     *\n+     * @return the EventNotifier attribute of this Object.\n+     */\n+    UByte getEventNotifier();\n+\n+    /**\n+     * Set the EventNotifier attribute of this Object.\n+     *\n+     * @param eventNotifier the EventNotifier attribute to set.\n+     */\n+    void setEventNotifier(UByte eventNotifier);\n+\n+}"
        },
        {
            "sha": "03dce5ba46090429dea037d5e24cd07a0fa991a5",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/ObjectTypeNode.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FObjectTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+public interface ObjectTypeNode extends Node {\n+\n+    /**\n+     * The IsAbstract attribute indicates if this ObjectType is abstract or not.\n+     *\n+     * @return {@code true} if this ObjectType is abstract.\n+     */\n+    Boolean getIsAbstract();\n+\n+    /**\n+     * Set the IsAbstract attribute of this ObjectType.\n+     *\n+     * @param isAbstract {@code true} if this\n+     */\n+    void setIsAbstract(boolean isAbstract);\n+\n+//    Optional<String> getNodeVersion();\n+//\n+//    Optional<ByteString> getIcon();\n+//\n+//    void setNodeVersion(Optional<String> nodeVersion);\n+//\n+//    void setIcon(Optional<ByteString> icon);\n+\n+}"
        },
        {
            "sha": "901d13f88e93595e56e490be16febd96967a5dc1",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/ReferenceTypeNode.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FReferenceTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FReferenceTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FReferenceTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+\n+public interface ReferenceTypeNode extends Node {\n+\n+    Boolean getIsAbstract();\n+\n+    Boolean getSymmetric();\n+\n+    Optional<LocalizedText> getInverseName();\n+\n+    void setIsAbstract(boolean isAbstract);\n+\n+    void setSymmetric(boolean isSymmetric);\n+\n+    void setInverseName(Optional<LocalizedText> inverseName);\n+\n+}"
        },
        {
            "sha": "f0b7c0051cda5b8ca65852ee61701c331accea26",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/VariableNode.java",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface VariableNode extends Node {\n+\n+    DataValue getValue();\n+\n+    NodeId getDataType();\n+\n+    Integer getValueRank();\n+\n+    Optional<UInteger[]> getArrayDimensions();\n+\n+    UByte getAccessLevel();\n+\n+    UByte getUserAccessLevel();\n+\n+    Optional<Double> getMinimumSamplingInterval();\n+\n+    Boolean getHistorizing();\n+\n+    /**\n+     * Set the Value attribute of this Node.\n+     *\n+     * @param value the Value to set.\n+     */\n+    void setValue(DataValue value);\n+\n+    /**\n+     * Set the DataType attribute of this Node.\n+     *\n+     * @param dataType the DataType to set.\n+     */\n+    void setDataType(NodeId dataType);\n+\n+    void setValueRank(Integer valueRank);\n+\n+    void setArrayDimensions(Optional<UInteger[]> arrayDimensions);\n+\n+    void setAccessLevel(UByte accessLevel);\n+\n+    void setUserAccessLevel(UByte userAccessLevel);\n+\n+    void setMinimumSamplingInterval(Optional<Double> minimumSamplingInterval);\n+\n+    void setHistorizing(boolean historizing);\n+\n+}"
        },
        {
            "sha": "c5b0ce619f112382bb4e87c8d272254491f881e4",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/VariableTypeNode.java",
            "status": "added",
            "additions": 44,
            "deletions": 0,
            "changes": 44,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FVariableTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public interface VariableTypeNode extends Node {\n+\n+    Optional<DataValue> getValue();\n+\n+    NodeId getDataType();\n+\n+    Integer getValueRank();\n+\n+    Optional<UInteger[]> getArrayDimensions();\n+\n+    Boolean getIsAbstract();\n+\n+    void setValue(Optional<DataValue> value);\n+\n+    void setDataType(NodeId dataType);\n+\n+    void setValueRank(int valueRank);\n+\n+    void setArrayDimensions(Optional<UInteger[]> arrayDimensions);\n+\n+    void setIsAbstract(boolean isAbstract);\n+\n+}"
        },
        {
            "sha": "466267e2d40c52a7fc8c9bb0daf45a9cd5f77ede",
            "filename": "opc-ua-sdk/sdk-core/src/main/java/org/eclipse/milo/opcua/sdk/core/nodes/ViewNode.java",
            "status": "added",
            "additions": 28,
            "deletions": 0,
            "changes": 28,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FViewNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FViewNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-core%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2Fnodes%2FViewNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core.nodes;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n+\n+public interface ViewNode extends Node {\n+\n+    Boolean getContainsNoLoops();\n+\n+    UByte getEventNotifier();\n+\n+    void setContainsNoLoops(boolean containsNoLoops);\n+\n+    void setEventNotifier(UByte eventNotifier);\n+\n+}"
        },
        {
            "sha": "1ec141fb10a0ee99c6e90ccf173a26d22f54ca43",
            "filename": "opc-ua-sdk/sdk-server/pom.xml",
            "status": "added",
            "additions": 75,
            "deletions": 0,
            "changes": 75,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fpom.xml",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fpom.xml?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.eclipse.milo</groupId>\n+        <artifactId>opc-ua-sdk</artifactId>\n+        <version>0.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>sdk-server</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>stack-core</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>stack-server</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.eclipse.milo</groupId>\n+            <artifactId>sdk-core</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.dropwizard.metrics</groupId>\n+            <artifactId>metrics-core</artifactId>\n+            <version>${metrics.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.reflections</groupId>\n+            <artifactId>reflections</artifactId>\n+            <version>${reflections.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>${testng.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-simple</artifactId>\n+            <version>${slf4j.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <!-- configuration inherited rom pluginManagement -->\n+                <configuration>\n+                    <excludes>\n+                        <exclude>**/Ua*Loader.*</exclude>\n+                    </excludes>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "f3946a0776056acd53cae68e1aebe0f8f216a0de",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/NamespaceTable.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNamespaceTable.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNamespaceTable.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNamespaceTable.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.HashBiMap;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaRuntimeException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.ushort;\n+\n+public class NamespaceTable {\n+\n+    public static final String OpcUaNamespace = \"http://opcfoundation.org/UA/\";\n+\n+    private final BiMap<UShort, String> uriTable = HashBiMap.create();\n+\n+    public NamespaceTable() {\n+        uriTable.put(ushort(0), OpcUaNamespace);\n+    }\n+\n+    public synchronized UShort addUri(String uri) {\n+        UShort index = ushort(1);\n+        while (uriTable.containsKey(index)) {\n+            index = ushort(index.intValue() + 1);\n+            if (index.intValue() == 65535) {\n+                throw new UaRuntimeException(StatusCodes.Bad_InternalError, \"uri table full\");\n+            }\n+        }\n+        uriTable.put(index, uri);\n+\n+        return index;\n+    }\n+\n+    public synchronized void putUri(String uri, UShort index) {\n+        uriTable.put(index, uri);\n+    }\n+\n+    public synchronized String getUri(UShort index) {\n+        return uriTable.get(index);\n+    }\n+\n+    /**\n+     * @param uri the namespace URI to look up.\n+     * @return the index of the namespace URI, or {@code null} if it is not present.\n+     */\n+    public synchronized UShort getIndex(String uri) {\n+        return uriTable.inverse().getOrDefault(uri, null);\n+    }\n+\n+    public synchronized String[] toArray() {\n+        List<String> uris = uriTable.entrySet().stream()\n+            .sorted((e1, e2) -> e1.getKey().intValue() - e2.getKey().intValue())\n+            .map(Map.Entry::getValue)\n+            .collect(Collectors.toList());\n+\n+        return uris.toArray(new String[uris.size()]);\n+    }\n+\n+}"
        },
        {
            "sha": "be8acc66b20c2cae2b20f076a6ec18e343fdc2f2",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/NumericRange.java",
            "status": "added",
            "additions": 270,
            "deletions": 0,
            "changes": 270,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNumericRange.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNumericRange.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FNumericRange.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,270 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.lang.reflect.Array;\n+import java.util.Arrays;\n+\n+import com.google.common.base.MoreObjects;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+\n+public final class NumericRange {\n+\n+    private final String range;\n+    private final Bounds[] bounds;\n+\n+    public NumericRange(String range, Bounds[] bounds) {\n+        this.range = range;\n+        this.bounds = bounds;\n+    }\n+\n+    public String getRange() {\n+        return range;\n+    }\n+\n+    public Bounds[] getBounds() {\n+        return bounds;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return MoreObjects.toStringHelper(this)\n+            .add(\"range\", range)\n+            .toString();\n+    }\n+\n+    private int getDimensionCount() {\n+        return bounds.length;\n+    }\n+\n+    private Bounds getBounds(int dimension) {\n+        return bounds[dimension - 1];\n+    }\n+\n+    public static final class Bounds {\n+        private final int low;\n+        private final int high;\n+\n+        private Bounds(int low, int high) throws UaException {\n+            if (low < 0 || high < 0 || low > high) throw new UaException(StatusCodes.Bad_IndexRangeInvalid);\n+\n+            this.low = low;\n+            this.high = high;\n+        }\n+    }\n+\n+    public static NumericRange parse(String range) throws UaException {\n+        try {\n+            String[] ss = range.split(\",\");\n+            Bounds[] bounds = new Bounds[ss.length];\n+\n+            for (int i = 0; i < ss.length; i++) {\n+                String s = ss[i];\n+                String[] bs = s.split(\":\");\n+\n+                if (bs.length == 1) {\n+                    int index = Integer.parseInt(bs[0]);\n+                    bounds[i] = new Bounds(index, index);\n+                } else if (bs.length == 2) {\n+                    int low = Integer.parseInt(bs[0]);\n+                    int high = Integer.parseInt(bs[1]);\n+\n+                    if (low == high) throw new UaException(StatusCodes.Bad_IndexRangeInvalid);\n+\n+                    bounds[i] = new Bounds(low, high);\n+                } else {\n+                    throw new UaException(StatusCodes.Bad_IndexRangeInvalid);\n+                }\n+            }\n+\n+            return new NumericRange(range, bounds);\n+        } catch (Throwable ex) {\n+            throw new UaException(StatusCodes.Bad_IndexRangeInvalid, ex);\n+        }\n+    }\n+\n+    public static Object readFromValueAtRange(Variant value, NumericRange range) throws UaException {\n+        Object array = value.getValue();\n+\n+        if (array == null) {\n+            throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+        }\n+\n+        if (!array.getClass().isArray()) {\n+            if (!(array instanceof String) && !(array instanceof ByteString)) {\n+                throw new UaException(StatusCodes.Bad_IndexRangeInvalid);\n+            }\n+        }\n+\n+        try {\n+            return readFromValueAtRange(array, range, 1);\n+        } catch (Throwable ex) {\n+            throw new UaException(StatusCodes.Bad_IndexRangeNoData, ex);\n+        }\n+    }\n+\n+    private static Object readFromValueAtRange(Object array, NumericRange range, int dimension) throws UaException {\n+        int dimensionCount = range.getDimensionCount();\n+        Bounds bounds = range.getBounds(dimension);\n+        int low = bounds.low, high = bounds.high;\n+        int len = high - low + 1;\n+\n+        if (dimension == dimensionCount) {\n+            if (array.getClass().isArray()) {\n+                Class<?> type = array.getClass().getComponentType();\n+                Object a = Array.newInstance(type, len);\n+\n+                for (int i = 0; i < len; i++) {\n+                    Object element = Array.get(array, low + i);\n+                    Array.set(a, i, element);\n+                }\n+\n+                return a;\n+            } else if (array instanceof String) {\n+                String s = (String) array;\n+\n+                return s.substring(low, high + 1);\n+            } else if (array instanceof ByteString) {\n+                ByteString bs = (ByteString) array;\n+                byte[] copy = Arrays.copyOfRange(bs.bytes(), low, high + 1);\n+                return new ByteString(copy);\n+            } else {\n+                throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+            }\n+        } else {\n+            Class<?> type = array.getClass().getComponentType();\n+            Object a = Array.newInstance(type, len);\n+\n+            for (int i = 0; i < len; i++) {\n+                Object na = Array.get(array, low + i);\n+                Object element = readFromValueAtRange(na, range, dimension + 1);\n+                Array.set(a, i, element);\n+            }\n+\n+            return a;\n+        }\n+    }\n+\n+    public static Object writeToValueAtRange(Variant currentVariant, Variant updateVariant, NumericRange range) throws UaException {\n+        Object current = currentVariant.getValue();\n+        Object update = updateVariant.getValue();\n+\n+        if (current == null || update == null) {\n+            throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+        }\n+\n+        try {\n+            return writeToValueAtRange(current, update, range, 1);\n+        } catch (Throwable ex) {\n+            throw new UaException(StatusCodes.Bad_IndexRangeNoData, ex);\n+        }\n+    }\n+\n+    private static Object writeToValueAtRange(Object current, Object update, NumericRange range, int dimension) throws UaException {\n+        int dimensionCount = range.getDimensionCount();\n+        Bounds bounds = range.getBounds(dimension);\n+        int low = bounds.low, high = bounds.high;\n+\n+        if (dimension == dimensionCount) {\n+            if (current.getClass().isArray()) {\n+                Class<?> type = current.getClass().getComponentType();\n+                int length = Array.getLength(current);\n+                Object copy = Array.newInstance(type, length);\n+\n+                if (low >= length || high >= length) {\n+                    throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+                }\n+\n+                for (int i = 0; i < length; i++) {\n+                    if (i < low || i > high) {\n+                        Object element = Array.get(current, i);\n+                        Array.set(copy, i, element);\n+                    } else {\n+                        Object element = Array.get(update, i - low);\n+                        Array.set(copy, i, element);\n+                    }\n+                }\n+\n+                return copy;\n+            } else if (current instanceof String) {\n+                String cs = (String) current;\n+                String us = (String) update;\n+                int length = cs.length();\n+                StringBuilder copy = new StringBuilder();\n+\n+                if (low >= length || high >= length) {\n+                    throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+                }\n+\n+                for (int i = 0; i < length; i++) {\n+                    if (i < low || i > high) {\n+                        copy.append(cs.charAt(i));\n+                    } else {\n+                        copy.append(us.charAt(i - low));\n+                    }\n+                }\n+\n+                return copy.toString();\n+            } else if (current instanceof ByteString) {\n+                ByteString bs = (ByteString) current;\n+                ByteString us = (ByteString) update;\n+                int length = bs.length();\n+                byte[] copy = new byte[length];\n+\n+                if (low >= length || high >= length) {\n+                    throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+                }\n+\n+                for (int i = 0; i < length; i++) {\n+                    if (i < low || i > high) {\n+                        copy[i] = bs.byteAt(i);\n+                    } else {\n+                        copy[i] = us.byteAt(i - low);\n+                    }\n+                }\n+\n+                return new ByteString(copy);\n+            } else {\n+                throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+            }\n+        } else {\n+            Class<?> type = current.getClass().getComponentType();\n+            int length = Array.getLength(current);\n+            Object copy = Array.newInstance(type, length);\n+\n+            if (low >= length || high >= length) {\n+                throw new UaException(StatusCodes.Bad_IndexRangeNoData);\n+            }\n+\n+            for (int i = 0; i < length; i++) {\n+                if (i < low || i > high) {\n+                    Object element = Array.get(current, i);\n+                    Array.set(copy, i, element);\n+                } else {\n+                    Object c = Array.get(current, i);\n+                    Object u = Array.get(update, i - low);\n+                    Object element = writeToValueAtRange(c, u, range, dimension + 1);\n+                    Array.set(copy, i, element);\n+                }\n+            }\n+\n+            return copy;\n+        }\n+    }\n+\n+\n+}"
        },
        {
            "sha": "b47d095fc19254392d017461b228a74a67d5217b",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/Reference.java",
            "status": "added",
            "additions": 152,
            "deletions": 0,
            "changes": 152,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FReference.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FReference.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FReference.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.milo.opcua.stack.core.Identifiers;\n+import org.eclipse.milo.opcua.stack.core.ReferenceType;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.NodeClass;\n+import org.slf4j.LoggerFactory;\n+\n+public class Reference {\n+\n+    private final NodeId sourceNodeId;\n+    private final NodeId referenceTypeId;\n+    private final ExpandedNodeId targetNodeId;\n+    private final NodeClass targetNodeClass;\n+    private final boolean forward;\n+\n+    public Reference(NodeId sourceNodeId,\n+                     NodeId referenceTypeId,\n+                     ExpandedNodeId targetNodeId,\n+                     NodeClass targetNodeClass,\n+                     boolean forward) {\n+\n+        this.sourceNodeId = sourceNodeId;\n+        this.referenceTypeId = referenceTypeId;\n+        this.targetNodeId = targetNodeId;\n+        this.targetNodeClass = targetNodeClass;\n+        this.forward = forward;\n+    }\n+\n+    public NodeId getSourceNodeId() {\n+        return sourceNodeId;\n+    }\n+\n+    public NodeId getReferenceTypeId() {\n+        return referenceTypeId;\n+    }\n+\n+    public ExpandedNodeId getTargetNodeId() {\n+        return targetNodeId;\n+    }\n+\n+    public NodeClass getTargetNodeClass() {\n+        return targetNodeClass;\n+    }\n+\n+    public boolean isForward() {\n+        return forward;\n+    }\n+\n+    public boolean isInverse() {\n+        return !isForward();\n+    }\n+\n+    public boolean subtypeOf(NodeId superTypeId, Map<NodeId, ReferenceType> referenceTypes) {\n+        return subtypeOf(referenceTypeId, superTypeId, referenceTypes);\n+    }\n+\n+    private boolean subtypeOf(NodeId typeId, NodeId superTypeId, Map<NodeId, ReferenceType> referenceTypes) {\n+        ReferenceType referenceType = referenceTypes.get(typeId);\n+\n+        if (referenceType == null) {\n+            LoggerFactory.getLogger(getClass()).warn(\"Unknown reference type: {}\", typeId);\n+            return false;\n+        }\n+\n+        return referenceType.getSuperType().map(superType -> {\n+            NodeId id = superType.getNodeId();\n+\n+            return id.equals(superTypeId) || subtypeOf(id, superTypeId, referenceTypes);\n+        }).orElse(false);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        Reference reference = (Reference) o;\n+\n+        return forward == reference.forward &&\n+            referenceTypeId.equals(reference.referenceTypeId) &&\n+            sourceNodeId.equals(reference.sourceNodeId) &&\n+            targetNodeClass == reference.targetNodeClass &&\n+            targetNodeId.equals(reference.targetNodeId);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = sourceNodeId.hashCode();\n+        result = 31 * result + referenceTypeId.hashCode();\n+        result = 31 * result + targetNodeId.hashCode();\n+        result = 31 * result + targetNodeClass.hashCode();\n+        result = 31 * result + (forward ? 1 : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Reference{\" +\n+            \"sourceNodeId=\" + sourceNodeId +\n+            \", referenceTypeId=\" + referenceTypeId +\n+            \", targetNodeId=\" + targetNodeId +\n+            \", targetNodeClass=\" + targetNodeClass +\n+            \", forward=\" + forward +\n+            '}';\n+    }\n+\n+    public static final Predicate<Reference> HAS_COMPONENT_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasComponent.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_PROPERTY_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasProperty.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_TYPE_DEFINITION_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasTypeDefinition.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_EVENT_SOURCE_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasEventSource.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_NOTIFIER_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasNotifier.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> ORGANIZES_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.Organizes.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_DESCRIPTION_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasDescription.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> HAS_MODELLING_RULE_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.HasModellingRule.equals(reference.getReferenceTypeId());\n+\n+    public static final Predicate<Reference> ALWAYS_GENERATES_EVENT_PREDICATE =\n+        (reference) -> reference.isForward() && Identifiers.AlwaysGeneratesEvent.equals(reference.getReferenceTypeId());\n+\n+}"
        },
        {
            "sha": "7043df54519f59c1a9cec07b3ff5ee40f92a3759",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/ServerTable.java",
            "status": "added",
            "additions": 62,
            "deletions": 0,
            "changes": 62,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FServerTable.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FServerTable.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FServerTable.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.HashBiMap;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaRuntimeException;\n+\n+public class ServerTable {\n+\n+    private final BiMap<Integer, String> uriTable = HashBiMap.create();\n+\n+    public synchronized int addUri(String uri) {\n+        int index = 1;\n+        while (uriTable.containsKey(index)) {\n+            index++;\n+            if (index == 65535) {\n+                throw new UaRuntimeException(StatusCodes.Bad_InternalError, \"uri table full\");\n+            }\n+        }\n+        uriTable.put(index, uri);\n+        return index;\n+    }\n+\n+    public synchronized void putUri(String uri, int index) {\n+        uriTable.put(index, uri);\n+    }\n+\n+    public synchronized String getUri(int index) {\n+        return uriTable.get(index);\n+    }\n+\n+    public synchronized int getIndex(String uri) {\n+        return uriTable.inverse().get(uri);\n+    }\n+\n+    public synchronized String[] toArray() {\n+        List<String> uris = uriTable.entrySet().stream()\n+            .sorted((e1, e2) -> e1.getKey() - e2.getKey())\n+            .map(Map.Entry::getValue)\n+            .collect(Collectors.toList());\n+\n+        return uris.toArray(new String[uris.size()]);\n+    }\n+\n+}"
        },
        {
            "sha": "0c9d9ea17d474b6cc81bc99169f37c23d86e4ffe",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/ValueRank.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRank.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRank.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRank.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+public enum ValueRank {\n+\n+    OneDimension(1),\n+    OneOrMoreDimensions(0),\n+    Scalar(-1),\n+    Any(-2),\n+    ScalarOrOneDimension(-3);\n+\n+    private final int value;\n+\n+    ValueRank(int value) {\n+        this.value = value;\n+    }\n+\n+    public int getValue() {\n+        return value;\n+    }\n+\n+}"
        },
        {
            "sha": "4b635139dc2c203aaa3c1a854f8aa6d243a3a4d8",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/ValueRanks.java",
            "status": "added",
            "additions": 24,
            "deletions": 0,
            "changes": 24,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRanks.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRanks.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FValueRanks.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+public class ValueRanks {\n+\n+    public static final int OneDimension = 1;\n+    public static final int OneOrMoreDimensions = 0;\n+    public static final int Scalar = -1;\n+    public static final int Any = -2;\n+    public static final int ScalarOrOneDimension = -3;\n+\n+}"
        },
        {
            "sha": "d7af13652dc483838d45907387630ec26996d382",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/core/WriteMask.java",
            "status": "added",
            "additions": 73,
            "deletions": 0,
            "changes": 73,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FWriteMask.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FWriteMask.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fcore%2FWriteMask.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.core;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+\n+public enum WriteMask {\n+\n+    AccessLevel(1),\n+    ArrayDimensions(2),\n+    BrowseName(4),\n+    ContainsNoLoops(8),\n+    DataType(16),\n+    Description(32),\n+    DisplayName(64),\n+    EventNotifier(128),\n+    Executable(256),\n+    Historizing(512),\n+    InverseName(1024),\n+    IsAbstract(2048),\n+    MinimumSamplingInterval(4096),\n+    NodeClass(8192),\n+    NodeId(16384),\n+    Symmetric(32768),\n+    UserAccessLevel(65536),\n+    UserExecutable(131072),\n+    UserWriteMask(262144),\n+    ValueRank(524288),\n+    WriteMask(1048576),\n+    ValueForVariableType(2097152);\n+\n+    public static final Set<AccessLevel> NONE = ImmutableSet.of();\n+\n+    private final int value;\n+\n+    private WriteMask(int value) {\n+        this.value = value;\n+    }\n+\n+    public int getValue() {\n+        return value;\n+    }\n+\n+    public static EnumSet<WriteMask> fromMask(int accessLevel) {\n+        EnumSet<WriteMask> e = EnumSet.noneOf(WriteMask.class);\n+        for (WriteMask wm : values()) {\n+            if ((wm.value & accessLevel) != 0) {\n+                e.add(wm);\n+            }\n+        }\n+        return e;\n+    }\n+\n+    public static EnumSet<WriteMask> fromMask(UInteger accessLevel) {\n+        return fromMask(accessLevel.intValue());\n+    }\n+\n+}"
        },
        {
            "sha": "8add85ba9c4ff21bf5d1f107e6cdb08d27cebf8b",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/DiagnosticsContext.java",
            "status": "added",
            "additions": 62,
            "deletions": 0,
            "changes": 62,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FDiagnosticsContext.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FDiagnosticsContext.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FDiagnosticsContext.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server;\n+\n+import java.util.EnumSet;\n+import java.util.Map;\n+\n+import com.google.common.collect.Maps;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DiagnosticInfo;\n+\n+public class DiagnosticsContext<T> {\n+\n+    private final Map<T, DiagnosticInfo> diagnosticsMap = Maps.newConcurrentMap();\n+\n+    public EnumSet<OperationDiagnostic> getRequestedOperationDiagnostics(T t) {\n+        return null;\n+    }\n+\n+    public void setOperationDiagnostic(T t, DiagnosticInfo diagnosticInfo) {\n+\n+    }\n+\n+    public Map<T, DiagnosticInfo> getDiagnosticsMap() {\n+        return diagnosticsMap;\n+    }\n+\n+    public DiagnosticInfo[] getDiagnosticInfos(T[] ts) {\n+        if (diagnosticsMap.isEmpty()) {\n+            return new DiagnosticInfo[0];\n+        } else {\n+            DiagnosticInfo[] diagnostics = new DiagnosticInfo[ts.length];\n+\n+            for (int i = 0; i < ts.length; i++) {\n+                DiagnosticInfo diagnosticInfo = diagnosticsMap.getOrDefault(\n+                    ts[i], DiagnosticInfo.NULL_VALUE);\n+\n+                diagnostics[i] = diagnosticInfo;\n+            }\n+\n+            return diagnostics;\n+        }\n+    }\n+\n+    public enum OperationDiagnostic {\n+        SymbolicId,\n+        LocalizedText,\n+        InnerStatusCode,\n+        InnerDiagnostics\n+    }\n+\n+}"
        },
        {
            "sha": "7eec9f415541bd5d5fc88d8bf8e951a47832c983",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/NamespaceManager.java",
            "status": "added",
            "additions": 156,
            "deletions": 0,
            "changes": 156,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FNamespaceManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FNamespaceManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FNamespaceManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.UUID;\n+import java.util.function.Function;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Maps;\n+import org.eclipse.milo.opcua.sdk.core.NamespaceTable;\n+import org.eclipse.milo.opcua.sdk.server.api.Namespace;\n+import org.eclipse.milo.opcua.sdk.server.util.NoOpNamespace;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaRuntimeException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.IdType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.ushort;\n+\n+public class NamespaceManager {\n+\n+    private static final Namespace NO_OP_NAMESPACE = new NoOpNamespace();\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final NamespaceTable namespaceTable = new NamespaceTable();\n+\n+    private final Map<UShort, Namespace> namespaces = Maps.newConcurrentMap();\n+\n+    public NamespaceManager() {\n+        namespaceTable.putUri(NamespaceTable.OpcUaNamespace, ushort(0));\n+    }\n+\n+    /**\n+     * Register a namespace URI.\n+     *\n+     * @param namespaceUri the namespace URI to register.\n+     * @return The index assigned to the given namespace URI.\n+     * @see #registerAndAdd(String, Function)\n+     */\n+    public UShort registerUri(String namespaceUri) {\n+        UShort index = namespaceTable.addUri(namespaceUri);\n+\n+        logger.info(\"registered namespace index={}, uri={}\", index, namespaceUri);\n+\n+        return index;\n+    }\n+\n+    /**\n+     * Add a {@link Namespace}.\n+     * <p>\n+     * The URI must already be registered.\n+     *\n+     * @param namespace The {@link Namespace} to add.\n+     * @see #registerUri(String)\n+     * @see #registerAndAdd(String, Function)\n+     */\n+    public void addNamespace(Namespace namespace) {\n+        Preconditions.checkNotNull(\n+            namespaceTable.getIndex(namespace.getNamespaceUri()),\n+            \"namespace must be registered prior to adding\");\n+\n+        namespaces.put(namespace.getNamespaceIndex(), namespace);\n+\n+        logger.info(\"added namespace index={}, uri={}\",\n+            namespace.getNamespaceIndex(), namespace.getNamespaceUri());\n+    }\n+\n+    /**\n+     * Register a namespace URI and add the corresponding {@link Namespace}.\n+     * <p>\n+     * This is a convenience method equivalent to calling {@link #registerUri(String)} followed by\n+     * {@link #addNamespace(Namespace)}.\n+     *\n+     * @param namespaceUri      The namespace URI to register.\n+     * @param namespaceFunction A function that returns a {@link Namespace} for the supplied namespace index.\n+     * @return The {@link Namespace} returned by {@code namespaceFunction}.\n+     */\n+    public <T extends Namespace> T registerAndAdd(String namespaceUri, Function<UShort, T> namespaceFunction) {\n+        UShort namespaceIndex = namespaceTable.addUri(namespaceUri);\n+        T namespace = namespaceFunction.apply(namespaceIndex);\n+        namespaces.put(namespaceIndex, namespace);\n+\n+        logger.info(\"registered and added namespace index={}, uri={}\",\n+            namespace.getNamespaceIndex(), namespace.getNamespaceUri());\n+\n+        return namespace;\n+    }\n+\n+    public Namespace getNamespace(int index) {\n+        return getNamespace(ushort(index));\n+    }\n+\n+    public Namespace getNamespace(UShort index) {\n+        Namespace namespace = namespaces.get(index);\n+\n+        return namespace != null ? namespace : NO_OP_NAMESPACE;\n+    }\n+\n+    public NamespaceTable getNamespaceTable() {\n+        return namespaceTable;\n+    }\n+\n+    public Optional<NodeId> toNodeId(ExpandedNodeId expandedNodeId) {\n+        if (!expandedNodeId.isLocal()) return Optional.empty();\n+\n+        String namespaceUri = expandedNodeId.getNamespaceUri();\n+\n+        Object identifier = expandedNodeId.getIdentifier();\n+        IdType type = expandedNodeId.getType();\n+\n+        if (namespaceUri == null || namespaceUri.isEmpty()) {\n+            return Optional.of(createNodeId(expandedNodeId.getNamespaceIndex(), identifier, type));\n+        } else {\n+            UShort index = namespaceTable.getIndex(namespaceUri);\n+\n+            if (index == null) return Optional.empty();\n+            else return Optional.of(createNodeId(index, identifier, type));\n+        }\n+    }\n+\n+    private NodeId createNodeId(UShort namespaceIndex, Object identifier, IdType type) {\n+        switch (type) {\n+            case Numeric:\n+                return new NodeId(namespaceIndex, (UInteger) identifier);\n+            case String:\n+                return new NodeId(namespaceIndex, (String) identifier);\n+            case Guid:\n+                return new NodeId(namespaceIndex, (UUID) identifier);\n+            case Opaque:\n+                return new NodeId(namespaceIndex, (ByteString) identifier);\n+            default:\n+                throw new UaRuntimeException(StatusCodes.Bad_InternalError, \"unhandled type: \" + type);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "5411c3087750e048e46a5749e78b8fb9f581b9dd",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/OpcUaServer.java",
            "status": "added",
            "additions": 302,
            "deletions": 0,
            "changes": 302,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FOpcUaServer.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FOpcUaServer.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FOpcUaServer.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,302 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server;\n+\n+import java.net.Inet4Address;\n+import java.net.InetAddress;\n+import java.net.NetworkInterface;\n+import java.net.SocketException;\n+import java.net.UnknownHostException;\n+import java.security.KeyPair;\n+import java.security.cert.X509Certificate;\n+import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import com.google.common.eventbus.AsyncEventBus;\n+import com.google.common.eventbus.EventBus;\n+import org.eclipse.milo.opcua.sdk.core.ServerTable;\n+import org.eclipse.milo.opcua.sdk.server.api.AbstractUaNodeManager;\n+import org.eclipse.milo.opcua.sdk.server.api.UaNodeManager;\n+import org.eclipse.milo.opcua.sdk.server.api.config.OpcUaServerConfig;\n+import org.eclipse.milo.opcua.sdk.server.namespaces.OpcUaNamespace;\n+import org.eclipse.milo.opcua.sdk.server.namespaces.VendorNamespace;\n+import org.eclipse.milo.opcua.sdk.server.services.helpers.BrowseHelper.BrowseContinuationPoint;\n+import org.eclipse.milo.opcua.sdk.server.subscriptions.Subscription;\n+import org.eclipse.milo.opcua.stack.core.BuiltinReferenceType;\n+import org.eclipse.milo.opcua.stack.core.ReferenceType;\n+import org.eclipse.milo.opcua.stack.core.Stack;\n+import org.eclipse.milo.opcua.stack.core.application.UaStackServer;\n+import org.eclipse.milo.opcua.stack.core.application.services.AttributeServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.MethodServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.MonitoredItemServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.NodeManagementServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.SessionServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.SubscriptionServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.ViewServiceSet;\n+import org.eclipse.milo.opcua.stack.core.channel.ChannelConfig;\n+import org.eclipse.milo.opcua.stack.core.channel.ServerSecureChannel;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MessageSecurityMode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ApplicationDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.eclipse.milo.opcua.stack.core.util.ManifestUtil;\n+import org.eclipse.milo.opcua.stack.server.tcp.UaTcpStackServer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.collect.Sets.newHashSet;\n+\n+public class OpcUaServer {\n+\n+    public static final String SDK_VERSION =\n+        ManifestUtil.read(\"X-SDK-Version\").orElse(\"dev\");\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final Map<ByteString, BrowseContinuationPoint> browseContinuationPoints = Maps.newConcurrentMap();\n+\n+    private final UaNodeManager nodeManager = new OpcUaNodeManager();\n+\n+    private final Map<NodeId, ReferenceType> referenceTypes = Maps.newConcurrentMap();\n+\n+    private final Map<UInteger, Subscription> subscriptions = Maps.newConcurrentMap();\n+\n+    private final NamespaceManager namespaceManager = new NamespaceManager();\n+    private final SessionManager sessionManager = new SessionManager(this);\n+    private final ServerTable serverTable = new ServerTable();\n+\n+    private final UaStackServer stackServer;\n+    private final EventBus eventBus;\n+\n+    private final OpcUaNamespace uaNamespace;\n+    private final VendorNamespace vendorNamespace;\n+\n+    private final OpcUaServerConfig config;\n+\n+    public OpcUaServer(OpcUaServerConfig config) {\n+        this.config = config;\n+\n+        stackServer = new UaTcpStackServer(config);\n+\n+        stackServer.addServiceSet((AttributeServiceSet) sessionManager);\n+        stackServer.addServiceSet((MethodServiceSet) sessionManager);\n+        stackServer.addServiceSet((MonitoredItemServiceSet) sessionManager);\n+        stackServer.addServiceSet((NodeManagementServiceSet) sessionManager);\n+        stackServer.addServiceSet((SessionServiceSet) sessionManager);\n+        stackServer.addServiceSet((SubscriptionServiceSet) sessionManager);\n+        stackServer.addServiceSet((ViewServiceSet) sessionManager);\n+\n+        namespaceManager.addNamespace(uaNamespace = new OpcUaNamespace(this));\n+\n+        vendorNamespace = namespaceManager.registerAndAdd(\n+            config.getApplicationUri(),\n+            index -> new VendorNamespace(OpcUaServer.this, config.getApplicationUri()));\n+\n+        serverTable.addUri(stackServer.getApplicationDescription().getApplicationUri());\n+\n+        for (ReferenceType referenceType : BuiltinReferenceType.values()) {\n+            referenceTypes.put(referenceType.getNodeId(), referenceType);\n+        }\n+\n+        String configuredHostname = config.getHostname();\n+\n+        for (String bindAddress : config.getBindAddresses()) {\n+            Set<String> hostnames = Sets.union(\n+                newHashSet(configuredHostname),\n+                getHostnames(bindAddress));\n+\n+            for (String hostname : hostnames) {\n+                for (SecurityPolicy securityPolicy : config.getSecurityPolicies()) {\n+                    MessageSecurityMode messageSecurity = securityPolicy == SecurityPolicy.None ?\n+                        MessageSecurityMode.None : MessageSecurityMode.SignAndEncrypt;\n+\n+                    String endpointUrl = endpointUrl(hostname, config.getBindPort(), config.getServerName());\n+\n+                    Set<X509Certificate> certificates = config.getCertificateManager().getCertificates();\n+\n+                    if (certificates.isEmpty() && securityPolicy == SecurityPolicy.None) {\n+                        logger.info(\"Binding endpoint {} to {} [{}/{}]\",\n+                            endpointUrl, bindAddress, securityPolicy, messageSecurity);\n+\n+                        stackServer.addEndpoint(endpointUrl, bindAddress, null, securityPolicy, messageSecurity);\n+                    } else {\n+                        for (X509Certificate certificate : certificates) {\n+                            logger.info(\"Binding endpoint {} to {} [{}/{}]\",\n+                                endpointUrl, bindAddress, securityPolicy, messageSecurity);\n+\n+                            stackServer.addEndpoint(endpointUrl, bindAddress, certificate, securityPolicy, messageSecurity);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        eventBus = new AsyncEventBus(\"server\", stackServer.getExecutorService());\n+\n+        logger.info(\"eclipse milo opc-ua stack version: {}\", Stack.VERSION);\n+        logger.info(\"eclipse milo opc-ua sdk version: {}\", SDK_VERSION);\n+    }\n+\n+    private Set<String> getHostnames(String bindAddress) {\n+        Set<String> hostnames = newHashSet();\n+\n+        try {\n+            InetAddress inetAddress = InetAddress.getByName(bindAddress);\n+\n+            if (inetAddress.isAnyLocalAddress()) {\n+                try {\n+                    Enumeration<NetworkInterface> nis = NetworkInterface.getNetworkInterfaces();\n+\n+                    for (NetworkInterface ni : Collections.list(nis)) {\n+                        Collections.list(ni.getInetAddresses()).stream()\n+                            .filter(ia -> ia instanceof Inet4Address)\n+                            .forEach(ia -> {\n+                                hostnames.add(ia.getHostName());\n+                                hostnames.add(ia.getHostAddress());\n+                                hostnames.add(ia.getCanonicalHostName());\n+                            });\n+                    }\n+                } catch (SocketException e) {\n+                    logger.warn(\"Failed to NetworkInterfaces for bind address: {}\", bindAddress, e);\n+                }\n+            } else {\n+                hostnames.add(inetAddress.getHostName());\n+                hostnames.add(inetAddress.getHostAddress());\n+                hostnames.add(inetAddress.getCanonicalHostName());\n+            }\n+        } catch (UnknownHostException e) {\n+            logger.warn(\"Failed to get InetAddress for bind address: {}\", bindAddress, e);\n+        }\n+\n+        return hostnames;\n+    }\n+\n+    public void startup() {\n+        stackServer.startup();\n+    }\n+\n+    public void shutdown() {\n+        stackServer.shutdown();\n+    }\n+\n+    private static String endpointUrl(String hostname, int port, String serverName) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        sb.append(String.format(\"opc.tcp://%s:%d\", hostname, port));\n+        if (!serverName.isEmpty()) {\n+            sb.append(\"/\").append(serverName);\n+        }\n+        return sb.toString();\n+    }\n+\n+    public OpcUaServerConfig getConfig() {\n+        return config;\n+    }\n+\n+    public NamespaceManager getNamespaceManager() {\n+        return namespaceManager;\n+    }\n+\n+    public UaNodeManager getNodeManager() {\n+        return nodeManager;\n+    }\n+\n+    public SessionManager getSessionManager() {\n+        return sessionManager;\n+    }\n+\n+    public OpcUaNamespace getUaNamespace() {\n+        return uaNamespace;\n+    }\n+\n+    public ServerTable getServerTable() {\n+        return serverTable;\n+    }\n+\n+    public EventBus getEventBus() {\n+        return eventBus;\n+    }\n+\n+    public Map<UInteger, Subscription> getSubscriptions() {\n+        return subscriptions;\n+    }\n+\n+    public Optional<KeyPair> getKeyPair(ByteString thumbprint) {\n+        return stackServer.getCertificateManager().getKeyPair(thumbprint);\n+    }\n+\n+    public Optional<X509Certificate> getCertificate(ByteString thumbprint) {\n+        return stackServer.getCertificateManager().getCertificate(thumbprint);\n+    }\n+\n+    public ExecutorService getExecutorService() {\n+        return stackServer.getExecutorService();\n+    }\n+\n+    public ScheduledExecutorService getScheduledExecutorService() {\n+        return Stack.sharedScheduledExecutor();\n+    }\n+\n+    public ChannelConfig getChannelConfig() {\n+        return stackServer.getChannelConfig();\n+    }\n+\n+    public EndpointDescription[] getEndpointDescriptions() {\n+        return stackServer.getEndpointDescriptions();\n+    }\n+\n+    public List<UserTokenPolicy> getUserTokenPolicies() {\n+        return stackServer.getUserTokenPolicies();\n+    }\n+\n+    public ApplicationDescription getApplicationDescription() {\n+        return stackServer.getApplicationDescription();\n+    }\n+\n+    public SignedSoftwareCertificate[] getSoftwareCertificates() {\n+        return stackServer.getSoftwareCertificates();\n+    }\n+\n+    public void closeSecureChannel(ServerSecureChannel secureChannel) {\n+        stackServer.closeSecureChannel(secureChannel);\n+    }\n+\n+    public UaStackServer getServer() {\n+        return stackServer;\n+    }\n+\n+    public Map<NodeId, ReferenceType> getReferenceTypes() {\n+        return referenceTypes;\n+    }\n+\n+    public Map<ByteString, BrowseContinuationPoint> getBrowseContinuationPoints() {\n+        return browseContinuationPoints;\n+    }\n+\n+    private static class OpcUaNodeManager extends AbstractUaNodeManager {}\n+\n+}"
        },
        {
            "sha": "5b9ed34160d7dc642eae9667b4cbc0fdfe5005f3",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/Session.java",
            "status": "added",
            "additions": 246,
            "deletions": 0,
            "changes": 246,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSession.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSession.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSession.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server;\n+\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+import javax.annotation.Nullable;\n+\n+import com.google.common.collect.Lists;\n+import org.eclipse.milo.opcua.sdk.server.services.AttributeServices;\n+import org.eclipse.milo.opcua.sdk.server.services.MethodServices;\n+import org.eclipse.milo.opcua.sdk.server.services.MonitoredItemServices;\n+import org.eclipse.milo.opcua.sdk.server.services.NodeManagementServices;\n+import org.eclipse.milo.opcua.sdk.server.services.QueryServices;\n+import org.eclipse.milo.opcua.sdk.server.services.SubscriptionServices;\n+import org.eclipse.milo.opcua.sdk.server.services.ViewServices;\n+import org.eclipse.milo.opcua.sdk.server.subscriptions.SubscriptionManager;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.application.services.NodeManagementServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.ServiceRequest;\n+import org.eclipse.milo.opcua.stack.core.application.services.SessionServiceSet;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CancelRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CancelResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class Session implements SessionServiceSet {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final List<LifecycleListener> listeners = Lists.newCopyOnWriteArrayList();\n+\n+    private final SubscriptionManager subscriptionManager;\n+\n+    private volatile long secureChannelId;\n+\n+    private volatile Object identityObject;\n+    private volatile ByteString clientCertificateBytes;\n+\n+    private volatile ByteString lastNonce = ByteString.NULL_VALUE;\n+\n+    private volatile long lastActivity = System.nanoTime();\n+    private volatile ScheduledFuture<?> checkTimeoutFuture;\n+\n+    private final AttributeServices attributeServices;\n+    private final MethodServices methodServices;\n+    private final MonitoredItemServices monitoredItemServices;\n+    private final NodeManagementServiceSet nodeManagementServices;\n+    private final QueryServices queryServices;\n+    private final SubscriptionServices subscriptionServices;\n+    private final ViewServices viewServices;\n+\n+    private final OpcUaServer server;\n+    private final NodeId sessionId;\n+    private final String sessionName;\n+    private final Duration sessionTimeout;\n+\n+    public Session(OpcUaServer server,\n+                   NodeId sessionId,\n+                   String sessionName,\n+                   Duration sessionTimeout,\n+                   long secureChannelId) {\n+\n+        this.server = server;\n+        this.sessionId = sessionId;\n+        this.sessionName = sessionName;\n+        this.sessionTimeout = sessionTimeout;\n+        this.secureChannelId = secureChannelId;\n+\n+        subscriptionManager = new SubscriptionManager(this, server);\n+\n+        attributeServices = new AttributeServices();\n+        methodServices = new MethodServices();\n+        monitoredItemServices = new MonitoredItemServices(subscriptionManager);\n+        nodeManagementServices = new NodeManagementServices();\n+        queryServices = new QueryServices();\n+        subscriptionServices = new SubscriptionServices(subscriptionManager);\n+        viewServices = new ViewServices();\n+\n+        checkTimeoutFuture = server.getScheduledExecutorService().schedule(\n+            this::checkTimeout, sessionTimeout.toNanos(), TimeUnit.NANOSECONDS);\n+    }\n+\n+    public long getSecureChannelId() {\n+        return secureChannelId;\n+    }\n+\n+    @Nullable\n+    public Object getIdentityObject() {\n+        return identityObject;\n+    }\n+\n+    @Nullable\n+    public ByteString getClientCertificateBytes() {\n+        return clientCertificateBytes;\n+    }\n+\n+    public void setSecureChannelId(long secureChannelId) {\n+        this.secureChannelId = secureChannelId;\n+    }\n+\n+    public void setIdentityObject(Object identityObject) {\n+        this.identityObject = identityObject;\n+    }\n+\n+    public void setClientCertificateBytes(ByteString clientCertificateBytes) {\n+        this.clientCertificateBytes = clientCertificateBytes;\n+    }\n+\n+    void addLifecycleListener(LifecycleListener listener) {\n+        listeners.add(listener);\n+    }\n+\n+    void updateLastActivity() {\n+        lastActivity = System.nanoTime();\n+    }\n+\n+    void setLastNonce(ByteString lastNonce) {\n+        this.lastNonce = lastNonce;\n+    }\n+\n+    public ByteString getLastNonce() {\n+        return lastNonce;\n+    }\n+\n+    private void checkTimeout() {\n+        long elapsed = Math.abs(System.nanoTime() - lastActivity);\n+\n+        if (elapsed > sessionTimeout.toNanos()) {\n+            logger.debug(\"Session id={} lifetime expired ({}ms).\", sessionId, sessionTimeout.toMillis());\n+\n+            subscriptionManager.sessionClosed(true);\n+\n+            listeners.forEach(listener -> listener.onSessionClosed(this, true));\n+        } else {\n+            long remaining = sessionTimeout.toNanos() - elapsed;\n+            logger.trace(\"Session id={} timeout scheduled for +{}s.\",\n+                sessionId, Duration.ofNanos(remaining).getSeconds());\n+\n+            checkTimeoutFuture = server.getScheduledExecutorService()\n+                .schedule(this::checkTimeout, remaining, TimeUnit.NANOSECONDS);\n+        }\n+    }\n+\n+    public NodeId getSessionId() {\n+        return sessionId;\n+    }\n+\n+    public String getSessionName() {\n+        return sessionName;\n+    }\n+\n+    public AttributeServices getAttributeServices() {\n+        return attributeServices;\n+    }\n+\n+    public MethodServices getMethodServices() {\n+        return methodServices;\n+    }\n+\n+    public MonitoredItemServices getMonitoredItemServices() {\n+        return monitoredItemServices;\n+    }\n+\n+    public NodeManagementServiceSet getNodeManagementServices() {\n+        return nodeManagementServices;\n+    }\n+\n+    public QueryServices getQueryServices() {\n+        return queryServices;\n+    }\n+\n+    public SubscriptionServices getSubscriptionServices() {\n+        return subscriptionServices;\n+    }\n+\n+    public ViewServices getViewServices() {\n+        return viewServices;\n+    }\n+\n+    public SubscriptionManager getSubscriptionManager() {\n+        return subscriptionManager;\n+    }\n+\n+    //region Session Services\n+    @Override\n+    public void onCreateSession(ServiceRequest<CreateSessionRequest, CreateSessionResponse> req) throws UaException {\n+        throw new UaException(StatusCodes.Bad_InternalError);\n+    }\n+\n+    @Override\n+    public void onActivateSession(ServiceRequest<ActivateSessionRequest, ActivateSessionResponse> req) throws UaException {\n+        throw new UaException(StatusCodes.Bad_InternalError);\n+    }\n+\n+    @Override\n+    public void onCloseSession(ServiceRequest<CloseSessionRequest, CloseSessionResponse> serviceRequest) throws UaException {\n+        close(serviceRequest.getRequest().getDeleteSubscriptions());\n+\n+        serviceRequest.setResponse(new CloseSessionResponse(serviceRequest.createResponseHeader()));\n+    }\n+\n+    void close(boolean deleteSubscriptions) {\n+        if (checkTimeoutFuture != null) {\n+            checkTimeoutFuture.cancel(false);\n+        }\n+\n+        subscriptionManager.sessionClosed(deleteSubscriptions);\n+\n+        listeners.forEach(listener -> listener.onSessionClosed(this, deleteSubscriptions));\n+    }\n+\n+    @Override\n+    public void onCancel(ServiceRequest<CancelRequest, CancelResponse> serviceRequest) throws UaException {\n+        serviceRequest.setResponse(new CancelResponse(serviceRequest.createResponseHeader(), uint(0)));\n+    }\n+    //endregion\n+\n+    public static interface LifecycleListener {\n+        void onSessionClosed(Session session, boolean subscriptionsDeleted);\n+    }\n+}"
        },
        {
            "sha": "5961fe15f5e216e9f29679278a5723e9b2452fac",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/SessionManager.java",
            "status": "added",
            "additions": 784,
            "deletions": 0,
            "changes": 784,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSessionManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSessionManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2FSessionManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,784 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server;\n+\n+import java.math.RoundingMode;\n+import java.net.URI;\n+import java.nio.ByteBuffer;\n+import java.security.KeyPair;\n+import java.security.cert.CertificateParsingException;\n+import java.security.cert.X509Certificate;\n+import java.time.Duration;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import com.google.common.math.DoubleMath;\n+import com.google.common.primitives.Bytes;\n+import org.eclipse.milo.opcua.sdk.server.identity.IdentityValidator;\n+import org.eclipse.milo.opcua.sdk.server.services.ServiceAttributes;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.UaRuntimeException;\n+import org.eclipse.milo.opcua.stack.core.application.services.AttributeServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.MethodServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.MonitoredItemServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.NodeManagementServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.QueryServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.ServiceRequest;\n+import org.eclipse.milo.opcua.stack.core.application.services.SessionServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.SubscriptionServiceSet;\n+import org.eclipse.milo.opcua.stack.core.application.services.ViewServiceSet;\n+import org.eclipse.milo.opcua.stack.core.channel.ServerSecureChannel;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityAlgorithm;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DiagnosticInfo;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ActivateSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AnonymousIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseNextRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseNextResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CancelRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CancelResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CloseSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSessionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CreateSubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteSubscriptionsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.EndpointDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.HistoryUpdateResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.IssuedIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifyMonitoredItemsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ModifySubscriptionResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.PublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryFirstRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryFirstResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryNextRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.QueryNextResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RegisterNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RegisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.RepublishResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetMonitoringModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetPublishingModeRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetPublishingModeResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetTriggeringRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SetTriggeringResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignatureData;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TransferSubscriptionsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TranslateBrowsePathsToNodeIdsRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.TranslateBrowsePathsToNodeIdsResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UnregisterNodesRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UnregisterNodesResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserNameIdentityToken;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteResponse;\n+import org.eclipse.milo.opcua.stack.core.types.structured.X509IdentityToken;\n+import org.eclipse.milo.opcua.stack.core.util.CertificateUtil;\n+import org.eclipse.milo.opcua.stack.core.util.NonceUtil;\n+import org.eclipse.milo.opcua.stack.core.util.SignatureUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static com.google.common.collect.Lists.newCopyOnWriteArrayList;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+\n+public class SessionManager implements\n+    AttributeServiceSet,\n+    MethodServiceSet,\n+    MonitoredItemServiceSet,\n+    NodeManagementServiceSet,\n+    QueryServiceSet,\n+    SessionServiceSet,\n+    SubscriptionServiceSet,\n+    ViewServiceSet {\n+\n+    private static final int MAX_SESSION_TIMEOUT_MS = 120000;\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    private final Map<NodeId, Session> createdSessions = Maps.newConcurrentMap();\n+    private final Map<NodeId, Session> activeSessions = Maps.newConcurrentMap();\n+    private final Map<NodeId, Session> inactiveSessions = Maps.newConcurrentMap();\n+\n+    /**\n+     * Store the last N client nonces and to make sure they aren't re-used.\n+     * <p>\n+     * This number is arbitrary; trying to prevent clients from re-using nonces is merely to satisfy the CTT.\n+     */\n+    private final List<ByteString> clientNonces = newCopyOnWriteArrayList();\n+\n+    private final OpcUaServer server;\n+\n+    public SessionManager(OpcUaServer server) {\n+        this.server = server;\n+    }\n+\n+    public List<Session> getActiveSessions() {\n+        return Lists.newArrayList(activeSessions.values());\n+    }\n+\n+    public List<Session> getInactiveSessions() {\n+        return Lists.newArrayList(inactiveSessions.values());\n+    }\n+\n+    public void killSession(NodeId nodeId, boolean deleteSubscriptions) {\n+        activeSessions.values().stream()\n+            .filter(s -> s.getSessionId().equals(nodeId))\n+            .findFirst().ifPresent(s -> s.close(deleteSubscriptions));\n+    }\n+\n+    private Session session(ServiceRequest<?, ?> service) throws UaException {\n+        long secureChannelId = service.getSecureChannel().getChannelId();\n+        NodeId authToken = service.getRequest().getRequestHeader().getAuthenticationToken();\n+\n+        Session session = activeSessions.get(authToken);\n+\n+        if (session == null) {\n+            session = createdSessions.remove(authToken);\n+\n+            if (session == null) {\n+                throw new UaException(StatusCodes.Bad_SessionIdInvalid);\n+            } else {\n+                if (session.getSecureChannelId() != secureChannelId) {\n+                    createdSessions.put(authToken, session);\n+                    throw new UaException(StatusCodes.Bad_SecurityChecksFailed);\n+                } else {\n+                    throw new UaException(StatusCodes.Bad_SessionNotActivated);\n+                }\n+            }\n+        }\n+\n+        if (session.getSecureChannelId() != secureChannelId) {\n+            throw new UaException(StatusCodes.Bad_SecureChannelIdInvalid);\n+        }\n+\n+        session.updateLastActivity();\n+\n+        service.attr(ServiceAttributes.SERVER_KEY).set(server);\n+        service.attr(ServiceAttributes.SESSION_KEY).set(session);\n+\n+        return session;\n+    }\n+\n+    //region Session Services\n+    @Override\n+    public void onCreateSession(ServiceRequest<CreateSessionRequest, CreateSessionResponse> serviceRequest) throws UaException {\n+        CreateSessionRequest request = serviceRequest.getRequest();\n+\n+        long maxSessionCount = server.getConfig().getLimits().getMaxSessionCount().longValue();\n+        if (createdSessions.size() + activeSessions.size() >= maxSessionCount) {\n+            serviceRequest.setServiceFault(StatusCodes.Bad_TooManySessions);\n+            return;\n+        }\n+\n+        ByteString serverNonce = NonceUtil.generateNonce(32);\n+        NodeId authenticationToken = new NodeId(0, NonceUtil.generateNonce(32));\n+        long maxRequestMessageSize = serviceRequest.getServer().getChannelConfig().getMaxMessageSize();\n+        double revisedSessionTimeout = Math.max(5000, Math.min(MAX_SESSION_TIMEOUT_MS, request.getRequestedSessionTimeout()));\n+\n+        ServerSecureChannel secureChannel = serviceRequest.getSecureChannel();\n+        SecurityPolicy securityPolicy = secureChannel.getSecurityPolicy();\n+\n+        ByteString serverCertificate = serviceRequest.getSecureChannel().getEndpointDescription().getServerCertificate();\n+        SignedSoftwareCertificate[] serverSoftwareCertificates = server.getSoftwareCertificates();\n+\n+        EndpointDescription[] serverEndpoints = Arrays.stream(server.getEndpointDescriptions())\n+            .filter(ed -> endpointMatchesUrl(ed, request.getEndpointUrl()))\n+            .toArray(EndpointDescription[]::new);\n+\n+        ByteString clientNonce = request.getClientNonce();\n+        if (clientNonce.isNotNull() && (clientNonce.length() < 32)) {\n+            throw new UaException(StatusCodes.Bad_NonceInvalid);\n+        }\n+\n+        if (securityPolicy != SecurityPolicy.None && clientNonces.contains(clientNonce)) {\n+            throw new UaException(StatusCodes.Bad_NonceInvalid);\n+        }\n+\n+        if (securityPolicy != SecurityPolicy.None && clientNonce.isNotNull()) {\n+            clientNonces.add(clientNonce);\n+            while (clientNonces.size() > 64) {\n+                clientNonces.remove(0);\n+            }\n+        }\n+\n+        ByteString clientCertificate = request.getClientCertificate();\n+        if (clientCertificate.isNotNull()) {\n+            if (secureChannel.getSecurityPolicy() != SecurityPolicy.None) {\n+                String applicationUri = request.getClientDescription().getApplicationUri();\n+                X509Certificate certificate = CertificateUtil.decodeCertificate(clientCertificate.bytes());\n+\n+                validateApplicationUri(applicationUri, certificate);\n+            }\n+        }\n+\n+        SignatureData serverSignature = getServerSignature(\n+            clientNonce,\n+            clientCertificate,\n+            securityPolicy,\n+            secureChannel.getKeyPair()\n+        );\n+\n+        NodeId sessionId = new NodeId(1, \"Session:\" + UUID.randomUUID());\n+        String sessionName = request.getSessionName();\n+        Duration sessionTimeout = Duration.ofMillis(DoubleMath.roundToLong(revisedSessionTimeout, RoundingMode.UP));\n+        Session session = new Session(server, sessionId, sessionName, sessionTimeout, secureChannel.getChannelId());\n+        createdSessions.put(authenticationToken, session);\n+\n+        session.addLifecycleListener((s, remove) -> {\n+            createdSessions.remove(authenticationToken);\n+            activeSessions.remove(authenticationToken);\n+        });\n+\n+        session.setLastNonce(serverNonce);\n+\n+        CreateSessionResponse response = new CreateSessionResponse(\n+            serviceRequest.createResponseHeader(),\n+            sessionId,\n+            authenticationToken,\n+            revisedSessionTimeout,\n+            serverNonce,\n+            serverCertificate,\n+            serverEndpoints,\n+            serverSoftwareCertificates,\n+            serverSignature,\n+            uint(maxRequestMessageSize)\n+        );\n+\n+        serviceRequest.setResponse(response);\n+    }\n+\n+    private boolean endpointMatchesUrl(EndpointDescription endpoint, String endpointUrl) {\n+        try {\n+            String requestedHost = new URI(endpointUrl).parseServerAuthority().getHost();\n+            String endpointHost = new URI(endpoint.getEndpointUrl()).parseServerAuthority().getHost();\n+\n+            return requestedHost.equalsIgnoreCase(endpointHost);\n+        } catch (Throwable e) {\n+            logger.warn(\"Unable to create URI.\", e);\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Validate that the application URI matches the SubjectAltName URI in the given certificate.\n+     *\n+     * @param applicationUri the URI to match.\n+     * @param certificate    the certificate to match against.\n+     * @throws UaException if the certificate is invalid, does not contain a uri, or contains a uri that does not match.\n+     */\n+    private void validateApplicationUri(String applicationUri, X509Certificate certificate) throws UaException {\n+        try {\n+            Collection<List<?>> subjectAltNames = certificate.getSubjectAlternativeNames();\n+            if (subjectAltNames == null) subjectAltNames = Collections.emptyList();\n+\n+            for (List<?> idAndValue : subjectAltNames) {\n+                if (idAndValue != null && idAndValue.size() == 2) {\n+                    if (idAndValue.get(0).equals(6)) {\n+                        String certificateUri = (String) idAndValue.get(1);\n+                        if (!applicationUri.equals(certificateUri)) {\n+                            String message = String.format(\n+                                \"Certificate URI does not match. certificateUri=%s, applicationUri=%s\",\n+                                certificateUri, applicationUri);\n+\n+                            logger.warn(message);\n+\n+                            throw new UaException(StatusCodes.Bad_CertificateUriInvalid, message);\n+                        }\n+                        return;\n+                    }\n+                }\n+            }\n+\n+            String message = \"Certificate does not contain a SubjectAlternativeName URI entry.\";\n+\n+            throw new UaException(StatusCodes.Bad_CertificateUriInvalid, message);\n+        } catch (CertificateParsingException e) {\n+            logger.warn(\"Error parsing client certificate.\", e);\n+\n+            throw new UaException(StatusCodes.Bad_CertificateInvalid);\n+        }\n+    }\n+\n+    @Override\n+    public void onActivateSession(ServiceRequest<ActivateSessionRequest, ActivateSessionResponse> serviceRequest) throws UaException {\n+        ActivateSessionRequest request = serviceRequest.getRequest();\n+\n+        ServerSecureChannel secureChannel = serviceRequest.getSecureChannel();\n+        long secureChannelId = secureChannel.getChannelId();\n+        NodeId authToken = request.getRequestHeader().getAuthenticationToken();\n+        SignedSoftwareCertificate[] clientSoftwareCertificates = request.getClientSoftwareCertificates();\n+\n+        Session session = createdSessions.get(authToken);\n+\n+        if (session == null) {\n+            session = activeSessions.get(authToken);\n+\n+            if (session == null) {\n+                throw new UaException(StatusCodes.Bad_SessionIdInvalid);\n+            } else {\n+                if (session.getSecureChannelId() == secureChannelId) {\n+                    /*\n+                     * Identity change\n+                     */\n+                    Object tokenObject = request.getUserIdentityToken().decode();\n+                    Object identityObject = validateIdentityToken(secureChannel, session, tokenObject);\n+                    session.setIdentityObject(identityObject);\n+\n+                    StatusCode[] results = new StatusCode[clientSoftwareCertificates.length];\n+                    Arrays.fill(results, StatusCode.GOOD);\n+\n+                    ByteString serverNonce = NonceUtil.generateNonce(32);\n+\n+                    session.setLastNonce(serverNonce);\n+\n+                    ActivateSessionResponse response = new ActivateSessionResponse(\n+                        serviceRequest.createResponseHeader(),\n+                        serverNonce,\n+                        results,\n+                        new DiagnosticInfo[0]\n+                    );\n+\n+                    serviceRequest.setResponse(response);\n+                } else {\n+                    /*\n+                     * Associate session with new secure channel if client certificate and identity token match.\n+                     */\n+                    ByteString certificateBytes = secureChannel.getRemoteCertificateBytes();\n+\n+                    if (request.getUserIdentityToken() == null || request.getUserIdentityToken().decode() == null) {\n+                        throw new UaException(StatusCodes.Bad_IdentityTokenInvalid, \"identity token not provided\");\n+                    }\n+\n+                    Object tokenObject = request.getUserIdentityToken().decode();\n+                    Object identityObject = validateIdentityToken(secureChannel, session, tokenObject);\n+\n+                    if (identityObject.equals(session.getIdentityObject()) &&\n+                        certificateBytes.equals(session.getClientCertificateBytes())) {\n+\n+                        session.setSecureChannelId(secureChannelId);\n+\n+                        logger.debug(\"Session id={} is now associated with secureChannelId={}\",\n+                            session.getSessionId(), secureChannelId);\n+\n+                        StatusCode[] results = new StatusCode[clientSoftwareCertificates.length];\n+                        Arrays.fill(results, StatusCode.GOOD);\n+\n+                        ByteString serverNonce = NonceUtil.generateNonce(32);\n+\n+                        session.setLastNonce(serverNonce);\n+\n+                        ActivateSessionResponse response = new ActivateSessionResponse(\n+                            serviceRequest.createResponseHeader(),\n+                            serverNonce,\n+                            results,\n+                            new DiagnosticInfo[0]\n+                        );\n+\n+                        serviceRequest.setResponse(response);\n+                    } else {\n+                        throw new UaException(StatusCodes.Bad_SecurityChecksFailed);\n+                    }\n+                }\n+            }\n+        } else {\n+            if (secureChannelId != session.getSecureChannelId()) {\n+                throw new UaException(StatusCodes.Bad_SecurityChecksFailed);\n+            }\n+\n+            if (request.getUserIdentityToken() == null || request.getUserIdentityToken().decode() == null) {\n+                throw new UaException(StatusCodes.Bad_IdentityTokenInvalid, \"identity token not provided\");\n+            }\n+\n+            Object tokenObject = request.getUserIdentityToken().decode();\n+            Object identityObject = validateIdentityToken(secureChannel, session, tokenObject);\n+            session.setIdentityObject(identityObject);\n+\n+            createdSessions.remove(authToken);\n+            activeSessions.put(authToken, session);\n+\n+            session.setClientCertificateBytes(secureChannel.getRemoteCertificateBytes());\n+\n+            StatusCode[] results = new StatusCode[clientSoftwareCertificates.length];\n+            Arrays.fill(results, StatusCode.GOOD);\n+\n+            ByteString serverNonce = NonceUtil.generateNonce(32);\n+\n+            session.setLastNonce(serverNonce);\n+\n+            ActivateSessionResponse response = new ActivateSessionResponse(\n+                serviceRequest.createResponseHeader(),\n+                serverNonce,\n+                results,\n+                new DiagnosticInfo[0]\n+            );\n+\n+            serviceRequest.setResponse(response);\n+        }\n+    }\n+\n+    private Object validateIdentityToken(ServerSecureChannel secureChannel, Session session, Object tokenObject) throws UaException {\n+        IdentityValidator identityValidator = server.getConfig().getIdentityValidator();\n+        UserTokenPolicy tokenPolicy = validatePolicyId(tokenObject);\n+\n+        if (tokenObject instanceof AnonymousIdentityToken) {\n+            AnonymousIdentityToken token = (AnonymousIdentityToken) tokenObject;\n+\n+            return identityValidator.validateAnonymousToken(token, tokenPolicy, secureChannel, session);\n+        } else if (tokenObject instanceof UserNameIdentityToken) {\n+            UserNameIdentityToken token = (UserNameIdentityToken) tokenObject;\n+\n+            return identityValidator.validateUsernameToken(token, tokenPolicy, secureChannel, session);\n+        } else if (tokenObject instanceof X509IdentityToken) {\n+            X509IdentityToken token = (X509IdentityToken) tokenObject;\n+\n+            return identityValidator.validateX509Token(token, tokenPolicy, secureChannel, session);\n+        } else if (tokenObject instanceof IssuedIdentityToken) {\n+            IssuedIdentityToken token = (IssuedIdentityToken) tokenObject;\n+\n+            return identityValidator.validateIssuedIdentityToken(token, tokenPolicy, secureChannel, session);\n+        } else {\n+            throw new UaException(StatusCodes.Bad_IdentityTokenInvalid);\n+        }\n+    }\n+\n+    private UserTokenPolicy validatePolicyId(Object tokenObject) throws UaException {\n+        if (tokenObject instanceof UserIdentityToken) {\n+            UserIdentityToken token = (UserIdentityToken) tokenObject;\n+            String policyId = token.getPolicyId();\n+\n+            for (UserTokenPolicy policy : server.getUserTokenPolicies()) {\n+                if (policyId.equals(policy.getPolicyId())) {\n+                    return policy;\n+                }\n+            }\n+\n+            throw new UaException(StatusCodes.Bad_IdentityTokenInvalid, \"policy not found: \" + policyId);\n+        } else {\n+            throw new UaException(StatusCodes.Bad_IdentityTokenInvalid);\n+        }\n+    }\n+\n+    @Override\n+    public void onCloseSession(ServiceRequest<CloseSessionRequest, CloseSessionResponse> service) throws UaException {\n+        long secureChannelId = service.getSecureChannel().getChannelId();\n+        NodeId authToken = service.getRequest().getRequestHeader().getAuthenticationToken();\n+\n+        Session session = activeSessions.get(authToken);\n+\n+        if (session != null) {\n+            if (session.getSecureChannelId() != secureChannelId) {\n+                throw new UaException(StatusCodes.Bad_SecureChannelIdInvalid);\n+            } else {\n+                activeSessions.remove(authToken);\n+                session.onCloseSession(service);\n+            }\n+        } else {\n+            session = createdSessions.get(authToken);\n+\n+            if (session == null) {\n+                throw new UaException(StatusCodes.Bad_SessionIdInvalid);\n+            } else if (session.getSecureChannelId() != secureChannelId) {\n+                throw new UaException(StatusCodes.Bad_SecureChannelIdInvalid);\n+            } else {\n+                createdSessions.remove(authToken);\n+                session.onCloseSession(service);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onCancel(ServiceRequest<CancelRequest, CancelResponse> service) throws UaException {\n+        session(service).onCancel(service);\n+    }\n+\n+    private SignatureData getServerSignature(ByteString clientNonce,\n+                                             ByteString clientCertificate,\n+                                             SecurityPolicy securityPolicy,\n+                                             KeyPair keyPair) throws UaException {\n+\n+        if (clientNonce.isNull() || clientCertificate.isNull() || keyPair == null) {\n+            return new SignatureData(null, null);\n+        }\n+\n+        try {\n+            SecurityAlgorithm algorithm = securityPolicy.getAsymmetricSignatureAlgorithm();\n+\n+            byte[] data = Bytes.concat(clientCertificate.bytes(), clientNonce.bytes());\n+\n+            byte[] signature = SignatureUtil.sign(\n+                algorithm,\n+                keyPair.getPrivate(),\n+                ByteBuffer.wrap(data)\n+            );\n+\n+            return new SignatureData(algorithm.getUri(), ByteString.of(signature));\n+        } catch (UaRuntimeException e) {\n+            throw new UaException(StatusCodes.Bad_SecurityChecksFailed);\n+        }\n+    }\n+    //endregion\n+\n+    //region Attribute Services\n+    @Override\n+    public void onRead(ServiceRequest<ReadRequest, ReadResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getAttributeServices().onRead(service);\n+    }\n+\n+    @Override\n+    public void onWrite(ServiceRequest<WriteRequest, WriteResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getAttributeServices().onWrite(service);\n+    }\n+\n+    @Override\n+    public void onHistoryRead(ServiceRequest<HistoryReadRequest, HistoryReadResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getAttributeServices().onHistoryRead(service);\n+    }\n+\n+    @Override\n+    public void onHistoryUpdate(ServiceRequest<HistoryUpdateRequest, HistoryUpdateResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getAttributeServices().onHistoryUpdate(service);\n+    }\n+    //endregion\n+\n+    //region View Services\n+    @Override\n+    public void onBrowse(ServiceRequest<BrowseRequest, BrowseResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getViewServices().onBrowse(service);\n+    }\n+\n+    @Override\n+    public void onBrowseNext(ServiceRequest<BrowseNextRequest, BrowseNextResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getViewServices().onBrowseNext(service);\n+    }\n+\n+    @Override\n+    public void onTranslateBrowsePaths(ServiceRequest<TranslateBrowsePathsToNodeIdsRequest, TranslateBrowsePathsToNodeIdsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getViewServices().onTranslateBrowsePaths(service);\n+    }\n+\n+    @Override\n+    public void onRegisterNodes(ServiceRequest<RegisterNodesRequest, RegisterNodesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getViewServices().onRegisterNodes(service);\n+    }\n+\n+    @Override\n+    public void onUnregisterNodes(ServiceRequest<UnregisterNodesRequest, UnregisterNodesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getViewServices().onUnregisterNodes(service);\n+    }\n+    //endregion\n+\n+    //region NodeManagement Services\n+    @Override\n+    public void onAddNodes(ServiceRequest<AddNodesRequest, AddNodesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getNodeManagementServices().onAddNodes(service);\n+    }\n+\n+    @Override\n+    public void onAddReferences(ServiceRequest<AddReferencesRequest, AddReferencesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getNodeManagementServices().onAddReferences(service);\n+    }\n+\n+    @Override\n+    public void onDeleteNodes(ServiceRequest<DeleteNodesRequest, DeleteNodesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getNodeManagementServices().onDeleteNodes(service);\n+    }\n+\n+    @Override\n+    public void onDeleteReferences(ServiceRequest<DeleteReferencesRequest, DeleteReferencesResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getNodeManagementServices().onDeleteReferences(service);\n+    }\n+    //endregion\n+\n+    //region Subscription Services\n+    @Override\n+    public void onCreateSubscription(ServiceRequest<CreateSubscriptionRequest, CreateSubscriptionResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onCreateSubscription(service);\n+    }\n+\n+    @Override\n+    public void onModifySubscription(ServiceRequest<ModifySubscriptionRequest, ModifySubscriptionResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onModifySubscription(service);\n+    }\n+\n+    @Override\n+    public void onSetPublishingMode(ServiceRequest<SetPublishingModeRequest, SetPublishingModeResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onSetPublishingMode(service);\n+    }\n+\n+    @Override\n+    public void onPublish(ServiceRequest<PublishRequest, PublishResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onPublish(service);\n+    }\n+\n+    @Override\n+    public void onRepublish(ServiceRequest<RepublishRequest, RepublishResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onRepublish(service);\n+    }\n+\n+    @Override\n+    public void onTransferSubscriptions(ServiceRequest<TransferSubscriptionsRequest, TransferSubscriptionsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onTransferSubscriptions(service);\n+    }\n+\n+    @Override\n+    public void onDeleteSubscriptions(ServiceRequest<DeleteSubscriptionsRequest, DeleteSubscriptionsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getSubscriptionServices().onDeleteSubscriptions(service);\n+    }\n+    //endregion\n+\n+    //region MonitoredItem Services\n+    @Override\n+    public void onCreateMonitoredItems(ServiceRequest<CreateMonitoredItemsRequest, CreateMonitoredItemsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMonitoredItemServices().onCreateMonitoredItems(service);\n+    }\n+\n+    @Override\n+    public void onModifyMonitoredItems(ServiceRequest<ModifyMonitoredItemsRequest, ModifyMonitoredItemsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMonitoredItemServices().onModifyMonitoredItems(service);\n+    }\n+\n+    @Override\n+    public void onSetMonitoringMode(ServiceRequest<SetMonitoringModeRequest, SetMonitoringModeResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMonitoredItemServices().onSetMonitoringMode(service);\n+    }\n+\n+    @Override\n+    public void onSetTriggering(ServiceRequest<SetTriggeringRequest, SetTriggeringResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMonitoredItemServices().onSetTriggering(service);\n+    }\n+\n+    @Override\n+    public void onDeleteMonitoredItems(ServiceRequest<DeleteMonitoredItemsRequest, DeleteMonitoredItemsResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMonitoredItemServices().onDeleteMonitoredItems(service);\n+    }\n+    //endregion\n+\n+    //region Method Services\n+    @Override\n+    public void onCall(ServiceRequest<CallRequest, CallResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getMethodServices().onCall(service);\n+    }\n+    //endregion\n+\n+    //region Query Services\n+    @Override\n+    public void onQueryFirst(ServiceRequest<QueryFirstRequest, QueryFirstResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getQueryServices().onQueryFirst(service);\n+    }\n+\n+    @Override\n+    public void onQueryNext(ServiceRequest<QueryNextRequest, QueryNextResponse> service) throws UaException {\n+        Session session = session(service);\n+\n+        session.getQueryServices().onQueryNext(service);\n+    }\n+    //endregion\n+\n+}"
        },
        {
            "sha": "bc9de187582c5c43df01c8fe81e936088424196c",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/AbstractUaNodeManager.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAbstractUaNodeManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAbstractUaNodeManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAbstractUaNodeManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.concurrent.ConcurrentMap;\n+\n+import com.google.common.collect.ForwardingConcurrentMap;\n+import com.google.common.collect.MapMaker;\n+import org.eclipse.milo.opcua.sdk.server.model.UaNode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+\n+public abstract class AbstractUaNodeManager extends ForwardingConcurrentMap<NodeId, UaNode> implements UaNodeManager {\n+\n+    private final ConcurrentMap<NodeId, UaNode> nodeMap;\n+\n+    public AbstractUaNodeManager() {\n+        MapMaker mapMaker = new MapMaker();\n+\n+        nodeMap = makeNodeMap(mapMaker);\n+    }\n+\n+    protected ConcurrentMap<NodeId, UaNode> makeNodeMap(MapMaker mapMaker) {\n+        return mapMaker.makeMap();\n+    }\n+\n+    @Override\n+    protected final ConcurrentMap<NodeId, UaNode> delegate() {\n+        return nodeMap;\n+    }\n+\n+}"
        },
        {
            "sha": "c09539b1d6bd8b6efa39d8312199c9e198fd38dd",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/AttributeManager.java",
            "status": "added",
            "additions": 90,
            "deletions": 0,
            "changes": 90,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAttributeManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAttributeManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FAttributeManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import javax.annotation.Nullable;\n+\n+import org.eclipse.milo.opcua.sdk.server.DiagnosticsContext;\n+import org.eclipse.milo.opcua.sdk.server.OpcUaServer;\n+import org.eclipse.milo.opcua.sdk.server.Session;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+import org.eclipse.milo.opcua.stack.core.types.structured.WriteValue;\n+\n+public interface AttributeManager {\n+\n+    /**\n+     * Read one or more values from nodes belonging to this {@link AttributeManager}.\n+     * <p>\n+     * Complete the operation with {@link ReadContext#complete(List)}.\n+     *\n+     * @param context      the {@link ReadContext}.\n+     * @param maxAge       requested max age.\n+     * @param timestamps   requested timestamp values.\n+     * @param readValueIds the values to read.\n+     */\n+    void read(ReadContext context,\n+              Double maxAge,\n+              TimestampsToReturn timestamps,\n+              List<ReadValueId> readValueIds);\n+\n+    /**\n+     * Write one or more values to nodes belonging to this {@link AttributeManager}.\n+     * <p>\n+     * Complete the operation with {@link WriteContext#complete(List)}.\n+     *\n+     * @param context     the {@link WriteContext}.\n+     * @param writeValues the values to write.\n+     */\n+    void write(WriteContext context, List<WriteValue> writeValues);\n+\n+    final class ReadContext extends OperationContext<ReadValueId, DataValue> {\n+        public ReadContext(OpcUaServer server,\n+                           @Nullable Session session,\n+                           DiagnosticsContext<ReadValueId> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+\n+        public ReadContext(OpcUaServer server,\n+                           @Nullable Session session,\n+                           CompletableFuture<List<DataValue>> future,\n+                           DiagnosticsContext<ReadValueId> diagnosticsContext) {\n+\n+            super(server, session, future, diagnosticsContext);\n+        }\n+    }\n+\n+    final class WriteContext extends OperationContext<WriteValue, StatusCode> {\n+        public WriteContext(OpcUaServer server,\n+                            @Nullable Session session,\n+                            DiagnosticsContext<WriteValue> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+\n+        public WriteContext(OpcUaServer server,\n+                            @Nullable Session session,\n+                            CompletableFuture<List<StatusCode>> future,\n+                            DiagnosticsContext<WriteValue> diagnosticsContext) {\n+\n+            super(server, session, future, diagnosticsContext);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "34c5f59b2b5ecefa28724b7bbee594cc9c8f6d37",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/DataItem.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FDataItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FDataItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FDataItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public interface DataItem extends MonitoredItem {\n+\n+    /**\n+     * Set the latest sampled value.\n+     *\n+     * @param value the latest sampled value.\n+     */\n+    void setValue(DataValue value);\n+\n+    /**\n+     * Apply a new {@link StatusCode} to the last value that passed the filter and then attempt to set the derived value.\n+     *\n+     * @param quality the {@link StatusCode} to apply.\n+     */\n+    void setQuality(StatusCode quality);\n+\n+    /**\n+     * @return the rate to sample this item at.\n+     */\n+    double getSamplingInterval();\n+\n+}"
        },
        {
            "sha": "38694999d92ae407295ec42621c2918fa80e54c0",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/EventItem.java",
            "status": "added",
            "additions": 24,
            "deletions": 0,
            "changes": 24,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import com.google.common.eventbus.Subscribe;\n+import org.eclipse.milo.opcua.sdk.core.model.objects.BaseEventType;\n+\n+public interface EventItem extends MonitoredItem {\n+\n+    @Subscribe\n+    void setEvent(BaseEventType event);\n+\n+}"
        },
        {
            "sha": "8e06fde76115cef3d04f8a7299588c80dfb471f8",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/EventManager.java",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FEventManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+\n+import org.eclipse.milo.opcua.sdk.server.items.MonitoredEventItem;\n+\n+public interface EventManager {\n+\n+    /**\n+     * {@link MonitoredEventItem} have been created for nodes belonging to this {#link EventManager}.\n+     *\n+     * @param eventItems the {@link MonitoredEventItem}s that were created.\n+     */\n+    void onEventItemsCreated(List<MonitoredEventItem> eventItems);\n+\n+    void onEventItemsModified(List<MonitoredEventItem> eventItems);\n+\n+    void onEventItemsDeleted(List<MonitoredEventItem> eventItems);\n+\n+    void onMonitoringModeChanged(List<MonitoredEventItem> eventItems);\n+\n+}"
        },
        {
            "sha": "31e25f2c43b665fa45be0979bc140a27a488c669",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/MethodInvocationHandler.java",
            "status": "added",
            "additions": 63,
            "deletions": 0,
            "changes": 63,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodInvocationHandler.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodInvocationHandler.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodInvocationHandler.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DiagnosticInfo;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodResult;\n+\n+public interface MethodInvocationHandler {\n+\n+    /**\n+     * Invoke the given {@link CallMethodRequest} and complete {@code future} when finished.\n+     * <p>\n+     * Under no circumstances should the future be completed exceptionally.\n+     *\n+     * @param request the {@link CallMethodRequest}.\n+     * @param future  the {@link CompletableFuture} to complete.\n+     */\n+    void invoke(CallMethodRequest request, CompletableFuture<CallMethodResult> future);\n+\n+    final class NodeIdUnknownHandler implements MethodInvocationHandler {\n+        @Override\n+        public void invoke(CallMethodRequest request, CompletableFuture<CallMethodResult> future) {\n+            CallMethodResult nodeIdUnknown = new CallMethodResult(\n+                new StatusCode(StatusCodes.Bad_NodeIdUnknown),\n+                new StatusCode[0],\n+                new DiagnosticInfo[0],\n+                new Variant[0]);\n+\n+            future.complete(nodeIdUnknown);\n+        }\n+    }\n+\n+    final class NotImplementedHandler implements MethodInvocationHandler {\n+        @Override\n+        public void invoke(CallMethodRequest request, CompletableFuture<CallMethodResult> future) {\n+            CallMethodResult nodeIdUnknown = new CallMethodResult(\n+                new StatusCode(StatusCodes.Bad_NotImplemented),\n+                new StatusCode[0],\n+                new DiagnosticInfo[0],\n+                new Variant[0]);\n+\n+            future.complete(nodeIdUnknown);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "87259720b18613c952990f350b53ae2f06c47fa6",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/MethodServices.java",
            "status": "added",
            "additions": 98,
            "deletions": 0,
            "changes": 98,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodServices.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodServices.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMethodServices.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import javax.annotation.Nullable;\n+\n+import com.google.common.collect.Lists;\n+import org.eclipse.milo.opcua.sdk.server.DiagnosticsContext;\n+import org.eclipse.milo.opcua.sdk.server.OpcUaServer;\n+import org.eclipse.milo.opcua.sdk.server.Session;\n+import org.eclipse.milo.opcua.sdk.server.api.MethodInvocationHandler.NodeIdUnknownHandler;\n+import org.eclipse.milo.opcua.sdk.server.util.FutureUtils;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DiagnosticInfo;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodRequest;\n+import org.eclipse.milo.opcua.stack.core.types.structured.CallMethodResult;\n+import org.slf4j.LoggerFactory;\n+\n+public interface MethodServices {\n+\n+    /**\n+     * Invoke one or more methods belonging to this {@link MethodServices}.\n+     *\n+     * @param context  the {@link CallContext}.\n+     * @param requests The {@link CallMethodRequest}s for the methods to invoke.\n+     */\n+    default void call(CallContext context, List<CallMethodRequest> requests) {\n+        List<CompletableFuture<CallMethodResult>> results = Lists.newArrayListWithCapacity(requests.size());\n+\n+        for (CallMethodRequest request : requests) {\n+            MethodInvocationHandler handler = getInvocationHandler(request.getMethodId())\n+                .orElse(new NodeIdUnknownHandler());\n+\n+            CompletableFuture<CallMethodResult> resultFuture = new CompletableFuture<>();\n+\n+            try {\n+                handler.invoke(request, resultFuture);\n+            } catch (Throwable t) {\n+                LoggerFactory.getLogger(getClass())\n+                    .error(\"Uncaught Throwable invoking method handler for methodId={}.\", request.getMethodId(), t);\n+\n+                resultFuture.complete(new CallMethodResult(\n+                    new StatusCode(StatusCodes.Bad_InternalError),\n+                    new StatusCode[0], new DiagnosticInfo[0], new Variant[0]\n+                ));\n+            }\n+\n+            results.add(resultFuture);\n+        }\n+\n+        FutureUtils.sequence(results).thenAccept(rs -> context.complete(rs));\n+    }\n+\n+    /**\n+     * Get the {@link MethodInvocationHandler} for the method identified by {@code methodId}, if it exists.\n+     *\n+     * @param methodId the {@link NodeId} identifying the method.\n+     * @return the {@link MethodInvocationHandler} for {@code methodId}, if it exists.\n+     */\n+    default Optional<MethodInvocationHandler> getInvocationHandler(NodeId methodId) {\n+        return Optional.empty();\n+    }\n+\n+    final class CallContext extends OperationContext<CallMethodRequest, CallMethodResult> {\n+        public CallContext(OpcUaServer server,\n+                           @Nullable Session session,\n+                           DiagnosticsContext<CallMethodRequest> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+\n+        public CallContext(OpcUaServer server,\n+                           @Nullable Session session,\n+                           CompletableFuture<List<CallMethodResult>> future,\n+                           DiagnosticsContext<CallMethodRequest> diagnosticsContext) {\n+\n+            super(server, session, future, diagnosticsContext);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "d6a224ca9956146f009d6a88975a45fb12f28600",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/MonitoredItem.java",
            "status": "added",
            "additions": 48,
            "deletions": 0,
            "changes": 48,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import org.eclipse.milo.opcua.sdk.server.subscriptions.Subscription;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.TimestampsToReturn;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ReadValueId;\n+\n+public interface MonitoredItem {\n+\n+    /**\n+     * @return the server-side id of this item.\n+     */\n+    UInteger getId();\n+\n+    /**\n+     * @return the id of the {@link Subscription} this item belongs to.\n+     */\n+    UInteger getSubscriptionId();\n+\n+    /**\n+     * @return the {@link ReadValueId} being monitored.\n+     */\n+    ReadValueId getReadValueId();\n+\n+    /**\n+     * @return the {@link TimestampsToReturn}.\n+     */\n+    TimestampsToReturn getTimestampsToReturn();\n+\n+    /**\n+     * @return {@code true} if this item should be sampled.\n+     */\n+    boolean isSamplingEnabled();\n+\n+}"
        },
        {
            "sha": "b3039249f877fadec53d9d2bfa5d3d62a48c91c9",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/MonitoredItemManager.java",
            "status": "added",
            "additions": 83,
            "deletions": 0,
            "changes": 83,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItemManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItemManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FMonitoredItemManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.MonitoringMode;\n+\n+public interface MonitoredItemManager {\n+\n+    /**\n+     * {@link DataItem}s have been created for nodes belonging to this {@link NodeManager}.\n+     * <p>\n+     * If sampling is enabled for this item, it is expected that a best-effort will be made to update the item's value\n+     * at the sampling rate.\n+     *\n+     * @param dataItems the {@link DataItem}s that were created.\n+     */\n+    void onDataItemsCreated(List<DataItem> dataItems);\n+\n+    /**\n+     * {@link DataItem}s have been modified for nodes belonging to this {@link NodeManager}.\n+     * <p>\n+     * Check to see if the sampling rate has changed or if sampling has been enabled or disabled.\n+     *\n+     * @param dataItems the {@link DataItem}s that were modified.\n+     */\n+    void onDataItemsModified(List<DataItem> dataItems);\n+\n+    /**\n+     * {@link DataItem}s have been deleted for nodes belonging to this {@link NodeManager}.\n+     * <p>\n+     * Updates to this item should cease and any references to it should be removed.\n+     *\n+     * @param dataItems the {@link DataItem}s that were deleted.\n+     */\n+    void onDataItemsDeleted(List<DataItem> dataItems);\n+\n+    /**\n+     * {@link EventItem}s have been created for nodes belonging to this {@link NodeManager}.\n+     *\n+     * @param eventItems the {@link EventItem}s that were created.\n+     */\n+    default void onEventItemsCreated(List<EventItem> eventItems) {\n+    }\n+\n+    /**\n+     * {@link EventItem}s have been modified for nodes belonging to this {@link NodeManager}.\n+     *\n+     * @param eventItems the {@link EventItem}s that were modified.\n+     */\n+    default void onEventItemsModified(List<EventItem> eventItems) {\n+    }\n+\n+    /**\n+     * {@link EventItem}s have been deleted for nodes belonging to this {@link NodeManager}.\n+     *\n+     * @param eventItems the {@link EventItem}s that were deleted.\n+     */\n+    default void onEventItemsDeleted(List<EventItem> eventItems) {\n+    }\n+\n+    /**\n+     * {@link MonitoredItem}s have had their {@link MonitoringMode} modified by a client.\n+     * <p>\n+     * Check if sampling is still enabled and react accordingly.\n+     *\n+     * @param monitoredItems The {@link MonitoredItem}s whose {@link MonitoringMode} was modified.\n+     */\n+    void onMonitoringModeChanged(List<MonitoredItem> monitoredItems);\n+\n+}"
        },
        {
            "sha": "b2eac4b1146643b4e6eb2166b1970caa6647e890",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/Namespace.java",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNamespace.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNamespace.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNamespace.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+public interface Namespace extends AttributeManager, MethodServices, MonitoredItemManager, NodeManager, ViewManager {\n+\n+    /**\n+     * @return the index of this {@link Namespace} in the server's namespace array.\n+     */\n+    UShort getNamespaceIndex();\n+\n+    /**\n+     * @return the URI identifying this {@link Namespace}.\n+     */\n+    String getNamespaceUri();\n+\n+}"
        },
        {
            "sha": "1f37ed782d978adefb97451e373c45391f13eb02",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/NodeManager.java",
            "status": "added",
            "additions": 93,
            "deletions": 0,
            "changes": 93,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNodeManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNodeManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FNodeManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+\n+import org.eclipse.milo.opcua.sdk.server.DiagnosticsContext;\n+import org.eclipse.milo.opcua.sdk.server.OpcUaServer;\n+import org.eclipse.milo.opcua.sdk.server.Session;\n+import org.eclipse.milo.opcua.stack.core.StatusCodes;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddNodesResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.AddReferencesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteNodesItem;\n+import org.eclipse.milo.opcua.stack.core.types.structured.DeleteReferencesItem;\n+\n+public interface NodeManager {\n+\n+    default void addNode(AddNodesContext context, List<AddNodesItem> nodesToAdd) {\n+        AddNodesResult result = new AddNodesResult(\n+            new StatusCode(StatusCodes.Bad_NotSupported),\n+            NodeId.NULL_VALUE);\n+\n+        context.complete(Collections.nCopies(nodesToAdd.size(), result));\n+    }\n+\n+\n+    default void deleteNode(DeleteNodesContext context, List<DeleteNodesItem> nodesToDelete) {\n+        StatusCode statusCode = new StatusCode(StatusCodes.Bad_NotSupported);\n+\n+        context.complete(Collections.nCopies(nodesToDelete.size(), statusCode));\n+    }\n+\n+    default void addReference(AddReferencesContext context, List<AddReferencesItem> referencesToAdd) {\n+        StatusCode statusCode = new StatusCode(StatusCodes.Bad_NotSupported);\n+\n+        context.complete(Collections.nCopies(referencesToAdd.size(), statusCode));\n+    }\n+\n+    default void deleteReference(DeleteReferencesContext context, List<DeleteReferencesItem> referencesToDelete) {\n+        StatusCode statusCode = new StatusCode(StatusCodes.Bad_NotSupported);\n+\n+        context.complete(Collections.nCopies(referencesToDelete.size(), statusCode));\n+    }\n+\n+    final class AddNodesContext extends OperationContext<AddNodesItem, AddNodesResult> {\n+        public AddNodesContext(OpcUaServer server, @Nullable Session session,\n+                               DiagnosticsContext<AddNodesItem> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+    }\n+\n+    final class DeleteNodesContext extends OperationContext<DeleteNodesItem, StatusCode> {\n+        public DeleteNodesContext(OpcUaServer server, @Nullable Session session,\n+                                  DiagnosticsContext<DeleteNodesItem> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+    }\n+\n+    final class AddReferencesContext extends OperationContext<AddReferencesItem, StatusCode> {\n+        public AddReferencesContext(OpcUaServer server, @Nullable Session session,\n+                                    DiagnosticsContext<AddReferencesItem> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+    }\n+\n+    final class DeleteReferencesContext extends OperationContext<DeleteReferencesItem, StatusCode> {\n+        public DeleteReferencesContext(OpcUaServer server, @Nullable Session session,\n+                                       DiagnosticsContext<DeleteReferencesItem> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "f128fd7f47932baae4439a8bb55aaca9caa101bc",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/OperationContext.java",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FOperationContext.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FOperationContext.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FOperationContext.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import javax.annotation.Nullable;\n+\n+import org.eclipse.milo.opcua.sdk.server.DiagnosticsContext;\n+import org.eclipse.milo.opcua.sdk.server.OpcUaServer;\n+import org.eclipse.milo.opcua.sdk.server.Session;\n+\n+public class OperationContext<T, U> {\n+\n+    private final CompletableFuture<List<U>> future;\n+\n+    private final OpcUaServer server;\n+    private final Session session;\n+    private final DiagnosticsContext<T> diagnostics;\n+\n+    public OperationContext(OpcUaServer server,\n+                            @Nullable Session session,\n+                            DiagnosticsContext<T> diagnostics) {\n+\n+        this(server, session, new CompletableFuture<List<U>>(), diagnostics);\n+    }\n+\n+    public OperationContext(OpcUaServer server,\n+                            @Nullable Session session,\n+                            CompletableFuture<List<U>> future,\n+                            DiagnosticsContext<T> diagnosticsContext) {\n+\n+        this.server = server;\n+        this.session = session;\n+        this.future = future;\n+        this.diagnostics = diagnosticsContext;\n+    }\n+\n+    public void complete(List<U> value) {\n+        future.complete(value);\n+    }\n+\n+    public DiagnosticsContext<T> getDiagnostics() {\n+        return diagnostics;\n+    }\n+\n+    public OpcUaServer getServer() {\n+        return server;\n+    }\n+\n+    public Optional<Session> getSession() {\n+        return Optional.ofNullable(session);\n+    }\n+\n+}"
        },
        {
            "sha": "e8934b26abd1cbb048ea7954b8fb879b7c8cdbb2",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/UaNodeManager.java",
            "status": "added",
            "additions": 104,
            "deletions": 0,
            "changes": 104,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaNodeManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaNodeManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaNodeManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentMap;\n+\n+import org.eclipse.milo.opcua.sdk.core.Reference;\n+import org.eclipse.milo.opcua.sdk.server.model.UaNode;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+\n+public interface UaNodeManager extends ConcurrentMap<NodeId, UaNode> {\n+\n+    /**\n+     * Add a {@link UaNode} to this {@link UaNodeManager}.\n+     * <p>\n+     * This method is shorthand for:\n+     * <pre>\n+     *     {@code nodeManager.put(node.getNodeId(), node);}\n+     * </pre>\n+     *\n+     * @param node the {@link UaNode} to add.\n+     */\n+    default void addNode(UaNode node) {\n+        put(node.getNodeId(), node);\n+    }\n+\n+    /**\n+     * Add a {@link Reference} to the {@link UaNode} indicated by {@link Reference#getSourceNodeId()}.\n+     *\n+     * @param reference the {@link Reference} to add.\n+     * @return {@code true} if the {@link UaNode} exists and the reference was added.\n+     */\n+    default boolean addReference(Reference reference) {\n+        return getNode(reference.getSourceNodeId()).map(node -> {\n+            node.addReference(reference);\n+\n+            return true;\n+        }).orElse(false);\n+    }\n+\n+    /**\n+     * Check if a {@link UaNode} exists in this {@link UaNodeManager}.\n+     *\n+     * @param node the {@link UaNode} in question.\n+     * @return {@code true} if this {@link UaNodeManager} contains the {@link UaNode}.\n+     */\n+    default boolean containsNode(UaNode node) {\n+        return containsNodeId(node.getNodeId());\n+    }\n+\n+    /**\n+     * Check if a {@link UaNode} identified by {@link NodeId} exists in this {@link UaNodeManager}.\n+     *\n+     * @param nodeId the {@link NodeId} of the {@link UaNode} in question.\n+     * @return {@code true} if this {@link UaNodeManager} contains the {@link UaNode} identified by {@code nodeId}.\n+     */\n+    default boolean containsNodeId(NodeId nodeId) {\n+        return containsKey(nodeId);\n+    }\n+\n+    /**\n+     * Get the {@link UaNode} identified by the provided {@link NodeId}, if it exists.\n+     *\n+     * @param nodeId the {@link NodeId} of the {@link UaNode}.\n+     * @return an {@link Optional} containing the {@link UaNode}, if present.\n+     */\n+    default Optional<UaNode> getNode(NodeId nodeId) {\n+        return Optional.ofNullable(get(nodeId));\n+    }\n+\n+    /**\n+     * Get the {@link UaNode} identified by the provided {@link ExpandedNodeId}, if it exists.\n+     *\n+     * @param nodeId the {@link ExpandedNodeId} of the {@link UaNode}.\n+     * @return an {@link Optional} containing the {@link UaNode}, if present.\n+     */\n+    default Optional<UaNode> getNode(ExpandedNodeId nodeId) {\n+        return nodeId.local().flatMap(this::getNode);\n+    }\n+\n+    /**\n+     * Remove the {@link UaNode} identified by the provided {@link NodeId}, if it exists.\n+     *\n+     * @param nodeId the {@link NodeId} of the {@link UaNode}.\n+     * @return an {@link Optional} containing the {@link UaNode}, if removed.\n+     */\n+    default Optional<UaNode> removeNode(NodeId nodeId) {\n+        return Optional.ofNullable(remove(nodeId));\n+    }\n+\n+}"
        },
        {
            "sha": "4838d8e7a212b81c75bd4f8bc58b5209cb388d2f",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/UaPromise.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaPromise.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaPromise.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FUaPromise.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.eclipse.milo.opcua.stack.core.UaException;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n+\n+public class UaPromise<T> {\n+\n+    private final CompletableFuture<T> future = new CompletableFuture<>();\n+\n+    public void complete(T value) {\n+        future.complete(value);\n+    }\n+\n+    public void completeExceptionally(long statusCode) {\n+        completeExceptionally(new StatusCode(statusCode));\n+    }\n+\n+    public void completeExceptionally(StatusCode statusCode) {\n+        completeExceptionally(new UaException(statusCode));\n+    }\n+\n+    public void completeExceptionally(UaException exception) {\n+        future.completeExceptionally(exception);\n+    }\n+\n+}"
        },
        {
            "sha": "5ead2d56cb078054c2e57916a34defa14ac8f145",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/ViewManager.java",
            "status": "added",
            "additions": 77,
            "deletions": 0,
            "changes": 77,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FViewManager.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FViewManager.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2FViewManager.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import javax.annotation.Nullable;\n+\n+import org.eclipse.milo.opcua.sdk.core.Reference;\n+import org.eclipse.milo.opcua.sdk.server.DiagnosticsContext;\n+import org.eclipse.milo.opcua.sdk.server.OpcUaServer;\n+import org.eclipse.milo.opcua.sdk.server.Session;\n+import org.eclipse.milo.opcua.sdk.server.services.helpers.BrowseHelper;\n+import org.eclipse.milo.opcua.sdk.server.util.FutureUtils;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseDescription;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BrowseResult;\n+import org.eclipse.milo.opcua.stack.core.types.structured.ViewDescription;\n+\n+import static java.util.stream.Collectors.toList;\n+\n+public interface ViewManager {\n+\n+    default void browse(BrowseContext context,\n+                        ViewDescription view,\n+                        UInteger maxReferencesPerNode,\n+                        List<BrowseDescription> nodesToBrowse) {\n+\n+        OpcUaServer server = context.getServer();\n+\n+        List<CompletableFuture<BrowseResult>> futures = nodesToBrowse.stream()\n+            .map(browseDescription -> BrowseHelper.browse(server, view, maxReferencesPerNode, browseDescription))\n+            .collect(toList());\n+\n+        FutureUtils.sequence(futures).thenAccept(context::complete);\n+    }\n+\n+    /**\n+     * If the node identified by {@code nodeId} exists return all {@link Reference}s.\n+     *\n+     * @param nodeId the {@link NodeId} identifying the node.\n+     * @return a {@link CompletableFuture} containing the {@link Reference}s. If the node is unknown, complete the\n+     * future exceptionally.\n+     */\n+    CompletableFuture<List<Reference>> getReferences(NodeId nodeId);\n+\n+\n+    final class BrowseContext extends OperationContext<BrowseDescription, BrowseResult> {\n+        public BrowseContext(OpcUaServer server,\n+                             @Nullable Session session,\n+                             DiagnosticsContext<BrowseDescription> diagnosticsContext) {\n+\n+            super(server, session, diagnosticsContext);\n+        }\n+\n+        public BrowseContext(OpcUaServer server,\n+                             @Nullable Session session,\n+                             CompletableFuture<List<BrowseResult>> future,\n+                             DiagnosticsContext<BrowseDescription> diagnosticsContext) {\n+\n+            super(server, session, future, diagnosticsContext);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "b54cbfb191442fb21633dee29992d3dd09f50ec0",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/config/OpcUaServerConfig.java",
            "status": "added",
            "additions": 100,
            "deletions": 0,
            "changes": 100,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfig.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfig.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfig.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api.config;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+\n+import org.eclipse.milo.opcua.sdk.server.identity.AnonymousIdentityValidator;\n+import org.eclipse.milo.opcua.sdk.server.identity.IdentityValidator;\n+import org.eclipse.milo.opcua.sdk.server.identity.UsernameIdentityValidator;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.enumerated.UserTokenType;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.eclipse.milo.opcua.stack.server.config.UaTcpStackServerConfig;\n+\n+public interface OpcUaServerConfig extends UaTcpStackServerConfig {\n+\n+    /**\n+     * A {@link UserTokenPolicy} for anonymous access.\n+     */\n+    UserTokenPolicy USER_TOKEN_POLICY_ANONYMOUS = new UserTokenPolicy(\n+        \"anonymous\",\n+        UserTokenType.Anonymous,\n+        null, null, null);\n+\n+    /**\n+     * A {@link UserTokenPolicy} for username-based access.\n+     */\n+    UserTokenPolicy USER_TOKEN_POLICY_USERNAME = new UserTokenPolicy(\n+        \"username\",\n+        UserTokenType.UserName,\n+        null, null, null);\n+\n+    /**\n+     * The set of {@link SecurityPolicy}s supported by this server.\n+     * <p>\n+     * Any policies other than {@link SecurityPolicy#None} require the server to have a certificate configured.\n+     *\n+     * @return the set of {@link SecurityPolicy}s supported by this server.\n+     */\n+    EnumSet<SecurityPolicy> getSecurityPolicies();\n+\n+    /**\n+     * Get the hostname to use in endpoint URLs.\n+     * <p>\n+     * Endpoint URLs will be of the format \"opc.tcp://{hostname}:{port}/{serverName}\".\n+     *\n+     * @return the hostname to use in endpoint URLs.\n+     */\n+    String getHostname();\n+\n+    /**\n+     * @return the list of addresses to bind to.\n+     */\n+    List<String> getBindAddresses();\n+\n+    /**\n+     * @return the port to bind to.\n+     */\n+    int getBindPort();\n+\n+    /**\n+     * Get the {@link IdentityValidator} for the server.\n+     *\n+     * @return the {@link IdentityValidator} for the server.\n+     * @see AnonymousIdentityValidator\n+     * @see UsernameIdentityValidator\n+     */\n+    IdentityValidator getIdentityValidator();\n+\n+    /**\n+     * @return the server {@link BuildInfo}.\n+     */\n+    BuildInfo getBuildInfo();\n+\n+    /**\n+     * @return the {@link OpcUaServerConfigLimits}.\n+     */\n+    OpcUaServerConfigLimits getLimits();\n+\n+    /**\n+     * @return a {@link OpcUaServerConfigBuilder}.\n+     */\n+    static OpcUaServerConfigBuilder builder() {\n+        return new OpcUaServerConfigBuilder();\n+    }\n+\n+}"
        },
        {
            "sha": "40e536fbbb112458495ce0cbe1d4099deb888d34",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/config/OpcUaServerConfigBuilder.java",
            "status": "added",
            "additions": 303,
            "deletions": 0,
            "changes": 303,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigBuilder.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigBuilder.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigBuilder.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,303 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api.config;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+\n+import org.eclipse.milo.opcua.sdk.server.identity.AnonymousIdentityValidator;\n+import org.eclipse.milo.opcua.sdk.server.identity.IdentityValidator;\n+import org.eclipse.milo.opcua.stack.core.Stack;\n+import org.eclipse.milo.opcua.stack.core.application.CertificateManager;\n+import org.eclipse.milo.opcua.stack.core.application.CertificateValidator;\n+import org.eclipse.milo.opcua.stack.core.channel.ChannelConfig;\n+import org.eclipse.milo.opcua.stack.core.security.SecurityPolicy;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;\n+import org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo;\n+import org.eclipse.milo.opcua.stack.core.types.structured.SignedSoftwareCertificate;\n+import org.eclipse.milo.opcua.stack.core.types.structured.UserTokenPolicy;\n+import org.eclipse.milo.opcua.stack.server.config.UaTcpStackServerConfig;\n+import org.eclipse.milo.opcua.stack.server.config.UaTcpStackServerConfigBuilder;\n+\n+import static com.google.common.collect.Lists.newArrayList;\n+\n+public class OpcUaServerConfigBuilder extends UaTcpStackServerConfigBuilder {\n+\n+    private String hostname = getDefaultHostname();\n+    private List<String> bindAddresses = newArrayList(\"0.0.0.0\");\n+    private int bindPort = Stack.DEFAULT_PORT;\n+    private EnumSet<SecurityPolicy> securityPolicies = EnumSet.of(SecurityPolicy.None);\n+    private IdentityValidator identityValidator = new AnonymousIdentityValidator();\n+\n+    private BuildInfo buildInfo = new BuildInfo(\n+        \"\", \"\", \"\", \"\", \"\", DateTime.MIN_VALUE);\n+\n+    private OpcUaServerConfigLimits limits =\n+        new OpcUaServerConfigLimits() {\n+        };\n+\n+    public OpcUaServerConfigBuilder setHostname(String hostname) {\n+        this.hostname = hostname;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setBindAddresses(List<String> bindAddresses) {\n+        this.bindAddresses = bindAddresses;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setBindPort(int bindPort) {\n+        this.bindPort = bindPort;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setSecurityPolicies(EnumSet<SecurityPolicy> securityPolicies) {\n+        this.securityPolicies = securityPolicies;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setIdentityValidator(IdentityValidator identityValidator) {\n+        this.identityValidator = identityValidator;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setBuildInfo(BuildInfo buildInfo) {\n+        this.buildInfo = buildInfo;\n+        return this;\n+    }\n+\n+    public OpcUaServerConfigBuilder setLimits(OpcUaServerConfigLimits limits) {\n+        this.limits = limits;\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setServerName(String serverName) {\n+        super.setServerName(serverName);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setApplicationName(LocalizedText applicationName) {\n+        super.setApplicationName(applicationName);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setApplicationUri(String applicationUri) {\n+        super.setApplicationUri(applicationUri);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setProductUri(String productUri) {\n+        super.setProductUri(productUri);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setCertificateManager(CertificateManager certificateManager) {\n+        super.setCertificateManager(certificateManager);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setCertificateValidator(CertificateValidator certificateValidator) {\n+        super.setCertificateValidator(certificateValidator);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setUserTokenPolicies(List<UserTokenPolicy> userTokenPolicies) {\n+        super.setUserTokenPolicies(userTokenPolicies);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setSoftwareCertificates(List<SignedSoftwareCertificate> softwareCertificates) {\n+        super.setSoftwareCertificates(softwareCertificates);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setExecutor(ExecutorService executor) {\n+        super.setExecutor(executor);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setChannelConfig(ChannelConfig channelConfig) {\n+        super.setChannelConfig(channelConfig);\n+        return this;\n+    }\n+\n+    @Override\n+    public OpcUaServerConfigBuilder setStrictEndpointUrlsEnabled(boolean strictEndpointUrlsEnforced) {\n+        super.setStrictEndpointUrlsEnabled(strictEndpointUrlsEnforced);\n+        return this;\n+    }\n+\n+    public OpcUaServerConfig build() {\n+        UaTcpStackServerConfig stackServerConfig = super.build();\n+\n+        return new OpcUaServerConfigImpl(\n+            stackServerConfig,\n+            hostname,\n+            bindAddresses,\n+            bindPort,\n+            securityPolicies,\n+            identityValidator,\n+            buildInfo,\n+            limits\n+        );\n+    }\n+\n+    private static String getDefaultHostname() {\n+        try {\n+            return System.getProperty(\"hostname\",\n+                InetAddress.getLocalHost().getHostName());\n+        } catch (UnknownHostException e) {\n+            return \"localhost\";\n+        }\n+    }\n+\n+    public static final class OpcUaServerConfigImpl implements OpcUaServerConfig {\n+\n+        private final UaTcpStackServerConfig stackServerConfig;\n+\n+        private final String hostname;\n+        private final List<String> bindAddresses;\n+        private final int bindPort;\n+        private final EnumSet<SecurityPolicy> securityPolicies;\n+        private final IdentityValidator identityValidator;\n+        private final BuildInfo buildInfo;\n+        private final OpcUaServerConfigLimits limits;\n+\n+        public OpcUaServerConfigImpl(UaTcpStackServerConfig stackServerConfig,\n+                                     String hostname,\n+                                     List<String> bindAddresses,\n+                                     int bindPort,\n+                                     EnumSet<SecurityPolicy> securityPolicies,\n+                                     IdentityValidator identityValidator,\n+                                     BuildInfo buildInfo,\n+                                     OpcUaServerConfigLimits limits) {\n+\n+            this.stackServerConfig = stackServerConfig;\n+\n+            this.hostname = hostname;\n+            this.bindAddresses = bindAddresses;\n+            this.bindPort = bindPort;\n+            this.securityPolicies = securityPolicies;\n+            this.identityValidator = identityValidator;\n+            this.buildInfo = buildInfo;\n+            this.limits = limits;\n+        }\n+\n+        @Override\n+        public String getHostname() {\n+            return hostname;\n+        }\n+\n+        @Override\n+        public List<String> getBindAddresses() {\n+            return bindAddresses;\n+        }\n+\n+        @Override\n+        public int getBindPort() {\n+            return bindPort;\n+        }\n+\n+        @Override\n+        public IdentityValidator getIdentityValidator() {\n+            return identityValidator;\n+        }\n+\n+        @Override\n+        public BuildInfo getBuildInfo() {\n+            return buildInfo;\n+        }\n+\n+        @Override\n+        public OpcUaServerConfigLimits getLimits() {\n+            return limits;\n+        }\n+\n+        @Override\n+        public EnumSet<SecurityPolicy> getSecurityPolicies() {\n+            return securityPolicies;\n+        }\n+\n+        @Override\n+        public String getServerName() {\n+            return stackServerConfig.getServerName();\n+        }\n+\n+        @Override\n+        public LocalizedText getApplicationName() {\n+            return stackServerConfig.getApplicationName();\n+        }\n+\n+        @Override\n+        public String getApplicationUri() {\n+            return stackServerConfig.getApplicationUri();\n+        }\n+\n+        @Override\n+        public String getProductUri() {\n+            return stackServerConfig.getProductUri();\n+        }\n+\n+        @Override\n+        public CertificateManager getCertificateManager() {\n+            return stackServerConfig.getCertificateManager();\n+        }\n+\n+        @Override\n+        public CertificateValidator getCertificateValidator() {\n+            return stackServerConfig.getCertificateValidator();\n+        }\n+\n+        @Override\n+        public ExecutorService getExecutor() {\n+            return stackServerConfig.getExecutor();\n+        }\n+\n+        @Override\n+        public List<UserTokenPolicy> getUserTokenPolicies() {\n+            return stackServerConfig.getUserTokenPolicies();\n+        }\n+\n+        @Override\n+        public List<SignedSoftwareCertificate> getSoftwareCertificates() {\n+            return stackServerConfig.getSoftwareCertificates();\n+        }\n+\n+        @Override\n+        public ChannelConfig getChannelConfig() {\n+            return stackServerConfig.getChannelConfig();\n+        }\n+\n+        @Override\n+        public boolean isStrictEndpointUrlsEnabled() {\n+            return stackServerConfig.isStrictEndpointUrlsEnabled();\n+        }\n+\n+    }\n+\n+}"
        },
        {
            "sha": "a64fbb1a17248f66f0de1e7b176fe8f1a0ed137a",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/api/config/OpcUaServerConfigLimits.java",
            "status": "added",
            "additions": 106,
            "deletions": 0,
            "changes": 106,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigLimits.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigLimits.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fapi%2Fconfig%2FOpcUaServerConfigLimits.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c",
            "patch": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright (c) 2016 Kevin Herron\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v1.0 which accompany this distribution.\n+ *\n+ * The Eclipse Public License is available at\n+ * \thttp://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * \thttp://www.eclipse.org/org/documents/edl-v10.html.\n+ */\n+\n+package org.eclipse.milo.opcua.sdk.server.api.config;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n+import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UShort;\n+\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.uint;\n+import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.ushort;\n+\n+public interface OpcUaServerConfigLimits {\n+\n+    default UInteger getMaxSessionCount() {\n+        return uint(550);\n+    }\n+\n+    default Double getMinSupportedSampleRate() {\n+        return 100.0;\n+    }\n+\n+    default Double getMaxSupportedSampleRate() {\n+        return (double) TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n+    }\n+\n+    default UShort getMaxBrowseContinuationPoints() {\n+        return ushort(UShort.MAX_VALUE);\n+    }\n+\n+    default UShort getMaxQueryContinuationPoints() {\n+        return ushort(UShort.MAX_VALUE);\n+    }\n+\n+    default UShort getMaxHistoryContinuationPoints() {\n+        return ushort(UShort.MAX_VALUE);\n+    }\n+\n+    default UInteger getMaxArrayLength() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxStringLength() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerRead() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerHistoryReadData() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerHistoryReadEvents() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerWrite() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerHistoryUpdateData() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerHistoryUpdateEvents() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerMethodCall() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerBrowse() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerRegisterNodes() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerTranslateBrowsePathsToNodeIds() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxNodesPerNodeManagement() {\n+        return uint(0x1FFFF);\n+    }\n+\n+    default UInteger getMaxMonitoredItemsPerCall() {\n+        return uint(0x1FFFF);\n+    }\n+\n+}"
        },
        {
            "sha": "481410e2c3a32c8c6424c1f162eb41ef051ad521",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/identity/AnonymousIdentityValidator.java",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FAnonymousIdentityValidator.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FAnonymousIdentityValidator.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FAnonymousIdentityValidator.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "5dc68f1c92755ca1a770ee2903ff9deb9fdf7fd8",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/identity/IdentityValidator.java",
            "status": "added",
            "additions": 155,
            "deletions": 0,
            "changes": 155,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FIdentityValidator.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FIdentityValidator.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FIdentityValidator.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "c3254906b5e169d74fb859a22009d7a70a6982f0",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/identity/UsernameIdentityValidator.java",
            "status": "added",
            "additions": 151,
            "deletions": 0,
            "changes": 151,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FUsernameIdentityValidator.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FUsernameIdentityValidator.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fidentity%2FUsernameIdentityValidator.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "273d235918042dbf6040a9aa07d2a789cf93c9b1",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/items/BaseMonitoredItem.java",
            "status": "added",
            "additions": 195,
            "deletions": 0,
            "changes": 195,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FBaseMonitoredItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FBaseMonitoredItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FBaseMonitoredItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "b2219c6efb4b248d11aa3c744d432373dc5d7f99",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/items/MonitoredDataItem.java",
            "status": "added",
            "additions": 181,
            "deletions": 0,
            "changes": 181,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredDataItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredDataItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredDataItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "79f7d57725faeac145453ac293b1f196468caa91",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/items/MonitoredEventItem.java",
            "status": "added",
            "additions": 101,
            "deletions": 0,
            "changes": 101,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredEventItem.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredEventItem.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fitems%2FMonitoredEventItem.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "e5b3388662fa56c710762dadd1628842b991ac62",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/AttributeObserver.java",
            "status": "added",
            "additions": 29,
            "deletions": 0,
            "changes": 29,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FAttributeObserver.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FAttributeObserver.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FAttributeObserver.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "20a0f81fc2aec71df31343b31686e67446b5a2f0",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/DerivedVariableNode.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FDerivedVariableNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FDerivedVariableNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FDerivedVariableNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "e9a60fd1fedde929740b12d1162f4884bf1da188",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaDataTypeNode.java",
            "status": "added",
            "additions": 112,
            "deletions": 0,
            "changes": 112,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaDataTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaDataTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaDataTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "4a5a010421a13fd99b2729e129bc2c8f0306f6b9",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaFolderNode.java",
            "status": "added",
            "additions": 86,
            "deletions": 0,
            "changes": 86,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaFolderNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaFolderNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaFolderNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "58764d937ca8315584d302149713c85945c4a3d6",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaMethodNode.java",
            "status": "added",
            "additions": 265,
            "deletions": 0,
            "changes": 265,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaMethodNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaMethodNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaMethodNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "84f36e10caa039c30e4ce785601b90ece003cb7e",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaNode.java",
            "status": "added",
            "additions": 421,
            "deletions": 0,
            "changes": 421,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "d8c3979641153de1036a5268b9649aee0a4dfe12",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaObjectNode.java",
            "status": "added",
            "additions": 376,
            "deletions": 0,
            "changes": 376,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "c114957d7ea044342114a06ccfec6de48e0b079e",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaObjectTypeNode.java",
            "status": "added",
            "additions": 87,
            "deletions": 0,
            "changes": 87,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaObjectTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "aaba2397507f7c34633a6aba87687cdfcf98d079",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaPropertyNode.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaPropertyNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaPropertyNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaPropertyNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "67cff23ec81019ed531d9264171e7a588bf58d42",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaReferenceTypeNode.java",
            "status": "added",
            "additions": 109,
            "deletions": 0,
            "changes": 109,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaReferenceTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaReferenceTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaReferenceTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "71c8ad0dc0a0613ea6fa58d9bd9c1aa460e7728e",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaVariableNode.java",
            "status": "added",
            "additions": 614,
            "deletions": 0,
            "changes": 614,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "6ca528ecdaad61ae62309b2230bbf3d6106ec71c",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaVariableTypeNode.java",
            "status": "added",
            "additions": 139,
            "deletions": 0,
            "changes": 139,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableTypeNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableTypeNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaVariableTypeNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "bdec5e9a0f57c5c7ebee7e77396494bf430e29e7",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/UaViewNode.java",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaViewNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaViewNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FUaViewNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "0552cb0073e4e4725ef802e4095f5b5490ed6f8c",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/VariableNodeFactory.java",
            "status": "added",
            "additions": 213,
            "deletions": 0,
            "changes": 213,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FVariableNodeFactory.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FVariableNodeFactory.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2FVariableNodeFactory.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "d97602c2f4f9249e12b3877db0f776a2b16ec5ad",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/methods/GetMonitoredItems.java",
            "status": "added",
            "additions": 73,
            "deletions": 0,
            "changes": 73,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FGetMonitoredItems.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FGetMonitoredItems.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FGetMonitoredItems.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "e9db9691d53f52198203f775992bf7a7d60ff032",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/methods/ResendData.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FResendData.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FResendData.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fmethods%2FResendData.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "2be7b38e1498edab9b0f2625a04d2b19d93c0aa9",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AcknowledgeableConditionNode.java",
            "status": "added",
            "additions": 107,
            "deletions": 0,
            "changes": 107,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAcknowledgeableConditionNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAcknowledgeableConditionNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAcknowledgeableConditionNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "ff063c4a9072c2118fcf3af91f0518ed1dde4fe1",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AddressSpaceFileNode.java",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAddressSpaceFileNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAddressSpaceFileNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAddressSpaceFileNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "625d911fd5240e781ff2d76737ae04e09e69ce23",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AggregateConfigurationNode.java",
            "status": "added",
            "additions": 121,
            "deletions": 0,
            "changes": 121,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateConfigurationNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateConfigurationNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateConfigurationNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "fca21b61a2a9391946a8eaedb1dd7ae7b16ae511",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AggregateFunctionNode.java",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateFunctionNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateFunctionNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAggregateFunctionNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "060d32f73e85cf52e6c2f0d4cb4a972671a07a7f",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AlarmConditionNode.java",
            "status": "added",
            "additions": 173,
            "deletions": 0,
            "changes": 173,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAlarmConditionNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAlarmConditionNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAlarmConditionNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "ee59defa39ab2f706209c332470c4dd7102dc34c",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/ApplicationCertificateNode.java",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FApplicationCertificateNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FApplicationCertificateNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FApplicationCertificateNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "03ce69e17743d31625d6730b8d77a7bc49b8afc6",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AuditActivateSessionEventNode.java",
            "status": "added",
            "additions": 104,
            "deletions": 0,
            "changes": 104,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditActivateSessionEventNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditActivateSessionEventNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditActivateSessionEventNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "633c623a210dce943975ec4da88b860585f5f0c8",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AuditAddNodesEventNode.java",
            "status": "added",
            "additions": 65,
            "deletions": 0,
            "changes": 65,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddNodesEventNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddNodesEventNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddNodesEventNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "c92c553e73924ebf7beecacb307892af6d5788ee",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AuditAddReferencesEventNode.java",
            "status": "added",
            "additions": 65,
            "deletions": 0,
            "changes": 65,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddReferencesEventNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddReferencesEventNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditAddReferencesEventNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        },
        {
            "sha": "2281c55359df3953bbe8c10fd99c9efbafa87b8d",
            "filename": "opc-ua-sdk/sdk-server/src/main/java/org/eclipse/milo/opcua/sdk/server/model/objects/AuditCancelEventNode.java",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/eclipse-milo/milo/blob/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditCancelEventNode.java",
            "raw_url": "https://github.com/eclipse-milo/milo/raw/928dbc232f851bf06a40032a2fd297c5d7d8352c/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditCancelEventNode.java",
            "contents_url": "https://api.github.com/repos/eclipse-milo/milo/contents/opc-ua-sdk%2Fsdk-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fmilo%2Fopcua%2Fsdk%2Fserver%2Fmodel%2Fobjects%2FAuditCancelEventNode.java?ref=928dbc232f851bf06a40032a2fd297c5d7d8352c"
        }
    ]
}