{
    "sha": "4044ecfb80732b721ffa206388574cf08bf7d295",
    "node_id": "MDY6Q29tbWl0MTg5OTc2MTA6NDA0NGVjZmI4MDczMmI3MjFmZmEyMDYzODg1NzRjZjA4YmY3ZDI5NQ==",
    "commit": {
        "author": {
            "name": "frantuma",
            "email": "frantuma@yahoo.com",
            "date": "2016-02-01T17:01:34Z"
        },
        "committer": {
            "name": "frantuma",
            "email": "frantuma@yahoo.com",
            "date": "2016-02-03T09:39:27Z"
        },
        "message": "Refs #146 - Yaml anchor refs parsing. Direct usage of snakeyaml",
        "tree": {
            "sha": "4b61bd168916c95c63d95ffde2df680c70aaf159",
            "url": "https://api.github.com/repos/swagger-api/swagger-parser/git/trees/4b61bd168916c95c63d95ffde2df680c70aaf159"
        },
        "url": "https://api.github.com/repos/swagger-api/swagger-parser/git/commits/4044ecfb80732b721ffa206388574cf08bf7d295",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/swagger-api/swagger-parser/commits/4044ecfb80732b721ffa206388574cf08bf7d295",
    "html_url": "https://github.com/swagger-api/swagger-parser/commit/4044ecfb80732b721ffa206388574cf08bf7d295",
    "comments_url": "https://api.github.com/repos/swagger-api/swagger-parser/commits/4044ecfb80732b721ffa206388574cf08bf7d295/comments",
    "author": {
        "login": "frantuma",
        "id": 15786658,
        "node_id": "MDQ6VXNlcjE1Nzg2NjU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15786658?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/frantuma",
        "html_url": "https://github.com/frantuma",
        "followers_url": "https://api.github.com/users/frantuma/followers",
        "following_url": "https://api.github.com/users/frantuma/following{/other_user}",
        "gists_url": "https://api.github.com/users/frantuma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/frantuma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/frantuma/subscriptions",
        "organizations_url": "https://api.github.com/users/frantuma/orgs",
        "repos_url": "https://api.github.com/users/frantuma/repos",
        "events_url": "https://api.github.com/users/frantuma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/frantuma/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "frantuma",
        "id": 15786658,
        "node_id": "MDQ6VXNlcjE1Nzg2NjU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15786658?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/frantuma",
        "html_url": "https://github.com/frantuma",
        "followers_url": "https://api.github.com/users/frantuma/followers",
        "following_url": "https://api.github.com/users/frantuma/following{/other_user}",
        "gists_url": "https://api.github.com/users/frantuma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/frantuma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/frantuma/subscriptions",
        "organizations_url": "https://api.github.com/users/frantuma/orgs",
        "repos_url": "https://api.github.com/users/frantuma/repos",
        "events_url": "https://api.github.com/users/frantuma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/frantuma/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "04af052a252941f79a57c9670ae7ba564ae052cf",
            "url": "https://api.github.com/repos/swagger-api/swagger-parser/commits/04af052a252941f79a57c9670ae7ba564ae052cf",
            "html_url": "https://github.com/swagger-api/swagger-parser/commit/04af052a252941f79a57c9670ae7ba564ae052cf"
        }
    ],
    "stats": {
        "total": 110,
        "additions": 83,
        "deletions": 27
    },
    "files": [
        {
            "sha": "6a82b536c40a0347bf7c10504476ea34143442e8",
            "filename": "modules/swagger-parser/src/main/java/io/swagger/parser/Swagger20Parser.java",
            "status": "modified",
            "additions": 10,
            "deletions": 9,
            "changes": 19,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwagger20Parser.java",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwagger20Parser.java",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwagger20Parser.java?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -5,11 +5,11 @@\n import io.swagger.models.Swagger;\n import io.swagger.models.auth.AuthorizationValue;\n import io.swagger.parser.util.ClasspathHelper;\n+import io.swagger.parser.util.DeserializationUtils;\n import io.swagger.parser.util.RemoteUrl;\n import io.swagger.parser.util.SwaggerDeserializationResult;\n import io.swagger.parser.util.SwaggerDeserializer;\n import io.swagger.util.Json;\n-import io.swagger.util.Yaml;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.Validate;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n@@ -56,13 +56,13 @@ public SwaggerDeserializationResult readWithInfo(String location, List<Authoriza\n                     data = ClasspathHelper.loadFileFromClasspath(location);\n                 }\n             }\n-            ObjectMapper mapper;\n+            JsonNode rootNode;\n             if (data.trim().startsWith(\"{\")) {\n-                mapper = Json.mapper();\n+                ObjectMapper mapper = Json.mapper();\n+                rootNode = mapper.readTree(data);\n             } else {\n-                mapper = Yaml.mapper();\n+                rootNode = DeserializationUtils.readYamlTree(data);\n             }\n-            JsonNode rootNode = mapper.readTree(data);\n             return readWithInfo(rootNode);\n         }\n         catch (Exception e) {\n@@ -106,13 +106,14 @@ public Swagger read(String location, List<AuthorizationValue> auths) throws IOEx\n \n     private Swagger convertToSwagger(String data) throws IOException {\n         if (data != null) {\n-            ObjectMapper mapper;\n+            JsonNode rootNode;\n             if (data.trim().startsWith(\"{\")) {\n-                mapper = Json.mapper();\n+                ObjectMapper mapper = Json.mapper();\n+                rootNode = mapper.readTree(data);\n             } else {\n-                mapper = Yaml.mapper();\n+                rootNode = DeserializationUtils.readYamlTree(data);\n             }\n-            JsonNode rootNode = mapper.readTree(data);\n+\n             if (System.getProperty(\"debugParser\") != null) {\n                 LOGGER.info(\"\\n\\nSwagger Tree: \\n\"\n                     + ReflectionToStringBuilder.toString(rootNode, ToStringStyle.MULTI_LINE_STYLE) + \"\\n\\n\");"
        },
        {
            "sha": "874b3d595f34be126921ce9cad5cd44529b51270",
            "filename": "modules/swagger-parser/src/main/java/io/swagger/parser/SwaggerParser.java",
            "status": "modified",
            "additions": 8,
            "deletions": 9,
            "changes": 17,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParser.java",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParser.java",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParser.java?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -4,9 +4,9 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import io.swagger.models.Swagger;\n import io.swagger.models.auth.AuthorizationValue;\n+import io.swagger.parser.util.DeserializationUtils;\n import io.swagger.parser.util.SwaggerDeserializationResult;\n import io.swagger.util.Json;\n-import io.swagger.util.Yaml;\n \n import java.io.IOException;\n import java.util.ArrayList;\n@@ -88,15 +88,14 @@ public SwaggerDeserializationResult readWithInfo(String swaggerAsString) {\n         if(swaggerAsString == null) {\n             return new SwaggerDeserializationResult().message(\"empty or null swagger supplied\");\n         }\n-        ObjectMapper mapper = null;\n-        if(swaggerAsString.trim().startsWith(\"{\")) {\n-            mapper = Json.mapper();\n-        }\n-        else {\n-            mapper = Yaml.mapper();\n-        }\n         try {\n-            JsonNode node = mapper.readTree(swaggerAsString);\n+            JsonNode node;\n+            if (swaggerAsString.trim().startsWith(\"{\")) {\n+                ObjectMapper mapper = Json.mapper();\n+                node = mapper.readTree(swaggerAsString);\n+            } else {\n+                node = DeserializationUtils.readYamlTree(swaggerAsString);\n+            }\n \n             SwaggerDeserializationResult result = new Swagger20Parser().readWithInfo(node);\n             if (result != null) {"
        },
        {
            "sha": "3e89ae09e616db4ce8aa0400cee5f78779b518ae",
            "filename": "modules/swagger-parser/src/main/java/io/swagger/parser/util/DeserializationUtils.java",
            "status": "modified",
            "additions": 18,
            "deletions": 2,
            "changes": 20,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtils.java",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtils.java",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtils.java?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -16,7 +16,7 @@ public static JsonNode deserializeIntoTree(String contents, String fileOrHost) {\n \n         try {\n             if (fileOrHost.endsWith(\".yaml\")) {\n-                result = Yaml.mapper().readTree(contents);\n+                result = readYamlTree(contents);\n             } else {\n                 result = Json.mapper().readTree(contents);\n             }\n@@ -31,16 +31,22 @@ public static <T> T deserialize(Object contents, String fileOrHost, Class<T> exp\n         T result;\n \n         ObjectMapper mapper;\n+        boolean isYaml = false;\n \n         if(fileOrHost.endsWith(\".yaml\")) {\n             mapper = Yaml.mapper();\n+            isYaml = true;\n         } else {\n             mapper = Json.mapper();\n         }\n \n         try {\n             if (contents instanceof String) {\n-                result = mapper.readValue((String) contents, expectedType);\n+                if (isYaml) {\n+                    result = readYamlValue((String) contents, expectedType);\n+                } else {\n+                    result = mapper.readValue((String) contents, expectedType);\n+                }\n             } else {\n                 result = mapper.convertValue(contents, expectedType);\n             }\n@@ -50,4 +56,14 @@ public static <T> T deserialize(Object contents, String fileOrHost, Class<T> exp\n \n         return result;\n     }\n+\n+    public static JsonNode readYamlTree(String contents) {\n+        org.yaml.snakeyaml.Yaml yaml = new org.yaml.snakeyaml.Yaml();\n+        return Json.mapper().convertValue(yaml.load(contents), JsonNode.class);\n+    }\n+\n+    public static <T> T readYamlValue(String contents, Class<T> expectedType) {\n+        org.yaml.snakeyaml.Yaml yaml = new org.yaml.snakeyaml.Yaml();\n+        return Json.mapper().convertValue(yaml.load(contents), expectedType);\n+    }\n }"
        },
        {
            "sha": "c57f5e9031723b6249aaccdf470f0769681d6f65",
            "filename": "modules/swagger-parser/src/test/java/io/swagger/parser/SwaggerParserTest.java",
            "status": "modified",
            "additions": 11,
            "deletions": 0,
            "changes": 11,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParserTest.java",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParserTest.java",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2FSwaggerParserTest.java?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -6,6 +6,7 @@\n import io.swagger.models.properties.ByteArrayProperty;\n import io.swagger.models.properties.MapProperty;\n import io.swagger.models.properties.RefProperty;\n+import io.swagger.models.properties.StringProperty;\n import io.swagger.parser.util.SwaggerDeserializationResult;\n import io.swagger.util.Json;\n import io.swagger.util.Yaml;\n@@ -75,6 +76,16 @@ public void testIssue62() {\n         assertNotNull(swagger.getPaths().get(\"/pets/{petId}\").getGet());\n     }\n \n+    @Test\n+    public void testIssue146() {\n+        SwaggerParser parser = new SwaggerParser();\n+        final Swagger swagger = parser.read(\"src/test/resources/issue_146.yaml\");\n+        assertNotNull(swagger);\n+        QueryParameter p = ((QueryParameter)swagger.getPaths().get(\"/checker\").getGet().getParameters().get(0));\n+        StringProperty pp = (StringProperty)p.getItems();\n+        assertTrue(\"registration\".equalsIgnoreCase(pp.getEnum().get(0)));\n+    }\n+\n     @Test(description=\"Test (path & form) parameter's required attribute\")\n     public void testParameterRequired() {\n         SwaggerParser parser = new SwaggerParser();"
        },
        {
            "sha": "6237308cdcdda8595f5eb5ee3613d41ef9e62b6b",
            "filename": "modules/swagger-parser/src/test/java/io/swagger/parser/util/DeserializationUtilsTest.java",
            "status": "modified",
            "additions": 4,
            "deletions": 7,
            "changes": 11,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtilsTest.java",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtilsTest.java",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fjava%2Fio%2Fswagger%2Fparser%2Futil%2FDeserializationUtilsTest.java?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -23,7 +23,7 @@ public class DeserializationUtilsTest {\n \n \n     @Test\n-    public void testDeserializeYamlIntoObject(@Mocked Yaml yaml,\n+    public void testDeserializeYamlIntoObject(@Mocked Yaml yaml, @Mocked final org.yaml.snakeyaml.Yaml snakeYaml,\n                                               @Injectable final ObjectMapper objectMapper,\n                                               @Injectable final Model model) throws Exception {\n \n@@ -34,7 +34,7 @@ public void testDeserializeYamlIntoObject(@Mocked Yaml yaml,\n             Yaml.mapper();\n             result = objectMapper;\n             times = 1;\n-            objectMapper.readValue(anyString, withAny(Object.class));\n+            snakeYaml.load(anyString);\n             times = 1;\n             result = model;\n         }};\n@@ -111,17 +111,14 @@ public void testDeserializeYamlTreeIntoObject(@Mocked Yaml yaml,\n     }\n \n     @Test\n-    public void testDeserializeYamlIntoTree(@Mocked Yaml yaml,\n+    public void testDeserializeYamlIntoTree(@Mocked Yaml yaml, @Mocked final org.yaml.snakeyaml.Yaml snakeYaml,\n                                             @Injectable final ObjectMapper objectMapper,\n                                             @Injectable final JsonNode jsonNode) throws Exception {\n \n         String jsonStr = \"really good yaml\";\n \n         new Expectations() {{\n-            Yaml.mapper();\n-            result = objectMapper;\n-            times = 1;\n-            objectMapper.readTree(anyString);\n+            snakeYaml.load(anyString);\n             result = jsonNode;\n             times = 1;\n         }};"
        },
        {
            "sha": "dc68bd661413acc2f17b6bd29b020bd78dc417dd",
            "filename": "modules/swagger-parser/src/test/resources/issue_146.yaml",
            "status": "added",
            "additions": 32,
            "deletions": 0,
            "changes": 32,
            "blob_url": "https://github.com/swagger-api/swagger-parser/blob/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fresources%2Fissue_146.yaml",
            "raw_url": "https://github.com/swagger-api/swagger-parser/raw/4044ecfb80732b721ffa206388574cf08bf7d295/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fresources%2Fissue_146.yaml",
            "contents_url": "https://api.github.com/repos/swagger-api/swagger-parser/contents/modules%2Fswagger-parser%2Fsrc%2Ftest%2Fresources%2Fissue_146.yaml?ref=4044ecfb80732b721ffa206388574cf08bf7d295",
            "patch": "@@ -0,0 +1,32 @@\n+swagger: '2.0'\n+\n+info:\n+  version: \"0.0.1\"\n+  title: API\n+\n+x-types:\n+  OperationType: &OperationType\n+    - registration\n+\n+# Describe your paths here\n+paths:\n+  /checker:\n+    get:\n+      parameters:\n+        - name: operations\n+          in: query\n+          type: array\n+          items:\n+            type: string\n+            enum: *OperationType\n+          default: [registration]\n+      responses:\n+        200:\n+          description: OK\n+          schema:\n+            $ref: '#/definitions/OperationType'\n+\n+definitions:\n+  OperationType:\n+    type: string\n+    enum: *OperationType\n\\ No newline at end of file"
        }
    ]
}