{
    "sha": "816552abf6735fa37dfd37c8a7bfbdbd045477e0",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDo4MTY1NTJhYmY2NzM1ZmEzN2RmZDM3YzhhN2JmYmRiZDA0NTQ3N2Uw",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2015-11-27T14:52:27Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2015-11-27T14:52:27Z"
        },
        "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58660\nWith mapperContextRootRedirectEnabled ste to false, the redirect needs to be handled elsewhere.\n- Ensure the Mapper does not add the '/'\n- Handle the redirect in the DefaultServlet\n- Add a redirect to FORM auth if auth is occurring at the context root else the login page could be submitted to the wrong web application\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1716882 13f79535-47bb-0310-9956-ffa450edef68",
        "tree": {
            "sha": "e29667d675d9e577b815f109a3d6f854a4545787",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/e29667d675d9e577b815f109a3d6f854a4545787"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/816552abf6735fa37dfd37c8a7bfbdbd045477e0",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/816552abf6735fa37dfd37c8a7bfbdbd045477e0",
    "html_url": "https://github.com/apache/tomcat/commit/816552abf6735fa37dfd37c8a7bfbdbd045477e0",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/816552abf6735fa37dfd37c8a7bfbdbd045477e0/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "24c8d8c635a694d9e8832c8de4fef508c49c6987",
            "url": "https://api.github.com/repos/apache/tomcat/commits/24c8d8c635a694d9e8832c8de4fef508c49c6987",
            "html_url": "https://github.com/apache/tomcat/commit/24c8d8c635a694d9e8832c8de4fef508c49c6987"
        }
    ],
    "stats": {
        "total": 66,
        "additions": 47,
        "deletions": 19
    },
    "files": [
        {
            "sha": "f6c412bb81f00fc329dc4d49036d8f8e371c06d3",
            "filename": "java/org/apache/catalina/authenticator/FormAuthenticator.java",
            "status": "modified",
            "additions": 14,
            "deletions": 0,
            "changes": 14,
            "blob_url": "https://github.com/apache/tomcat/blob/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fauthenticator%2FFormAuthenticator.java",
            "raw_url": "https://github.com/apache/tomcat/raw/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fauthenticator%2FFormAuthenticator.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Fcatalina%2Fauthenticator%2FFormAuthenticator.java?ref=816552abf6735fa37dfd37c8a7bfbdbd045477e0",
            "patch": "@@ -219,6 +219,20 @@ public boolean authenticate(Request request, HttpServletResponse response)\n \n         // No -- Save this request and redirect to the form login page\n         if (!loginAction) {\n+            // If this request was to the root of the context without a trailing\n+            // '/', need to redirect to add it else the submit of the login form\n+            // may not go to the correct web application\n+            if (request.getServletPath().length() == 0 && request.getPathInfo() == null) {\n+                StringBuilder location = new StringBuilder(requestURI);\n+                location.append('/');\n+                if (request.getQueryString() != null) {\n+                    location.append('?');\n+                    location.append(request.getQueryString());\n+                }\n+                response.sendRedirect(response.encodeRedirectURL(location.toString()));\n+                return false;\n+            }\n+\n             session = request.getSessionInternal(true);\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Save request in session '\" + session.getIdInternal() + \"'\");"
        },
        {
            "sha": "cb25eda611471ae38c3751bc9b79749694a39d60",
            "filename": "java/org/apache/catalina/mapper/Mapper.java",
            "status": "modified",
            "additions": 9,
            "deletions": 10,
            "changes": 19,
            "blob_url": "https://github.com/apache/tomcat/blob/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fmapper%2FMapper.java",
            "raw_url": "https://github.com/apache/tomcat/raw/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fmapper%2FMapper.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Fcatalina%2Fmapper%2FMapper.java?ref=816552abf6735fa37dfd37c8a7bfbdbd045477e0",
            "patch": "@@ -835,20 +835,13 @@ private final void internalMapWrapper(ContextVersion contextVersion,\n \n         int pathOffset = path.getOffset();\n         int pathEnd = path.getEnd();\n-        int servletPath = pathOffset;\n         boolean noServletPath = false;\n \n         int length = contextVersion.path.length();\n-        if (length != (pathEnd - pathOffset)) {\n-            servletPath = pathOffset + length;\n-        } else {\n+        if (length == (pathEnd - pathOffset)) {\n             noServletPath = true;\n-            path.append('/');\n-            pathOffset = path.getOffset();\n-            pathEnd = path.getEnd();\n-            servletPath = pathOffset+length;\n         }\n-\n+        int servletPath = pathOffset + length;\n         path.setOffset(servletPath);\n \n         // Rule 1 -- Exact Match\n@@ -1002,7 +995,13 @@ private final void internalMapWrapper(ContextVersion contextVersion,\n             char[] buf = path.getBuffer();\n             if (contextVersion.resources != null && buf[pathEnd -1 ] != '/') {\n                 String pathStr = path.toString();\n-                WebResource file = contextVersion.resources.getResource(pathStr);\n+                WebResource file;\n+                // Handle context root\n+                if (pathStr.length() == 0) {\n+                    file = contextVersion.resources.getResource(\"/\");\n+                } else {\n+                    file = contextVersion.resources.getResource(pathStr);\n+                }\n                 if (file != null && file.isDirectory() &&\n                         mappingData.context.getMapperDirectoryRedirectEnabled()) {\n                     // Note: this mutates the path: do not do any processing"
        },
        {
            "sha": "cc6217f7707b820721e647b76f2af7dd1281c4ee",
            "filename": "java/org/apache/catalina/servlets/DefaultServlet.java",
            "status": "modified",
            "additions": 24,
            "deletions": 9,
            "changes": 33,
            "blob_url": "https://github.com/apache/tomcat/blob/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fservlets%2FDefaultServlet.java",
            "raw_url": "https://github.com/apache/tomcat/raw/816552abf6735fa37dfd37c8a7bfbdbd045477e0/java%2Forg%2Fapache%2Fcatalina%2Fservlets%2FDefaultServlet.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Fcatalina%2Fservlets%2FDefaultServlet.java?ref=816552abf6735fa37dfd37c8a7bfbdbd045477e0",
            "patch": "@@ -331,6 +331,10 @@ public void init() throws ServletException {\n      * @param request The servlet request we are processing\n      */\n     protected String getRelativePath(HttpServletRequest request) {\n+        return getRelativePath(request, false);\n+    }\n+\n+    protected String getRelativePath(HttpServletRequest request, boolean allowEmptyPath) {\n         // IMPORTANT: DefaultServlet can be mapped to '/' or '/path/*' but always\n         // serves resources from the web app root with context rooted paths.\n         // i.e. it cannot be used to mount the web app root under a sub-path\n@@ -356,7 +360,7 @@ protected String getRelativePath(HttpServletRequest request) {\n         if (pathInfo != null) {\n             result.append(pathInfo);\n         }\n-        if (result.length() == 0) {\n+        if (result.length() == 0 && !allowEmptyPath) {\n             result.append('/');\n         }\n \n@@ -686,7 +690,8 @@ protected void serveResource(HttpServletRequest request,\n         boolean serveContent = content;\n \n         // Identify the requested resource path\n-        String path = getRelativePath(request);\n+        String path = getRelativePath(request, true);\n+\n         if (debug > 0) {\n             if (serveContent)\n                 log(\"DefaultServlet.serveResource:  Serving resource '\" +\n@@ -696,6 +701,12 @@ protected void serveResource(HttpServletRequest request,\n                     path + \"' headers only\");\n         }\n \n+        if (path.length() == 0) {\n+            // Context root redirect\n+            doDirectoryRedirect(request, response);\n+            return;\n+        }\n+\n         WebResource resource = resources.getResource(path);\n \n         if (!resource.exists()) {\n@@ -811,13 +822,7 @@ protected void serveResource(HttpServletRequest request,\n \n         if (resource.isDirectory()) {\n             if (!path.endsWith(\"/\")) {\n-                StringBuilder location = new StringBuilder(request.getRequestURI());\n-                location.append('/');\n-                if (request.getQueryString() != null) {\n-                    location.append('?');\n-                    location.append(request.getQueryString());\n-                }\n-                response.sendRedirect(response.encodeRedirectURL(location.toString()));\n+                doDirectoryRedirect(request, response);\n                 return;\n             }\n \n@@ -1026,6 +1031,16 @@ protected void serveResource(HttpServletRequest request,\n         }\n     }\n \n+    private void doDirectoryRedirect(HttpServletRequest request, HttpServletResponse response)\n+            throws IOException {\n+        StringBuilder location = new StringBuilder(request.getRequestURI());\n+        location.append('/');\n+        if (request.getQueryString() != null) {\n+            location.append('?');\n+            location.append(request.getQueryString());\n+        }\n+        response.sendRedirect(response.encodeRedirectURL(location.toString()));\n+    }\n \n     /**\n      * Parse the content-range header."
        }
    ]
}