{
    "sha": "25ac3249dc2a40bd52ceccc9251c8446b036d197",
    "node_id": "MDY6Q29tbWl0MTA2Mzc4OTI6MjVhYzMyNDlkYzJhNDBiZDUyY2VjY2M5MjUxYzg0NDZiMDM2ZDE5Nw==",
    "commit": {
        "author": {
            "name": "Oliver Heger",
            "email": "oheger@apache.org",
            "date": "2013-12-04T20:33:06Z"
        },
        "committer": {
            "name": "Oliver Heger",
            "email": "oheger@apache.org",
            "date": "2013-12-04T20:33:06Z"
        },
        "message": "Added a new resetBeanIntrospectors() method.\n\nThis method completes BEANUTILS-425 by a means to reset introspection to its\ninitial state. The test case for PropertyUtils has been made more robust\nagainst potential failures caused by randomized execution order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/beanutils/trunk@1547898 13f79535-47bb-0310-9956-ffa450edef68",
        "tree": {
            "sha": "7e572ed2f41e78e1171e954cf65068b8c80b4dbc",
            "url": "https://api.github.com/repos/apache/commons-beanutils/git/trees/7e572ed2f41e78e1171e954cf65068b8c80b4dbc"
        },
        "url": "https://api.github.com/repos/apache/commons-beanutils/git/commits/25ac3249dc2a40bd52ceccc9251c8446b036d197",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/commons-beanutils/commits/25ac3249dc2a40bd52ceccc9251c8446b036d197",
    "html_url": "https://github.com/apache/commons-beanutils/commit/25ac3249dc2a40bd52ceccc9251c8446b036d197",
    "comments_url": "https://api.github.com/repos/apache/commons-beanutils/commits/25ac3249dc2a40bd52ceccc9251c8446b036d197/comments",
    "author": null,
    "committer": null,
    "parents": [
        {
            "sha": "0e19d868000c118fc36fe1bce40e6ccaba9f33c6",
            "url": "https://api.github.com/repos/apache/commons-beanutils/commits/0e19d868000c118fc36fe1bce40e6ccaba9f33c6",
            "html_url": "https://github.com/apache/commons-beanutils/commit/0e19d868000c118fc36fe1bce40e6ccaba9f33c6"
        }
    ],
    "stats": {
        "total": 43,
        "additions": 38,
        "deletions": 5
    },
    "files": [
        {
            "sha": "70d4fa95a0d4120af05d945e1febe4ee142ca0cf",
            "filename": "src/main/java/org/apache/commons/beanutils/PropertyUtils.java",
            "status": "modified",
            "additions": 10,
            "deletions": 0,
            "changes": 10,
            "blob_url": "https://github.com/apache/commons-beanutils/blob/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtils.java",
            "raw_url": "https://github.com/apache/commons-beanutils/raw/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtils.java",
            "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtils.java?ref=25ac3249dc2a40bd52ceccc9251c8446b036d197",
            "patch": "@@ -155,6 +155,16 @@ public static void clearDescriptors() {\n \n     }\n \n+    /**\n+     * Resets the registered {@link BeanIntrospector} objects to the initial default\n+     * state.\n+     *\n+     * @since 1.9\n+     */\n+    public static void resetBeanIntrospectors() {\n+        PropertyUtilsBean.getInstance().resetBeanIntrospectors();\n+    }\n+\n     /**\n      * Adds a <code>BeanIntrospector</code>. This object is invoked when the\n      * property descriptors of a class need to be obtained."
        },
        {
            "sha": "0a4c4e265b1a32c1fbbf9f38d5cb3c69565df463",
            "filename": "src/main/java/org/apache/commons/beanutils/PropertyUtilsBean.java",
            "status": "modified",
            "additions": 12,
            "deletions": 1,
            "changes": 13,
            "blob_url": "https://github.com/apache/commons-beanutils/blob/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsBean.java",
            "raw_url": "https://github.com/apache/commons-beanutils/raw/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsBean.java",
            "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src%2Fmain%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsBean.java?ref=25ac3249dc2a40bd52ceccc9251c8446b036d197",
            "patch": "@@ -134,7 +134,7 @@ public PropertyUtilsBean() {\n         mappedDescriptorsCache = new WeakFastHashMap<Class<?>, FastHashMap>();\n         mappedDescriptorsCache.setFast(true);\n         introspectors = new CopyOnWriteArrayList<BeanIntrospector>();\n-        introspectors.add(DefaultBeanIntrospector.INSTANCE);\n+        resetBeanIntrospectors();\n     }\n \n \n@@ -179,6 +179,17 @@ public void setResolver(Resolver resolver) {\n         }\n     }\n \n+    /**\n+     * Resets the {@link BeanIntrospector} objects registered at this instance. After this\n+     * method was called, only the default {@code BeanIntrospector} is registered.\n+     *\n+     * @since 1.9\n+     */\n+    public final void resetBeanIntrospectors() {\n+        introspectors.clear();\n+        introspectors.add(DefaultBeanIntrospector.INSTANCE);\n+    }\n+\n     /**\n      * Adds a <code>BeanIntrospector</code>. This object is invoked when the\n      * property descriptors of a class need to be obtained."
        },
        {
            "sha": "171e966b639e69ceae4f684806143c7cc102b739",
            "filename": "src/test/java/org/apache/commons/beanutils/PropertyUtilsTestCase.java",
            "status": "modified",
            "additions": 16,
            "deletions": 4,
            "changes": 20,
            "blob_url": "https://github.com/apache/commons-beanutils/blob/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Ftest%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsTestCase.java",
            "raw_url": "https://github.com/apache/commons-beanutils/raw/25ac3249dc2a40bd52ceccc9251c8446b036d197/src%2Ftest%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsTestCase.java",
            "contents_url": "https://api.github.com/repos/apache/commons-beanutils/contents/src%2Ftest%2Fjava%2Forg%2Fapache%2Fcommons%2Fbeanutils%2FPropertyUtilsTestCase.java?ref=25ac3249dc2a40bd52ceccc9251c8446b036d197",
            "patch": "@@ -219,6 +219,7 @@ public void setUp() {\n         BasicDynaBean nestedDynaBean = new BasicDynaBean(dynaClass);\n         nestedDynaBean.set(\"nestedBean\", bean);\n         bean.setNestedDynaBean(nestedDynaBean);\n+        PropertyUtils.clearDescriptors();\n     }\n \n \n@@ -244,6 +245,7 @@ public void tearDown() {\n         beanPrivateSubclass = null;\n         beanPublicSubclass = null;\n \n+        PropertyUtils.resetBeanIntrospectors();\n     }\n \n \n@@ -4456,12 +4458,12 @@ public void testCustomIntrospection() {\n             // Only produce read-only property descriptors\n             public void introspect(IntrospectionContext icontext)\n                     throws IntrospectionException {\n-                Set names = icontext.propertyNames();\n+                Set<String> names = icontext.propertyNames();\n                 PropertyDescriptor[] newDescs = new PropertyDescriptor[names\n                         .size()];\n                 int idx = 0;\n-                for (Iterator it = names.iterator(); it.hasNext(); idx++) {\n-                    String propName = (String) it.next();\n+                for (Iterator<String> it = names.iterator(); it.hasNext(); idx++) {\n+                    String propName = it.next();\n                     PropertyDescriptor pd = icontext\n                             .getPropertyDescriptor(propName);\n                     newDescs[idx] = new PropertyDescriptor(pd.getName(),\n@@ -4519,7 +4521,6 @@ public void introspect(IntrospectionContext icontext)\n      * Tests whether a BeanIntrospector can be removed.\n      */\n     public void testRemoveBeanIntrospector() {\n-        PropertyUtils.clearDescriptors();\n         assertTrue(\n                 \"Wrong result\",\n                 PropertyUtils\n@@ -4541,4 +4542,15 @@ public void testAddBeanIntrospectorNull() {\n             // ok\n         }\n     }\n+\n+    /**\n+     * Tests whether a reset of the registered BeanIntrospectors can be performed.\n+     */\n+    public void testResetBeanIntrospectors() {\n+        assertTrue(\"Wrong result\",\n+                PropertyUtils.removeBeanIntrospector(DefaultBeanIntrospector.INSTANCE));\n+        PropertyUtils.resetBeanIntrospectors();\n+        PropertyDescriptor[] desc = PropertyUtils.getPropertyDescriptors(AlphaBean.class);\n+        assertTrue(\"Got no descriptors\", desc.length > 0);\n+    }\n }"
        }
    ]
}