{
    "sha": "b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDpiM2E4ZTAxNjU0NTQ5YjBiNzlmYzdjNzY4NGNkNDkyY2Q1YWFmZTRi",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2019-10-29T17:42:12Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2019-10-29T17:42:12Z"
        },
        "message": "Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=63864\n\nRefactor parsing of the transfer-encoding request header to use the\nshared parsing code and reduce duplication.",
        "tree": {
            "sha": "b1dc53120868fd6ec1b9175d39bca237120a231c",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/b1dc53120868fd6ec1b9175d39bca237120a231c"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
    "html_url": "https://github.com/apache/tomcat/commit/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "6bc2615e2a05647e92816f6a52be8bbd5d82cb23",
            "url": "https://api.github.com/repos/apache/tomcat/commits/6bc2615e2a05647e92816f6a52be8bbd5d82cb23",
            "html_url": "https://github.com/apache/tomcat/commit/6bc2615e2a05647e92816f6a52be8bbd5d82cb23"
        }
    ],
    "stats": {
        "total": 27,
        "additions": 13,
        "deletions": 14
    },
    "files": [
        {
            "sha": "30dd05adc585bf612d96bd2aaf23bf4fbb98208f",
            "filename": "java/org/apache/coyote/http11/Http11Processor.java",
            "status": "modified",
            "additions": 8,
            "deletions": 14,
            "changes": 22,
            "blob_url": "https://github.com/apache/tomcat/blob/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b/java%2Forg%2Fapache%2Fcoyote%2Fhttp11%2FHttp11Processor.java",
            "raw_url": "https://github.com/apache/tomcat/raw/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b/java%2Forg%2Fapache%2Fcoyote%2Fhttp11%2FHttp11Processor.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Fcoyote%2Fhttp11%2FHttp11Processor.java?ref=b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
            "patch": "@@ -19,7 +19,9 @@\n import java.io.IOException;\n import java.io.InterruptedIOException;\n import java.nio.ByteBuffer;\n+import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Set;\n import java.util.regex.Pattern;\n@@ -208,8 +210,7 @@ private static boolean statusDropsConnection(int status) {\n      */\n     private void addInputFilter(InputFilter[] inputFilters, String encodingName) {\n \n-        // Trim provided encoding name and convert to lower case since transfer\n-        // encoding names are case insensitive. (RFC2616, section 3.6)\n+        // Parsing trims and converts to lower case.\n         encodingName = encodingName.trim().toLowerCase(Locale.ENGLISH);\n \n         if (encodingName.equals(\"identity\")) {\n@@ -722,20 +723,13 @@ private void prepareRequest() throws IOException {\n         // Parse transfer-encoding header\n         if (http11) {\n             MessageBytes transferEncodingValueMB = headers.getValue(\"transfer-encoding\");\n-            if (transferEncodingValueMB != null && !transferEncodingValueMB.isNull()) {\n-                String transferEncodingValue = transferEncodingValueMB.toString();\n-                // Parse the comma separated list. \"identity\" codings are ignored\n-                int startPos = 0;\n-                int commaPos = transferEncodingValue.indexOf(',');\n-                String encodingName = null;\n-                while (commaPos != -1) {\n-                    encodingName = transferEncodingValue.substring(startPos, commaPos);\n+            if (transferEncodingValueMB != null) {\n+                List<String> encodingNames = new ArrayList<>();\n+                TokenList.parseTokenList(headers.values(\"transfer-encoding\"), encodingNames);\n+                for (String encodingName : encodingNames) {\n+                    // \"identity\" codings are ignored\n                     addInputFilter(inputFilters, encodingName);\n-                    startPos = commaPos + 1;\n-                    commaPos = transferEncodingValue.indexOf(',', startPos);\n                 }\n-                encodingName = transferEncodingValue.substring(startPos);\n-                addInputFilter(inputFilters, encodingName);\n             }\n         }\n "
        },
        {
            "sha": "1705743de7865dca568ca41cc7070d410b1e09bb",
            "filename": "webapps/docs/changelog.xml",
            "status": "modified",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/apache/tomcat/blob/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b/webapps%2Fdocs%2Fchangelog.xml",
            "raw_url": "https://github.com/apache/tomcat/raw/b3a8e01654549b0b79fc7c7684cd492cd5aafe4b/webapps%2Fdocs%2Fchangelog.xml",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/webapps%2Fdocs%2Fchangelog.xml?ref=b3a8e01654549b0b79fc7c7684cd492cd5aafe4b",
            "patch": "@@ -91,6 +91,11 @@\n         Ensure that only a full token is matched and that the match is case\n         insensitive. (markt)\n       </fix>\n+      <fix>\n+        <bug>63864</bug>: Refactor parsing of the <code>transfer-encoding</code>\n+        request header to use the shared parsing code and reduce duplication.\n+        (markt)\n+      </fix>\n       <fix>\n         <bug>63865</bug>: Add <code>Unset</code> option to same-site cookies\n         and pass through <code>None</code> value if set by user. Patch provided"
        }
    ]
}