{
    "sha": "7f9e44c0ee709f80badb39bb32c1de386a05f837",
    "node_id": "MDY6Q29tbWl0MzE5OTk0NTU6N2Y5ZTQ0YzBlZTcwOWY4MGJhZGIzOWJiMzJjMWRlMzg2YTA1ZjgzNw==",
    "commit": {
        "author": {
            "name": "ramindu90",
            "email": "shortyrules1990",
            "date": "2015-04-11T20:59:31Z"
        },
        "committer": {
            "name": "ramindu90",
            "email": "shortyrules1990",
            "date": "2015-04-11T20:59:31Z"
        },
        "message": "moving event receiver, publisher and monitor from event processor to analytics",
        "tree": {
            "sha": "2c56fe75a53902450a64caf56e1cd0c1651dfefd",
            "url": "https://api.github.com/repos/wso2/carbon-analytics-common/git/trees/2c56fe75a53902450a64caf56e1cd0c1651dfefd"
        },
        "url": "https://api.github.com/repos/wso2/carbon-analytics-common/git/commits/7f9e44c0ee709f80badb39bb32c1de386a05f837",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/7f9e44c0ee709f80badb39bb32c1de386a05f837",
    "html_url": "https://github.com/wso2/carbon-analytics-common/commit/7f9e44c0ee709f80badb39bb32c1de386a05f837",
    "comments_url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/7f9e44c0ee709f80badb39bb32c1de386a05f837/comments",
    "author": null,
    "committer": null,
    "parents": [
        {
            "sha": "46575ef2ae70dcdaf1b16901c7ff5c1c881f7aef",
            "url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/46575ef2ae70dcdaf1b16901c7ff5c1c881f7aef",
            "html_url": "https://github.com/wso2/carbon-analytics-common/commit/46575ef2ae70dcdaf1b16901c7ff5c1c881f7aef"
        }
    ],
    "stats": {
        "total": 68629,
        "additions": 68623,
        "deletions": 6
    },
    "files": [
        {
            "sha": "e5710af7e6728feda042f46305b97b6d369ba9f0",
            "filename": "components/analytics-dashboard/org.wso2.carbon.analytics.dashboard.ui/pom.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fanalytics-dashboard%2Forg.wso2.carbon.analytics.dashboard.ui%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fanalytics-dashboard%2Forg.wso2.carbon.analytics.dashboard.ui%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fanalytics-dashboard%2Forg.wso2.carbon.analytics.dashboard.ui%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -50,7 +50,7 @@\n             <artifactId>org.wso2.carbon.event.stream.stub</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>org.wso2.carbon.event-processing</groupId>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n             <artifactId>org.wso2.carbon.event.publisher.stub</artifactId>\n         </dependency>\n         <dependency>"
        },
        {
            "sha": "a599adf57c54f888fc0a920e97f567074c9d5c75",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/pom.xml",
            "status": "added",
            "additions": 73,
            "deletions": 0,
            "changes": 73,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-statistics</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.statistics.ui</artifactId>\n+    <packaging>bundle</packaging>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>WSO2 Carbon - Event Statistics UI</name>\n+    <description>org.wso2.carbon.event.statistics.ui represent the UI aspects of\n+        org.wso2.carbon.event.statistics bundle\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.statistics.stub</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.ui</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.statistics.ui.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.statistics.stub.*,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                        <Carbon-Component>UIBundle</Carbon-Component>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
        },
        {
            "sha": "4876f56d398504908b4ef8155b9ce438b7799a4e",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/java/org/wso2/carbon/event/statistics/ui/EventStatisticsAdminClient.java",
            "status": "added",
            "additions": 99,
            "deletions": 0,
            "changes": 99,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2FEventStatisticsAdminClient.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2FEventStatisticsAdminClient.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2FEventStatisticsAdminClient.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,99 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.ui;\n+\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.statistics.stub.client.EventStatisticsAdminServiceStub;\n+import org.wso2.carbon.event.statistics.stub.client.EventStatisticsAdminServiceStub.StatsDTO;\n+\n+import java.rmi.RemoteException;\n+import java.text.MessageFormat;\n+import java.util.Locale;\n+import java.util.ResourceBundle;\n+\n+public class EventStatisticsAdminClient {\n+\n+    private static final Log log = LogFactory.getLog(EventStatisticsAdminClient.class);\n+    private static final String BUNDLE = \"org.wso2.carbon.event.statistics.ui.i18n.Resources\";\n+    private EventStatisticsAdminServiceStub stub;\n+    private ResourceBundle bundle;\n+\n+    public EventStatisticsAdminClient(String cookie,\n+                                      String backendServerURL,\n+                                      ConfigurationContext configCtx,\n+                                      Locale locale) throws AxisFault {\n+        String serviceURL = backendServerURL + \"EventStatisticsAdminService\";\n+        bundle = ResourceBundle.getBundle(BUNDLE, locale);\n+\n+        stub = new EventStatisticsAdminServiceStub(configCtx, serviceURL);\n+        ServiceClient client = stub._getServiceClient();\n+        Options option = client.getOptions();\n+        option.setManageSession(true);\n+        option.setProperty(org.apache.axis2.transport.http.HTTPConstants.COOKIE_STRING, cookie);\n+\n+    }\n+\n+    public StatsDTO getGlobalCount() throws RemoteException {\n+        try {\n+            return stub.getGlobalCount();\n+        } catch (RemoteException e) {\n+            handleException(bundle.getString(\"cannot.get.event.stats\"), e);\n+        }\n+        return null;\n+    }\n+\n+    public StatsDTO getCategoryCount(String categoryName) throws RemoteException {\n+        try {\n+            return stub.getCategoryCount(categoryName);\n+        } catch (RemoteException e) {\n+            handleException(MessageFormat.format(bundle.getString(\"cannot.get.event.category.stats\"),\n+                                                 categoryName), e);\n+        }\n+        return null;\n+    }\n+\n+    public StatsDTO getDeploymentCount(String categoryName, String deploymentName) throws RemoteException {\n+        try {\n+            return stub.getDeploymentCount(categoryName, deploymentName);\n+        } catch (RemoteException e) {\n+            handleException(MessageFormat.format(bundle.getString(\"cannot.get.event.deployment.stats\"),\n+                                                 categoryName, deploymentName), e);\n+        }\n+        return null;\n+    }\n+\n+    public StatsDTO getElementCount(String categoryName, String deploymentName, String elementName) throws RemoteException {\n+        try {\n+            return stub.getElementCount(categoryName, deploymentName, elementName);\n+        } catch (RemoteException e) {\n+            handleException(MessageFormat.format(bundle.getString(\"cannot.get.event.element.stats\"),\n+                                                 categoryName, deploymentName, elementName), e);\n+        }\n+        return null;\n+    }\n+\n+    private void handleException(String msg, Exception e) throws RemoteException {\n+        log.error(msg, e);\n+        throw new RemoteException(msg, e);\n+    }\n+}"
        },
        {
            "sha": "f013d180ac8a8cc579d89bf705e794c8678b3d45",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,33 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<component xmlns=\"http://products.wso2.org/carbon\">\n+\t<menus>\n+        <menu>\n+            <id>event_statistics_menu</id>\n+            <i18n-key>event.statistics.menu</i18n-key>\n+            <i18n-bundle>org.wso2.carbon.event.statistics.ui.i18n.Resources</i18n-bundle>\n+            <parent-menu>monitor_menu</parent-menu>\n+            <link>../event-statistics/event_statistics_view.jsp</link>\n+            <region>region4</region>\n+            <order>7</order>\n+            <style-class>monitor</style-class>\n+            <icon>../event-statistics/images/event-statistics.png</icon>\n+            <require-permission>/permission/admin/monitor/event-streams</require-permission>\n+        </menu>\n+    </menus>\n+</component>"
        },
        {
            "sha": "ee5477a6e015e636fa2d5cbf2089100002e3e0a0",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/org/wso2/carbon/event/statistics/ui/i18n/Resources.properties",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Fui%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+event.statistics.menu=Event Statistics\n+request.count=Request Count\n+response.count=Response Count\n+cannot.get.cep.stats=Cannot get CEP stats. Backend server may be unavailable.\n+cannot.get.broker.stats=Cannot get CEP broker stats for {0}. Backend server may be unavailable.\n+cannot.get.bucket.stats=Cannot get CEP bucket stats for {0}. Backend server may be unavailable.\n+\n+\n+event.statistics=Event Statistics\n+all.events=All events\n+cannot.get.event.stats=Cannot get Event stats. Backend server may be unavailable.\n+cannot.get.event.category.stats=Cannot get Event stats for {0}. Backend server may be unavailable.\n+cannot.get.event.deployment.stats=Cannot get Event stats for {1} {0}. Backend server may be unavailable.\n+cannot.get.event.element.stats= Cannot get Event stats for {2} on {1} {0}. Backend server may be unavailable.\n+sub.types.of=Sub Types of\n+request.statistics=Request Statistics\n+total.count=Total Count\n+updated.time=Updated Time\n+max.count.per.sec=Max Count / Sec\n+avg.count.per.sec=Avg Count / Sec\n+last.sec.count=Last Sec Count\n+last.min.count=Last Min Count\n+last.15min.count=Last 15 Min Count\n+last.hour.count=Last Hour Count\n+last.6hour.count=Last 6 Hour Count\n+last.day.count=Last Day Count\n+response.statistics=Response Statistics\n+events.vs.time=Events vs Time\n+no.statistic.data=No Statistics Available\n+event.statistics.events=events\n+\n+how.to.enable.event.statistics.msg= Statistics collector can be enabled by setting element \"StatisticsReporterDisabled\" as \"false\" in [CARBON_HOME]/repository/conf/carbon.xml\n+event.statistics.disabled=Event Statistics collector disabled"
        },
        {
            "sha": "75d81eed0b9c3dd7f857838f346f751f24881244",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/docs/userguide.html",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fdocs%2Fuserguide.html",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fdocs%2Fuserguide.html",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fdocs%2Fuserguide.html?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,76 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<html>\n+<head><title>CEP Event Statistics - User Guide</title>\n+\n+    <link href=\"../../admin/css/documentation.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n+</head>\n+<body>\n+<h1>CEP Event Statistics</h1>\n+\n+<h2>Configuring CEP Event Statistics</h2>\n+\n+<p>CEP Event statistics is an important feature that helps for monitoring purposes of events. This\n+   gives real time request and responses vs time for all the Topics incoming and outgoing CEP. You\n+   can use this visualization to get an idea about system throughput, input frequency and check\n+   whether the inputs are received or outputs are published. By default event statistics id disabled\n+   in CEP to avoid over-head of unnecessary processing of events.</p>\n+<h4>Enabling/Disabling Event Statistics in CEP</h4>\n+\n+<p>To enable the event statistics in CEP, user needs to enable the tracing in carbon.xml of the CEP\n+   server. (&lt;CARBON_HOME&gt;/repository/conf/carbon.xml).</p>\n+\n+<p>Change the property &lt;StatisticsReporterDisabled&gt;true&lt;/StatisticsReporterDisabled&gt; to\n+   false to enable event statistics. Event though event statistics is enabled in CEP, It is not\n+   activated by itself. User needs to activate event statistics for each and every configuration\n+   that they want since monitoring event statistics takes considerable amount of processing\n+   overhead.</p>\n+\n+<p><br/><img src=\"../images/eventStatistics.png\" alt=\"Event statistics\"/><br/></p>\n+\n+<p>As shown above, you can simply enable or disable event statistics for event formatter\n+   configuration. You can follow the sample approach for <strong>Output Event Adaptor, Event\n+                                                                 Builder, Event Processor and Input\n+                                                                 Event Adaptor</strong> as well, But\n+   consider any change in event statistics status (enable or disable) will lead to redeployment of\n+   necessary configuration.</p>\n+<h4>Monitoring CEP Event Statistics</h4>\n+\n+<p>Follow the instructions below to access the Event Tracer.</p>\n+<ol>\n+    <li>Click on \"Monitor\" on the left side to access the \"Monitor\" menu.</li>\n+    <li>In the \"Monitor\" menu, click on \"Event Statistics.\"<br/>\n+        <img src=\"../images/eventStatisticsPath.png\" alt=\"Event statistics path\"/><br/></li>\n+    <li>If you enabled event statistics for all the configurations (from input event adaptor to\n+        event formatter), then you can see a window like below.\n+        <br/> <img src=\"../images/eventstatisticsDefault.png\" alt=\"Event statistics default\"/><br/>\n+    </li><br/>\n+    <li>If you send events to the CEP, then you can get the actual statistics details as shown below\n+        (I have used the sample- 0101 for this purpose). If you run the sample, it will send 100\n+        events by default. Then you can see similar window as shown below.\n+        <br/><img src=\"../images/statisticsWindow.png\" alt=\"Event statistics window\"/><br/></li><br/>\n+    <li>As shown above, user can further analyse regarding the requests and responses in each\n+        configuration in real time...\n+    </li>\n+</ol>\n+\n+\n+</body>\n+</html>\n+"
        },
        {
            "sha": "253944f6bff8219656114f28a9bcbbd217da3603",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/event_statistics_view.jsp",
            "status": "added",
            "additions": 222,
            "deletions": 0,
            "changes": 222,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fevent_statistics_view.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fevent_statistics_view.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fevent_statistics_view.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,222 @@\n+<%--\n+~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ WSO2 Inc. licenses this file to you under the Apache License,\n+~ Version 2.0 (the \"License\"); you may not use this file except\n+~ in compliance with the License.\n+~ You may obtain a copy of the License at\n+~\n+~    http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing,\n+~ software distributed under the License is distributed on an\n+~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+~ KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations\n+~ under the License.\n+--%>\n+<%@ taglib prefix=\"fmt\" uri=\"http://java.sun.com/jsp/jstl/fmt\" %>\n+<%@ taglib uri=\"http://wso2.org/projects/carbon/taglibs/carbontags.jar\" prefix=\"carbon\" %>\n+<%@ page import=\"org.apache.axis2.context.ConfigurationContext\" %>\n+<%@ page import=\"org.wso2.carbon.CarbonConstants\" %>\n+<%@ page import=\"org.wso2.carbon.event.statistics.stub.client.EventStatisticsAdminServiceStub\" %>\n+<%@ page import=\"org.wso2.carbon.ui.CarbonUIUtil\" %>\n+<%@ page import=\"org.wso2.carbon.utils.ServerConstants\" %>\n+<%@ page import=\"java.rmi.RemoteException\" %>\n+<script type=\"text/javascript\" src=\"js/graphs.js\"></script>\n+<script type=\"text/javascript\" src=\"js/statistics.js\"></script>\n+<script type=\"text/javascript\" src=\"../admin/js/jquery.flot.js\"></script>\n+<script type=\"text/javascript\" src=\"../admin/js/excanvas.js\"></script>\n+<script type=\"text/javascript\" src=\"global-params.js\"></script>\n+<fmt:bundle basename=\"org.wso2.carbon.event.statistics.ui.i18n.Resources\">\n+<carbon:breadcrumb label=\"Proxyservice Statistics\"\n+\t\tresourceBundle=\"org.wso2.carbon.event.statistics.ui.i18n.Resources\"\n+\t\ttopPage=\"false\" request=\"<%=request%>\" />\n+    <%\n+        response.setHeader(\"Cache-Control\", \"no-cache\");\n+\n+        String category = request.getParameter(\"category\");\n+        String deployment = request.getParameter(\"deployment\");\n+        String element = request.getParameter(\"element\");\n+\n+//        System.out.println(category+\" \"+deployment+\" \"+element);\n+\n+        String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);\n+        ConfigurationContext configContext =\n+                (ConfigurationContext) config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);\n+\n+        String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);\n+        org.wso2.carbon.event.statistics.ui.EventStatisticsAdminClient client = new org.wso2.carbon.event.statistics.ui.EventStatisticsAdminClient(cookie,backendServerURL,configContext,request.getLocale());\n+\n+        EventStatisticsAdminServiceStub.StatsDTO count ;\n+        String typeName=\"Server\";\n+        try {\n+            if(category==null){\n+                count = client.getGlobalCount();\n+            } else {\n+                if(deployment==null){\n+                    typeName=category;\n+                    count = client.getCategoryCount(category);\n+                } else {\n+                    if(element==null){\n+                        typeName=deployment;\n+                        count = client.getDeploymentCount(category,deployment);\n+                    } else {\n+                        count = client.getElementCount(category,deployment,element);\n+                    }\n+                }\n+            }\n+        } catch (RemoteException e) {\n+    %>\n+            <jsp:forward page=\"../admin/error.jsp?<%=e.getMessage()%>\"/>\n+    <%\n+            return;\n+        }\n+\n+    %>\n+\n+    <script type=\"text/javascript\">\n+        jQuery.noConflict();\n+        initStats('50');\n+    </script>\n+    <div id=\"middle\">\n+        <%\n+            String requestString=\"\";\n+            if (category == null) {\n+        %>\n+        <h2><fmt:message key=\"event.statistics\"/> (<fmt:message key=\"all.events\"/>)</h2>\n+        <%\n+            } else {\n+\n+                if (deployment == null) {\n+                    requestString=\"?category=\"+category;\n+        %>\n+        <h2><fmt:message key=\"event.statistics\"/> (<fmt:message key=\"all.events\"/> <%=category%>)</h2>\n+        <%\n+                } else {\n+                    if (element == null) {\n+                        requestString=\"?category=\"+category+\"&deployment=\"+deployment;\n+\n+        %>\n+        <h2><fmt:message key=\"event.statistics\"/> (<%=deployment%> <%=category%>)</h2>\n+        <%\n+                    } else {\n+                        requestString=\"?category=\"+category+\"&deployment=\"+deployment+\"&element=\"+element;\n+        %>\n+        <h2><fmt:message key=\"event.statistics\"/> (<%=element%> <fmt:message key=\"event.statistics.events\"/> <%=deployment%> <%=category%>)</h2>\n+        <%\n+                    }\n+                }\n+            }\n+        %>\n+        <div id=\"workArea\">\n+                <%\n+                    if (count != null) {\n+                %>\n+            <table width=\"100%\">\n+                <tr>\n+                    <td>\n+                       <div id=\"result\"></div>\n+                            <script type=\"text/javascript\">\n+                                jQuery.noConflict();\n+                                var refresh;\n+                                function refreshStats() {\n+                                    var url = \"graph_ajaxprocessor.jsp<%=requestString.replaceAll(\" \",\"%20\")%>\";\n+                                    jQuery(\"#result\").load(url, null, function (responseText, status, XMLHttpRequest) {\n+                                        if (status != \"success\") {\n+                                            stopRefreshStats();\n+                                        }\n+                                    });\n+                                }\n+                                function stopRefreshStats() {\n+                                    if (refresh) {\n+                                        clearInterval(refresh);\n+                                    }\n+                                }\n+                                jQuery(document).ready(function() {\n+                                    refreshStats();\n+                                    refresh = setInterval(\"refreshStats()\", 6000);\n+                                });\n+                            </script>\n+                    </td>\n+                </tr>\n+                <tr height=\"10\"/>\n+                <tr>\n+                    <td>\n+                        <% if (count.getChildStats() != null && count.getChildStats().length>0 && count.getChildStats()[0]!=null) { %>\n+                        <table class=\"styledLeft\" id=\"subTypeTable\" style=\"width:100% !important;\">\n+                            <thead>\n+                                <tr>\n+                                    <th><fmt:message key=\"sub.types.of\"/>&nbsp;<%=typeName%></th>\n+                                </tr>\n+                            </thead>\n+\n+                            <% for (String childStat : count.getChildStats()) { %>\n+                            <tr>\n+                                <td>\n+                                    <%\n+                                        if (category == null) {\n+                                    %>\n+                                    <a href=\"event_statistics_view.jsp?ordinal=1&category=<%=childStat.replaceAll(\" \",\"%20\")%>\"><%=childStat%>\n+                                    </a>\n+\n+                                    <%\n+                                    } else {\n+                                        if (deployment == null) {\n+                                    %>\n+                                    <a href=\"event_statistics_view.jsp?ordinal=1&category=<%=category%>&deployment=<%=childStat.replaceAll(\" \",\"%20\")%>\"><%=childStat%></a>\n+                                    <%\n+                                            } else {\n+                                                if (element == null) {\n+                                    %>\n+                                    <a href=\"event_statistics_view.jsp?ordinal=1&category=<%=category%>&deployment=<%=deployment%>&element=<%=childStat.replaceAll(\" \",\"%20\")%>\"><%=childStat%></a>\n+                                    <%\n+                                                }\n+                                            }\n+                                        }\n+                                    %>\n+                                </td>\n+                            </tr>\n+                            <%\n+                                }%>\n+                        </table>\n+                        <% }%>\n+                    </td>\n+                </tr>\n+            </table>\n+                <%\n+                } else {\n+                %>\n+                    <table class=\"styledLeft\"  style=\"width:100%\">\n+                        <tbody>\n+                        <tr>\n+                            <td class=\"formRaw\">\n+                                <table id=\"noEventFormatterInputTable\" class=\"normal-nopadding\"\n+                                       style=\"width:100%\">\n+                                    <tbody>\n+                                    <tr>\n+                                        <td class=\"leftCol-med\" colspan=\"2\">\n+                                            <p style=\"color:red\"><fmt:message key=\"event.statistics.disabled\"/></p>\n+                                        </td>\n+                                    </tr>\n+                                    <tr>\n+                                        <td class=\"leftCol-med\" colspan=\"2\"><fmt:message\n+                                                key=\"how.to.enable.event.statistics.msg\"/>\n+                                        </td>\n+                                    </tr>\n+                                    </tbody>\n+                                </table>\n+                            </td>\n+                        </tr>\n+                        </tbody>\n+                    </table>\n+                <%\n+                    }\n+                %>\n+\n+        </div>\n+    </div>\n+<script type=\"text/javascript\">\n+    alternateTableRows('subTypeTable', 'tableEvenRow', 'tableOddRow');\n+</script>\n+</fmt:bundle>\n\\ No newline at end of file"
        },
        {
            "sha": "0ef42adfed969b3fbb8465c2638733978f3f3de2",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/graph_ajaxprocessor.jsp",
            "status": "added",
            "additions": 254,
            "deletions": 0,
            "changes": 254,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fgraph_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fgraph_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fgraph_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,254 @@\n+<%--\n+~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ WSO2 Inc. licenses this file to you under the Apache License,\n+~ Version 2.0 (the \"License\"); you may not use this file except\n+~ in compliance with the License.\n+~ You may obtain a copy of the License at\n+~\n+~    http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing,\n+~ software distributed under the License is distributed on an\n+~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+~ KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations\n+~ under the License.\n+--%>\n+<%@ taglib prefix=\"fmt\" uri=\"http://java.sun.com/jsp/jstl/fmt\" %>\n+<%@ page import=\"org.apache.axis2.context.ConfigurationContext\" %>\n+<%@ page import=\"org.wso2.carbon.CarbonConstants\" %>\n+<%@ page import=\"org.wso2.carbon.event.statistics.stub.client.EventStatisticsAdminServiceStub\" %>\n+<%@ page import=\"org.wso2.carbon.event.statistics.ui.EventStatisticsAdminClient\" %>\n+<%@ page import=\"org.wso2.carbon.ui.CarbonUIUtil\" %>\n+<%@ page import=\"org.wso2.carbon.utils.ServerConstants\" %>\n+<%@ page import=\"java.rmi.RemoteException\" %>\n+<script type=\"text/javascript\" src=\"js/graphs.js\"></script>\n+<script type=\"text/javascript\" src=\"js/statistics.js\"></script>\n+<fmt:bundle basename=\"org.wso2.carbon.event.statistics.ui.i18n.Resources\">\n+\n+    <%\n+        String category = request.getParameter(\"category\");\n+        String deployment = request.getParameter(\"deployment\");\n+        String element = request.getParameter(\"element\");\n+\n+        String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);\n+        ConfigurationContext configContext =\n+                (ConfigurationContext) config.getServletContext().getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);\n+\n+        String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);\n+        EventStatisticsAdminClient client = new EventStatisticsAdminClient(cookie,backendServerURL,configContext,request.getLocale());\n+\n+        EventStatisticsAdminServiceStub.StatsDTO count = null;\n+        try {\n+            if(category==null){\n+                count = client.getGlobalCount();\n+            } else {\n+                if(deployment==null){\n+                    count = client.getCategoryCount(category);\n+                } else {\n+                    if(element==null){\n+                        count = client.getDeploymentCount(category,deployment);\n+                    } else {\n+                        count = client.getElementCount(category,deployment,element);\n+                    }\n+                }\n+            }\n+        } catch (RemoteException e) {\n+    %>\n+            <jsp:forward page=\"../admin/error.jsp?<%=e.getMessage()%>\"/>\n+    <%\n+            return;\n+        }\n+    %>\n+\n+    <%\n+        if (count != null) {\n+    %>\n+   <table width=\"100%\">\n+       <tr>\n+           <td colspan=\"3\">\n+               <table width=\"100%\">\n+                   <thead>\n+                   <tr>\n+                       <th align=\"left\"><u>\n+                           <fmt:message key=\"events.vs.time\"/>\n+                       </u></th>\n+                   </tr>\n+                   </thead>\n+                   <tr>\n+                       <td>\n+                           <div id=\"statsGraph\" style=\"height:300px;\"></div>\n+                       </td>\n+                   </tr>\n+                   <script type=\"text/javascript\">\n+                       jQuery.noConflict();\n+                       graphRequest.add(<%= count.getRequestTotalCount()%>);\n+                       graphResponse.add(<%= count.getResponseTotalCount()%>);\n+\n+                       function drawEventStatsGraph() {\n+                           jQuery.plot(jQuery(\"#statsGraph\"), [\n+                               {\n+                                   label:\"<fmt:message key=\"request.count\"/>\",\n+                                   data:graphRequest.get(),\n+                                   lines:{ show:true, fill:true }\n+                               },\n+                               {\n+                                   label:\"<fmt:message key=\"response.count\"/>\",\n+                                   data:graphResponse.get(),\n+                                   lines:{ show:true, fill:true }\n+                               }\n+                           ], {\n+                                           xaxis:{\n+                                               ticks:graphRequest.tick(),\n+                                               min:0\n+                                           },\n+                                           yaxis:{\n+                                               ticks:10,\n+                                               min:0\n+                                           }\n+                                       });\n+\n+\n+\n+                       }\n+\n+                       drawEventStatsGraph();\n+                   </script>\n+               </table>\n+           </td>\n+       </tr>\n+       <tr>\n+           <td colspan=\"3\"><br/></td>\n+       </tr>\n+\n+       <tr>\n+            <td>\n+                <table class=\"styledLeft\" id=\"requestStatsTable\" width=\"100%\">\n+                    <thead>\n+                    <tr>\n+                        <th colspan=\"2\" align=\"left\"><fmt:message key=\"request.statistics\"/></th>\n+                    </tr>\n+                    </thead>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"total.count\"/></td>\n+                        <td><%=count.getRequestTotalCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"updated.time\"/></td>\n+                        <td><%=count.getRequestLastUpdatedTime() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"max.count.per.sec\"/></td>\n+                        <td><%=count.getRequestMaxCountPerSec() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"avg.count.per.sec\"/></td>\n+                        <td><%=count.getRequestAvgCountPerSec() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.sec.count\"/></td>\n+                        <td><%=count.getRequestLastSecCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.min.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getRequestLastMinCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.15min.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getRequestLast15MinCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.hour.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getRequestLastHourCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.6hour.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getRequestLast6HourCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.day.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getRequestLastDayCount() %>\n+                        </td>\n+                    </tr>\n+                </table>\n+           </td>\n+           <td>&nbsp;<br/></td>\n+           <td>\n+                <table class=\"styledLeft\" id=\"responseStatsTable\" width=\"100%\">\n+                    <thead>\n+                    <tr>\n+                        <th colspan=\"2\" align=\"left\"><fmt:message key=\"response.statistics\"/></th>\n+                    </tr>\n+                    </thead>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"total.count\"/></td>\n+                        <td><%=count.getResponseTotalCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"updated.time\"/></td>\n+                        <td><%=count.getResponseLastUpdatedTime() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"max.count.per.sec\"/></td>\n+                        <td><%=count.getResponseMaxCountPerSec() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"avg.count.per.sec\"/></td>\n+                        <td><%=count.getResponseAvgCountPerSec() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.sec.count\"/></td>\n+                        <td><%=count.getResponseLastSecCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.min.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getResponseLastMinCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.15min.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getResponseLast15MinCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.hour.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getResponseLastHourCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableOddRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.6hour.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getResponseLast6HourCount() %>\n+                        </td>\n+                    </tr>\n+                    <tr class=\"tableEvenRow\">\n+                        <td width=\"40%\"><fmt:message key=\"last.day.count\"/></td>\n+                        <td>&#126;&nbsp;<%=count.getResponseLastDayCount() %>\n+                        </td>\n+                    </tr>\n+                </table>\n+           </td>\n+       </tr>\n+    </table>\n+    <%\n+        } else {\n+    %>\n+            <p><fmt:message key=\"no.statistic.data\"/></p>\n+    <%\n+        }\n+    %>\n+</fmt:bundle>\n\\ No newline at end of file"
        },
        {
            "sha": "7834d86f48e5a57832626132c10b0e3afa38afe1",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/images/event-statistics.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2Fevent-statistics.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2Fevent-statistics.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2Fevent-statistics.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "e27ed56383d2ec176c08c851d18b9431774f698b",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/images/eventStatistics.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatistics.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatistics.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatistics.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "44f58867bf67b3c547271031da22c49dd7e39bfc",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/images/eventStatisticsPath.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatisticsPath.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatisticsPath.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventStatisticsPath.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "80ada51096571fd7e9b11224a499216d51d1b04f",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/images/eventstatisticsDefault.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventstatisticsDefault.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventstatisticsDefault.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FeventstatisticsDefault.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "9d1d66a8a17d1c100814918c73fc860fa9014774",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/images/statisticsWindow.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FstatisticsWindow.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FstatisticsWindow.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fimages%2FstatisticsWindow.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c69e6f97d3123e65947df21f83cff026533c08ff",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/js/graphs.js",
            "status": "added",
            "additions": 70,
            "deletions": 0,
            "changes": 70,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fgraphs.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fgraphs.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fgraphs.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,70 @@\n+/*\n+ *  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/*This js mainly concern with the data structures related to graphs*/\n+function eventStatsGraph(xscale) {\n+    this.array = new Array();\n+    this.last=-1.0;\n+    for (var i = 0; i < xscale; i++) {\n+        this.array[i] = [i, 0.0];\n+    }\n+    this.xscale = xscale;\n+}\n+\n+function getData() {\n+    return this.array;\n+}\n+\n+function addData(newValue) {\n+\n+    if(this.last<0.0){\n+        this.last=newValue;\n+    }\n+\n+    //shift to left\n+    for (var i = 0; i < this.xscale - 1; i++) {\n+        this.array[i] = [i,this.array[i + 1][1]];  // (x,y)\n+    }\n+    \n+    //add the value to the last postion\n+    this.array[this.xscale - 1] = [this.xscale - 1,newValue-this.last];\n+\n+    //to show the difference\n+    this.last=newValue;\n+}\n+\n+function graphTickGenerator() {\n+    var tickArray = [];\n+    var startTick = 10;\n+    var i = startTick - 1;\n+    var weight = this.xscale / 10;\n+    do {\n+        var t = (startTick - i) * weight - 1;\n+        var v = i * weight;\n+        if (v == 0) {\n+            v = \"0\";\n+        }\n+        tickArray.push([t, v]);\n+        i--;\n+    } while (i > -1);\n+    return tickArray;\n+}\n+\n+eventStatsGraph.prototype.get = getData;\n+eventStatsGraph.prototype.add = addData;\n+eventStatsGraph.prototype.tick = graphTickGenerator;"
        },
        {
            "sha": "6ea3af3507895b090eec7e3176c735106dfc5343",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics.ui/src/main/resources/web/event-statistics/js/statistics.js",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fstatistics.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fstatistics.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-statistics%2Fjs%2Fstatistics.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/*\n+ statistics.js contains scripts pertaining to handle @server_short_name@ statistics data\n+ */\n+\n+// CEP\n+var graphRequest;\n+var graphResponse;\n+//var graphMainRequest;\n+//var graphMainResponse;\n+//var graphTopicRequest= {};\n+//var graphTopicResponse= {};\n+\n+\n+function initStats(cepXScale) {\n+    if (cepXScale != null) {\n+        initGraphs(cepXScale);\n+    }\n+}\n+\n+function isNumeric(sText){\n+    var validChars = \"0123456789.\";\n+    var isNumber = true;\n+    var character;\n+    for (var i = 0; i < sText.length && isNumber == true; i++) {\n+        character = sText.charAt(i);\n+        if (validChars.indexOf(character) == -1) {\n+            isNumber = false;\n+        }\n+    }\n+    return isNumber;\n+}\n+\n+function initGraphs(cepXScale) {\n+    if (cepXScale < 1 || !isNumeric(cepXScale)) {\n+        return;\n+    }\n+    graphRequest = new eventStatsGraph(cepXScale);\n+    graphResponse = new eventStatsGraph(cepXScale);\n+}\n+\n+\n+\n+"
        },
        {
            "sha": "3b683f2646039dd4c7a2db25a98fbc624606cb2c",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/pom.xml",
            "status": "added",
            "additions": 84,
            "deletions": 0,
            "changes": 84,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,84 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-statistics</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.statistics</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Statistics</name>\n+    <description>org.wso2.carbon.event.statistics provides the back-end functionality</description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.utils</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+\n+                        <Private-Package>org.wso2.carbon.event.statistics.internal.*</Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.statistics.internal,\n+                            !org.wso2.carbon.event.statistics.internal.*,\n+                            org.wso2.carbon.event.statistics.*\n+                        </Export-Package>\n+                        <Import-Package>org.osgi.framework, *;resolution:=optional</Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "a8281c652da6583b9b8f7bb9dda630ff79a08d65",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/EventStatisticsAdminService.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsAdminService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsAdminService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsAdminService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics;\n+\n+\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.statistics.internal.data.StatsDTO;\n+import org.wso2.carbon.event.statistics.internal.ds.EventStatisticsServiceHolder;\n+\n+public class EventStatisticsAdminService {\n+\n+\n+    public EventStatisticsAdminService() {\n+    }\n+\n+    public StatsDTO getGlobalCount() {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        return EventStatisticsServiceHolder.getInstance().getEventStatisticsService().getGlobalCount(tenantId);\n+    }\n+\n+    public StatsDTO getCategoryCount(String categoryName) {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        return EventStatisticsServiceHolder.getInstance().getEventStatisticsService().getCategoryCount(tenantId, categoryName);\n+    }\n+\n+    public StatsDTO getDeploymentCount(String categoryName, String deploymentName) {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        return EventStatisticsServiceHolder.getInstance().getEventStatisticsService().getDeploymentCount(tenantId, categoryName, deploymentName);\n+    }\n+\n+    public StatsDTO getElementCount(String categoryName, String deploymentName, String elementName) {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        return EventStatisticsServiceHolder.getInstance().getEventStatisticsService().getElementCount(tenantId, categoryName, deploymentName, elementName);\n+    }\n+\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "d74f20e400ab40d21fb386ac809a65d0ea94ceb0",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/EventStatisticsMonitor.java",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsMonitor.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsMonitor.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsMonitor.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,27 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics;\n+\n+public interface EventStatisticsMonitor {\n+\n+\n+    public void incrementRequest();\n+\n+    public void incrementResponse();\n+\n+}"
        },
        {
            "sha": "6f591a24ae990953a59b9947725d0dd0e7a149bd",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/EventStatisticsObserver.java",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsObserver.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsObserver.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsObserver.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,35 @@\n+/*\r\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n+*\r\n+*  WSO2 Inc. licenses this file to you under the Apache License,\r\n+*  Version 2.0 (the \"License\"); you may not use this file except\r\n+*  in compliance with the License.\r\n+*  You may obtain a copy of the License at\r\n+*\r\n+*    http://www.apache.org/licenses/LICENSE-2.0\r\n+*\r\n+* Unless required by applicable law or agreed to in writing,\r\n+* software distributed under the License is distributed on an\r\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+* KIND, either express or implied.  See the License for the\r\n+* specific language governing permissions and limitations\r\n+* under the License.\r\n+*/\r\n+package org.wso2.carbon.event.statistics;\r\n+\r\n+import org.wso2.carbon.event.statistics.internal.data.CollectionDTO;\r\n+\r\n+/**\r\n+ * This interface can be used to register consumers into the EventStatisticsMonitor\r\n+ * and retrieve statistics updates.\r\n+ */\r\n+public interface EventStatisticsObserver {\r\n+\r\n+    /**\r\n+     * Clean up this observer and prepare for shutdown\r\n+     */\r\n+    public void destroy();\r\n+\r\n+    public void updateStatistics(CollectionDTO update);\r\n+\r\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "4301fcee02d3f5dbfe6277fe131aba473f80e4e4",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/EventStatisticsService.java",
            "status": "added",
            "additions": 185,
            "deletions": 0,
            "changes": 185,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FEventStatisticsService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,185 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics;\n+\n+\n+import org.wso2.carbon.event.statistics.internal.Constants;\n+import org.wso2.carbon.event.statistics.internal.EventStatisticsManager;\n+import org.wso2.carbon.event.statistics.internal.EventStatsHelper;\n+import org.wso2.carbon.event.statistics.internal.GhostEventStatisticsMonitor;\n+import org.wso2.carbon.event.statistics.internal.counter.StatsCounter;\n+import org.wso2.carbon.event.statistics.internal.data.StatsDTO;\n+import org.wso2.carbon.event.statistics.internal.ds.EventStatisticsServiceHolder;\n+\n+public class EventStatisticsService {\n+\n+\n+    public StatsDTO getGlobalCount(int tenantId) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        if (eventStatisticsManager == null) {\n+            return null;\n+        }\n+        StatsCounter tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+\n+        if (tenantData == null) {\n+            tenantData = new StatsCounter(tenantId + \"\", Constants.TENANT);\n+            eventStatisticsManager.getTenantDataMap().putIfAbsent(tenantId, tenantData);\n+            tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+        }\n+\n+        return EventStatsHelper.constructStatsDTO(tenantData);\n+    }\n+\n+    public StatsDTO getCategoryCount(int tenantId, String categoryName) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        if (eventStatisticsManager == null) {\n+            return null;\n+        }\n+        StatsCounter tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+\n+        if (tenantData == null) {\n+            tenantData = new StatsCounter(tenantId + \"\", Constants.TENANT);\n+            eventStatisticsManager.getTenantDataMap().putIfAbsent(tenantId, tenantData);\n+            tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+        }\n+\n+        StatsCounter categoryData = tenantData.getChildCounter(categoryName);\n+\n+        if (categoryData == null) {\n+            categoryData = new StatsCounter(categoryName, Constants.CATEGORY);\n+            tenantData.getChildCounters().putIfAbsent(categoryName, categoryData);\n+            categoryData = tenantData.getChildCounters().get(categoryName);\n+        }\n+\n+        return EventStatsHelper.constructStatsDTO(categoryData);\n+    }\n+\n+    public StatsDTO getDeploymentCount(int tenantId, String categoryName, String deploymentName) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        if (eventStatisticsManager == null) {\n+            return null;\n+        }\n+        StatsCounter tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+\n+        if (tenantData == null) {\n+            tenantData = new StatsCounter(tenantId + \"\", Constants.TENANT);\n+            eventStatisticsManager.getTenantDataMap().putIfAbsent(tenantId, tenantData);\n+            tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+        }\n+\n+//        StatsCounter categoryData = getChildStatsCounter(categoryName, tenantData, Constants.CATEGORY);\n+//        StatsCounter deploymentData = getChildStatsCounter(deploymentName, categoryData, Constants.DEPLOYMENT);\n+\n+        StatsCounter categoryData = tenantData.getChildCounter(categoryName);\n+        if (categoryData == null) {\n+            return null;\n+        }\n+        StatsCounter deploymentData = categoryData.getChildCounter(deploymentName);\n+        if (deploymentData == null) {\n+            return null;\n+        }\n+\n+        return EventStatsHelper.constructStatsDTO(deploymentData);\n+    }\n+\n+    public StatsDTO getElementCount(int tenantId, String categoryName, String deploymentName, String elementName) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        if (eventStatisticsManager == null) {\n+            return null;\n+        }\n+        StatsCounter tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+\n+        if (tenantData == null) {\n+            tenantData = new StatsCounter(tenantId + \"\", Constants.TENANT);\n+            eventStatisticsManager.getTenantDataMap().putIfAbsent(tenantId, tenantData);\n+            tenantData = eventStatisticsManager.getTenantDataMap().get(tenantId);\n+        }\n+\n+//        StatsCounter categoryData = getChildStatsCounter(categoryName, tenantData, Constants.CATEGORY);\n+//        StatsCounter deploymentData = getChildStatsCounter(deploymentName, categoryData, Constants.DEPLOYMENT);\n+//        StatsCounter elementData = getChildStatsCounter(elementName, deploymentData, Constants.ELEMENT);\n+//\n+        StatsCounter categoryData = tenantData.getChildCounter(categoryName);\n+        if (categoryData == null) {\n+            return null;\n+        }\n+        StatsCounter deploymentData = categoryData.getChildCounter(deploymentName);\n+        if (deploymentData == null) {\n+            return null;\n+        }\n+        StatsCounter elementData = deploymentData.getChildCounter(elementName);\n+        if (elementData == null) {\n+            return null;\n+        }\n+\n+        return EventStatsHelper.constructStatsDTO(elementData);\n+    }\n+\n+\n+//    private StatsCounter getChildStatsCounter(String childName, StatsCounter parentStatsCounter, String type) {\n+//        StatsCounter data = parentStatsCounter.getChildCounter(childName);\n+//\n+//        if (data == null) {\n+//            data = new StatsCounter(childName, type);\n+//            parentStatsCounter.getChildCounters().putIfAbsent(childName, data);\n+//            data = parentStatsCounter.getChildCounters().get(childName);\n+//        }\n+//        return data;\n+//    }\n+\n+\n+    public synchronized EventStatisticsMonitor getEventStatisticMonitor(int tenantId, String category, String deployment, String element) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        if (eventStatisticsManager == null) {\n+            return new GhostEventStatisticsMonitor();\n+        }\n+        return eventStatisticsManager.getEventStatisticMonitor(tenantId, category, deployment, element);\n+    }\n+\n+    public synchronized void reset() {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        eventStatisticsManager.reset();\n+    }\n+\n+    /**\n+     * Register a custom statistics consumer to receive updates from this\n+     * statistics store\n+     *\n+     * @param o The EventStatisticsObserver instance to be notified of data updates\n+     */\n+    public void registerObserver(EventStatisticsObserver o) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        eventStatisticsManager.registerObserver(o);\n+    }\n+\n+    /**\n+     * Unregister the custom statistics consumer from the mediation statistics store\n+     *\n+     * @param o The EventStatisticsObserver instance to be removed\n+     */\n+    public void unregisterObserver(EventStatisticsObserver o) {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        eventStatisticsManager.unregisterObserver(o);\n+    }\n+\n+    public void unregisterObservers() {\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\n+        eventStatisticsManager.unregisterObservers();\n+    }\n+\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "fee09b1083a2f4b86d3c5385f52761902974840e",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/Constants.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal;\n+\n+public class Constants {\n+\n+    public static final long SEC_IN_MS = 1000;\n+    public static final long MIN_IN_MS = 1000 * 60;\n+    public static final long MIN15_IN_MS = 1000 * 60 * 15;\n+    public static final long HOUR_IN_MS = 1000 * 60 * 60;\n+    public static final long HOUR6_IN_MS = 1000 * 60 * 60 * 6;\n+    public static final long DAY_IN_MS = 1000 * 60 * 60 * 24;\n+\n+    public static final String TENANT = \"tenant\";\n+    public static final String CATEGORY = \"category\";\n+    public static final String DEPLOYMENT = \"deployment\";\n+    public static final String ELEMENT = \"element\";\n+\n+    // Carbon XML properties\n+    public static final String STAT_CONFIG_ELEMENT = \"EventStat\";\n+    public static final String STAT_REPORTING_INTERVAL = STAT_CONFIG_ELEMENT + \".ReportingInterval\";\n+    public static final String STAT_OBSERVERS = STAT_CONFIG_ELEMENT + \".Observers\";\n+\n+\n+}"
        },
        {
            "sha": "095723048fac2e37032b98124dfa1d7356612015",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/EventStatisticsManager.java",
            "status": "added",
            "additions": 155,
            "deletions": 0,
            "changes": 155,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsManager.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsManager.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsManager.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,155 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.statistics.EventStatisticsMonitor;\n+import org.wso2.carbon.event.statistics.EventStatisticsObserver;\n+import org.wso2.carbon.event.statistics.internal.counter.StatsCounter;\n+import org.wso2.carbon.event.statistics.internal.data.CollectionDTO;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class EventStatisticsManager {\n+\n+    private static final Log log = LogFactory.getLog(EventStatisticsManager.class);\n+\n+    ConcurrentHashMap<Integer, StatsCounter> tenantDataMap;\n+    private Set<EventStatisticsObserver> observers = new HashSet<EventStatisticsObserver>();\n+    private final ConcurrentHashMap<String, EventStatisticsMonitor> statisticsMonitorMap;\n+\n+    public EventStatisticsManager() {\n+        this.tenantDataMap = new ConcurrentHashMap<Integer, StatsCounter>();\n+        statisticsMonitorMap = new ConcurrentHashMap<String, EventStatisticsMonitor>();\n+    }\n+\n+    private synchronized EventStatisticsMonitor createNewEventStatisticMonitor(int tenantId, String category, String deployment, String element) {\n+\n+        StatsCounter tenantData = tenantDataMap.get(tenantId);\n+        if (tenantData == null) {\n+            tenantData = new StatsCounter(tenantId + \"\", org.wso2.carbon.event.statistics.internal.Constants.TENANT);\n+            tenantDataMap.putIfAbsent(tenantId, tenantData);\n+            tenantDataMap.putIfAbsent(tenantId, tenantData);\n+            tenantData = tenantDataMap.get(tenantId);\n+        }\n+\n+        StatsCounter categoryData = tenantData.getChildCounter(category);\n+        if (categoryData == null) {\n+            categoryData = new StatsCounter(category, org.wso2.carbon.event.statistics.internal.Constants.TENANT);\n+            tenantData.addChildCounter(category, categoryData);\n+            categoryData = tenantData.getChildCounter(category);\n+        }\n+\n+\n+        StatsCounter deploymentData = categoryData.getChildCounter(deployment);\n+        if (deploymentData == null) {\n+            deploymentData = new StatsCounter(deployment, org.wso2.carbon.event.statistics.internal.Constants.TENANT);\n+            categoryData.addChildCounter(deployment, deploymentData);\n+            deploymentData = categoryData.getChildCounter(deployment);\n+        }\n+\n+\n+        StatsCounter elementData = null;\n+        if (element != null) {\n+            elementData = deploymentData.getChildCounter(element);\n+            if (elementData == null) {\n+                elementData = new StatsCounter(element, org.wso2.carbon.event.statistics.internal.Constants.TENANT);\n+                deploymentData.addChildCounter(element, elementData);\n+                elementData = deploymentData.getChildCounter(element);\n+            }\n+        }\n+\n+        return new EventStatisticsMonitorImpl(tenantData, categoryData, deploymentData, elementData);\n+\n+    }\n+\n+    public synchronized EventStatisticsMonitor getEventStatisticMonitor(int tenantId, String category, String deployment, String element) {\n+\n+        String key=String.valueOf(tenantId) + category + deployment + element;\n+        EventStatisticsMonitor statisticsMonitor = statisticsMonitorMap.get(key);\n+        if (statisticsMonitor == null) {\n+            synchronized (this) {\n+                statisticsMonitor = statisticsMonitorMap.get(key);\n+                if (statisticsMonitor == null) {\n+                    statisticsMonitor = createNewEventStatisticMonitor(tenantId, category, deployment, element);\n+                    statisticsMonitorMap.put(key, statisticsMonitor);\n+                }\n+            }\n+        }\n+        return statisticsMonitor;\n+    }\n+\n+    public synchronized void reset() {\n+        for (StatsCounter tenantData : tenantDataMap.values()) {\n+            tenantData.reset();\n+        }\n+    }\n+\n+    public ConcurrentHashMap<Integer, StatsCounter> getTenantDataMap() {\n+        return tenantDataMap;\n+    }\n+\n+    /**\n+     * Register a custom statistics consumer to receive updates from this\n+     * statistics store\n+     *\n+     * @param o The EventStatisticsObserver instance to be notified of data updates\n+     */\n+    public void registerObserver(EventStatisticsObserver o) {\n+        observers.add(o);\n+    }\n+\n+    /**\n+     * Unregister the custom statistics consumer from the mediation statistics store\n+     *\n+     * @param o The EventStatisticsObserver instance to be removed\n+     */\n+    public void unregisterObserver(EventStatisticsObserver o) {\n+        if (observers.contains(o)) {\n+            observers.remove(o);\n+            o.destroy();\n+        }\n+    }\n+\n+    public void unregisterObservers() {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Unregistering event statistics observers\");\n+        }\n+\n+        for (EventStatisticsObserver o : observers) {\n+            o.destroy();\n+        }\n+        observers.clear();\n+    }\n+\n+    public void updateStatistics(CollectionDTO collectionDTO) {\n+\n+        for (EventStatisticsObserver o : observers) {\n+            try {\n+                o.updateStatistics(collectionDTO);\n+            } catch (Throwable t) {\n+                log.error(\"Error occurred while notifying the event statistics observer\", t);\n+            }\n+        }\n+    }\n+\n+\n+}"
        },
        {
            "sha": "d0a1e1bdfe5b6e0dc8203c14858dccbd466c16df",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/EventStatisticsMonitorImpl.java",
            "status": "added",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsMonitorImpl.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsMonitorImpl.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatisticsMonitorImpl.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,56 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal;\n+\n+import org.wso2.carbon.event.statistics.EventStatisticsMonitor;\n+import org.wso2.carbon.event.statistics.internal.counter.StatsCounter;\n+\n+public class EventStatisticsMonitorImpl implements EventStatisticsMonitor {\n+\n+    private StatsCounter tenantData;\n+    private StatsCounter categoryData;\n+    private StatsCounter deploymentData;\n+    private StatsCounter elementData;\n+\n+    public EventStatisticsMonitorImpl(StatsCounter tenantData, StatsCounter categoryData, StatsCounter deploymentData, StatsCounter elementData) {\n+        this.tenantData = tenantData;\n+        this.categoryData = categoryData;\n+        this.deploymentData = deploymentData;\n+        this.elementData = elementData;\n+    }\n+\n+    public void incrementRequest() {\n+        this.tenantData.incrementRequest();\n+        this.categoryData.incrementRequest();\n+        this.deploymentData.incrementRequest();\n+        if (elementData != null) {\n+            this.elementData.incrementRequest();\n+        }\n+\n+    }\n+\n+    public void incrementResponse() {\n+        this.tenantData.incrementResponse();\n+        this.categoryData.incrementResponse();\n+        this.deploymentData.incrementResponse();\n+        if (elementData != null) {\n+            this.elementData.incrementResponse();\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "0d1ad37e241e4ff7f2d5eca0d78221a40a0e8e77",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/EventStatsHelper.java",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatsHelper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatsHelper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FEventStatsHelper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,66 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal;\n+\n+import org.wso2.carbon.event.statistics.internal.counter.StatsCounter;\n+import org.wso2.carbon.event.statistics.internal.data.StatsDTO;\n+\n+import java.text.DateFormat;\n+import java.util.Arrays;\n+import java.util.Date;\n+\n+public class EventStatsHelper {\n+\n+    public static StatsDTO constructStatsDTO(StatsCounter statsCounter) {\n+        StatsDTO statsDTO = new StatsDTO();\n+        statsDTO.setName(statsCounter.getName());\n+        statsDTO.setType(statsCounter.getType());\n+        statsDTO.setRequestTotalCount(statsCounter.getRequestStatCounter().getTotalCount());\n+        statsDTO.setRequestAvgCountPerSec(statsCounter.getRequestStatCounter().getAvgCountPerSec());\n+        statsDTO.setRequestMaxCountPerSec(statsCounter.getRequestStatCounter().getMaxCountPerSec());\n+        statsDTO.setRequestLastUpdatedTime(DateFormat.getDateTimeInstance().format(new Date(statsCounter.getRequestStatCounter().getLastUpdatedTime())));\n+\n+        statsDTO.setRequestLastSecCount(statsCounter.getRequestStatCounter().getLastSecCount());\n+        statsDTO.setRequestLastMinCount(statsCounter.getRequestStatCounter().getLastMinCount());\n+        statsDTO.setRequestLast15MinCount(statsCounter.getRequestStatCounter().getLast15MinCount());\n+        statsDTO.setRequestLastHourCount(statsCounter.getRequestStatCounter().getLastHourCount());\n+        statsDTO.setRequestLast6HourCount(statsCounter.getRequestStatCounter().getLast6HourCount());\n+        statsDTO.setRequestLastDayCount(statsCounter.getRequestStatCounter().getLastDayCount());\n+\n+        statsDTO.setResponseTotalCount(statsCounter.getResponseStatCounter().getTotalCount());\n+        statsDTO.setResponseAvgCountPerSec(statsCounter.getResponseStatCounter().getAvgCountPerSec());\n+        statsDTO.setResponseMaxCountPerSec(statsCounter.getResponseStatCounter().getMaxCountPerSec());\n+        statsDTO.setResponseLastUpdatedTime(DateFormat.getDateTimeInstance().format(new Date(statsCounter.getResponseStatCounter().getLastUpdatedTime())));\n+\n+        statsDTO.setResponseLastSecCount(statsCounter.getResponseStatCounter().getLastSecCount());\n+        statsDTO.setResponseLastMinCount(statsCounter.getResponseStatCounter().getLastMinCount());\n+        statsDTO.setResponseLast15MinCount(statsCounter.getResponseStatCounter().getLast15MinCount());\n+        statsDTO.setResponseLastHourCount(statsCounter.getResponseStatCounter().getLastHourCount());\n+        statsDTO.setResponseLast6HourCount(statsCounter.getResponseStatCounter().getLast6HourCount());\n+        statsDTO.setResponseLastDayCount(statsCounter.getResponseStatCounter().getLastDayCount());\n+\n+\n+        if (statsCounter.getChildCounters().size() > 0) {\n+            String[] children = statsCounter.getChildCounters().keySet().toArray(new String[statsCounter.getChildCounters().keySet().size()]);\n+            Arrays.sort(children);\n+            statsDTO.setChildStats(children);\n+        }\n+\n+        return statsDTO;\n+    }\n+}"
        },
        {
            "sha": "aec34172545ae54b51084e32be4fe73fa0b17cf4",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/GhostEventStatisticsMonitor.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FGhostEventStatisticsMonitor.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FGhostEventStatisticsMonitor.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FGhostEventStatisticsMonitor.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,33 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal;\n+\n+import org.wso2.carbon.event.statistics.EventStatisticsMonitor;\n+\n+public class GhostEventStatisticsMonitor implements EventStatisticsMonitor {\n+\n+\n+    public void incrementRequest() {\n+\n+    }\n+\n+    public void incrementResponse() {\n+\n+    }\n+\n+}"
        },
        {
            "sha": "5d78ed9e2d2f92abc89bb7a044e101c876a27e1b",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/StatisticsReporterThread.java",
            "status": "added",
            "additions": 129,
            "deletions": 0,
            "changes": 129,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FStatisticsReporterThread.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FStatisticsReporterThread.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2FStatisticsReporterThread.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,129 @@\n+/*\r\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n+*\r\n+*  WSO2 Inc. licenses this file to you under the Apache License,\r\n+*  Version 2.0 (the \"License\"); you may not use this file except\r\n+*  in compliance with the License.\r\n+*  You may obtain a copy of the License at\r\n+*\r\n+*    http://www.apache.org/licenses/LICENSE-2.0\r\n+*\r\n+* Unless required by applicable law or agreed to in writing,\r\n+* software distributed under the License is distributed on an\r\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+* KIND, either express or implied.  See the License for the\r\n+* specific language governing permissions and limitations\r\n+* under the License.\r\n+*/\r\n+package org.wso2.carbon.event.statistics.internal;\r\n+\r\n+import org.apache.log4j.Logger;\r\n+import org.wso2.carbon.event.statistics.internal.counter.StatsCounter;\r\n+import org.wso2.carbon.event.statistics.internal.data.CollectionDTO;\r\n+import org.wso2.carbon.event.statistics.internal.ds.EventStatisticsServiceHolder;\r\n+\r\n+public class StatisticsReporterThread extends Thread {\r\n+\r\n+    private static Logger log = Logger.getLogger(StatisticsReporterThread.class);\r\n+\r\n+    private boolean shutdownRequested = false;\r\n+\r\n+    private long delay = 5 * 1000;\r\n+\r\n+    private int tenantId;\r\n+\r\n+    public StatisticsReporterThread(int tenantId) {\r\n+        this.setName(\"event-stat-collector-\" + tenantId);\r\n+        this.tenantId = tenantId;\r\n+    }\r\n+\r\n+    public void setDelay(long delay) {\r\n+        if (log.isDebugEnabled()) {\r\n+            log.debug(\"Event statistics reporter delay set to \" + delay + \" ms\");\r\n+        }\r\n+        this.delay = delay;\r\n+    }\r\n+\r\n+\r\n+    private void delay() {\r\n+        if (delay <= 0) {\r\n+            return;\r\n+        }\r\n+\r\n+        try {\r\n+            sleep(delay);\r\n+        } catch (InterruptedException ignore) {\r\n+\r\n+        }\r\n+    }\r\n+\r\n+    public void run() {\r\n+        while (!shutdownRequested) {\r\n+            try {\r\n+                collectDataAndReport();\r\n+            } catch (Throwable t) {\r\n+                // catch all possible errors to prevent the thread from dying\r\n+                log.error(\"Error while collecting and reporting event statistics\", t);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private void collectDataAndReport() {\r\n+        if (log.isDebugEnabled()) {\r\n+            log.trace(\"Starting new mediation statistics collection cycle\");\r\n+        }\r\n+\r\n+        EventStatisticsManager eventStatisticsManager = EventStatisticsServiceHolder.getInstance().getEventStatisticsManager();\r\n+\r\n+        CollectionDTO tenantCollectionDTO = new CollectionDTO();\r\n+\r\n+        StatsCounter tenantCounter = eventStatisticsManager.getTenantDataMap().get(tenantId);\r\n+\r\n+        if (tenantCounter == null) {\r\n+            tenantCounter = new StatsCounter(tenantId + \"\", Constants.TENANT);\r\n+            eventStatisticsManager.getTenantDataMap().putIfAbsent(tenantId, tenantCounter);\r\n+            tenantCounter = eventStatisticsManager.getTenantDataMap().get(tenantId);\r\n+        }\r\n+\r\n+        tenantCollectionDTO.setStatsDTO(EventStatsHelper.constructStatsDTO(tenantCounter));\r\n+\r\n+        if (tenantCounter.getChildCounters().size() > 0) {\r\n+            CollectionDTO[] categoryCollectionDTOs = new CollectionDTO[tenantCounter.getChildCounters().size()];\r\n+            int categoryCount = 0;\r\n+            for (StatsCounter categoryCounter : tenantCounter.getChildCounters().values()) {\r\n+                categoryCollectionDTOs[categoryCount] = new CollectionDTO();\r\n+                categoryCollectionDTOs[categoryCount].setStatsDTO(EventStatsHelper.constructStatsDTO(categoryCounter));\r\n+                if (categoryCounter.getChildCounters().size() > 0) {\r\n+                    CollectionDTO[] deploymentCollectionDTOs = new CollectionDTO[categoryCounter.getChildCounters().size()];\r\n+                    int deploymentCount = 0;\r\n+                    for (StatsCounter deploymentCounter : categoryCounter.getChildCounters().values()) {\r\n+                        deploymentCollectionDTOs[deploymentCount] = new CollectionDTO();\r\n+                        deploymentCollectionDTOs[deploymentCount].setStatsDTO(EventStatsHelper.constructStatsDTO(deploymentCounter));\r\n+                        if (deploymentCounter.getChildCounters().size() > 0) {\r\n+                            CollectionDTO[] elementCollectionDTOs = new CollectionDTO[deploymentCounter.getChildCounters().size()];\r\n+                            int elementCount = 0;\r\n+                            for (StatsCounter elementCounter : deploymentCounter.getChildCounters().values()) {\r\n+                                elementCollectionDTOs[elementCount] = new CollectionDTO();\r\n+                                elementCollectionDTOs[elementCount].setStatsDTO(EventStatsHelper.constructStatsDTO(elementCounter));\r\n+                                elementCount++;\r\n+                            }\r\n+                        }\r\n+                        deploymentCount++;\r\n+                    }\r\n+                }\r\n+                categoryCount++;\r\n+            }\r\n+        }\r\n+        eventStatisticsManager.updateStatistics(tenantCollectionDTO);\r\n+\r\n+        delay();\r\n+\r\n+    }\r\n+\r\n+    public void shutdown() {\r\n+        if (log.isDebugEnabled()) {\r\n+            log.debug(\"Event statistics reporter thread is being stopped\");\r\n+        }\r\n+        shutdownRequested = true;\r\n+    }\r\n+}\r"
        },
        {
            "sha": "4284ad716435ea1b28457899b7738770640a94f3",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/counter/BasicStatsCounter.java",
            "status": "added",
            "additions": 202,
            "deletions": 0,
            "changes": 202,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FBasicStatsCounter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FBasicStatsCounter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FBasicStatsCounter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,202 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.counter;\n+\n+import org.wso2.carbon.event.statistics.internal.Constants;\n+\n+public class BasicStatsCounter {\n+    private long startTime;\n+    private long lastUpdatedTime;\n+\n+    private long totalCount;\n+\n+    private long prevSecCount;\n+    private long prevMinCount;\n+    private long prev15MinCount;\n+    private long prevHourCount;\n+    private long prev6HourCount;\n+    private long prevDayCount;\n+\n+    private long maxCountPerSec;\n+    private double avgCountPerSec;\n+\n+    private long currentSecCount;\n+    private long currentMinCount;\n+    private long current15MinCount;\n+    private long currentHourCount;\n+    private long current6HourCount;\n+    private long currentDayCount;\n+\n+    private long currentSec;\n+    private long currentMin;\n+    private long current15Min;\n+    private long currentHour;\n+    private long current6Hour;\n+    private long currentDay;\n+\n+    public BasicStatsCounter() {\n+        reset();\n+    }\n+\n+\n+    public long getTotalCount() {\n+        return totalCount;\n+    }\n+\n+    public long getLastSecCount() {\n+        return currentSecCount + (prevSecCount * (Constants.SEC_IN_MS - (lastUpdatedTime - currentSec * Constants.SEC_IN_MS))) / Constants.SEC_IN_MS;\n+    }\n+\n+    public long getLastMinCount() {\n+        return currentMinCount + (prevMinCount * (Constants.MIN_IN_MS - (lastUpdatedTime - currentMin * Constants.MIN_IN_MS))) / Constants.MIN_IN_MS;\n+    }\n+\n+    public long getLast15MinCount() {\n+        return current15MinCount + (prev15MinCount * (Constants.MIN15_IN_MS - (lastUpdatedTime - current15Min * Constants.MIN15_IN_MS))) / Constants.MIN15_IN_MS;\n+    }\n+\n+    public long getLastHourCount() {\n+        return currentHourCount + (prevHourCount * (Constants.HOUR_IN_MS - (lastUpdatedTime - currentHour * Constants.HOUR_IN_MS))) / Constants.HOUR_IN_MS;\n+    }\n+\n+    public long getLast6HourCount() {\n+        return current6HourCount + (prev6HourCount * (Constants.HOUR6_IN_MS - (lastUpdatedTime - current6Hour * Constants.HOUR6_IN_MS))) / Constants.HOUR6_IN_MS;\n+    }\n+\n+    public long getLastDayCount() {\n+        return currentDayCount + (prevDayCount * (Constants.DAY_IN_MS - (lastUpdatedTime - currentDay * Constants.DAY_IN_MS))) / Constants.DAY_IN_MS;\n+    }\n+\n+    public long getMaxCountPerSec() {\n+        return maxCountPerSec;\n+    }\n+\n+    public double getAvgCountPerSec() {\n+        return Math.round(avgCountPerSec * 1000) / 1000.0;\n+    }\n+\n+    public long getLastUpdatedTime() {\n+        return lastUpdatedTime;\n+    }\n+\n+    public synchronized void update() {\n+        lastUpdatedTime = System.currentTimeMillis();\n+        totalCount++;\n+\n+        if (currentSec < lastUpdatedTime / Constants.SEC_IN_MS) {\n+            currentSec = lastUpdatedTime / Constants.SEC_IN_MS;\n+            prevSecCount = currentSecCount;\n+            currentSecCount = 0l;\n+\n+            if (currentMin < lastUpdatedTime / Constants.MIN_IN_MS) {\n+                currentMin = lastUpdatedTime / Constants.MIN_IN_MS;\n+                prevMinCount = currentMinCount;\n+                currentMinCount = 0l;\n+\n+                if (current15Min < lastUpdatedTime / Constants.MIN15_IN_MS) {\n+                    current15Min = lastUpdatedTime / Constants.MIN15_IN_MS;\n+                    prev15MinCount = current15MinCount;\n+                    current15MinCount = 0l;\n+                }\n+                if (currentHour < lastUpdatedTime / Constants.HOUR_IN_MS) {\n+                    currentHour = lastUpdatedTime / Constants.HOUR_IN_MS;\n+                    prevHourCount = currentHourCount;\n+                    currentHourCount = 0l;\n+                }\n+\n+                if (current6Hour < lastUpdatedTime / Constants.HOUR6_IN_MS) {\n+                    current6Hour = lastUpdatedTime / Constants.HOUR6_IN_MS;\n+                    prev6HourCount = current6HourCount;\n+                    current6HourCount = 0l;\n+                }\n+                if (currentDay < lastUpdatedTime / Constants.DAY_IN_MS) {\n+                    currentDay = lastUpdatedTime / Constants.DAY_IN_MS;\n+                    prevDayCount = currentDayCount;\n+                    currentDayCount = 0l;\n+                }\n+            }\n+\n+        }\n+\n+\n+        currentSecCount++;\n+        currentMinCount++;\n+        current15MinCount++;\n+        currentHourCount++;\n+        current6HourCount++;\n+        currentDayCount++;\n+\n+        if (currentSecCount > maxCountPerSec) {\n+            maxCountPerSec = currentSecCount;\n+        }\n+        if (currentSec == startTime / Constants.SEC_IN_MS) {\n+            startTime = lastUpdatedTime;\n+            avgCountPerSec = totalCount;\n+        } else {\n+            avgCountPerSec = totalCount * ((Constants.SEC_IN_MS * 1.0) / (lastUpdatedTime - startTime));\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"DataCounter{\" +\n+               \"totalCount=\" + getTotalCount() +\n+               \", avgCountPerSec=\" + getAvgCountPerSec() +\n+               \", maxCountPerSec=\" + getMaxCountPerSec() +\n+               \", lastSecCount=\" + getLastSecCount() +\n+               \", lastMinCount=\" + getLastMinCount() +\n+               \", last15MinCount=\" + getLast15MinCount() +\n+               \", lastHourCount=\" + getLastHourCount() +\n+               \", last6HourCount=\" + getLast6HourCount() +\n+               \", lastDayCount=\" + getLastDayCount() +\n+               '}';\n+    }\n+\n+    public void reset() {\n+\n+        this.startTime = System.currentTimeMillis();\n+        lastUpdatedTime = -1l;\n+\n+        totalCount = 0l;\n+\n+        prevSecCount = 0l;\n+        prevMinCount = 0l;\n+        prev15MinCount = 0l;\n+        prevHourCount = 0l;\n+        prev6HourCount = 0l;\n+        prevDayCount = 0l;\n+\n+        maxCountPerSec = 0l;\n+        avgCountPerSec = 0.0;\n+\n+        currentSecCount = 0l;\n+        currentMinCount = 0l;\n+        current15MinCount = 0l;\n+        currentHourCount = 0l;\n+        current6HourCount = 0l;\n+        currentDayCount = 0l;\n+\n+        currentSec = 0l;\n+        currentMin = 0l;\n+        current15Min = 0l;\n+        currentHour = 0l;\n+        current6Hour = 0l;\n+        currentDay = 0l;\n+\n+    }\n+}"
        },
        {
            "sha": "038ccb4174304ab90833b9c81257d7624315ce81",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/counter/StatsCounter.java",
            "status": "added",
            "additions": 85,
            "deletions": 0,
            "changes": 85,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FStatsCounter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FStatsCounter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fcounter%2FStatsCounter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,85 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.counter;\n+\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class StatsCounter {\n+\n+    private BasicStatsCounter requestStatCounter = new BasicStatsCounter();\n+    private BasicStatsCounter responseStatCounter = new BasicStatsCounter();\n+\n+    private ConcurrentHashMap<String, StatsCounter> childCounters = new ConcurrentHashMap<String, StatsCounter>();\n+    private String name;\n+    private String type;\n+\n+    public StatsCounter(String name, String type) {\n+        this.name = name;\n+        this.type = type;\n+    }\n+\n+\n+    public void addChildCounter(String name, StatsCounter childCounter) {\n+        this.childCounters.putIfAbsent(name, childCounter);\n+    }\n+\n+    public StatsCounter getChildCounter(String name) {\n+        return this.childCounters.get(name);\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void incrementRequest() {\n+        requestStatCounter.update();\n+    }\n+\n+    public void incrementResponse() {\n+        responseStatCounter.update();\n+    }\n+\n+    public void reset() {\n+        requestStatCounter.reset();\n+        responseStatCounter.reset();\n+        for (StatsCounter childStatsCounter : childCounters.values()) {\n+            childStatsCounter.reset();\n+        }\n+\n+    }\n+\n+    public BasicStatsCounter getRequestStatCounter() {\n+        return requestStatCounter;\n+    }\n+\n+    public BasicStatsCounter getResponseStatCounter() {\n+        return responseStatCounter;\n+    }\n+\n+    public ConcurrentHashMap<String, StatsCounter> getChildCounters() {\n+        return childCounters;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+}"
        },
        {
            "sha": "4d345140c3a459453de61dcf2015cddeb76b5b18",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/data/CollectionDTO.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FCollectionDTO.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FCollectionDTO.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FCollectionDTO.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.data;\n+\n+public class CollectionDTO {\n+\n+    private StatsDTO statsDTO;\n+\n+    private CollectionDTO[] childCollectionDTOs;\n+\n+    public StatsDTO getStatsDTO() {\n+        return statsDTO;\n+    }\n+\n+    public void setStatsDTO(StatsDTO statsDTO) {\n+        this.statsDTO = statsDTO;\n+    }\n+\n+    public CollectionDTO[] getChildCollectionDTOs() {\n+        return childCollectionDTOs;\n+    }\n+\n+    public void setChildCollectionDTOs(CollectionDTO[] childCollectionDTOs) {\n+        this.childCollectionDTOs = childCollectionDTOs;\n+    }\n+}"
        },
        {
            "sha": "de8e3da390ca4d33cff70daeefb283861503f3e8",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/data/StatsDTO.java",
            "status": "added",
            "additions": 233,
            "deletions": 0,
            "changes": 233,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FStatsDTO.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FStatsDTO.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fdata%2FStatsDTO.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,233 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.data;\n+\n+public class StatsDTO {\n+\n+    private String name;\n+    private String type;\n+\n+    private String requestLastUpdatedTime;\n+    private long requestTotalCount;\n+    private long requestMaxCountPerSec;\n+    private double requestAvgCountPerSec;\n+    private long requestLastSecCount;\n+    private long requestLastMinCount;\n+    private long requestLast15MinCount;\n+    private long requestLastHourCount;\n+    private long requestLast6HourCount;\n+    private long requestLastDayCount;\n+\n+\n+    private String responseLastUpdatedTime;\n+    private long responseTotalCount;\n+    private long responseMaxCountPerSec;\n+    private double responseAvgCountPerSec;\n+    private long responseLastSecCount;\n+    private long responseLastMinCount;\n+    private long responseLast15MinCount;\n+    private long responseLastHourCount;\n+    private long responseLast6HourCount;\n+    private long responseLastDayCount;\n+\n+    private String[] childStats;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getRequestLastUpdatedTime() {\n+        return requestLastUpdatedTime;\n+    }\n+\n+    public void setRequestLastUpdatedTime(String requestLastUpdatedTime) {\n+        this.requestLastUpdatedTime = requestLastUpdatedTime;\n+    }\n+\n+    public String getResponseLastUpdatedTime() {\n+        return responseLastUpdatedTime;\n+    }\n+\n+    public void setResponseLastUpdatedTime(String responseLastUpdatedTime) {\n+        this.responseLastUpdatedTime = responseLastUpdatedTime;\n+    }\n+\n+    public long getRequestTotalCount() {\n+        return requestTotalCount;\n+    }\n+\n+    public void setRequestTotalCount(long requestTotalCount) {\n+        this.requestTotalCount = requestTotalCount;\n+    }\n+\n+    public long getResponseTotalCount() {\n+        return responseTotalCount;\n+    }\n+\n+    public void setResponseTotalCount(long responseTotalCount) {\n+        this.responseTotalCount = responseTotalCount;\n+    }\n+\n+    public long getRequestMaxCountPerSec() {\n+        return requestMaxCountPerSec;\n+    }\n+\n+    public void setRequestMaxCountPerSec(long requestMaxCountPerSec) {\n+        this.requestMaxCountPerSec = requestMaxCountPerSec;\n+    }\n+\n+    public long getResponseMaxCountPerSec() {\n+        return responseMaxCountPerSec;\n+    }\n+\n+    public void setResponseMaxCountPerSec(long responseMaxCountPerSec) {\n+        this.responseMaxCountPerSec = responseMaxCountPerSec;\n+    }\n+\n+    public double getRequestAvgCountPerSec() {\n+        return requestAvgCountPerSec;\n+    }\n+\n+    public void setRequestAvgCountPerSec(double requestAvgCountPerSec) {\n+        this.requestAvgCountPerSec = requestAvgCountPerSec;\n+    }\n+\n+    public double getResponseAvgCountPerSec() {\n+        return responseAvgCountPerSec;\n+    }\n+\n+    public void setResponseAvgCountPerSec(double responseAvgCountPerSec) {\n+        this.responseAvgCountPerSec = responseAvgCountPerSec;\n+    }\n+\n+    public long getRequestLastSecCount() {\n+        return requestLastSecCount;\n+    }\n+\n+    public void setRequestLastSecCount(long requestLastSecCount) {\n+        this.requestLastSecCount = requestLastSecCount;\n+    }\n+\n+    public long getRequestLastMinCount() {\n+        return requestLastMinCount;\n+    }\n+\n+    public void setRequestLastMinCount(long requestLastMinCount) {\n+        this.requestLastMinCount = requestLastMinCount;\n+    }\n+\n+    public long getRequestLast15MinCount() {\n+        return requestLast15MinCount;\n+    }\n+\n+    public void setRequestLast15MinCount(long requestLast15MinCount) {\n+        this.requestLast15MinCount = requestLast15MinCount;\n+    }\n+\n+    public long getRequestLastHourCount() {\n+        return requestLastHourCount;\n+    }\n+\n+    public void setRequestLastHourCount(long requestLastHourCount) {\n+        this.requestLastHourCount = requestLastHourCount;\n+    }\n+\n+    public long getRequestLast6HourCount() {\n+        return requestLast6HourCount;\n+    }\n+\n+    public void setRequestLast6HourCount(long requestLast6HourCount) {\n+        this.requestLast6HourCount = requestLast6HourCount;\n+    }\n+\n+    public long getRequestLastDayCount() {\n+        return requestLastDayCount;\n+    }\n+\n+    public void setRequestLastDayCount(long requestLastDayCount) {\n+        this.requestLastDayCount = requestLastDayCount;\n+    }\n+\n+    public long getResponseLastSecCount() {\n+        return responseLastSecCount;\n+    }\n+\n+    public void setResponseLastSecCount(long responseLastSecCount) {\n+        this.responseLastSecCount = responseLastSecCount;\n+    }\n+\n+    public long getResponseLastMinCount() {\n+        return responseLastMinCount;\n+    }\n+\n+    public void setResponseLastMinCount(long responseLastMinCount) {\n+        this.responseLastMinCount = responseLastMinCount;\n+    }\n+\n+    public long getResponseLast15MinCount() {\n+        return responseLast15MinCount;\n+    }\n+\n+    public void setResponseLast15MinCount(long responseLast15MinCount) {\n+        this.responseLast15MinCount = responseLast15MinCount;\n+    }\n+\n+    public long getResponseLastHourCount() {\n+        return responseLastHourCount;\n+    }\n+\n+    public void setResponseLastHourCount(long responseLastHourCount) {\n+        this.responseLastHourCount = responseLastHourCount;\n+    }\n+\n+    public long getResponseLast6HourCount() {\n+        return responseLast6HourCount;\n+    }\n+\n+    public void setResponseLast6HourCount(long responseLast6HourCount) {\n+        this.responseLast6HourCount = responseLast6HourCount;\n+    }\n+\n+    public long getResponseLastDayCount() {\n+        return responseLastDayCount;\n+    }\n+\n+    public void setResponseLastDayCount(long responseLastDayCount) {\n+        this.responseLastDayCount = responseLastDayCount;\n+    }\n+\n+    public String[] getChildStats() {\n+        return childStats;\n+    }\n+\n+    public void setChildStats(String[] childStats) {\n+        this.childStats = childStats;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+}"
        },
        {
            "sha": "b03da552d39450ad5f29f7f6a6528fedec849b1b",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/ds/EventStatisticsDS.java",
            "status": "added",
            "additions": 133,
            "deletions": 0,
            "changes": 133,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,133 @@\n+/*\r\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n+*\r\n+*  WSO2 Inc. licenses this file to you under the Apache License,\r\n+*  Version 2.0 (the \"License\"); you may not use this file except\r\n+*  in compliance with the License.\r\n+*  You may obtain a copy of the License at\r\n+*\r\n+*    http://www.apache.org/licenses/LICENSE-2.0\r\n+*\r\n+* Unless required by applicable law or agreed to in writing,\r\n+* software distributed under the License is distributed on an\r\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+* KIND, either express or implied.  See the License for the\r\n+* specific language governing permissions and limitations\r\n+* under the License.\r\n+*/\r\n+package org.wso2.carbon.event.statistics.internal.ds;\r\n+\r\n+import org.apache.commons.logging.Log;\r\n+import org.apache.commons.logging.LogFactory;\r\n+import org.osgi.service.component.ComponentContext;\r\n+import org.wso2.carbon.base.ServerConfiguration;\r\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\r\n+import org.wso2.carbon.event.statistics.EventStatisticsObserver;\r\n+import org.wso2.carbon.event.statistics.EventStatisticsService;\r\n+import org.wso2.carbon.event.statistics.internal.Constants;\r\n+import org.wso2.carbon.event.statistics.internal.EventStatisticsManager;\r\n+import org.wso2.carbon.event.statistics.internal.StatisticsReporterThread;\r\n+\r\n+\r\n+/**\r\n+ * @scr.component name=\"mediation.statistics\" immediate=\"true\"\r\n+ */\r\n+public class EventStatisticsDS {\r\n+\r\n+    private static final Log log = LogFactory.getLog(EventStatisticsDS.class);\r\n+    private StatisticsReporterThread reporterThread;\r\n+\r\n+    protected void activate(ComponentContext context) throws Exception {\r\n+        try {\r\n+\r\n+\r\n+            createStatisticsManager();\r\n+            EventStatisticsServiceHolder.getInstance().setEventStatisticsService(new EventStatisticsService());\r\n+            context.getBundleContext().registerService(EventStatisticsService.class.getName(),\r\n+                                                       EventStatisticsServiceHolder.getInstance().getEventStatisticsService(), null);\r\n+            if (log.isDebugEnabled()) {\r\n+                log.debug(\"Successfully deployed the event statistics monitoring service\");\r\n+            }\r\n+        } catch (Throwable e) {\r\n+            log.error(\"Can not create the event statistics monitoring service \", e);\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Create the statistics store using the synapse environment and configuration context.\r\n+     */\r\n+    private void createStatisticsManager() {\r\n+\r\n+//        EventStatisticsManager eventStatisticsManager;\r\n+        //Ignoring statistics report observers registration if {StatisticsReporterDisabled =true}\r\n+        ServerConfiguration config = ServerConfiguration.getInstance();\r\n+        String confStatisticsReporterDisabled = config.getFirstProperty(\"StatisticsReporterDisabled\");\r\n+        if (!\"\".equals(confStatisticsReporterDisabled)) {\r\n+            boolean disabled = Boolean.valueOf(confStatisticsReporterDisabled);\r\n+            if (disabled) {\r\n+                return;\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        EventStatisticsServiceHolder.getInstance().setEventStatisticsManager(new EventStatisticsManager());\r\n+\r\n+        reporterThread = new StatisticsReporterThread(PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId());\r\n+\r\n+        // Set a custom interval value if required\r\n+        ServerConfiguration serverConf = ServerConfiguration.getInstance();\r\n+        String interval = serverConf.getFirstProperty(Constants.STAT_REPORTING_INTERVAL);\r\n+        if (interval != null) {\r\n+            reporterThread.setDelay(Long.parseLong(interval));\r\n+        }\r\n+\r\n+        // Engage custom observer implementations (user written extensions)\r\n+        String observers = serverConf.getFirstProperty(Constants.STAT_OBSERVERS);\r\n+        if (observers != null && !\"\".equals(observers)) {\r\n+            String[] classNames = observers.split(\",\");\r\n+            for (String className : classNames) {\r\n+                try {\r\n+                    Class clazz = this.getClass().getClassLoader().loadClass(className.trim());\r\n+                    EventStatisticsObserver o = (EventStatisticsObserver)\r\n+                            clazz.newInstance();\r\n+                    EventStatisticsServiceHolder.getInstance().getEventStatisticsManager().registerObserver(o);\r\n+                } catch (Exception e) {\r\n+                    log.error(\"Error while initializing the event statistics \" + \"observer : \" + className, e);\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        reporterThread.start();\r\n+\r\n+        if (log.isDebugEnabled()) {\r\n+            log.debug(\"Registering the mediation statistics service\");\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    protected void deactivate(ComponentContext compCtx) throws Exception {\r\n+\r\n+        reporterThread.shutdown();\r\n+        reporterThread.interrupt(); // This should wake up the thread if it is asleep\r\n+\r\n+        // Wait for the reporting thread to gracefully terminate\r\n+        // Observers should not be disengaged before this thread halts\r\n+        // Otherwise some of the collected data may not be sent to the observers\r\n+        while (reporterThread.isAlive()) {\r\n+            if (log.isDebugEnabled()) {\r\n+                log.debug(\"Waiting for the event statistics reporter thread to terminate\");\r\n+            }\r\n+\r\n+            try {\r\n+                Thread.sleep(100);\r\n+            } catch (InterruptedException ignore) {\r\n+\r\n+            }\r\n+        }\r\n+\r\n+        EventStatisticsServiceHolder.getInstance().getEventStatisticsManager().unregisterObservers();\r\n+    }\r\n+\r\n+\r\n+}\r"
        },
        {
            "sha": "30e97640f43bb1f03565fe20e66292b36b1867a5",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/ds/EventStatisticsServiceHolder.java",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsServiceHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsServiceHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fds%2FEventStatisticsServiceHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,54 @@\n+/*\r\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n+*\r\n+*  WSO2 Inc. licenses this file to you under the Apache License,\r\n+*  Version 2.0 (the \"License\"); you may not use this file except\r\n+*  in compliance with the License.\r\n+*  You may obtain a copy of the License at\r\n+*\r\n+*    http://www.apache.org/licenses/LICENSE-2.0\r\n+*\r\n+* Unless required by applicable law or agreed to in writing,\r\n+* software distributed under the License is distributed on an\r\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+* KIND, either express or implied.  See the License for the\r\n+* specific language governing permissions and limitations\r\n+* under the License.\r\n+*/\r\n+package org.wso2.carbon.event.statistics.internal.ds;\r\n+\r\n+import org.wso2.carbon.event.statistics.EventStatisticsService;\r\n+import org.wso2.carbon.event.statistics.internal.EventStatisticsManager;\r\n+\r\n+public class EventStatisticsServiceHolder {\r\n+\r\n+    private static final EventStatisticsServiceHolder INSTANCE = new EventStatisticsServiceHolder();\r\n+    private EventStatisticsManager eventStatisticsManager;\r\n+\r\n+    private EventStatisticsServiceHolder() {\r\n+\r\n+    }\r\n+\r\n+    public static EventStatisticsServiceHolder getInstance() {\r\n+        return INSTANCE;\r\n+    }\r\n+\r\n+    private EventStatisticsService eventStatisticsService;\r\n+\r\n+    public void setEventStatisticsService(EventStatisticsService eventStatisticsService) {\r\n+        this.eventStatisticsService = eventStatisticsService;\r\n+    }\r\n+\r\n+    public EventStatisticsService getEventStatisticsService() {\r\n+        return this.eventStatisticsService;\r\n+    }\r\n+\r\n+\r\n+    public void setEventStatisticsManager(EventStatisticsManager eventStatisticsManager) {\r\n+        this.eventStatisticsManager = eventStatisticsManager;\r\n+    }\r\n+\r\n+    public EventStatisticsManager getEventStatisticsManager() {\r\n+        return eventStatisticsManager;\r\n+    }\r\n+}\r"
        },
        {
            "sha": "0be27095a18e12ef3503781d777203be6f202d35",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/jmx/JMXObserver.java",
            "status": "added",
            "additions": 135,
            "deletions": 0,
            "changes": 135,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FJMXObserver.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FJMXObserver.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FJMXObserver.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,135 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.jmx;\n+\n+import org.wso2.carbon.event.statistics.EventStatisticsObserver;\n+import org.wso2.carbon.event.statistics.internal.data.CollectionDTO;\n+import org.wso2.carbon.event.statistics.internal.data.StatsDTO;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class JMXObserver implements EventStatisticsObserver {\n+\n+    private ConcurrentHashMap<String, List<String>> registeredMbeanIds = new ConcurrentHashMap<String, List<String>>();\n+    private ConcurrentHashMap<String, Map<String, StatisticsView>> data;\n+\n+    public JMXObserver() {\n+        data = new ConcurrentHashMap<String, Map<String, StatisticsView>>();\n+    }\n+\n+\n+    public void destroy() {\n+        for (Map.Entry<String, List<String>> entry : registeredMbeanIds.entrySet()) {\n+            for (String value : entry.getValue()) {\n+                MBeanRegistrar.getInstance().unRegisterMBean(entry.getKey(), value);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void updateStatistics(CollectionDTO collectionDTO) {\n+        String id = collectionDTO.getStatsDTO().getName();\n+        updateView(collectionDTO.getStatsDTO(), id);//tenant\n+\n+        if (collectionDTO.getChildCollectionDTOs() != null) {\n+            for (CollectionDTO collectionDTO1 : collectionDTO.getChildCollectionDTOs()) {\n+                String id1 = id + \".\" + collectionDTO1.getStatsDTO().getName();\n+                updateView(collectionDTO1.getStatsDTO(), id1);  //category\n+\n+                if (collectionDTO1.getChildCollectionDTOs() != null) {\n+                    for (CollectionDTO collectionDTO2 : collectionDTO1.getChildCollectionDTOs()) {\n+                        String id2 = id1 + \".\" + collectionDTO2.getStatsDTO().getName();\n+                        updateView(collectionDTO2.getStatsDTO(), id2);   //deployment\n+\n+                        if (collectionDTO2.getChildCollectionDTOs() != null) {\n+                            for (CollectionDTO collectionDTO3 : collectionDTO2.getChildCollectionDTOs()) {\n+                                String id3 = id2 + \".\" + collectionDTO3.getStatsDTO().getName();\n+                                updateView(collectionDTO3.getStatsDTO(), id3);   //element\n+\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private void updateView(StatsDTO statsDTO, String id) {\n+        Map<String, StatisticsView> map = data.get(statsDTO.getType());\n+        if (map == null) {\n+            data.putIfAbsent(statsDTO.getType(), new HashMap<String, StatisticsView>());\n+            map = data.get(statsDTO.getType());\n+        }\n+\n+        StatisticsView view;\n+        if (!map.containsKey(id)) {\n+            view = new StatisticsView();\n+            MBeanRegistrar.getInstance().registerMBean(view,\n+                                                       statsDTO.getType(),\n+                                                       id);\n+            // store this information to unregister the MBeans later\n+            List<String> ids = registeredMbeanIds.get(statsDTO.getType());\n+            if (ids == null) {\n+                registeredMbeanIds.putIfAbsent(statsDTO.getType(),\n+                                               new ArrayList<String>());\n+                ids = registeredMbeanIds.get(statsDTO.getType());\n+            }\n+            ids.add(id);\n+            map.put(id, view);\n+        } else {\n+            view = map.get(id);\n+        }\n+\n+        updateView(view, statsDTO);\n+    }\n+\n+    private void updateView(StatisticsView view, StatsDTO statsDTO) {\n+        view.setRequestCount(view.getRequestCount() + (statsDTO.getRequestTotalCount() - view.getRequestTotalCount()));\n+        view.setResponseCount(view.getResponseCount() + (statsDTO.getResponseTotalCount() - view.getResponseTotalCount()));\n+\n+        view.setRequestTotalCount(statsDTO.getRequestTotalCount());\n+        view.setRequestAvgCountPerSec(statsDTO.getRequestAvgCountPerSec());\n+        view.setRequestMaxCountPerSec(statsDTO.getRequestMaxCountPerSec());\n+        view.setRequestLastUpdatedTime(statsDTO.getRequestLastUpdatedTime());\n+\n+        view.setRequestLastSecCount(statsDTO.getRequestLastSecCount());\n+        view.setRequestLastMinCount(statsDTO.getRequestLastMinCount());\n+        view.setRequestLast15MinCount(statsDTO.getRequestLast15MinCount());\n+        view.setRequestLastHourCount(statsDTO.getRequestLastHourCount());\n+        view.setRequestLast6HourCount(statsDTO.getRequestLast6HourCount());\n+        view.setRequestLastDayCount(statsDTO.getRequestLastDayCount());\n+\n+        view.setResponseTotalCount(statsDTO.getResponseTotalCount());\n+        view.setResponseAvgCountPerSec(statsDTO.getResponseAvgCountPerSec());\n+        view.setResponseMaxCountPerSec(statsDTO.getResponseMaxCountPerSec());\n+        view.setResponseLastUpdatedTime(statsDTO.getResponseLastUpdatedTime());\n+\n+        view.setResponseLastSecCount(statsDTO.getResponseLastSecCount());\n+        view.setResponseLastMinCount(statsDTO.getResponseLastMinCount());\n+        view.setResponseLast15MinCount(statsDTO.getResponseLast15MinCount());\n+        view.setResponseLastHourCount(statsDTO.getResponseLastHourCount());\n+        view.setResponseLast6HourCount(statsDTO.getResponseLast6HourCount());\n+        view.setResponseLastDayCount(statsDTO.getResponseLastDayCount());\n+\n+    }\n+\n+}"
        },
        {
            "sha": "3e54414b4afe8c4feed3ab37609b2b328d11a485",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/jmx/MBeanRegistrar.java",
            "status": "added",
            "additions": 99,
            "deletions": 0,
            "changes": 99,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FMBeanRegistrar.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FMBeanRegistrar.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FMBeanRegistrar.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,99 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.jmx;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+import java.lang.management.ManagementFactory;\n+import java.util.Set;\n+\n+public class MBeanRegistrar {\n+\n+    private static final MBeanRegistrar ourInstance = new MBeanRegistrar();\n+    private static final Log log = LogFactory.getLog(MBeanRegistrar.class);\n+\n+    public static MBeanRegistrar getInstance() {\n+        return ourInstance;\n+    }\n+\n+    private MBeanRegistrar() {\n+    }\n+\n+    public void registerMBean(Object mbeanInstance, String category, String id) {\n+        assertNull(mbeanInstance, \"Mbean instance is null\");\n+        assertNull(category, \"Mbean instance category is null\");\n+        assertNull(id, \"Mbean instance name is null\");\n+        try {\n+            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+            ObjectName name = new ObjectName(getObjectName(category, id));\n+            Set set = mbs.queryNames(name, null);\n+            if (set != null && set.isEmpty()) {\n+                mbs.registerMBean(mbeanInstance, name);\n+            } else {\n+                mbs.unregisterMBean(name);\n+                mbs.registerMBean(mbeanInstance, name);\n+            }\n+        } catch (Exception e) {\n+            log.warn(\"Error registering a MBean with name ' \" + id +\n+                     \" ' and category name ' \" + category + \"' for JMX management\", e);\n+        }\n+    }\n+\n+    public void unRegisterMBean(String category, String id) {\n+        try {\n+            MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+            ObjectName objName = new ObjectName(getObjectName(category, id));\n+            if (mbs.isRegistered(objName)) {\n+                mbs.unregisterMBean(objName);\n+            }\n+        } catch (Exception e) {\n+            log.warn(\"Error un-registering a  MBean with name ' \" + id +\n+                     \" ' and category name ' \" + category + \"' for JMX management\", e);\n+        }\n+    }\n+\n+    private String getObjectName(String category, String id) {\n+\n+        String jmxAgentName = System.getProperty(\"jmx.agent.name\");\n+        if (jmxAgentName == null || \"\".equals(jmxAgentName)) {\n+            jmxAgentName = \"org.wso2.carbon.event\";\n+        }\n+        return jmxAgentName + \":Type=\" + category + \",Name=\" + id;\n+    }\n+\n+    private void assertNull(String name, String msg) {\n+        if (name == null || \"\".equals(name)) {\n+            handleException(msg);\n+        }\n+    }\n+\n+    private void assertNull(Object object, String msg) {\n+        if (object == null) {\n+            handleException(msg);\n+        }\n+    }\n+\n+    private static void handleException(String msg) {\n+        log.error(msg);\n+        throw new SecurityException(msg);\n+    }\n+\n+}"
        },
        {
            "sha": "ccdbc22b7f776638f93b679488acbddb4bca6e68",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/jmx/StatisticsView.java",
            "status": "added",
            "additions": 229,
            "deletions": 0,
            "changes": 229,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsView.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsView.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsView.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,229 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.jmx;\n+\n+/**\n+ * MBean for exposing stats over JMX\n+ */\n+public class StatisticsView implements StatisticsViewMBean {\n+    private String requestLastUpdatedTime;\n+    private long requestTotalCount;\n+    private long requestCount;\n+    private long requestMaxCountPerSec;\n+    private double requestAvgCountPerSec;\n+    private long requestLastSecCount;\n+    private long requestLastMinCount;\n+    private long requestLast15MinCount;\n+    private long requestLastHourCount;\n+    private long requestLast6HourCount;\n+    private long requestLastDayCount;\n+\n+\n+    private String responseLastUpdatedTime;\n+    private long responseTotalCount;\n+    private long responseCount;\n+    private long responseMaxCountPerSec;\n+    private double responseAvgCountPerSec;\n+    private long responseLastSecCount;\n+    private long responseLastMinCount;\n+    private long responseLast15MinCount;\n+    private long responseLastHourCount;\n+    private long responseLast6HourCount;\n+    private long responseLastDayCount;\n+\n+    public String getRequestLastUpdatedTime() {\n+        return requestLastUpdatedTime;\n+    }\n+\n+    public void setRequestLastUpdatedTime(String requestLastUpdatedTime) {\n+        this.requestLastUpdatedTime = requestLastUpdatedTime;\n+    }\n+\n+    public long getRequestTotalCount() {\n+        return requestTotalCount;\n+    }\n+\n+    public void setRequestTotalCount(long requestTotalCount) {\n+        this.requestTotalCount = requestTotalCount;\n+    }\n+\n+    public long getRequestMaxCountPerSec() {\n+        return requestMaxCountPerSec;\n+    }\n+\n+    public void setRequestMaxCountPerSec(long requestMaxCountPerSec) {\n+        this.requestMaxCountPerSec = requestMaxCountPerSec;\n+    }\n+\n+    public double getRequestAvgCountPerSec() {\n+        return requestAvgCountPerSec;\n+    }\n+\n+    public void setRequestAvgCountPerSec(double requestAvgCountPerSec) {\n+        this.requestAvgCountPerSec = requestAvgCountPerSec;\n+    }\n+\n+    public long getRequestLastSecCount() {\n+        return requestLastSecCount;\n+    }\n+\n+    public void setRequestLastSecCount(long requestLastSecCount) {\n+        this.requestLastSecCount = requestLastSecCount;\n+    }\n+\n+    public long getRequestLastMinCount() {\n+        return requestLastMinCount;\n+    }\n+\n+    public void setRequestLastMinCount(long requestLastMinCount) {\n+        this.requestLastMinCount = requestLastMinCount;\n+    }\n+\n+    public long getRequestLast15MinCount() {\n+        return requestLast15MinCount;\n+    }\n+\n+    public void setRequestLast15MinCount(long requestLast15MinCount) {\n+        this.requestLast15MinCount = requestLast15MinCount;\n+    }\n+\n+    public long getRequestLastHourCount() {\n+        return requestLastHourCount;\n+    }\n+\n+    public void setRequestLastHourCount(long requestLastHourCount) {\n+        this.requestLastHourCount = requestLastHourCount;\n+    }\n+\n+    public long getRequestLast6HourCount() {\n+        return requestLast6HourCount;\n+    }\n+\n+    public void setRequestLast6HourCount(long requestLast6HourCount) {\n+        this.requestLast6HourCount = requestLast6HourCount;\n+    }\n+\n+    public long getRequestLastDayCount() {\n+        return requestLastDayCount;\n+    }\n+\n+    public void setRequestLastDayCount(long requestLastDayCount) {\n+        this.requestLastDayCount = requestLastDayCount;\n+    }\n+\n+    public String getResponseLastUpdatedTime() {\n+        return responseLastUpdatedTime;\n+    }\n+\n+    public void setResponseLastUpdatedTime(String responseLastUpdatedTime) {\n+        this.responseLastUpdatedTime = responseLastUpdatedTime;\n+    }\n+\n+    public long getResponseTotalCount() {\n+        return responseTotalCount;\n+    }\n+\n+    public void setResponseTotalCount(long responseTotalCount) {\n+        this.responseTotalCount = responseTotalCount;\n+    }\n+\n+    public long getResponseMaxCountPerSec() {\n+        return responseMaxCountPerSec;\n+    }\n+\n+    public void setResponseMaxCountPerSec(long responseMaxCountPerSec) {\n+        this.responseMaxCountPerSec = responseMaxCountPerSec;\n+    }\n+\n+    public double getResponseAvgCountPerSec() {\n+        return responseAvgCountPerSec;\n+    }\n+\n+    public void setResponseAvgCountPerSec(double responseAvgCountPerSec) {\n+        this.responseAvgCountPerSec = responseAvgCountPerSec;\n+    }\n+\n+    public long getResponseLastSecCount() {\n+        return responseLastSecCount;\n+    }\n+\n+    public void setResponseLastSecCount(long responseLastSecCount) {\n+        this.responseLastSecCount = responseLastSecCount;\n+    }\n+\n+    public long getResponseLastMinCount() {\n+        return responseLastMinCount;\n+    }\n+\n+    public void setResponseLastMinCount(long responseLastMinCount) {\n+        this.responseLastMinCount = responseLastMinCount;\n+    }\n+\n+    public long getResponseLast15MinCount() {\n+        return responseLast15MinCount;\n+    }\n+\n+    public void setResponseLast15MinCount(long responseLast15MinCount) {\n+        this.responseLast15MinCount = responseLast15MinCount;\n+    }\n+\n+    public long getResponseLastHourCount() {\n+        return responseLastHourCount;\n+    }\n+\n+    public void setResponseLastHourCount(long responseLastHourCount) {\n+        this.responseLastHourCount = responseLastHourCount;\n+    }\n+\n+    public long getResponseLast6HourCount() {\n+        return responseLast6HourCount;\n+    }\n+\n+    public void setResponseLast6HourCount(long responseLast6HourCount) {\n+        this.responseLast6HourCount = responseLast6HourCount;\n+    }\n+\n+    public long getResponseLastDayCount() {\n+        return responseLastDayCount;\n+    }\n+\n+    public void setResponseLastDayCount(long responseLastDayCount) {\n+        this.responseLastDayCount = responseLastDayCount;\n+    }\n+\n+    public void resetCount() {\n+        requestCount = 0;\n+        responseCount = 0;\n+    }\n+\n+    public long getRequestCount() {\n+        return requestCount;\n+    }\n+\n+    public void setRequestCount(long requestCount) {\n+        this.requestCount = requestCount;\n+    }\n+\n+    public long getResponseCount() {\n+        return responseCount;\n+    }\n+\n+    public void setResponseCount(long responseCount) {\n+        this.responseCount = responseCount;\n+    }\n+}"
        },
        {
            "sha": "c612b808083c796f4ef50729c887120420e9ab54",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/java/org/wso2/carbon/event/statistics/internal/jmx/StatisticsViewMBean.java",
            "status": "added",
            "additions": 70,
            "deletions": 0,
            "changes": 70,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsViewMBean.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsViewMBean.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2Finternal%2Fjmx%2FStatisticsViewMBean.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,70 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics.internal.jmx;\n+\n+/**\n+ * MBean for exposing stats over JMX\n+ */\n+public interface StatisticsViewMBean {\n+\n+    public String getRequestLastUpdatedTime();\n+\n+    public long getRequestTotalCount();\n+\n+    public long getRequestMaxCountPerSec();\n+\n+    public double getRequestAvgCountPerSec();\n+\n+    public long getRequestLastSecCount();\n+\n+    public long getRequestLastMinCount();\n+\n+    public long getRequestLast15MinCount();\n+\n+    public long getRequestLastHourCount();\n+\n+    public long getRequestLast6HourCount();\n+\n+    public long getRequestLastDayCount();\n+\n+    public String getResponseLastUpdatedTime();\n+\n+    public long getResponseTotalCount();\n+\n+    public long getResponseMaxCountPerSec();\n+\n+    public double getResponseAvgCountPerSec();\n+\n+    public long getResponseLastSecCount();\n+\n+    public long getResponseLastMinCount();\n+\n+    public long getResponseLast15MinCount();\n+\n+    public long getResponseLastHourCount();\n+\n+    public long getResponseLast6HourCount();\n+\n+    public long getResponseLastDayCount();\n+\n+    public long getRequestCount();\n+\n+    public long getResponseCount();\n+\n+    public void resetCount();\n+}"
        },
        {
            "sha": "e659db3a70d4506113ce52259397c3977b78bdec",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,26 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<component xmlns=\"http://products.wso2.org/carbon\">\n+\n+    <ManagementPermissions>\n+        <ManagementPermission>\n+            <DisplayName>Event Monitor</DisplayName>\n+            <ResourceId>/permission/admin/monitor/event-streams</ResourceId>\n+        </ManagementPermission>\n+    </ManagementPermissions>\n+</component>"
        },
        {
            "sha": "06e861463e7cf62b3deee37b7422043fbf67c465",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/main/resources/META-INF/services.xml",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,34 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<serviceGroup>\n+    <service name=\"EventStatisticsAdminService\" scope=\"transportsession\">\n+        <schema schemaNamespace=\"http://org.apache.axis2/xsd\" elementFormDefaultQualified=\"true\"/>\n+        <transports>\n+            <transport>https</transport>\n+        </transports>\n+        <description>\n+            This service is used for retrieving Event statistics\n+        </description>\n+        <parameter name=\"ServiceClass\">org.wso2.carbon.event.statistics.EventStatisticsAdminService</parameter>\n+    </service>\n+\n+    <parameter name=\"adminService\" locked=\"true\">true</parameter>\n+    <parameter name=\"hiddenService\" locked=\"true\">true</parameter>\n+    <parameter name=\"AuthorizationAction\" locked=\"false\">/permission/admin/monitor/event-streams</parameter>\n+    \n+</serviceGroup>"
        },
        {
            "sha": "720629ee6cd1a9dc390b9fa6e9f62e5d6b1a844f",
            "filename": "components/event-monitor/event-statistics/org.wso2.carbon.event.statistics/src/test/java/org/wso2/carbon/event/statistics/CounterTest.java",
            "status": "added",
            "additions": 44,
            "deletions": 0,
            "changes": 44,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Ftest%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FCounterTest.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Ftest%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FCounterTest.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Forg.wso2.carbon.event.statistics%2Fsrc%2Ftest%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fstatistics%2FCounterTest.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,44 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.statistics;\n+\n+import junit.framework.TestCase;\n+import org.wso2.carbon.event.statistics.internal.counter.BasicStatsCounter;\n+\n+public class CounterTest extends TestCase {\n+\n+    public void testCounter1() throws InterruptedException {\n+\n+        BasicStatsCounter basicStatsCounter = new BasicStatsCounter();\n+\n+        basicStatsCounter.update();\n+        basicStatsCounter.update();\n+        basicStatsCounter.update();\n+\n+        System.out.println(basicStatsCounter);\n+\n+        Thread.sleep(1000);\n+        basicStatsCounter.update();\n+        basicStatsCounter.update();\n+        basicStatsCounter.update();\n+\n+        System.out.println(basicStatsCounter);\n+\n+\n+    }\n+}"
        },
        {
            "sha": "a1b6e56419a66ef3e91498f4098dc6818cb624bb",
            "filename": "components/event-monitor/event-statistics/pom.xml",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-statistics%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-statistics%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-monitor</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>event-statistics</artifactId>\n+    <packaging>pom</packaging>\n+    <name>WSO2 Carbon - Event Statistics Aggregator Module</name>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <url>http://wso2.org</url>\n+\n+    <modules>\n+        <module>org.wso2.carbon.event.statistics</module>\n+        <module>org.wso2.carbon.event.statistics.ui</module>\n+    </modules>\n+\n+</project>\t"
        },
        {
            "sha": "51bce2c7deb2735dff3f0cfe56729bb92e67dc0c",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/pom.xml",
            "status": "added",
            "additions": 79,
            "deletions": 0,
            "changes": 79,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,79 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-tracer</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.tracer.ui</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Tracer UI</name>\n+    <url>http://wso2.org</url>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Carbon-Component>UIBundle</Carbon-Component>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.tracer.ui.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.tracer.stub.*; version=\"${carbon.analytics.common.version}\",\n+                            org.wso2.carbon.event.tracer.stub.client.*; version=\"${carbon.analytics.common.version}\"\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.ui</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.utils</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.tracer.stub</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+</project>"
        },
        {
            "sha": "008dc56b7bd7e425d3aa46e2dce42817a3215634",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/java/org/wso2/carbon/event/tracer/ui/client/EventTracerAdminServiceClient.java",
            "status": "added",
            "additions": 90,
            "deletions": 0,
            "changes": 90,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fclient%2FEventTracerAdminServiceClient.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fclient%2FEventTracerAdminServiceClient.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fclient%2FEventTracerAdminServiceClient.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,90 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.tracer.ui.client;\n+\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.tracer.stub.client.EventTracerAdminServiceEventTracerAdminServiceExceptionException;\n+import org.wso2.carbon.event.tracer.stub.client.EventTracerAdminServiceStub;\n+\n+import java.rmi.RemoteException;\n+import java.util.Locale;\n+import java.util.ResourceBundle;\n+\n+public class EventTracerAdminServiceClient {\n+\n+    private static final Log log = LogFactory.getLog(EventTracerAdminServiceClient.class);\n+    private static final String BUNDLE = \"org.wso2.carbon.event.tracer.ui.i18n.Resources\";\n+    private ResourceBundle bundle;\n+    public EventTracerAdminServiceStub stub;\n+\n+    public EventTracerAdminServiceClient(String cookie,\n+                                         String backendServerURL,\n+                                         ConfigurationContext configCtx,\n+                                         Locale locale) throws AxisFault {\n+        String serviceURL = backendServerURL + \"EventTracerAdminService\";\n+        bundle = ResourceBundle.getBundle(BUNDLE, locale);\n+\n+        stub = new EventTracerAdminServiceStub(configCtx, serviceURL);\n+        ServiceClient client = stub._getServiceClient();\n+        Options option = client.getOptions();\n+        option.setManageSession(true);\n+        option.setProperty(org.apache.axis2.transport.http.HTTPConstants.COOKIE_STRING, cookie);\n+    }\n+\n+    public String[] getTraceLogs() throws AxisFault {\n+        try {\n+            return stub.getTraceLogs();\n+        } catch (RemoteException e) {\n+            String msg = bundle.getString(\"cannot.get.service.binding\");\n+            handleException(msg, e);\n+        }\n+        return null;\n+    }\n+\n+    public void clearLogs() throws AxisFault {\n+        try {\n+            stub.clearTraceLogs();\n+        } catch (RemoteException e) {\n+            String msg = bundle.getString(\"Cannot clear the logs\");\n+            handleException(msg, e);\n+        }\n+    }\n+\n+    public String[] searchLogs(String key, boolean ignoreCase) throws AxisFault {\n+        try {\n+            return stub.searchTraceLog(key, ignoreCase);\n+        } catch (RemoteException e) {\n+            String msg = bundle.getString(\"Cannot search the logs\");\n+            handleException(msg, e);\n+        } catch (EventTracerAdminServiceEventTracerAdminServiceExceptionException e) {\n+            String msg = bundle.getString(\"Cannot search the logs\");\n+            handleException(msg, e);\n+        }\n+        return null;\n+    }\n+\n+    private void handleException(String msg, Exception e) throws AxisFault {\n+        log.error(msg, e);\n+        throw new AxisFault(msg, e);\n+    }\n+}"
        },
        {
            "sha": "380140cd8d6b8baee9f3f32b720b85dc9b1f0b5a",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/EventTracerAdminService.wsdl",
            "status": "added",
            "additions": 273,
            "deletions": 0,
            "changes": 273,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FEventTracerAdminService.wsdl",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FEventTracerAdminService.wsdl",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FEventTracerAdminService.wsdl?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,273 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:ns=\"http://tracer.event.carbon.wso2.org\"\n+                  xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\"\n+                  xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n+                  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\"\n+                  xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\"\n+                  targetNamespace=\"http://tracer.event.carbon.wso2.org\">\n+    <wsdl:documentation>EventTracerAdminService</wsdl:documentation>\n+    <wsdl:types>\n+        <xs:schema attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://tracer.event.carbon.wso2.org/xsd\">\n+            <xs:complexType name=\"EventTracerAdminServiceException\">\n+                <xs:sequence/>\n+            </xs:complexType>\n+        </xs:schema>\n+        <xs:schema xmlns:ax2111=\"http://tracer.event.carbon.wso2.org/xsd\" attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://tracer.event.carbon.wso2.org\">\n+            <xs:import namespace=\"http://tracer.event.carbon.wso2.org/xsd\"/>\n+            <xs:element name=\"EventTracerAdminServiceEventTracerAdminServiceException\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element minOccurs=\"0\" name=\"EventTracerAdminServiceException\" nillable=\"true\" type=\"ax2111:EventTracerAdminServiceException\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"searchTraceLog\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element minOccurs=\"0\" name=\"keyword\" nillable=\"true\" type=\"xs:string\"/>\n+                        <xs:element minOccurs=\"0\" name=\"ignoreCase\" type=\"xs:boolean\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"searchTraceLogResponse\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"return\" nillable=\"true\" type=\"xs:string\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"getTraceLogs\">\n+                <xs:complexType>\n+                    <xs:sequence/>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"getTraceLogsResponse\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"return\" nillable=\"true\" type=\"xs:string\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"getLogs\">\n+                <xs:complexType>\n+                    <xs:sequence/>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"getLogsResponse\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"return\" nillable=\"true\" type=\"xs:string\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"clearTraceLogs\">\n+                <xs:complexType>\n+                    <xs:sequence/>\n+                </xs:complexType>\n+            </xs:element>\n+            <xs:element name=\"clearTraceLogsResponse\">\n+                <xs:complexType>\n+                    <xs:sequence>\n+                        <xs:element minOccurs=\"0\" name=\"return\" type=\"xs:boolean\"/>\n+                    </xs:sequence>\n+                </xs:complexType>\n+            </xs:element>\n+        </xs:schema>\n+    </wsdl:types>\n+    <wsdl:message name=\"searchTraceLogRequest\">\n+        <wsdl:part name=\"parameters\" element=\"ns:searchTraceLog\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"searchTraceLogResponse\">\n+        <wsdl:part name=\"parameters\" element=\"ns:searchTraceLogResponse\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"EventTracerAdminServiceEventTracerAdminServiceException\">\n+        <wsdl:part name=\"parameters\" element=\"ns:EventTracerAdminServiceEventTracerAdminServiceException\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"getTraceLogsRequest\">\n+        <wsdl:part name=\"parameters\" element=\"ns:getTraceLogs\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"getTraceLogsResponse\">\n+        <wsdl:part name=\"parameters\" element=\"ns:getTraceLogsResponse\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"getLogsRequest\">\n+        <wsdl:part name=\"parameters\" element=\"ns:getLogs\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"getLogsResponse\">\n+        <wsdl:part name=\"parameters\" element=\"ns:getLogsResponse\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"clearTraceLogsRequest\">\n+        <wsdl:part name=\"parameters\" element=\"ns:clearTraceLogs\"/>\n+    </wsdl:message>\n+    <wsdl:message name=\"clearTraceLogsResponse\">\n+        <wsdl:part name=\"parameters\" element=\"ns:clearTraceLogsResponse\"/>\n+    </wsdl:message>\n+    <wsdl:portType name=\"EventTracerAdminServicePortType\">\n+        <wsdl:operation name=\"searchTraceLog\">\n+            <wsdl:input message=\"ns:searchTraceLogRequest\" wsaw:Action=\"urn:searchTraceLog\"/>\n+            <wsdl:output message=\"ns:searchTraceLogResponse\" wsaw:Action=\"urn:searchTraceLogResponse\"/>\n+            <wsdl:fault message=\"ns:EventTracerAdminServiceEventTracerAdminServiceException\" name=\"EventTracerAdminServiceEventTracerAdminServiceException\" wsaw:Action=\"urn:searchTraceLogEventTracerAdminServiceEventTracerAdminServiceException\"/>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getTraceLogs\">\n+            <wsdl:input message=\"ns:getTraceLogsRequest\" wsaw:Action=\"urn:getTraceLogs\"/>\n+            <wsdl:output message=\"ns:getTraceLogsResponse\" wsaw:Action=\"urn:getTraceLogsResponse\"/>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getLogs\">\n+            <wsdl:input message=\"ns:getLogsRequest\" wsaw:Action=\"urn:getLogs\"/>\n+            <wsdl:output message=\"ns:getLogsResponse\" wsaw:Action=\"urn:getLogsResponse\"/>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"clearTraceLogs\">\n+            <wsdl:input message=\"ns:clearTraceLogsRequest\" wsaw:Action=\"urn:clearTraceLogs\"/>\n+            <wsdl:output message=\"ns:clearTraceLogsResponse\" wsaw:Action=\"urn:clearTraceLogsResponse\"/>\n+        </wsdl:operation>\n+    </wsdl:portType>\n+    <wsdl:binding name=\"EventTracerAdminServiceSoap11Binding\" type=\"ns:EventTracerAdminServicePortType\">\n+        <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\"/>\n+        <wsdl:operation name=\"searchTraceLog\">\n+            <soap:operation soapAction=\"urn:searchTraceLog\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:output>\n+            <wsdl:fault name=\"EventTracerAdminServiceEventTracerAdminServiceException\">\n+                <soap:fault use=\"literal\" name=\"EventTracerAdminServiceEventTracerAdminServiceException\"/>\n+            </wsdl:fault>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getTraceLogs\">\n+            <soap:operation soapAction=\"urn:getTraceLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getLogs\">\n+            <soap:operation soapAction=\"urn:getLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"clearTraceLogs\">\n+            <soap:operation soapAction=\"urn:clearTraceLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+    <wsdl:binding name=\"EventTracerAdminServiceSoap12Binding\" type=\"ns:EventTracerAdminServicePortType\">\n+        <soap12:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\"/>\n+        <wsdl:operation name=\"searchTraceLog\">\n+            <soap12:operation soapAction=\"urn:searchTraceLog\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:output>\n+            <wsdl:fault name=\"EventTracerAdminServiceEventTracerAdminServiceException\">\n+                <soap12:fault use=\"literal\" name=\"EventTracerAdminServiceEventTracerAdminServiceException\"/>\n+            </wsdl:fault>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getTraceLogs\">\n+            <soap12:operation soapAction=\"urn:getTraceLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getLogs\">\n+            <soap12:operation soapAction=\"urn:getLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"clearTraceLogs\">\n+            <soap12:operation soapAction=\"urn:clearTraceLogs\" style=\"document\"/>\n+            <wsdl:input>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <soap12:body use=\"literal\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+    <wsdl:binding name=\"EventTracerAdminServiceHttpBinding\" type=\"ns:EventTracerAdminServicePortType\">\n+        <http:binding verb=\"POST\"/>\n+        <wsdl:operation name=\"searchTraceLog\">\n+            <http:operation location=\"searchTraceLog\"/>\n+            <wsdl:input>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getTraceLogs\">\n+            <http:operation location=\"getTraceLogs\"/>\n+            <wsdl:input>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"getLogs\">\n+            <http:operation location=\"getLogs\"/>\n+            <wsdl:input>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+        <wsdl:operation name=\"clearTraceLogs\">\n+            <http:operation location=\"clearTraceLogs\"/>\n+            <wsdl:input>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:input>\n+            <wsdl:output>\n+                <mime:content type=\"text/xml\" part=\"parameters\"/>\n+            </wsdl:output>\n+        </wsdl:operation>\n+    </wsdl:binding>\n+    <wsdl:service name=\"EventTracerAdminService\">\n+        <wsdl:port name=\"EventTracerAdminServiceHttpsSoap11Endpoint\" binding=\"ns:EventTracerAdminServiceSoap11Binding\">\n+            <soap:address location=\"https://10.200.1.90:9443/services/EventTracerAdminService.EventTracerAdminServiceHttpsSoap11Endpoint/\"/>\n+        </wsdl:port>\n+        <wsdl:port name=\"EventTracerAdminServiceHttpsSoap12Endpoint\" binding=\"ns:EventTracerAdminServiceSoap12Binding\">\n+            <soap12:address location=\"https://10.200.1.90:9443/services/EventTracerAdminService.EventTracerAdminServiceHttpsSoap12Endpoint/\"/>\n+        </wsdl:port>\n+        <wsdl:port name=\"EventTracerAdminServiceHttpsEndpoint\" binding=\"ns:EventTracerAdminServiceHttpBinding\">\n+            <http:address location=\"https://10.200.1.90:9443/services/EventTracerAdminService.EventTracerAdminServiceHttpsEndpoint/\"/>\n+        </wsdl:port>\n+    </wsdl:service>\n+</wsdl:definitions>\n\\ No newline at end of file"
        },
        {
            "sha": "92b859781d6d413909c8b94a31147720195c460b",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,35 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<component xmlns=\"http://products.wso2.org/carbon\">\n+    <menus>\n+        <menu>\n+            <id>event_tracer_menu</id>\n+            <i18n-key>eventtracermenutext</i18n-key>\n+            <i18n-bundle>org.wso2.carbon.event.tracer.ui.i18n.Resources</i18n-bundle>\n+            <parent-menu>monitor_menu</parent-menu>\n+            <link>../event-tracer/index.jsp</link>\n+            <region>region4</region>\n+            <order>18</order>\n+            <style-class>tools</style-class>\n+            <icon>../event-tracer/images/tracer.gif</icon>\n+            <require-permission>/permission/admin/monitor/event-streams</require-permission>\n+            <require-super-tenant>true</require-super-tenant>\n+        </menu>\n+    </menus>\n+\n+</component>"
        },
        {
            "sha": "c835718b56cee9606b08600fcd90d8fb42fcf710",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/org/wso2/carbon/event/tracer/ui/i18n/Resources.properties",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2Fui%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,26 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+eventtracermenutext=Event Tracer\n+backendServiceUnavailable=Backend Service is Unavailable\n+no.trace.entries=--- No trace entries found. You can enable tracing on transport adapters, event formatters, event builders or event processors by vising the relevant pages ---\n+unable.to.clear.logs=Unable to clear Logs. Backend service may be unavailable.\n+event.message.tracer=Event Message Tracer\n+search=Search\n+ignore.case=Ignore Case\n+clearAll=Clear All"
        },
        {
            "sha": "270fa1e952e0444cd14c13988df50c867b62151b",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/docs/images/eventTracerBlank.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerBlank.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerBlank.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerBlank.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "1a16125d81b0273d8c3fbf9dcc952fdf1a544b0f",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/docs/images/eventTracerUIFull.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerUIFull.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerUIFull.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracerUIFull.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c00767bb946730759e6983ebd78d5ebfc367ea7f",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/docs/images/eventTracing.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracing.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracing.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FeventTracing.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "1861971f0f5f4362976eab3388248aa37d81769d",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/docs/images/searchEventsInTracer.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FsearchEventsInTracer.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FsearchEventsInTracer.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fimages%2FsearchEventsInTracer.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "43668a712fd64b06642e5eb437bf013052caa30b",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/docs/userguide.html",
            "status": "added",
            "additions": 46,
            "deletions": 0,
            "changes": 46,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fuserguide.html",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fuserguide.html",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fdocs%2Fuserguide.html?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,46 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<html>\n+<head><title>Event Tracer - User Guide</title>\n+\n+    <link href=\"../../admin/css/documentation.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n+</head>\n+<body>\n+<h1>Event Tracer</h1>\n+\n+<h2>Configuring Event Tracer</h2>\n+\n+<p>CEP Event Tracer is an important tool to monitor events. This tool provides huge functionality to trace the event in each and every component. Event tracer will help to check the event when travels along the components. But user needs to enable the tracing in each configuration manually because by default tracing is disabled.\ufffd</p>\n+<h4>Enabling/Disabling Event Tracer for a Input Event Adaptor Configuration</h4>\n+<p><br/><img src=\"images/eventTracing.png\" alt=\"Query Expressions\"/><br/></p>\n+<p>As shown above, you can simply enable or disable event tracing for Input Event Adaptor configuration. You can follow the sample approach for <strong>Output Event Adaptor, Event Builder, Event Processor and Event Formatter</strong> as well, But consider any change in tracing status will lead to redeployment of necessary configuration.</p>\n+<h3>Tracing the events</h3>\n+<p>Follow the instructions below to access the Event Tracer.</p>\n+<p>1. Click on \"Monitor\" on the left side to access the \"Monitor\" menu.</p>\n+<p>2. In the \"Monitor\" menu, click on \"Event Tracer.\"</p>\n+<p>3. The \"Event Tracer\" page appears.</p>\n+<p><br/><img src=\"images/eventTracerBlank.png\" alt=\"Query Expressions\"/><br/></p>\n+<p>4. After tracing enabled for necessary configuration, you can see how the incoming events traverse through the components of the CEP and how the events got changed. If you click the <strong>Clear All</strong> button all the event related data will be deleted permanently.</p>\n+<p><br/><img src=\"images/eventTracerUIFull.png\" alt=\"Query Expressions\"/><br/></p>\n+<p>Here you can use the search option to refine the data in the UI as shown below.</p>\n+<p><br/><img src=\"images/searchEventsInTracer.png\" alt=\"Query Expressions\"/><br/></p>\n+\n+</body>\n+</html>\n+"
        },
        {
            "sha": "c99a38bfcab86440b79c015cb74346a60c32963c",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/images/tracer.gif",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fimages%2Ftracer.gif",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fimages%2Ftracer.gif",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Fimages%2Ftracer.gif?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "a2011c9e0b32451e1f45d6cab04714a3ff34b57a",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer.ui/src/main/resources/web/event-tracer/index.jsp",
            "status": "added",
            "additions": 241,
            "deletions": 0,
            "changes": 241,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Findex.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Findex.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Fevent-tracer%2Findex.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,241 @@\n+<%--\n+~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ WSO2 Inc. licenses this file to you under the Apache License,\n+~ Version 2.0 (the \"License\"); you may not use this file except\n+~ in compliance with the License.\n+~ You may obtain a copy of the License at\n+~\n+~    http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing,\n+~ software distributed under the License is distributed on an\n+~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+~ KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations\n+~ under the License.\n+--%>\n+<%@ taglib prefix=\"fmt\" uri=\"http://java.sun.com/jsp/jstl/fmt\" %>\n+<%@ page import=\"org.apache.axis2.context.ConfigurationContext\" %>\n+<%@ page import=\"org.wso2.carbon.CarbonConstants\" %>\n+<%@ page import=\"org.wso2.carbon.event.tracer.ui.client.EventTracerAdminServiceClient\" %>\n+<%@ page import=\"org.wso2.carbon.ui.CarbonUIUtil\" %>\n+<%@ page import=\"org.wso2.carbon.utils.ServerConstants\" %>\n+<%@ taglib uri=\"http://wso2.org/projects/carbon/taglibs/carbontags.jar\" prefix=\"carbon\" %>\n+<fmt:bundle basename=\"org.wso2.carbon.event.tracer.ui.i18n.Resources\">\n+<carbon:breadcrumb\n+\t\tlabel=\"eventtracermenutext\"\n+\t\tresourceBundle=\"org.wso2.carbon.event.tracer.ui.i18n.Resources\"\n+\t\ttopPage=\"true\"\n+\t\trequest=\"<%=request%>\" />\n+<script src=\"../carbon/global-params.js\" type=\"text/javascript\"></script>\n+<%\n+    String backendServerURL = CarbonUIUtil.getServerURL(config.getServletContext(), session);\n+    ConfigurationContext configContext =\n+            (ConfigurationContext) config.getServletContext()\n+                    .getAttribute(CarbonConstants.CONFIGURATION_CONTEXT);\n+\n+    String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);\n+    EventTracerAdminServiceClient client;\n+    String[] logs = new String[0];\n+    try {\n+        client = new EventTracerAdminServiceClient(cookie, backendServerURL, configContext,\n+                                                  request.getLocale());\n+\n+        boolean isOperation = request.getParameter(\"op\") != null;\n+        String opeation = request.getParameter(\"op\");\n+        if (!isOperation) {\n+            String []returnLogs = client.getTraceLogs();\n+            if (!(returnLogs != null && returnLogs.length == 1 && (returnLogs[0] == null ||\n+                    returnLogs[0].equals(\"\")))) {\n+                logs = returnLogs;\n+            }\n+        } else {\n+            if (opeation.equals(\"search\")) {\n+                String key = request.getParameter(\"key\");\n+                String ignoreCase = request.getParameter(\"ignoreCase\");\n+\n+                if (key == null) {\n+                    key = \"\";\n+                }\n+\n+                boolean igCase = false;\n+                if (ignoreCase != null) {\n+                    igCase = Boolean.parseBoolean(ignoreCase);\n+                }\n+                String []returnLogs = client.searchLogs(key, igCase);\n+                if (!(returnLogs != null && returnLogs.length == 1 && (returnLogs[0] == null ||\n+                        returnLogs[0].equals(\"\")))) {\n+                    logs = returnLogs;\n+                }\n+            } else if (opeation.equals(\"clear\")) {\n+                client.clearLogs();\n+                String []returnLogs = client.getTraceLogs();\n+                if (!(returnLogs != null && returnLogs.length == 1 && (returnLogs[0] == null ||\n+                        returnLogs[0].equals(\"\")))) {\n+                    logs = returnLogs;\n+                }\n+            }\n+        }\n+    } catch (Exception e) {\n+%>\n+<script type=\"text/javascript\">\n+   window.location.href = \"../admin/error.jsp\";\n+</script>\n+<%\n+    }\n+%>\n+\n+<script type=\"text/javascript\">\n+\n+wso2.wsf.Util.initURLs();\n+\n+var frondendURL = wso2.wsf.Util.getServerURL() + \"/\";\n+\n+function getResponseValue(responseXML) {\n+    var returnElementList = responseXML.getElementsByTagName(\"ns:return\");\n+        // Older browsers might not recognize namespaces (e.g. FF2)\n+    if (returnElementList.length == 0)\n+        returnElementList = responseXML.getElementsByTagName(\"return\");\n+    var returnElement = returnElementList[0];\n+\n+    return returnElement.firstChild.nodeValue;\n+}\n+\n+function clearAll() {\n+    var bodyXML = '<ns1:clearTraceLogs xmlns:ns1=\"http://tracer.event.carbon.wso2.org\">' +\n+                  '</ns1:clearTraceLogs>';\n+    var callURL = wso2.wsf.Util.getBackendServerURL(frondendURL, \"<%=backendServerURL%>\") +\n+                  \"EventTracerAdminService/clearTraceLogs\";\n+    new wso2.wsf.WSRequest(callURL, \"urn:clearTraceLogs\", bodyXML, clearTraceLogsCallback, undefined, undefined, getProxyAddress(), false);\n+}\n+\n+function clearTraceLogsCallback() {\n+    var data = this.req.responseXML;\n+    var responseTextValue = getResponseValue(data);\n+    if (responseTextValue == \"true\") {\n+        var tbody = document.getElementById(\"traceLogsTableBody\");\n+        var table = tbody.parentNode;\n+        table.removeChild(tbody);\n+        var newTBody = document.createElement(\"tbody\");\n+        var idAttr = document.createAttribute('id');\n+        idAttr.value = \"traceLogsTableBody\";\n+        newTBody.attributes.setNamedItem(idAttr);\n+        table.appendChild(newTBody);\n+        var tr = document.createElement(\"tr\");\n+        var td = document.createElement(\"td\");\n+        tr.appendChild(td);\n+        td.innerHTML = '<fmt:message key=\"no.trace.entries\"/>';\n+        newTBody.appendChild(tr);\n+        alternateTableRows('traceLogsTable', 'tableEvenRow', 'tableOddRow');\n+    } else {\n+        CARBON.showWarningDialog('<fmt:message key=\"unable.to.clear.logs\"/>');\n+    }\n+}\n+\n+function searchTrace() {\n+    var keyword = document.getElementById(\"tracekeyword\");\n+    if (keyword != null && keyword != undefined && keyword.value != null &&\n+        keyword.value != undefined) {\n+        var ignore_case = document.getElementById(\"ignore_case\");\n+        var ignoreCase = false;\n+        if (ignore_case != null) {\n+            if (ignore_case.checked) {\n+                ignoreCase = true;\n+            }\n+        }\n+        var bodyXML = '<searchTraceLog xmlns=\"http://tracer.event.carbon.wso2.org\">' +\n+                      '<keyword>' + keyword.value + '</keyword>' +\n+                      '<ignoreCase>' + ignoreCase.toString() + '</ignoreCase>' +\n+                      '</searchTraceLog>';\n+        var callURL = wso2.wsf.Util.getBackendServerURL(frondendURL, \"<%=backendServerURL%>\") +\n+                      \"EventTracerAdminService/searchTraceLog\";\n+        new wso2.wsf.WSRequest(callURL, \"urn:searchTraceLog\", bodyXML, searchTraceLogsCallback, undefined, undefined, getProxyAddress(), false);\n+    }\n+}\n+\n+function searchTraceLogsCallback() {\n+    var data = this.req.responseXML;\n+    var rows = data.getElementsByTagName(\"ns:return\");\n+    // Older browsers might not recognize namespaces (e.g. FF2)\n+    if (rows.length == 0) {\n+        rows = data.getElementsByTagName(\"return\");\n+    }\n+\n+    var tbody = document.getElementById(\"traceLogsTableBody\");\n+    var table = tbody.parentNode;\n+    table.removeChild(tbody);\n+    var newTBody = document.createElement(\"tbody\");\n+    var idAttr = document.createAttribute('id');\n+    idAttr.value = \"traceLogsTableBody\";\n+    newTBody.attributes.setNamedItem(idAttr);\n+    table.appendChild(newTBody);\n+    if (rows != null || rows != undefined) {\n+        for (var i=0; i< rows.length;i++) {\n+            var tr = document.createElement(\"tr\");\n+            var td = document.createElement(\"td\");\n+            tr.appendChild(td);\n+            td.innerHTML = rows[i].firstChild.nodeValue;\n+            newTBody.appendChild(tr);\n+        }\n+    }\n+    alternateTableRows('traceLogsTable', 'tableEvenRow', 'tableOddRow');\n+}\n+\n+    function searchTraceNew() {\n+        var key = document.getElementById('tracekeyword').value;\n+        var ignoreCase = document.getElementById('ignore_case');\n+        var isIgonreCases = false;\n+        if (ignoreCase.checked) {\n+            isIgonreCases = true;\n+        }\n+        document.location.href = \"index.jsp?ordinal=1&op=search&key=\" + key + \"&ignoreCase=\" + isIgonreCases;\n+    }\n+\n+    function clearAllNew() {\n+        document.location.href = \"index.jsp?ordinal=1&op=clear\";\n+    }\n+</script>\n+\n+<div id=\"middle\">\n+    <h2><fmt:message key=\"event.message.tracer\"/></h2>\n+\n+    <div id=\"workArea\">\n+\n+        <table class=\"normal\">\n+            <tbody>\n+                <tr>\n+                    <td><input type=\"text\" id=\"tracekeyword\" value=\"\"/>\n+                        <input type=\"button\" class=\"button\" onclick=\"searchTraceNew();\" value=\"<fmt:message key=\"search\"/>\"/>\n+                    </td>\n+                    <td><input type=\"checkbox\" id=\"ignore_case\"/><fmt:message key=\"ignore.case\"/></td>\n+                </tr>\n+            </tbody>\n+        </table>\n+        <div id=\"tracelogdiv\" style=\"overflow-y:auto;overflow-x:auto;height:500px;margin-top:10px\">\n+            <table class=\"styledLeft\" id=\"traceLogsTable\" style=\"width:99% !important\">\n+                <tbody id=\"traceLogsTableBody\">\n+                    <%\n+                        for (String log : logs) {\n+\n+                    %>\n+                    <tr>\n+                        <td><%=log.replaceAll(\"\\\\n\",\"<br/>\").replaceAll(\" \",\"&nbsp;\")%>\n+                        </td>\n+                    </tr>\n+                    <%\n+                        }\n+                    %>\n+                </tbody>\n+            </table>\n+\n+            <script type=\"text/javascript\">\n+                alternateTableRows('traceLogsTable', 'tableEvenRow', 'tableOddRow');\n+            </script>\n+        </div>\n+        <div class=\"buttonrow\" style=\"padding-top:10px\">\n+            <input type=\"button\" class=\"button\" value='<fmt:message key=\"clearAll\"/>' onclick=\"clearAllNew();\"/>\n+        </div>\n+    </div>\n+</div>\n+</fmt:bundle>"
        },
        {
            "sha": "c512e7cfd2d89702dd28c2884031718c160280f3",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/pom.xml",
            "status": "added",
            "additions": 71,
            "deletions": 0,
            "changes": 71,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,71 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-tracer</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.tracer</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Tracer BE</name>\n+    <url>http://wso2.org</url>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.tracer.*\n+                        </Export-Package>\n+                        <!--<Import-Package>-->\n+                        <!--org.apache.log4j; version=\"0.0.0\",-->\n+                        <!--org.apache.log4j.spi; version=\"0.0.0\",-->\n+                        <!--org.wso2.carbon.logging.appenders; version=\"0.0.0\"-->\n+                        <!--</Import-Package>-->\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.utils</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-lang.wso2</groupId>\n+            <artifactId>commons-lang</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+</project>"
        },
        {
            "sha": "68ad9025b63e5f926a395741607351e12ec5d57b",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/src/main/java/org/wso2/carbon/event/tracer/EventTracerAdminService.java",
            "status": "added",
            "additions": 218,
            "deletions": 0,
            "changes": 218,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,218 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.tracer;\n+\n+import org.apache.commons.lang.StringEscapeUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.log4j.Appender;\n+import org.apache.log4j.Layout;\n+import org.apache.log4j.Logger;\n+import org.apache.log4j.spi.LoggingEvent;\n+// MemoryAppender should not be used here,\n+// this should be handled using a logging provider\n+import org.wso2.carbon.utils.logging.appenders.MemoryAppender;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EventTracerAdminService {\n+    private static final Log log = LogFactory.getLog(EventTracerAdminService.class);\n+    private static final String EVENT_TRACE_LOGGER = \"EVENT_TRACE_LOGGER\";\n+    private static final String EVENT_TRACE_MEMORYAPPENDER = \"EVENT_TRACE_MEMORYAPPENDER\";\n+\n+    public String[] getTraceLogs() {\n+        int amount;\n+        int DEFAULT_NO_OF_LOGS = 100;\n+        Logger logger = Logger.getLogger(EVENT_TRACE_LOGGER);\n+        Appender appender = logger.getAppender(EVENT_TRACE_MEMORYAPPENDER);\n+        if (appender instanceof MemoryAppender) {\n+            MemoryAppender memoryAppender = (MemoryAppender) appender;\n+            if ((memoryAppender.getCircularQueue() != null)) {\n+                amount = memoryAppender.getBufferSize();\n+            } else {\n+                return new String[]{\n+                        \"--- No trace entries found. \" +\n+                        \"You can enable tracing on transport adapters, event formatters, \" +\n+                        \"event builders or event processors by vising the relevant pages ---\"};\n+            }\n+            if ((memoryAppender.getCircularQueue().getObjects(amount) == null) ||\n+                (memoryAppender.getCircularQueue().getObjects(amount).length == 0)) {\n+                return new String[]{\n+                        \"--- No trace entries found. \" +\n+                        \"You can enable tracing on transport adapters, event formatters, \" +\n+                        \"event builders or event processors by vising the relevant pages ---\"};\n+            }\n+            Object[] objects;\n+            if (amount < 1) {\n+                objects = memoryAppender.getCircularQueue().getObjects(DEFAULT_NO_OF_LOGS);\n+            } else {\n+                objects = memoryAppender.getCircularQueue().getObjects(amount);\n+            }\n+            String[] resp = new String[objects.length];\n+            Layout layout = memoryAppender.getLayout();\n+            for (int i = 0; i < objects.length; i++) {\n+                LoggingEvent logEvt = (LoggingEvent) objects[i];\n+                if (logEvt != null) {\n+                    resp[i] = StringEscapeUtils.escapeHtml(layout.format(logEvt));\n+                }\n+            }\n+            return resp;\n+        } else {\n+            return new String[]{\"The trace log must be configured to use the \" +\n+                                \"org.wso2.carbon.logging.appenders.MemoryAppender to view entries through the admin console\"};\n+        }\n+    }\n+\n+    public boolean clearTraceLogs() {\n+        Logger logger = Logger.getLogger(EVENT_TRACE_LOGGER);\n+        Appender appender = logger.getAppender(EVENT_TRACE_MEMORYAPPENDER);\n+        if (appender instanceof MemoryAppender) {\n+            try {\n+                MemoryAppender memoryAppender = (MemoryAppender) appender;\n+                if (memoryAppender.getCircularQueue() != null) {\n+                    memoryAppender.getCircularQueue().clear();\n+                }\n+                return true;\n+            } catch (Exception e) {\n+                return false;\n+            }\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    public String[] searchTraceLog(String keyword,\n+                                   boolean ignoreCase) throws EventTracerAdminServiceException {\n+        int DEFAULT_NO_OF_LOGS = 100;\n+        int definedamonut;\n+        if (keyword == null) {\n+            handleException(\"Key word can not be null\");\n+        }\n+        if (\"ALL\".equals(keyword) || \"\".equals(keyword)) {\n+            return getTraceLogs();\n+        }\n+        Logger logger = Logger.getLogger(EVENT_TRACE_LOGGER);\n+        Appender appender = logger.getAppender(EVENT_TRACE_MEMORYAPPENDER);\n+        if (appender instanceof MemoryAppender) {\n+            MemoryAppender memoryAppender\n+                    = (MemoryAppender) appender;\n+            if ((memoryAppender.getCircularQueue() != null)) {\n+                definedamonut = memoryAppender.getBufferSize();\n+            } else {\n+                return new String[]{\n+                        \"--- No trace entries found for \" +\n+                        \" \" + keyword + \" ---\"\n+                };\n+            }\n+            if ((memoryAppender.getCircularQueue().getObjects(definedamonut) == null) ||\n+                (memoryAppender.getCircularQueue().getObjects(definedamonut).length == 0)) {\n+                return new String[]{\n+                        \"--- No trace entries found for \" +\n+                        \"the \" + keyword + \" ---\"\n+                };\n+            }\n+            Object[] objects;\n+            if (definedamonut < 1) {\n+                objects = memoryAppender.getCircularQueue().getObjects(DEFAULT_NO_OF_LOGS);\n+            } else {\n+                objects = memoryAppender.getCircularQueue().getObjects(definedamonut);\n+            }\n+            Layout layout = memoryAppender.getLayout();\n+            List<String> resultList = new ArrayList<String>();\n+            for (Object object : objects) {\n+                LoggingEvent logEvt = (LoggingEvent) object;\n+                if (logEvt != null) {\n+                    String result = layout.format(logEvt);\n+                    if (result != null) {\n+                        if (!ignoreCase) {\n+                            if (result.indexOf(keyword) > -1) {\n+                                resultList.add(StringEscapeUtils.escapeHtml(result));\n+                            }\n+                        } else {\n+                            if (keyword != null &&\n+                                result.toLowerCase().indexOf(keyword.toLowerCase()) > -1) {\n+                                resultList.add(StringEscapeUtils.escapeHtml(result));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            if (resultList.isEmpty()) {\n+                return new String[]{\n+                        \"--- No trace entries found for \" +\n+                        \"the  \" + keyword + \" ---\"\n+                };\n+            }\n+            return resultList.toArray(new String[resultList.size()]);\n+        } else {\n+            return new String[]{\"The trace log must be configured to use the \" +\n+                                \"org.wso2.carbon.logging.appenders.MemoryAppender to view entries through the \" +\n+                                \"admin console\"};\n+        }\n+\n+    }\n+\n+    public String[] getLogs() {\n+        int DEFAULT_NO_OF_LOGS = 100;\n+        int definedamount;\n+        Appender appender\n+                = Logger.getRootLogger().getAppender(\"LOG_MEMORYAPPENDER\");\n+        if (appender instanceof MemoryAppender) {\n+            MemoryAppender memoryAppender = (MemoryAppender) appender;\n+            if ((memoryAppender.getCircularQueue() != null)) {\n+                definedamount = memoryAppender.getBufferSize();\n+            } else {\n+                return new String[]{\n+                        \"--- No log entries found. \" +\n+                        \"You may try increasing the log level ---\"\n+                };\n+            }\n+            if ((memoryAppender.getCircularQueue().getObjects(definedamount) == null) ||\n+                (memoryAppender.getCircularQueue().getObjects(definedamount).length == 0)) {\n+                return new String[]{\n+                        \"--- No log entries found. \" +\n+                        \"You may try increasing the log level ---\"\n+                };\n+            }\n+            Object[] objects;\n+            if (definedamount < 1) {\n+                objects = memoryAppender.getCircularQueue().getObjects(DEFAULT_NO_OF_LOGS);\n+            } else {\n+                objects = memoryAppender.getCircularQueue().getObjects(definedamount);\n+            }\n+            String[] resp = new String[objects.length];\n+            Layout layout = memoryAppender.getLayout();\n+            for (int i = 0; i < objects.length; i++) {\n+                LoggingEvent logEvt = (LoggingEvent) objects[i];\n+                if (logEvt != null) {\n+                    resp[i] = StringEscapeUtils.escapeHtml(layout.format(logEvt));\n+                }\n+            }\n+            return resp;\n+        } else {\n+            return new String[]{\"The log must be configured to use the \" +\n+                                \"org.wso2.carbon.logging.appenders.MemoryAppender to view entries on the admin console\"};\n+        }\n+    }\n+\n+    private void handleException(String msg) throws EventTracerAdminServiceException {\n+        log.error(msg);\n+        throw new EventTracerAdminServiceException(msg);\n+    }\n+}"
        },
        {
            "sha": "2c83833f339e9605dd61ffa27271ee5417e3793f",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/src/main/java/org/wso2/carbon/event/tracer/EventTracerAdminServiceException.java",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminServiceException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminServiceException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Ftracer%2FEventTracerAdminServiceException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,35 @@\n+/*\r\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n+*\r\n+*  WSO2 Inc. licenses this file to you under the Apache License,\r\n+*  Version 2.0 (the \"License\"); you may not use this file except\r\n+*  in compliance with the License.\r\n+*  You may obtain a copy of the License at\r\n+*\r\n+*    http://www.apache.org/licenses/LICENSE-2.0\r\n+*\r\n+* Unless required by applicable law or agreed to in writing,\r\n+* software distributed under the License is distributed on an\r\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+* KIND, either express or implied.  See the License for the\r\n+* specific language governing permissions and limitations\r\n+* under the License.\r\n+*/\r\n+package org.wso2.carbon.event.tracer;\r\n+\r\n+/**\r\n+ *\r\n+ */\r\n+public class EventTracerAdminServiceException extends Exception {\r\n+\r\n+    public EventTracerAdminServiceException() {\r\n+    }\r\n+\r\n+    public EventTracerAdminServiceException(String message) {\r\n+        super(message);\r\n+    }\r\n+\r\n+    public EventTracerAdminServiceException(String message, Throwable e) {\r\n+        super(message, e);\r\n+    }\r\n+}\r"
        },
        {
            "sha": "0ff43f4e4a0b1f6b3d7695a5029c9ad0923a0db7",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,27 @@\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<component xmlns=\"http://products.wso2.org/carbon\">\n+\n+    <ManagementPermissions>\n+        <ManagementPermission>\n+            <DisplayName>Event Monitor</DisplayName>\n+            <ResourceId>/permission/admin/monitor/event-streams</ResourceId>\n+        </ManagementPermission>\n+    </ManagementPermissions>\n+\n+</component>"
        },
        {
            "sha": "297401b7f18ee21e7fba1acdd1dc0e0d4bcf400b",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/src/main/resources/META-INF/services.xml",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<serviceGroup>\n+    <service name=\"EventTracerAdminService\">\n+        <description>\n+            Admin service to provide details of Trace messages.\n+        </description>\n+        <parameter name=\"ServiceClass\" locked=\"false\">org.wso2.carbon.event.tracer.EventTracerAdminService</parameter>\n+        <transports>\n+            <transport>https</transport>\n+        </transports>\n+    </service>\n+    <parameter name=\"adminService\" locked=\"true\">true</parameter>\n+    <parameter name=\"hiddenService\" locked=\"true\">true</parameter>\n+    <parameter name=\"superTenantService\" locked=\"true\">true</parameter>\n+    <parameter name=\"AuthorizationAction\" locked=\"true\">/permission/admin/monitor/event-streams</parameter>\n+</serviceGroup>"
        },
        {
            "sha": "f055734c0d47a925e64ce83c367aea433c61fde0",
            "filename": "components/event-monitor/event-tracer/org.wso2.carbon.event.tracer/src/test/resources/log4j.properties",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Ftest%2Fresources%2Flog4j.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Ftest%2Fresources%2Flog4j.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Forg.wso2.carbon.event.tracer%2Fsrc%2Ftest%2Fresources%2Flog4j.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,35 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+\n+# The event trace logger dumps enough information @INFO level, but maybe pushed upto TRACE.\n+# Writes only run-time/event processing time tracing/debug messages for event passing through trace\n+# enabled transport adapters event formatters, builders and processors. Enabling event tracing on these has a performance impact\n+log4j.category.EVENT_TRACE_LOGGER=INFO, EVENT_TRACE_APPENDER, EVENT_TRACE_MEMORYAPPENDER\n+log4j.additivity.EVENT_TRACE_LOGGER=false\n+log4j.appender.EVENT_TRACE_APPENDER=org.apache.log4j.DailyRollingFileAppender\n+log4j.appender.EVENT_TRACE_APPENDER.File=${carbon.home}/repository/logs/${instance.log}/wso2-cep-trace${instance.log}.log\n+log4j.appender.EVENT_TRACE_APPENDER.Append=true\n+log4j.appender.EVENT_TRACE_APPENDER.layout=org.apache.log4j.PatternLayout\n+log4j.appender.EVENT_TRACE_APPENDER.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%X{ip}-%X{host}] [%t] %5p %c{1} %m%n\n+\n+# The memory appender for trace logger\n+log4j.appender.EVENT_TRACE_MEMORYAPPENDER=org.wso2.carbon.utils.logging.appenders.MemoryAppender\n+log4j.appender.EVENT_TRACE_MEMORYAPPENDER.bufferSize=2000\n+log4j.appender.EVENT_TRACE_MEMORYAPPENDER.layout=org.apache.log4j.PatternLayout\n+log4j.appender.EVENT_TRACE_MEMORYAPPENDER.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%X{ip}-%X{host}] [%t] %5p %m%n"
        },
        {
            "sha": "03249379b76a825a06ae4d496e412829b84991b5",
            "filename": "components/event-monitor/event-tracer/pom.xml",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fevent-tracer%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fevent-tracer%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-monitor</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>event-tracer</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <packaging>pom</packaging>\n+    <name>WSO2 Carbon - Event Tracer Aggregator Module</name>\n+    <url>http://wso2.org</url>\n+\n+    <modules>\n+        <module>org.wso2.carbon.event.tracer</module>\n+        <module>org.wso2.carbon.event.tracer.ui</module>\n+    </modules>\n+\n+</project>"
        },
        {
            "sha": "e0f24969c4936a79a12f583715f583a28ef1f1a9",
            "filename": "components/event-monitor/pom.xml",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-monitor%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-monitor%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>carbon-analytics-common</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>event-monitor</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <packaging>pom</packaging>\n+\n+    <name>WSO2 Carbon - Event Monitor Aggregator Module</name>\n+    <description>This is a Carbon bundle that represent all the event monitor modules.</description>\n+    <url>http://wso2.org</url>\n+\n+    <modules>\n+        <module>event-statistics</module>\n+        <module>event-tracer</module>\n+    </modules>\n+\n+    \n+</project>\n+\n+"
        },
        {
            "sha": "50e2cd6909203458225e7e953d92a1c5ef142578",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/pom.xml",
            "status": "added",
            "additions": 112,
            "deletions": 0,
            "changes": 112,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,112 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.cassandra</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Cassandra Adaptor Module</name>\n+    <description>org.wso2.carbon.event.output.adaptor.cassandra provides the back-end\n+        functionality to write to Cassandra database\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hectorclient.wso2</groupId>\n+            <artifactId>hector-core</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.cassandra.internal,\n+                            org.wso2.carbon.event.output.adapter.cassandra.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.output.adapter.cassandra.internal,\n+                            org.wso2.carbon.event.output.adapter.cassandra.internal.*,\n+                            org.wso2.carbon.event.output.adapter.cassandra.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "45f6c0f6662a6e78327fb1286db44ff4efcdc788",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/java/org/wso2/carbon/event/output/adapter/cassandra/CassandraEventAdapter.java",
            "status": "added",
            "additions": 340,
            "deletions": 0,
            "changes": 340,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,340 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.cassandra;\n+\n+import me.prettyprint.cassandra.model.BasicColumnDefinition;\n+import me.prettyprint.cassandra.model.BasicColumnFamilyDefinition;\n+import me.prettyprint.cassandra.serializers.StringSerializer;\n+import me.prettyprint.cassandra.service.CassandraHostConfigurator;\n+import me.prettyprint.cassandra.service.ThriftCfDef;\n+import me.prettyprint.cassandra.service.ThriftCluster;\n+import me.prettyprint.hector.api.Cluster;\n+import me.prettyprint.hector.api.Keyspace;\n+import me.prettyprint.hector.api.ddl.ColumnFamilyDefinition;\n+import me.prettyprint.hector.api.ddl.ColumnIndexType;\n+import me.prettyprint.hector.api.ddl.ComparatorType;\n+import me.prettyprint.hector.api.ddl.KeyspaceDefinition;\n+import me.prettyprint.hector.api.factory.HFactory;\n+import me.prettyprint.hector.api.mutation.Mutator;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.cassandra.internal.util.CassandraEventAdapterConstants;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+\n+import java.util.*;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+\n+public class CassandraEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(CassandraEventAdapter.class);\n+    private static ThreadPoolExecutor threadPoolExecutor;\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private ConcurrentHashMap<Integer, ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo>> tenantedCassandraClusterCache = new ConcurrentHashMap<Integer, ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo>>();\n+    private StringSerializer sser = new StringSerializer();\n+    private int tenantId;\n+    private String keySpaceName;\n+    private String columnFamilyName;\n+    private Mutator<String> mutator;\n+    private String uuid;\n+    private EventAdapterInfo eventAdapterInfo;\n+    private MessageInfo messageInfo;\n+\n+\n+    public CassandraEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                                 Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        //ThreadPoolExecutor will be assigned  if it is null\n+        if (threadPoolExecutor == null) {\n+            int minThread;\n+            int maxThread;\n+            long defaultKeepAliveTime;\n+\n+            //If global properties are available those will be assigned else constant values will be assigned\n+            if (globalProperties.get(CassandraEventAdapterConstants.MIN_THREAD_NAME) != null) {\n+                minThread = Integer.parseInt(globalProperties.get(CassandraEventAdapterConstants.MIN_THREAD_NAME));\n+            } else {\n+                minThread = CassandraEventAdapterConstants.MIN_THREAD;\n+            }\n+\n+            if (globalProperties.get(CassandraEventAdapterConstants.MAX_THREAD_NAME) != null) {\n+                maxThread = Integer.parseInt(globalProperties.get(CassandraEventAdapterConstants.MAX_THREAD_NAME));\n+            } else {\n+                maxThread = CassandraEventAdapterConstants.MAX_THREAD;\n+            }\n+\n+            if (globalProperties.get(CassandraEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME) != null) {\n+                defaultKeepAliveTime = Integer.parseInt(globalProperties.get(\n+                        CassandraEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME));\n+            } else {\n+                defaultKeepAliveTime = CassandraEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME;\n+            }\n+\n+            threadPoolExecutor = new ThreadPoolExecutor(minThread, maxThread, defaultKeepAliveTime,\n+                    TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(1000));\n+        }\n+\n+    }\n+\n+    @Override\n+\n+    public void testConnect() {\n+        String cassandraHosts = eventAdapterConfiguration.getStaticProperties().get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_HOSTNAME) + \":\" + eventAdapterConfiguration.getStaticProperties().get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PORT);\n+\n+        Map<String, String> credentials = new HashMap<String, String>();\n+        credentials.put(\"username\", eventAdapterConfiguration.getStaticProperties().get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_USER_NAME));\n+        credentials.put(\"password\", eventAdapterConfiguration.getStaticProperties().get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PASSWORD));\n+\n+\n+        CassandraHostConfigurator hostConfigurator = new CassandraHostConfigurator(cassandraHosts);\n+        hostConfigurator.setRetryDownedHosts(false);\n+        // this.cluster = HFactory.getOrCreateCluster(clusterName, hostConfigurator, credentials);\n+        Cluster cluster = new ThriftCluster(\"test-cluster\", hostConfigurator, credentials);\n+        Set knownPools = cluster.getKnownPoolHosts(true);\n+        if (knownPools == null || knownPools.size() == 0) {\n+            log.error(\"Couldn't connect to Cassandra cluster\");\n+        }\n+    }\n+\n+    @Override\n+    public void connect() {\n+        ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo> cassandraClusterCache = null;\n+        Map<String, String> staticProperties = eventAdapterConfiguration.getStaticProperties();\n+\n+        try{\n+                cassandraClusterCache = tenantedCassandraClusterCache.get(tenantId);\n+                if (null == cassandraClusterCache) {\n+                    cassandraClusterCache = new ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo>();\n+                    if (null != tenantedCassandraClusterCache.putIfAbsent(tenantId, cassandraClusterCache)) {\n+                        cassandraClusterCache = tenantedCassandraClusterCache.get(tenantId);\n+                    }\n+                }\n+\n+                eventAdapterInfo = cassandraClusterCache.get(eventAdapterConfiguration);\n+                if (null == eventAdapterInfo) {\n+\n+\n+                    Map<String, String> credentials = new HashMap<String, String>();\n+                    credentials.put(\"username\", staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_USER_NAME));\n+                    credentials.put(\"password\", staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PASSWORD));\n+\n+                    // cleaning existing cached copies.\n+                    Cluster cluster = HFactory.getCluster(staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_CLUSTER_NAME));\n+                    if (cluster != null) {\n+                        HFactory.shutdownCluster(cluster);\n+                    }\n+\n+                    CassandraHostConfigurator chc = new CassandraHostConfigurator(\n+                            staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_HOSTNAME) + \":\" +\n+                                    staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PORT));\n+                    String clusterName = staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_CLUSTER_NAME);\n+\n+                    cluster = HFactory.createCluster(clusterName, chc, credentials);\n+\n+\n+                    if (cluster.getKnownPoolHosts(true).size() < 1) {\n+                        // not properly connected.\n+                        log.error(\"Cannot connect to the Cassandra cluster: \" + cluster.getName() + \". Please check the configuration.\");\n+                        HFactory.shutdownCluster(cluster);\n+                        return;\n+                    }\n+                    String indexAllColumnsString = staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS);\n+                    boolean indexAllColumns = false;\n+                    if (indexAllColumnsString != null && indexAllColumnsString.equals(\"true\")) {\n+                        indexAllColumns = true;\n+                    }\n+                    eventAdapterInfo = new EventAdapterInfo(cluster, indexAllColumns);\n+                    if (null != cassandraClusterCache.putIfAbsent(eventAdapterConfiguration, eventAdapterInfo)) {\n+                        eventAdapterInfo = cassandraClusterCache.get(eventAdapterConfiguration);\n+                    } else {\n+                        log.info(\"Initiated Cassandra Writer \" + eventAdapterConfiguration.getName());\n+                    }\n+                }\n+\n+                keySpaceName = staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_KEY_SPACE_NAME);\n+                columnFamilyName = staticProperties.get(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_COLUMN_FAMILY_NAME);\n+\n+                messageInfo = eventAdapterInfo.getMessageInfoMap().get(eventAdapterConfiguration);\n+                if (null == messageInfo) {\n+                    Keyspace keyspace = HFactory.createKeyspace(keySpaceName, eventAdapterInfo.getCluster());\n+                    messageInfo = new MessageInfo(keyspace);\n+                    if (null != eventAdapterInfo.getMessageInfoMap().putIfAbsent(eventAdapterConfiguration, messageInfo)) {\n+                        messageInfo = eventAdapterInfo.getMessageInfoMap().get(eventAdapterConfiguration);\n+                    }\n+                }\n+\n+                if (eventAdapterInfo.getCluster().describeKeyspace(keySpaceName) == null) {\n+                    BasicColumnFamilyDefinition columnFamilyDefinition = new BasicColumnFamilyDefinition();\n+                    columnFamilyDefinition.setKeyspaceName(keySpaceName);\n+                    columnFamilyDefinition.setName(columnFamilyName);\n+                    columnFamilyDefinition.setComparatorType(ComparatorType.UTF8TYPE);\n+                    columnFamilyDefinition\n+                            .setDefaultValidationClass(ComparatorType.UTF8TYPE\n+                                    .getClassName());\n+                    columnFamilyDefinition\n+                            .setKeyValidationClass(ComparatorType.UTF8TYPE\n+                                    .getClassName());\n+\n+                    ColumnFamilyDefinition cfDef = new ThriftCfDef(\n+                            columnFamilyDefinition);\n+\n+                    KeyspaceDefinition keyspaceDefinition = HFactory\n+                            .createKeyspaceDefinition(keySpaceName,\n+                                    \"org.apache.cassandra.locator.SimpleStrategy\", 1,\n+                                    Arrays.asList(cfDef));\n+                    eventAdapterInfo.getCluster().addKeyspace(keyspaceDefinition);\n+                    KeyspaceDefinition fromCluster = eventAdapterInfo.getCluster().describeKeyspace(keySpaceName);\n+                    messageInfo.setColumnFamilyDefinition(new BasicColumnFamilyDefinition(fromCluster.getCfDefs().get(0)));\n+                } else {\n+                    KeyspaceDefinition fromCluster = eventAdapterInfo.getCluster().describeKeyspace(keySpaceName);\n+                    for (ColumnFamilyDefinition columnFamilyDefinition : fromCluster.getCfDefs()) {\n+                        if (columnFamilyDefinition.getName().equals(columnFamilyName)) {\n+                            messageInfo.setColumnFamilyDefinition(new BasicColumnFamilyDefinition(columnFamilyDefinition));\n+                            break;\n+                        }\n+                    }\n+                }\n+\n+\n+                mutator = HFactory.createMutator(messageInfo.getKeyspace(), sser);\n+                uuid = UUID.randomUUID().toString();\n+            }catch (Throwable t) {\n+                if (cassandraClusterCache != null) {\n+                    cassandraClusterCache.remove(eventAdapterConfiguration);\n+                }\n+                log.error(\"Cannot connect to Cassandra: \" + t.getMessage(), t);\n+            }\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo> cassandraClusterCache = null;\n+        tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+\n+        if (message instanceof Map) {\n+            try{\n+                for (Map.Entry<String, Object> entry : ((Map<String, Object>) message).entrySet()) {\n+\n+                    if (eventAdapterInfo.isIndexAllColumns() && !messageInfo.getColumnNames().contains(entry.getKey())) {\n+                        BasicColumnFamilyDefinition columnFamilyDefinition = messageInfo.getColumnFamilyDefinition();\n+                        BasicColumnDefinition columnDefinition = new BasicColumnDefinition();\n+                        columnDefinition.setName(StringSerializer.get().toByteBuffer(\n+                                entry.getKey()));\n+                        columnDefinition.setIndexType(ColumnIndexType.KEYS);\n+                        columnDefinition.setIndexName(keySpaceName + \"_\" + columnFamilyName + \"_\" + entry.getKey() + \"_Index\");\n+                        columnDefinition.setValidationClass(ComparatorType.UTF8TYPE\n+                                .getClassName());\n+                        columnFamilyDefinition.addColumnDefinition(columnDefinition);\n+                        eventAdapterInfo.getCluster().updateColumnFamily(new ThriftCfDef(columnFamilyDefinition));\n+                        messageInfo.getColumnNames().add(entry.getKey());\n+                    }\n+                    mutator.insert(uuid, columnFamilyName, HFactory.createStringColumn(entry.getKey(), entry.getValue().toString()));\n+                }\n+\n+                mutator.execute();\n+            } catch (Throwable t) {\n+                if (cassandraClusterCache != null) {\n+                    cassandraClusterCache.remove(eventAdapterConfiguration);\n+                }\n+                log.error(\"Cannot publish message to Cassandra: \" + t.getMessage(), t);\n+            }\n+        }\n+\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //close producer\n+        ConcurrentHashMap<OutputEventAdapterConfiguration, EventAdapterInfo> cassandraClusterCache = tenantedCassandraClusterCache.get(tenantId);\n+        if (cassandraClusterCache != null) {\n+            cassandraClusterCache.remove(eventAdapterConfiguration);\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+\n+\n+    class MessageInfo {\n+        private Keyspace keyspace;\n+        private BasicColumnFamilyDefinition columnFamilyDefinition;\n+        private List<String> columnNames = new ArrayList<String>();\n+\n+\n+        MessageInfo(Keyspace keyspace) {\n+            this.keyspace = keyspace;\n+        }\n+\n+        public Keyspace getKeyspace() {\n+            return keyspace;\n+        }\n+\n+        public BasicColumnFamilyDefinition getColumnFamilyDefinition() {\n+            return columnFamilyDefinition;\n+        }\n+\n+        public void setColumnFamilyDefinition(\n+                BasicColumnFamilyDefinition columnFamilyDefinition) {\n+            this.columnFamilyDefinition = columnFamilyDefinition;\n+        }\n+\n+        public List<String> getColumnNames() {\n+            return columnNames;\n+        }\n+    }\n+\n+    class EventAdapterInfo {\n+        private Cluster cluster;\n+        private boolean indexAllColumns;\n+        private ConcurrentHashMap<OutputEventAdapterConfiguration, MessageInfo> messageInfoMap = new ConcurrentHashMap<OutputEventAdapterConfiguration, MessageInfo>();\n+\n+        EventAdapterInfo(Cluster cluster, boolean indexAllColumns) {\n+            this.cluster = cluster;\n+            this.indexAllColumns = indexAllColumns;\n+        }\n+\n+        public Cluster getCluster() {\n+            return cluster;\n+        }\n+\n+        public ConcurrentHashMap<OutputEventAdapterConfiguration, MessageInfo> getMessageInfoMap() {\n+            return messageInfoMap;\n+        }\n+\n+        public boolean isIndexAllColumns() {\n+            return indexAllColumns;\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "166070262e1b47f378434e2ee93e5cd0c7bd099c",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/java/org/wso2/carbon/event/output/adapter/cassandra/CassandraEventAdapterFactory.java",
            "status": "added",
            "additions": 124,
            "deletions": 0,
            "changes": 124,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2FCassandraEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,124 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.cassandra;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.cassandra.internal.util.CassandraEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class CassandraEventAdapterFactory extends OutputEventAdapterFactory {\n+    private static final Log log = LogFactory.getLog(CassandraEventAdapterFactory.class);\n+\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.cassandra.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return CassandraEventAdapterConstants.ADAPTER_TYPE_CASSANDRA;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.MAP);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> propertyList = new ArrayList<Property>();\n+\n+\n+        // set cluster name\n+        Property clusterName = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_CLUSTER_NAME);\n+        clusterName.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_CLUSTER_NAME));\n+        clusterName.setRequired(true);\n+        clusterName.setHint(resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_CLUSTER_NAME_HINT));\n+        propertyList.add(clusterName);\n+\n+        // set user name\n+        Property userName = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_USER_NAME);\n+        userName.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_USER_NAME));\n+        userName.setRequired(true);\n+        propertyList.add(userName);\n+\n+        // set password\n+        Property password = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PASSWORD);\n+        password.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PASSWORD));\n+        password.setRequired(true);\n+        password.setSecured(true);\n+        propertyList.add(password);\n+\n+        // set host name\n+        Property hostName = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_HOSTNAME);\n+        hostName.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_HOSTNAME));\n+        hostName.setRequired(true);\n+        propertyList.add(hostName);\n+\n+        // set index all columns\n+        Property indexAllColumns = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS);\n+        indexAllColumns.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS));\n+        indexAllColumns.setOptions(new String[]{\"true\", \"false\"});\n+        indexAllColumns.setDefaultValue(\"false\");\n+        indexAllColumns.setHint(resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS_HINT));\n+        propertyList.add(indexAllColumns);\n+\n+        // set port\n+        Property port = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PORT);\n+        port.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_PORT));\n+        port.setRequired(true);\n+        propertyList.add(port);\n+\n+        // key space\n+        Property keySpace = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_KEY_SPACE_NAME);\n+        keySpace.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_KEY_SPACE_NAME));\n+        keySpace.setRequired(true);\n+        propertyList.add(keySpace);\n+\n+        // column family\n+        Property columnFamily = new Property(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_COLUMN_FAMILY_NAME);\n+        columnFamily.setDisplayName(\n+                resourceBundle.getString(CassandraEventAdapterConstants.ADAPTER_CASSANDRA_COLUMN_FAMILY_NAME));\n+        columnFamily.setRequired(true);\n+        propertyList.add(columnFamily);\n+\n+        return propertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        return new CassandraEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "8a82b2ea027d76e49039a4eabb8d434ac5f6bfd8",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/java/org/wso2/carbon/event/output/adapter/cassandra/internal/ds/CassandraEventAdapterServiceDS.java",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,50 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.cassandra.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.cassandra.CassandraEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Cassandra.AdapterService.component\" immediate=\"true\"\n+ */\n+public class CassandraEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(CassandraEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the cassandra service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+        try {\n+            CassandraEventAdapterFactory cassandraEventAdapterFactory = new CassandraEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), cassandraEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output cassandra event adaptor service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output cassandra event adaptor service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "c156421f242de214080e2a2e138b0e46c662afa0",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/java/org/wso2/carbon/event/output/adapter/cassandra/internal/ds/CassandraEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Fds%2FCassandraEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.cassandra.internal.ds;\n+\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * common place to hold some OSGI bundle references.\n+ */\n+public final class CassandraEventAdapterServiceValueHolder {\n+\n+    private static ConfigurationContextService configurationContextService;\n+\n+    private CassandraEventAdapterServiceValueHolder() {\n+    }\n+\n+    public static void registerConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        CassandraEventAdapterServiceValueHolder.configurationContextService = configurationContextService;\n+    }\n+\n+    public static ConfigurationContextService getConfigurationContextService() {\n+        return CassandraEventAdapterServiceValueHolder.configurationContextService;\n+    }\n+\n+}"
        },
        {
            "sha": "24c41a30de937156d509ca52af278a14d4431669",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/java/org/wso2/carbon/event/output/adapter/cassandra/internal/util/CassandraEventAdapterConstants.java",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Futil%2FCassandraEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Futil%2FCassandraEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Finternal%2Futil%2FCassandraEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,54 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.cassandra.internal.util;\n+\n+public class CassandraEventAdapterConstants {\n+\n+    private CassandraEventAdapterConstants() {\n+    }\n+\n+    public static final String MIN_THREAD_NAME = \"minThread\";\n+    public static final String MAX_THREAD_NAME = \"maxThread\";\n+    public static final String DEFAULT_KEEP_ALIVE_TIME_NAME = \"defaultKeepAliveTime\";\n+    public static final int MIN_THREAD = 8;\n+    public static final int MAX_THREAD = 100;\n+    public static final long DEFAULT_KEEP_ALIVE_TIME = 20;\n+\n+\n+    public static final String ADAPTER_CASSANDRA_USER_NAME = \"user.name\";\n+\n+    public static final String ADAPTER_CASSANDRA_PASSWORD = \"password\";\n+\n+    public static final String ADAPTER_CASSANDRA_CLUSTER_NAME = \"cluster.name\";\n+    public static final String ADAPTER_CASSANDRA_CLUSTER_NAME_HINT = \"cluster.name.hint\";\n+\n+    public static final String ADAPTER_CASSANDRA_HOSTNAME = \"hostname\";\n+\n+    public static final String ADAPTER_CASSANDRA_PORT = \"port\";\n+\n+    public static final String ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS = \"index.all.columns\";\n+    public static final String ADAPTER_CASSANDRA_INDEX_ALL_COLUMNS_HINT = \"index.all.columns.hint\";\n+\n+    public static final String ADAPTER_TYPE_CASSANDRA = \"cassandra\";\n+\n+    public static final String ADAPTER_CASSANDRA_KEY_SPACE_NAME = \"key.space.name\";\n+\n+    public static final String ADAPTER_CASSANDRA_COLUMN_FAMILY_NAME = \"column.family.name\";\n+\n+\n+}"
        },
        {
            "sha": "948df35bfcb88433e1d473349a4dc17aad5ced02",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.cassandra/src/main/resources/org/wso2/carbon/event/output/adapter/cassandra/i18n/Resources.properties",
            "status": "added",
            "additions": 28,
            "deletions": 0,
            "changes": 28,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.cassandra%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcassandra%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,28 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+user.name=User Name\n+password=Password\n+cluster.name=Cluster Name\n+cluster.name.hint=Name of the Cassandra cluster\n+hostname=Host Name\n+port=Port\n+index.all.columns= Index All Columns\n+index.all.columns.hint= Index of type \"KEYS\" with name \"{keyspaceName}_{columnFamilyName}_{columnName}_Index\" will be applied to all columns\n+key.space.name=Keyspace Name\n+column.family.name=Column Family Name\n\\ No newline at end of file"
        },
        {
            "sha": "c965adf78748e3572e56e355acb124f71fefcb28",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/pom.xml",
            "status": "added",
            "additions": 94,
            "deletions": 0,
            "changes": 94,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,94 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.email</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Email adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.email provides the back-end functionality of email event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.axis2.transport</groupId>\n+            <artifactId>axis2-transport-mail</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.email.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.email.internal.*,\n+                            org.wso2.carbon.event.output.adapter.email.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "6ab02a85627adb5a9d5f0b0c0921ce3076fcbe96",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/java/org/wso2/carbon/event/output/adapter/email/EmailEventAdapter.java",
            "status": "added",
            "additions": 181,
            "deletions": 0,
            "changes": 181,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,181 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.email;\n+\n+import org.apache.axiom.om.OMAbstractFactory;\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.Constants;\n+import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.axis2.context.MessageContext;\n+import org.apache.axis2.transport.base.BaseConstants;\n+import org.apache.axis2.transport.mail.MailConstants;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.email.internal.util.EmailEventAdapterConstants;\n+import org.wso2.carbon.event.output.adapter.email.internal.ds.EmailEventAdapterServiceValueHolder;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class EmailEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(EmailEventAdapter.class);\n+    private static ThreadPoolExecutor threadPoolExecutor;\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    public EmailEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                             Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        //ThreadPoolExecutor will be assigned  if it is null\n+        if (threadPoolExecutor == null) {\n+            int minThread;\n+            int maxThread;\n+            long defaultKeepAliveTime;\n+\n+            //If global properties are available those will be assigned else constant values will be assigned\n+            if (globalProperties.get(EmailEventAdapterConstants.MIN_THREAD_NAME) != null) {\n+                minThread = Integer.parseInt(globalProperties.get(EmailEventAdapterConstants.MIN_THREAD_NAME));\n+            } else {\n+                minThread = EmailEventAdapterConstants.MIN_THREAD;\n+            }\n+\n+            if (globalProperties.get(EmailEventAdapterConstants.MAX_THREAD_NAME) != null) {\n+                maxThread = Integer.parseInt(globalProperties.get(EmailEventAdapterConstants.MAX_THREAD_NAME));\n+            } else {\n+                maxThread = EmailEventAdapterConstants.MAX_THREAD;\n+            }\n+\n+            if (globalProperties.get(EmailEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME) != null) {\n+                defaultKeepAliveTime = Integer.parseInt(globalProperties.get(\n+                        EmailEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME));\n+            } else {\n+                defaultKeepAliveTime = EmailEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME;\n+            }\n+\n+            threadPoolExecutor = new ThreadPoolExecutor(minThread, maxThread, defaultKeepAliveTime,\n+                    TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(1000));\n+        }\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        //Get subject and emailIds from dynamic properties\n+        String subject = dynamicProperties.get(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_SUBJECT);\n+        String[] emailIds = dynamicProperties.get(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_ADDRESS)\n+                .replaceAll(\" \", \"\").split(EmailEventAdapterConstants.EMAIL_SEPARATOR);\n+\n+        //Send email for each emailId\n+        for (String email : emailIds) {\n+            threadPoolExecutor.submit(new EmailSender(email, subject, message.toString()));\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+\n+    class EmailSender implements Runnable {\n+        String to;\n+        String subject;\n+        String body;\n+\n+        EmailSender(String to, String subject, String body) {\n+            this.to = to;\n+            this.subject = subject;\n+            this.body = body;\n+        }\n+\n+        @Override\n+        public void run() {\n+            Map<String, String> headerMap = new HashMap<String, String>();\n+            headerMap.put(MailConstants.MAIL_HEADER_SUBJECT, subject);\n+            OMElement payload = OMAbstractFactory.getOMFactory().createOMElement(\n+                    BaseConstants.DEFAULT_TEXT_WRAPPER, null);\n+            payload.setText(body);\n+\n+            try {\n+                ServiceClient serviceClient;\n+                ConfigurationContext configContext = EmailEventAdapterServiceValueHolder\n+                        .getConfigurationContextService().getClientConfigContext();\n+\n+                //Set configuration service client if available, else create new service client\n+                if (configContext != null) {\n+                    serviceClient = new ServiceClient(configContext, null);\n+                } else {\n+                    serviceClient = new ServiceClient();\n+                }\n+                Options options = new Options();\n+                options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);\n+                options.setProperty(MessageContext.TRANSPORT_HEADERS, headerMap);\n+                options.setProperty(MailConstants.TRANSPORT_MAIL_FORMAT,\n+                        MailConstants.TRANSPORT_FORMAT_TEXT);\n+                options.setTo(new EndpointReference(EmailEventAdapterConstants.EMAIL_URI_SCHEME + to));\n+\n+                serviceClient.setOptions(options);\n+                serviceClient.fireAndForget(payload);\n+                log.debug(\"Sending confirmation mail to \" + to);\n+            } catch (AxisFault e) {\n+                String msg = \"Error in delivering the message, \" +\n+                        \"subject: \" + subject + \", to: \" + to + \".\";\n+                log.error(msg);\n+            } catch (Throwable t) {\n+                String msg = \"Error in delivering the message, \" +\n+                        \"subject: \" + subject + \", to: \" + to + \".\";\n+                log.error(msg);\n+                log.error(t);\n+            }\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "c54d34a3e420bc9ae078b15758b1f2d2af990ec6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/java/org/wso2/carbon/event/output/adapter/email/EmailEventAdapterFactory.java",
            "status": "added",
            "additions": 77,
            "deletions": 0,
            "changes": 77,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2FEmailEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,77 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.email;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.email.internal.util.EmailEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class EmailEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.email.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return EmailEventAdapterConstants.ADAPTER_TYPE_EMAIL;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        // set email address\n+        Property emailAddress = new Property(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_ADDRESS);\n+        emailAddress.setDisplayName(\n+                resourceBundle.getString(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_ADDRESS));\n+        emailAddress.setRequired(true);\n+\n+\n+        // set email subject\n+        Property subject = new Property(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_SUBJECT);\n+        subject.setDisplayName(\n+                resourceBundle.getString(EmailEventAdapterConstants.ADAPTER_MESSAGE_EMAIL_SUBJECT));\n+        subject.setRequired(true);\n+\n+        dynamicPropertyList.add(emailAddress);\n+        dynamicPropertyList.add(subject);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        return new EmailEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+}"
        },
        {
            "sha": "ec0ebf492de20ef781512958816fdbc2bf470f5c",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/java/org/wso2/carbon/event/output/adapter/email/internal/ds/EmailEventAdapterServiceDS.java",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,67 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.email.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.email.EmailEventAdapterFactory;\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * @scr.component component.name=\"output.Email.AdapterService.component\" immediate=\"true\"\n+ * @scr.reference name=\"configurationcontext.service\"\n+ * interface=\"org.wso2.carbon.utils.ConfigurationContextService\" cardinality=\"1..1\"\n+ * policy=\"dynamic\" bind=\"setConfigurationContextService\" unbind=\"unsetConfigurationContextService\"\n+ */\n+public class EmailEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(EmailEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the email service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory emailEventAdaptorFactory = new EmailEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(),\n+                    emailEventAdaptorFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output Email event adaptor service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output Email event adaptor service \", e);\n+        }\n+    }\n+\n+    protected void setConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        EmailEventAdapterServiceValueHolder.registerConfigurationContextService(configurationContextService);\n+    }\n+\n+    protected void unsetConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+\n+    }\n+\n+\n+}"
        },
        {
            "sha": "d4393bbf181b19202fb14021bfe9f1b15d947be2",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/java/org/wso2/carbon/event/output/adapter/email/internal/ds/EmailEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Fds%2FEmailEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.email.internal.ds;\n+\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * common place to hold some OSGI bundle references.\n+ */\n+public final class EmailEventAdapterServiceValueHolder {\n+\n+    private static ConfigurationContextService configurationContextService;\n+\n+    private EmailEventAdapterServiceValueHolder() {\n+    }\n+\n+    public static void registerConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        EmailEventAdapterServiceValueHolder.configurationContextService = configurationContextService;\n+    }\n+\n+    public static ConfigurationContextService getConfigurationContextService() {\n+        return EmailEventAdapterServiceValueHolder.configurationContextService;\n+    }\n+\n+}"
        },
        {
            "sha": "5e60c325635911abcfd005b43fd0faff639b812b",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/java/org/wso2/carbon/event/output/adapter/email/internal/util/EmailEventAdapterConstants.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Futil%2FEmailEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Futil%2FEmailEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Finternal%2Futil%2FEmailEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.email.internal.util;\n+\n+public class EmailEventAdapterConstants {\n+\n+    private EmailEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_EMAIL = \"email\";\n+    public static final String ADAPTER_MESSAGE_EMAIL_ADDRESS = \"email.address\";\n+    public static final String ADAPTER_MESSAGE_EMAIL_SUBJECT = \"email.subject\";\n+    public static final String MIN_THREAD_NAME = \"minThread\";\n+    public static final String MAX_THREAD_NAME = \"maxThread\";\n+    public static final String DEFAULT_KEEP_ALIVE_TIME_NAME = \"defaultKeepAliveTime\";\n+    public static final String EMAIL_SEPARATOR =  \",\";\n+    public static final String EMAIL_URI_SCHEME =\"mailto:\";\n+    public static final int MIN_THREAD = 8;\n+    public static final int MAX_THREAD = 100;\n+    public static final long DEFAULT_KEEP_ALIVE_TIME = 20;\n+\n+\n+\n+\n+}"
        },
        {
            "sha": "a2c0860ff014fb50912299d83ed0f5a4cb1aeaf2",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.email/src/main/resources/org/wso2/carbon/event/output/adapter/email/i18n/Resources.properties",
            "status": "added",
            "additions": 21,
            "deletions": 0,
            "changes": 21,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.email%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Femail%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,21 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+email.address=Email Address\n+email.subject=Subject\n+"
        },
        {
            "sha": "b7a656bcd1afe836ce45ca5c0bb0f6c31f72c543",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/pom.xml",
            "status": "added",
            "additions": 100,
            "deletions": 0,
            "changes": 100,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+~ use this file except in compliance with the License. You may obtain a copy\n+~ of the License at\n+~\n+~ http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software distributed\n+~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.http</artifactId>\n+\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output HTTP adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.http provides the back-end functionality of http event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.axis2.transport</groupId>\n+            <artifactId>axis2-transport-mail</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.httpcomponents.wso2</groupId>\n+            <artifactId>httpclient</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.http.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.http.internal.*,\n+                            org.wso2.carbon.event.output.adapter.http.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "f12a868b32081692bf80889d4f07219ffe944184",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/src/main/java/org/wso2/carbon/event/output/adapter/http/HTTPEventAdapter.java",
            "status": "added",
            "additions": 265,
            "deletions": 0,
            "changes": 265,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,265 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.http;\n+\n+import org.apache.axiom.om.util.Base64;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpHost;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.SystemDefaultHttpClient;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.http.internal.util.HTTPEventAdapterConstants;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.conn.params.ConnRoutePNames;\n+\n+import java.net.UnknownHostException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class HTTPEventAdapter implements OutputEventAdapter {\n+    private static final Log log = LogFactory.getLog(OutputEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private ExecutorService executorService;\n+    private HttpClient httpClient;\n+\n+    public HTTPEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        //ExecutorService will be assigned  if it is null\n+        if (this.executorService == null) {\n+            int minThread;\n+            int maxThread;\n+            long defaultKeepAliveTime;\n+            int jobQueSize;\n+\n+            //If global properties are available those will be assigned else constant values will be assigned\n+            if (globalProperties.get(HTTPEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE_NAME) != null) {\n+                minThread = Integer.parseInt(globalProperties.get(\n+                        HTTPEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE_NAME));\n+            } else {\n+                minThread = HTTPEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE;\n+            }\n+\n+            if (globalProperties.get(HTTPEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE_NAME) != null) {\n+                maxThread = Integer.parseInt(globalProperties.get(\n+                        HTTPEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE_NAME));\n+            } else {\n+                maxThread = HTTPEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE;\n+            }\n+\n+            if (globalProperties.get(HTTPEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME) != null) {\n+                defaultKeepAliveTime = Integer.parseInt(globalProperties.get(\n+                        HTTPEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME));\n+            } else {\n+                defaultKeepAliveTime = HTTPEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME;\n+            }\n+\n+            if (globalProperties.get(HTTPEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME) != null) {\n+                jobQueSize = Integer.parseInt(globalProperties.get(\n+                        HTTPEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME));\n+            } else {\n+                jobQueSize = HTTPEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE;\n+            }\n+\n+            this.executorService = new ThreadPoolExecutor(minThread, maxThread, defaultKeepAliveTime, TimeUnit.SECONDS,\n+                    new LinkedBlockingQueue<Runnable>(jobQueSize));\n+        }\n+\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        //Load dynamic properties\n+        this.checkHTTPClientInit(dynamicProperties);\n+        String url = dynamicProperties.get(HTTPEventAdapterConstants.ADAPTER_MESSAGE_URL);\n+        String username = dynamicProperties.get(HTTPEventAdapterConstants.ADAPTER_USERNAME);\n+        String password = dynamicProperties.get(HTTPEventAdapterConstants.ADAPTER_PASSWORD);\n+        Map<String, String> headers = this.extractHeaders(dynamicProperties.get(\n+                HTTPEventAdapterConstants.ADAPTER_HEADERS));\n+        String payload = message.toString();\n+\n+        this.executorService.submit(new HTTPSender(url, payload, username, password, headers));\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+    private void checkHTTPClientInit(\n+            Map<String, String> dynamicProperties) {\n+        if (this.httpClient != null) {\n+            return;\n+        }\n+        synchronized (HTTPEventAdapter.class) {\n+            if (this.httpClient != null) {\n+                return;\n+            }\n+            /* this needs to be created as late as possible, for the SSL trust store properties\n+             * to be set by Carbon in Java system properties */\n+            this.httpClient = new SystemDefaultHttpClient();\n+            String proxyHost = dynamicProperties.get(HTTPEventAdapterConstants.ADAPTER_PROXY_HOST);\n+            String proxyPort = dynamicProperties.get(HTTPEventAdapterConstants.ADAPTER_PROXY_PORT);\n+            if (proxyHost != null && proxyHost.trim().length() > 0) {\n+                try {\n+                    HttpHost host = new HttpHost(proxyHost, Integer.parseInt(proxyPort));\n+                    this.httpClient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, host);\n+                } catch (NumberFormatException e) {\n+                    log.error(\"Invalid proxy port: \" + proxyPort + \", \"\n+                            + \"ignoring proxy settings for HTTP output event adaptor...\");\n+                }\n+            }\n+        }\n+    }\n+\n+    private Map<String, String> extractHeaders(String headers) {\n+        if (headers == null || headers.trim().length() == 0) {\n+            return null;\n+        }\n+        try {\n+            String[] entries = headers.split(HTTPEventAdapterConstants.HEADER_SEPARATOR);\n+            String[] keyValue;\n+            Map<String, String> result = new HashMap<String, String>();\n+            for (String entry : entries) {\n+                keyValue = entry.split(HTTPEventAdapterConstants.ENTRY_SEPARATOR);\n+                result.put(keyValue[0].trim(), keyValue[1].trim());\n+            }\n+            return result;\n+        } catch (Exception e) {\n+            log.error(\"Invalid headers format: \\\"\" + headers + \"\\\", ignoring HTTP headers...\");\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * This class represents a job to send an HTTP request to a target URL.\n+     */\n+    public class HTTPSender implements Runnable {\n+\n+        private String url;\n+\n+        private String payload;\n+\n+        private String username;\n+\n+        private String password;\n+\n+        private Map<String, String> headers;\n+\n+        public HTTPSender(String url, String payload, String username, String password,\n+                          Map<String, String> headers) {\n+            this.url = url;\n+            this.payload = payload;\n+            this.username = username;\n+            this.password = password;\n+            this.headers = headers;\n+        }\n+\n+        public String getUrl() {\n+            return url;\n+        }\n+\n+        public String getPayload() {\n+            return payload;\n+        }\n+\n+        public String getUsername() {\n+            return username;\n+        }\n+\n+        public String getPassword() {\n+            return password;\n+        }\n+\n+        public Map<String, String> getHeaders() {\n+            return headers;\n+        }\n+\n+        private void processAuthentication(HttpPost method) {\n+            if (this.getUsername() != null && this.getUsername().trim().length() > 0) {\n+                method.setHeader(\"Authorization\", \"Basic \" + Base64.encode(\n+                        (this.getUsername() + HTTPEventAdapterConstants.ENTRY_SEPARATOR\n+                                + this.getPassword()).getBytes()));\n+            }\n+        }\n+\n+        private void processHeaders(HttpPost method) {\n+            if (this.getHeaders() != null) {\n+                for (Map.Entry<String, String> header : this.getHeaders().entrySet()) {\n+                    method.setHeader(header.getKey(), header.getValue());\n+                }\n+            }\n+        }\n+\n+        public void run() {\n+            HttpPost method = new HttpPost(this.getUrl());\n+            StringEntity entity;\n+            try {\n+                entity = new StringEntity(this.getPayload());\n+                method.setEntity(entity);\n+                this.processAuthentication(method);\n+                this.processHeaders(method);\n+                httpClient.execute(method).getEntity().getContent().close();\n+            } catch (UnknownHostException e) {\n+                throw new ConnectionUnavailableException(\"Exception while connecting adapter \"\n+                        + eventAdapterConfiguration.getName() + \" HTTP endpoint to \" + this.getUrl(),\n+                        e);\n+            } catch (Exception e) {\n+                throw new OutputEventAdapterRuntimeException(\"Error executing HTTP output event adapter \"\n+                        + eventAdapterConfiguration.getName() +\" sender: \", e);\n+            }\n+        }\n+\n+    }\n+\n+}"
        },
        {
            "sha": "aacc06a8dd190872fd2c5b87347d0590c8be2449",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/src/main/java/org/wso2/carbon/event/output/adapter/http/HTTPEventAdapterFactory.java",
            "status": "added",
            "additions": 98,
            "deletions": 0,
            "changes": 98,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2FHTTPEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,98 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.http;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.http.internal.util.HTTPEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class HTTPEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.http.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return HTTPEventAdapterConstants.ADAPTER_TYPE_HTTP;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        Property urlProp = new Property(HTTPEventAdapterConstants.ADAPTER_MESSAGE_URL);\n+        urlProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_MESSAGE_URL));\n+        urlProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_MESSAGE_URL_HINT));\n+        urlProp.setRequired(true);\n+\n+        Property usernameProp = new Property(HTTPEventAdapterConstants.ADAPTER_USERNAME);\n+        usernameProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_USERNAME));\n+        usernameProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_USERNAME_HINT));\n+        usernameProp.setRequired(false);\n+\n+        Property passwordProp = new Property(HTTPEventAdapterConstants.ADAPTER_PASSWORD);\n+        passwordProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PASSWORD));\n+        passwordProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PASSWORD_HINT));\n+        passwordProp.setRequired(false);\n+        passwordProp.setSecured(true);\n+\n+        Property headersProp = new Property(HTTPEventAdapterConstants.ADAPTER_HEADERS);\n+        headersProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_HEADERS));\n+        headersProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_HEADERS_HINT));\n+        headersProp.setRequired(false);\n+\n+        Property proxyHostProp = new Property(HTTPEventAdapterConstants.ADAPTER_PROXY_HOST);\n+        proxyHostProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PROXY_HOST));\n+        proxyHostProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PROXY_HOST_HINT));\n+        proxyHostProp.setRequired(false);\n+\n+        Property proxyPortProp = new Property(HTTPEventAdapterConstants.ADAPTER_PROXY_PORT);\n+        proxyPortProp.setDisplayName(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PROXY_PORT));\n+        proxyPortProp.setHint(resourceBundle.getString(HTTPEventAdapterConstants.ADAPTER_PROXY_PORT_HINT));\n+        proxyPortProp.setRequired(false);\n+\n+        dynamicPropertyList.add(urlProp);\n+        dynamicPropertyList.add(usernameProp);\n+        dynamicPropertyList.add(passwordProp);\n+        dynamicPropertyList.add(headersProp);\n+        dynamicPropertyList.add(proxyHostProp);\n+        dynamicPropertyList.add(proxyPortProp);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                                                 Map<String, String> globalProperties) {\n+        return new HTTPEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+}"
        },
        {
            "sha": "3eb7be86041d4f1c8e97277bd1defae347a84580",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/src/main/java/org/wso2/carbon/event/output/adapter/http/internal/ds/HTTPEventAdapterServiceDS.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Fds%2FHTTPEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Fds%2FHTTPEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Fds%2FHTTPEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,45 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.http.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.http.HTTPEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Http.AdapterService.component\" immediate=\"true\"\n+ */\n+public class HTTPEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(HTTPEventAdapterServiceDS.class);\n+\n+    protected void activate(ComponentContext context) {\n+        try {\n+            HTTPEventAdapterFactory httpEventAdaptorFactory = new HTTPEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(),\n+                    httpEventAdaptorFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output HTTP event adaptor service\");\n+            }\n+        } catch (Throwable e) {\n+            log.error(\"Can not create the output HTTP event adaptor service: \" + e.getMessage(), e);\n+        }\n+    }\n+}"
        },
        {
            "sha": "bd5a47e948b9a378928cfcabdc9ed04267b10849",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/src/main/java/org/wso2/carbon/event/output/adapter/http/internal/util/HTTPEventAdapterConstants.java",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Futil%2FHTTPEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Futil%2FHTTPEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Finternal%2Futil%2FHTTPEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,67 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.http.internal.util;\n+\n+public class HTTPEventAdapterConstants {\n+\n+    public static final String ADAPTER_TYPE_HTTP = \"http\";\n+\n+    public static final String ADAPTER_MESSAGE_URL = \"http.url\";\n+\n+    public static final String ADAPTER_MESSAGE_URL_HINT = \"http.url.hint\";\n+\n+    public static final int ADAPTER_MIN_THREAD_POOL_SIZE = 8;\n+\n+    public static final int ADAPTER_MAX_THREAD_POOL_SIZE = 100;\n+\n+    public static final int ADAPTER_EXECUTOR_JOB_QUEUE_SIZE = 2000;\n+\n+    public static final String ADAPTER_PROXY_HOST = \"http.proxy.host\";\n+\n+    public static final String ADAPTER_PROXY_HOST_HINT = \"http.proxy.host.hint\";\n+\n+    public static final String ADAPTER_PROXY_PORT = \"http.proxy.port\";\n+\n+    public static final String ADAPTER_PROXY_PORT_HINT = \"http.proxy.port.hint\";\n+\n+    public static final String ADAPTER_USERNAME = \"http.username\";\n+\n+    public static final String ADAPTER_USERNAME_HINT = \"http.username.hint\";\n+\n+    public static final String ADAPTER_PASSWORD = \"http.password\";\n+\n+    public static final String ADAPTER_PASSWORD_HINT = \"http.password.hint\";\n+\n+    public static final String ADAPTER_HEADERS = \"http.headers\";\n+\n+    public static final String ADAPTER_HEADERS_HINT = \"http.headers.hint\";\n+\n+    public static final long DEFAULT_KEEP_ALIVE_TIME = 20;\n+\n+    public static final String ADAPTER_MIN_THREAD_POOL_SIZE_NAME = \"minThread\";\n+\n+    public static final String ADAPTER_MAX_THREAD_POOL_SIZE_NAME = \"maxThread\";\n+\n+    public static final String DEFAULT_KEEP_ALIVE_TIME_NAME = \"defaultKeepAliveTime\";\n+\n+    public static final String ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME = \"jobQueueSize\";\n+\n+    public static final String HEADER_SEPARATOR = \",\";\n+\n+    public static final String ENTRY_SEPARATOR = \":\";\n+}"
        },
        {
            "sha": "8725a0eed9abefa1e72546036393f007ac177c70",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.http/src/main/resources/org/wso2/carbon/event/output/adapter/http/i18n/Resources.properties",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.http%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fhttp%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,30 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+http.url=URL\n+http.url.hint=The target HTTP/HTTPS URL, e.g. \"http://yourhost:8080/service\"\n+http.proxy.host=Proxy Host\n+http.proxy.host.hint=The proxy server host\n+http.proxy.port=Proxy Port\n+http.proxy.port.hint=The proxy server port\n+http.username=Username\n+http.username.hint=HTTP BasicAuth username\n+http.password=Password\n+http.password.hint=HTTP BasicAuth password\n+http.headers=Headers\n+http.headers.hint=Custom HTTP headers, e.g. \"header1: value1, header2: value2\"\n\\ No newline at end of file"
        },
        {
            "sha": "4bc6af78e2498a1820e51f759229c1368fcd442a",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/pom.xml",
            "status": "added",
            "additions": 106,
            "deletions": 0,
            "changes": 106,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,106 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+~ use this file except in compliance with the License. You may obtain a copy\n+~ of the License at\n+~\n+~ http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software distributed\n+~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>org.wso2.carbon.event.output.adapter.jms</artifactId>\n+\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output JMS Adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.jms provides the back-end functionality of jms event adaptor\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.geronimo.specs</groupId>\n+            <artifactId>geronimo-jms_1.1_spec</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.jms.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.jms.internal.*,\n+                            org.wso2.carbon.event.output.adapter.jms.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "ec312dd84ebc6f1e67351c82928c5b6e36046620",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/JMSEventAdapter.java",
            "status": "added",
            "additions": 192,
            "deletions": 0,
            "changes": 192,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,192 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.jms.internal.util.*;\n+\n+import javax.jms.Connection;\n+import javax.jms.Message;\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.jms.JMSException;\n+import javax.jms.Session;\n+import java.util.*;\n+\n+public class JMSEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(JMSEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    private PublisherDetails publisherDetails = null;\n+\n+    public JMSEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                           Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+\n+        try {\n+            Hashtable<String, String> adaptorProperties = new Hashtable<String, String>();\n+            adaptorProperties.putAll(eventAdapterConfiguration.getStaticProperties());\n+\n+            JMSConnectionFactory jmsConnectionFactory = new JMSConnectionFactory(adaptorProperties,\n+                    eventAdapterConfiguration.getName());\n+            Connection connection = jmsConnectionFactory.getConnection();\n+            connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n+            connection.close();\n+            jmsConnectionFactory.stop();\n+        } catch (Exception e) {\n+            throw new OutputEventAdapterRuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void connect() {\n+\n+        String topicName = eventAdapterConfiguration.getStaticProperties().get(\n+                JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION);\n+\n+        Map<String, String> messageConfig = new HashMap<String, String>();\n+        messageConfig.put(JMSConstants.PARAM_DESTINATION, topicName);\n+        publisherDetails = initPublisher(eventAdapterConfiguration, messageConfig);\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        Message jmsMessage = publisherDetails.getJmsMessageSender().convertToJMSMessage(message,\n+                publisherDetails.getMessageConfig());\n+        setJMSTransportHeaders(jmsMessage, dynamicProperties.get(JMSEventAdapterConstants.ADAPTER_JMS_HEADER));\n+        publisherDetails.getJmsMessageSender().send(jmsMessage, publisherDetails.getMessageConfig());\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        if (publisherDetails != null) {\n+            publisherDetails.getJmsMessageSender().close();\n+            publisherDetails.getJmsConnectionFactory().stop();\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+    private PublisherDetails initPublisher(\n+            OutputEventAdapterConfiguration outputEventAdaptorConfiguration,\n+            Map<String, String> messageConfig) {\n+\n+        PublisherDetails publisherDetails;\n+        Hashtable<String, String> adaptorProperties =\n+                convertMapToHashTable(outputEventAdaptorConfiguration.getStaticProperties());\n+        JMSConnectionFactory jmsConnectionFactory = new JMSConnectionFactory(adaptorProperties,\n+                outputEventAdaptorConfiguration.getName());\n+        JMSMessageSender jmsMessageSender = new JMSMessageSender(jmsConnectionFactory, messageConfig);\n+        publisherDetails = new PublisherDetails(jmsConnectionFactory, jmsMessageSender, messageConfig);\n+\n+        return publisherDetails;\n+    }\n+\n+    private Message setJMSTransportHeaders(Message message, String headerProperty) {\n+\n+        Map<String, String> messageConfiguration = new HashMap<String, String>();\n+\n+        if (headerProperty != null && message != null) {\n+            String[] headers = headerProperty.split(\",\");\n+\n+            if (headers != null && headers.length > 0) {\n+                for (String header : headers) {\n+                    String[] headerPropertyWithValue = header.split(\":\");\n+                    if (headerPropertyWithValue.length == 2) {\n+                        messageConfiguration.put(headerPropertyWithValue[0], headerPropertyWithValue[1]);\n+                    } else {\n+                        log.warn(\"Header property \\\" \" + header + \" \\\" is not defined in the correct format\");\n+                    }\n+                }\n+            }\n+\n+            try {\n+                return JMSUtils.setTransportHeaders(messageConfiguration, message);\n+            } catch (JMSException e) {\n+                throw new OutputEventAdapterRuntimeException(e);\n+            }\n+        }\n+\n+        return message;\n+    }\n+\n+    class PublisherDetails {\n+        private final JMSConnectionFactory jmsConnectionFactory;\n+        private final JMSMessageSender jmsMessageSender;\n+        private final Map<String, String> messageConfig;\n+\n+        public PublisherDetails(JMSConnectionFactory jmsConnectionFactory,\n+                                JMSMessageSender jmsMessageSender, Map<String, String> messageConfig) {\n+            this.jmsConnectionFactory = jmsConnectionFactory;\n+            this.jmsMessageSender = jmsMessageSender;\n+            this.messageConfig = messageConfig;\n+        }\n+\n+        public JMSConnectionFactory getJmsConnectionFactory() {\n+            return jmsConnectionFactory;\n+        }\n+\n+        public JMSMessageSender getJmsMessageSender() {\n+            return jmsMessageSender;\n+        }\n+\n+        public Map<String, String> getMessageConfig() {\n+            return messageConfig;\n+        }\n+\n+    }\n+\n+    private Hashtable<String, String> convertMapToHashTable(Map<String, String> map) {\n+        Hashtable<String, String> table = new Hashtable();\n+        Iterator it = map.entrySet().iterator();\n+\n+        //Iterate through the hash map\n+        while (it.hasNext()) {\n+            Map.Entry pair = (Map.Entry) it.next();\n+            //null values will be removed\n+            if (pair.getValue() != null) {\n+                table.put(pair.getKey().toString(), pair.getValue().toString());\n+            }\n+        }\n+\n+        return table;\n+    }\n+\n+}"
        },
        {
            "sha": "424ef9a7376e8455c813f24c154ed7721eac4953",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/JMSEventAdapterFactory.java",
            "status": "added",
            "additions": 132,
            "deletions": 0,
            "changes": 132,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2FJMSEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,132 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.jms.internal.util.JMSEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class JMSEventAdapterFactory extends OutputEventAdapterFactory {\n+\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.jms.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return JMSEventAdapterConstants.ADAPTER_TYPE_JMS;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+\n+        // JNDI initial context factory class\n+        Property initialContextProperty = new Property(JMSEventAdapterConstants.JNDI_INITIAL_CONTEXT_FACTORY_CLASS);\n+        initialContextProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.JNDI_INITIAL_CONTEXT_FACTORY_CLASS));\n+        initialContextProperty.setRequired(true);\n+        initialContextProperty.setHint(resourceBundle.getString(\n+                JMSEventAdapterConstants.JNDI_INITIAL_CONTEXT_FACTORY_CLASS_HINT));\n+\n+        // JNDI Provider URL\n+        Property javaNamingProviderUrlProperty = new Property(JMSEventAdapterConstants.JAVA_NAMING_PROVIDER_URL);\n+        javaNamingProviderUrlProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.JAVA_NAMING_PROVIDER_URL));\n+        javaNamingProviderUrlProperty.setRequired(true);\n+        javaNamingProviderUrlProperty.setHint(resourceBundle.getString(\n+                JMSEventAdapterConstants.JAVA_NAMING_PROVIDER_URL_HINT));\n+\n+        // JNDI Username\n+        Property userNameProperty = new Property(JMSEventAdapterConstants.ADAPTER_JMS_USERNAME);\n+        userNameProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_USERNAME));\n+\n+        // JNDI Password\n+        Property passwordProperty = new Property(JMSEventAdapterConstants.ADAPTER_JMS_PASSWORD);\n+        passwordProperty.setSecured(true);\n+        passwordProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_PASSWORD));\n+\n+        // Connection Factory JNDI Name\n+        Property connectionFactoryNameProperty = new Property(\n+                JMSEventAdapterConstants.ADAPTER_JMS_CONNECTION_FACTORY_JNDINAME);\n+        connectionFactoryNameProperty.setRequired(true);\n+        connectionFactoryNameProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_CONNECTION_FACTORY_JNDINAME));\n+        connectionFactoryNameProperty.setHint(resourceBundle.getString(\n+                JMSEventAdapterConstants.ADAPTER_JMS_CONNECTION_FACTORY_JNDINAME_HINT));\n+\n+        // Destination Type\n+        Property destinationTypeProperty = new Property(JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION_TYPE);\n+        destinationTypeProperty.setRequired(true);\n+        destinationTypeProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION_TYPE));\n+        destinationTypeProperty.setOptions(new String[]{\"queue\", \"topic\"});\n+        destinationTypeProperty.setDefaultValue(\"topic\");\n+        destinationTypeProperty.setHint(resourceBundle.getString(\n+                JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION_TYPE_HINT));\n+\n+        // Topic\n+        Property topicProperty = new Property(JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION);\n+        topicProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_DESTINATION));\n+        topicProperty.setRequired(true);\n+\n+        staticPropertyList.add(initialContextProperty);\n+        staticPropertyList.add(javaNamingProviderUrlProperty);\n+        staticPropertyList.add(userNameProperty);\n+        staticPropertyList.add(passwordProperty);\n+        staticPropertyList.add(connectionFactoryNameProperty);\n+        staticPropertyList.add(destinationTypeProperty);\n+        staticPropertyList.add(topicProperty);\n+\n+        return staticPropertyList;\n+\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        // Header\n+        Property headerProperty = new Property(JMSEventAdapterConstants.ADAPTER_JMS_HEADER);\n+        headerProperty.setDisplayName(\n+                resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_HEADER));\n+        headerProperty.setHint(resourceBundle.getString(JMSEventAdapterConstants.ADAPTER_JMS_HEADER_HINT));\n+        dynamicPropertyList.add(headerProperty);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        return new JMSEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "4d9c72ce53d6412d465d5e445fceb686b27ea2f2",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/ds/JMSEventAdapterServiceDS.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Fds%2FJMSEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Fds%2FJMSEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Fds%2FJMSEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.jms.JMSEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Jms.AdapterService.component\" immediate=\"true\"\n+ */\n+public class JMSEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(JMSEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the agent service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory jmsEventAdapterFactory = new JMSEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(),\n+                    jmsEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output jms event adaptor service \");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not deployed the output jms event adaptor service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "61a9882e27222dd8deef67be006e208345e6c762",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/util/JMSConnectionFactory.java",
            "status": "added",
            "additions": 456,
            "deletions": 0,
            "changes": 456,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConnectionFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConnectionFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConnectionFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,456 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.util;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+\n+import javax.jms.*;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import java.util.Hashtable;\n+\n+/**\n+ * Encapsulate a JMS Connection factory definition within an Axis2.xml\n+ * <p/>\n+ * JMS Connection Factory definitions, allows JNDI properties as well as other service\n+ * level parameters to be defined, and re-used by each service that binds to it\n+ * <p/>\n+ * When used for sending messages out, the JMSConnectionFactory'ies are able to cache\n+ * a Connection, Session or Producer\n+ */\n+public class JMSConnectionFactory {\n+\n+    private static final Log log = LogFactory.getLog(JMSConnectionFactory.class);\n+\n+    /**\n+     * The list of parameters from the axis2.xml definition\n+     */\n+    private Hashtable<String, String> parameters = new Hashtable<String, String>();\n+    private String name;\n+\n+    /**\n+     * The cached InitialContext reference\n+     */\n+    private Context context = null;\n+    /**\n+     * The JMS ConnectionFactory this definition refers to\n+     */\n+    private ConnectionFactory conFactory = null;\n+    /**\n+     * The shared JMS Connection for this JMS connection factory\n+     */\n+    private Connection sharedConnection = null;\n+    /**\n+     * The shared JMS Session for this JMS connection factory\n+     */\n+    private Session sharedSession = null;\n+    /**\n+     * The shared JMS MessageProducer for this JMS connection factory\n+     */\n+    private MessageProducer sharedProducer = null;\n+    /**\n+     * The Shared Destination\n+     */\n+    private Destination sharedDestination = null;\n+    /**\n+     * The shared JMS connection for this JMS connection factory\n+     */\n+    private int cacheLevel = JMSConstants.CACHE_CONNECTION;\n+\n+    /**\n+     * Digest a JMS CF definition from an axis2.xml 'Parameter' and construct\n+     *\n+     * @param parameters the axis2.xml 'Parameter' that defined the JMS CF\n+     */\n+    public JMSConnectionFactory(Hashtable<String, String> parameters, String name) {\n+        this.parameters = parameters;\n+        this.name = name;\n+\n+        digestCacheLevel();\n+        try {\n+            context = new InitialContext(parameters);\n+            conFactory = JMSUtils.lookup(context, ConnectionFactory.class,\n+                    parameters.get(JMSConstants.PARAM_CONFAC_JNDI_NAME));\n+            if (parameters.get(JMSConstants.PARAM_DESTINATION) != null) {\n+                sharedDestination = JMSUtils.lookup(context, Destination.class,\n+                        parameters.get(JMSConstants.PARAM_DESTINATION));\n+            }\n+            log.info(\"JMS ConnectionFactory : \" + name + \" initialized\");\n+\n+        } catch (NamingException e) {\n+            throw new OutputEventAdapterRuntimeException(\"Cannot acquire JNDI context, JMS Connection factory : \" +\n+                    parameters.get(JMSConstants.PARAM_CONFAC_JNDI_NAME) +\n+                    \" or default destination : \" +\n+                    parameters.get(JMSConstants.PARAM_DESTINATION) +\n+                    \" for JMS CF : \" + name + \" using : \" + parameters, e);\n+        }\n+    }\n+\n+    /**\n+     * Digest, the cache value iff specified\n+     */\n+    private void digestCacheLevel() {\n+\n+        String key = JMSConstants.PARAM_CACHE_LEVEL;\n+        String val = parameters.get(key);\n+\n+        if (\"none\".equalsIgnoreCase(val)) {\n+            this.cacheLevel = JMSConstants.CACHE_NONE;\n+        } else if (\"connection\".equalsIgnoreCase(val)) {\n+            this.cacheLevel = JMSConstants.CACHE_CONNECTION;\n+        } else if (\"session\".equals(val)) {\n+            this.cacheLevel = JMSConstants.CACHE_SESSION;\n+        } else if (\"producer\".equals(val)) {\n+            this.cacheLevel = JMSConstants.CACHE_PRODUCER;\n+        } else if (val != null) {\n+            throw new OutputEventAdapterRuntimeException(\"Invalid cache level : \" + val + \" for JMS CF : \" + name);\n+        }\n+    }\n+\n+    /**\n+     * Close all connections, sessions etc.. and stop this connection factory\n+     */\n+    public synchronized void stop() {\n+        if (sharedConnection != null) {\n+            try {\n+                sharedConnection.close();\n+            } catch (JMSException e) {\n+                log.warn(\"Error shutting down connection factory : \" + name, e);\n+            }\n+        }\n+\n+        if (context != null) {\n+            try {\n+                context.close();\n+            } catch (NamingException e) {\n+                log.warn(\"Error while closing the InitialContext of factory : \" + name, e);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Return the name assigned to this JMS CF definition\n+     *\n+     * @return name of the JMS CF\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * The list of properties (including JNDI and non-JNDI)\n+     *\n+     * @return properties defined on the JMS CF\n+     */\n+    public Hashtable<String, String> getParameters() {\n+        return parameters;\n+    }\n+\n+    /**\n+     * Get cached InitialContext\n+     *\n+     * @return cache InitialContext\n+     */\n+    public Context getContext() {\n+        return context;\n+    }\n+\n+    /**\n+     * Cache level applicable for this JMS CF\n+     *\n+     * @return applicable cache level\n+     */\n+    public int getCacheLevel() {\n+        return cacheLevel;\n+    }\n+\n+    /**\n+     * Get the shared Destination - if defined\n+     *\n+     * @return\n+     */\n+    public Destination getSharedDestination() {\n+        return sharedDestination;\n+    }\n+\n+    /**\n+     * Lookup a Destination using this JMS CF definitions and JNDI name\n+     *\n+     * @param destinationName JNDI name of the Destionation\n+     * @return JMS Destination for the given JNDI name or null\n+     */\n+    public Destination getDestination(String destinationName) {\n+        try {\n+            return JMSUtils.lookupDestination(context, destinationName, parameters.get(JMSConstants.PARAM_DEST_TYPE));\n+        } catch (NamingException e) {\n+            handleException(\"Error looking up the JMS destination with name \" + destinationName\n+                    + \" of type \" + parameters.get(JMSConstants.PARAM_DEST_TYPE), e);\n+        }\n+\n+        // never executes but keeps the compiler happy\n+        return null;\n+    }\n+\n+    /**\n+     * Get the reply Destination from the PARAM_REPLY_DESTINATION parameter\n+     *\n+     * @return reply destination defined in the JMS CF\n+     */\n+    public String getReplyToDestination() {\n+        return parameters.get(JMSConstants.PARAM_REPLY_DESTINATION);\n+    }\n+\n+    /**\n+     * Get the reply destination type from the PARAM_REPLY_DEST_TYPE parameter\n+     *\n+     * @return reply destination defined in the JMS CF\n+     */\n+    public String getReplyDestinationType() {\n+        return parameters.get(JMSConstants.PARAM_REPLY_DEST_TYPE) != null ?\n+                parameters.get(JMSConstants.PARAM_REPLY_DEST_TYPE) :\n+                JMSConstants.DESTINATION_TYPE_GENERIC;\n+    }\n+\n+    private void handleException(String msg, Exception e) {\n+        log.error(msg, e);\n+        throw new OutputEventAdapterRuntimeException(msg, e);\n+    }\n+\n+    /**\n+     * Should the JMS 1.1 API be used? - defaults to yes\n+     *\n+     * @return true, if JMS 1.1 api should  be used\n+     */\n+    public boolean isJmsSpec11() {\n+        return parameters.get(JMSConstants.PARAM_JMS_SPEC_VER) == null ||\n+                \"1.1\".equals(parameters.get(JMSConstants.PARAM_JMS_SPEC_VER));\n+    }\n+\n+    /**\n+     * Return the type of the JMS CF Destination\n+     *\n+     * @return TRUE if a Queue, FALSE for a Topic and NULL for a JMS 1.1 Generic Destination\n+     */\n+    public Boolean isQueue() {\n+        if (parameters.get(JMSConstants.PARAM_CONFAC_TYPE) == null &&\n+                parameters.get(JMSConstants.PARAM_DEST_TYPE) == null) {\n+            return null;\n+        }\n+\n+        if (parameters.get(JMSConstants.PARAM_CONFAC_TYPE) != null) {\n+            if (\"queue\".equalsIgnoreCase(parameters.get(JMSConstants.PARAM_CONFAC_TYPE))) {\n+                return true;\n+            } else if (\"topic\".equalsIgnoreCase(parameters.get(JMSConstants.PARAM_CONFAC_TYPE))) {\n+                return false;\n+            } else {\n+                throw new OutputEventAdapterRuntimeException(\"Invalid \" + JMSConstants.PARAM_CONFAC_TYPE + \" : \" +\n+                        parameters.get(JMSConstants.PARAM_CONFAC_TYPE) + \" for JMS CF : \" + name);\n+            }\n+        } else {\n+            if (\"queue\".equalsIgnoreCase(parameters.get(JMSConstants.PARAM_DEST_TYPE))) {\n+                return true;\n+            } else if (\"topic\".equalsIgnoreCase(parameters.get(JMSConstants.PARAM_DEST_TYPE))) {\n+                return false;\n+            } else {\n+                throw new OutputEventAdapterRuntimeException(\"Invalid \" + JMSConstants.PARAM_DEST_TYPE + \" : \" +\n+                        parameters.get(JMSConstants.PARAM_DEST_TYPE) + \" for JMS CF : \" + name);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Is a session transaction requested from users of this JMS CF?\n+     *\n+     * @return session transaction required by the clients of this?\n+     */\n+    private boolean isSessionTransacted() {\n+        return parameters.get(JMSConstants.PARAM_SESSION_TRANSACTED) != null &&\n+                Boolean.valueOf(parameters.get(JMSConstants.PARAM_SESSION_TRANSACTED));\n+    }\n+\n+    private boolean isDurable() {\n+        if (parameters.get(JMSConstants.PARAM_SUB_DURABLE) != null) {\n+            return Boolean.valueOf(parameters.get(JMSConstants.PARAM_SUB_DURABLE));\n+        }\n+        return false;\n+    }\n+\n+    private String getClientId() {\n+        return parameters.get(JMSConstants.PARAM_DURABLE_SUB_CLIENT_ID);\n+    }\n+\n+    /**\n+     * Create a new Connection\n+     *\n+     * @return a new Connection\n+     */\n+    private Connection createConnection() {\n+\n+        Connection connection = null;\n+        try {\n+            connection = JMSUtils.createConnection(\n+                    conFactory,\n+                    parameters.get(JMSConstants.PARAM_JMS_USERNAME),\n+                    parameters.get(JMSConstants.PARAM_JMS_PASSWORD),\n+                    isJmsSpec11(), isQueue(), isDurable(), getClientId());\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"New JMS Connection from JMS CF : \" + name + \" created\");\n+            }\n+\n+        } catch (JMSException e) {\n+            handleException(\"Error acquiring a Connection from the JMS CF : \" + name +\n+                    \" using properties : \" + parameters, e);\n+        }\n+        return connection;\n+    }\n+\n+    /**\n+     * Create a new Session\n+     *\n+     * @param connection Connection to use\n+     * @return A new Session\n+     */\n+    private Session createSession(Connection connection) {\n+        try {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Creating a new JMS Session from JMS CF : \" + name);\n+            }\n+            return JMSUtils.createSession(\n+                    connection, isSessionTransacted(), Session.AUTO_ACKNOWLEDGE, isJmsSpec11(), isQueue());\n+\n+        } catch (JMSException e) {\n+            handleException(\"Error creating JMS session from JMS CF : \" + name, e);\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Create a new MessageProducer\n+     *\n+     * @param session     Session to be used\n+     * @param destination Destination to be used\n+     * @return a new MessageProducer\n+     */\n+    private MessageProducer createProducer(Session session, Destination destination) {\n+        try {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Creating a new JMS MessageProducer from JMS CF : \" + name);\n+            }\n+\n+            return JMSUtils.createProducer(\n+                    session, destination, isQueue(), isJmsSpec11());\n+\n+        } catch (JMSException e) {\n+            handleException(\"Error creating JMS producer from JMS CF : \" + name, e);\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get a new Connection or shared Connection from this JMS CF\n+     *\n+     * @return new or shared Connection from this JMS CF\n+     */\n+    public Connection getConnection() {\n+        if (cacheLevel > JMSConstants.CACHE_NONE) {\n+            return getSharedConnection();\n+        } else {\n+            return createConnection();\n+        }\n+    }\n+\n+    /**\n+     * Get a new Session or shared Session from this JMS CF\n+     *\n+     * @param connection the Connection to be used\n+     * @return new or shared Session from this JMS CF\n+     */\n+    public Session getSession(Connection connection) {\n+        if (cacheLevel > JMSConstants.CACHE_CONNECTION) {\n+            return getSharedSession();\n+        } else {\n+            return createSession((connection == null ? getConnection() : connection));\n+        }\n+    }\n+\n+    /**\n+     * Get a new MessageProducer or shared MessageProducer from this JMS CF\n+     *\n+     * @param connection  the Connection to be used\n+     * @param session     the Session to be used\n+     * @param destination the Destination to bind MessageProducer to\n+     * @return new or shared MessageProducer from this JMS CF\n+     */\n+    public MessageProducer getMessageProducer(\n+            Connection connection, Session session, Destination destination) {\n+        if (cacheLevel > JMSConstants.CACHE_SESSION) {\n+            return getSharedProducer();\n+        } else {\n+            return createProducer((session == null ? getSession(connection) : session), destination);\n+        }\n+    }\n+\n+    /**\n+     * Get a new Connection or shared Connection from this JMS CF\n+     *\n+     * @return new or shared Connection from this JMS CF\n+     */\n+    private synchronized Connection getSharedConnection() {\n+        if (sharedConnection == null) {\n+            sharedConnection = createConnection();\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Created shared JMS Connection for JMS CF : \" + name);\n+            }\n+        }\n+        return sharedConnection;\n+    }\n+\n+    /**\n+     * Get a shared Session from this JMS CF\n+     *\n+     * @return shared Session from this JMS CF\n+     */\n+    private synchronized Session getSharedSession() {\n+        if (sharedSession == null) {\n+            sharedSession = createSession(getSharedConnection());\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Created shared JMS Session for JMS CF : \" + name);\n+            }\n+        }\n+        return sharedSession;\n+    }\n+\n+    /**\n+     * Get a shared MessageProducer from this JMS CF\n+     *\n+     * @return shared MessageProducer from this JMS CF\n+     */\n+    private synchronized MessageProducer getSharedProducer() {\n+        if (sharedProducer == null) {\n+            sharedProducer = createProducer(getSharedSession(), sharedDestination);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Created shared JMS MessageConsumer for JMS CF : \" + name);\n+            }\n+        }\n+        return sharedProducer;\n+    }\n+}"
        },
        {
            "sha": "354b0136a4e7b39688ba414568b875bda1f01842",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/util/JMSConstants.java",
            "status": "added",
            "additions": 329,
            "deletions": 0,
            "changes": 329,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,329 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.util;\n+\n+import org.apache.axis2.client.Options;\n+\n+public class JMSConstants {\n+\n+    /**\n+     * The prefix indicating an Axis JMS URL\n+     */\n+    public static final String JMS_PREFIX = \"jms:/\";\n+\n+    //------------------------------------ defaults / constants ------------------------------------\n+    /**\n+     * The local (Axis2) JMS connection factory name of the default connection\n+     * factory to be used, if a service does not explicitly state the connection\n+     * factory it should be using by a Parameter named JMSConstants.CONFAC_PARAM\n+     */\n+    public static final String DEFAULT_CONFAC_NAME = \"default\";\n+    /**\n+     * The default JMS time out waiting for a reply - also see {@link JMS_WAIT_REPLY}\n+     */\n+    public static final long DEFAULT_JMS_TIMEOUT = Options.DEFAULT_TIMEOUT_MILLISECONDS;\n+    /**\n+     * Value indicating a Queue used for {@link DEST_PARAM_TYPE}, {@link REPLY_PARAM_TYPE}\n+     */\n+    public static final String DESTINATION_TYPE_QUEUE = \"queue\";\n+    /**\n+     * Value indicating a Topic used for {@link DEST_PARAM_TYPE}, {@link REPLY_PARAM_TYPE}\n+     */\n+    public static final String DESTINATION_TYPE_TOPIC = \"topic\";\n+    /**\n+     * Value indicating a JMS 1.1 Generic Destination used by {@link DEST_PARAM_TYPE}, {@link REPLY_PARAM_TYPE}\n+     */\n+    public static final String DESTINATION_TYPE_GENERIC = \"generic\";\n+\n+    /**\n+     * Do not cache any JMS resources between tasks (when sending) or JMS CF's (when sending)\n+     */\n+    public static final int CACHE_NONE = 0;\n+    /**\n+     * Cache only the JMS connection between tasks (when receiving), or JMS CF's (when sending)\n+     */\n+    public static final int CACHE_CONNECTION = 1;\n+    /**\n+     * Cache only the JMS connection and Session between tasks (receiving), or JMS CF's (sending)\n+     */\n+    public static final int CACHE_SESSION = 2;\n+    /**\n+     * Cache the JMS connection, Session and Consumer between tasks when receiving\n+     */\n+    public static final int CACHE_CONSUMER = 3;\n+    /**\n+     * Cache the JMS connection, Session and Producer within a JMSConnectionFactory when sending\n+     */\n+    public static final int CACHE_PRODUCER = 4;\n+    /**\n+     * automatic choice of an appropriate caching level (depending on the transaction strategy)\n+     */\n+    public static final int CACHE_AUTO = 5;\n+\n+    /**\n+     * A JMS 1.1 Generic Destination type or ConnectionFactory\n+     */\n+    public static final int GENERIC = 0;\n+    /**\n+     * A Queue Destination type or ConnectionFactory\n+     */\n+    public static final int QUEUE = 1;\n+    /**\n+     * A Topic Destination type or ConnectionFactory\n+     */\n+    public static final int TOPIC = 2;\n+\n+    /**\n+     * The EPR parameter name indicating the name of the message level property that indicated the content type.\n+     */\n+    public static final String CONTENT_TYPE_PROPERTY_PARAM = \"transport.jms.ContentTypeProperty\";\n+\n+    //---------------------------------- services.xml parameters -----------------------------------\n+    /**\n+     * The Service level Parameter name indicating the JMS destination for requests of a service\n+     */\n+    public static final String PARAM_DESTINATION = \"transport.jms.Destination\";\n+    /**\n+     * The Service level Parameter name indicating the destination type for requests.\n+     * also see {@link DESTINATION_TYPE_QUEUE}, {@link DESTINATION_TYPE_TOPIC}\n+     */\n+    public static final String PARAM_DEST_TYPE = \"transport.jms.DestinationType\";\n+    /**\n+     * The Service level Parameter name indicating the [default] response destination of a service\n+     */\n+    public static final String PARAM_REPLY_DESTINATION = \"transport.jms.ReplyDestination\";\n+    /**\n+     * The Service level Parameter name indicating the response destination type\n+     * also see {@link DESTINATION_TYPE_QUEUE}, {@link DESTINATION_TYPE_TOPIC}\n+     */\n+    public static final String PARAM_REPLY_DEST_TYPE = \"transport.jms.ReplyDestinationType\";\n+    /**\n+     * The Parameter name of an Axis2 service, indicating the JMS connection\n+     * factory which should be used to listen for messages for it. This is\n+     * the local (Axis2) name of the connection factory and not the JNDI name\n+     */\n+    public static final String PARAM_JMS_CONFAC = \"transport.jms.ConnectionFactory\";\n+    /**\n+     * Connection factory type if using JMS 1.0, either DESTINATION_TYPE_QUEUE or DESTINATION_TYPE_TOPIC\n+     */\n+    public static final String PARAM_CONFAC_TYPE = \"transport.jms.ConnectionFactoryType\";\n+    /**\n+     * The Parameter name indicating the JMS connection factory JNDI name\n+     */\n+    public static final String PARAM_CONFAC_JNDI_NAME = \"transport.jms.ConnectionFactoryJNDIName\";\n+    /**\n+     * The Parameter indicating the expected content type for messages received by the service.\n+     */\n+    public static final String CONTENT_TYPE_PARAM = \"transport.jms.ContentType\";\n+    /**\n+     * The Parameter indicating a final EPR as a String, to be published on the WSDL of a service\n+     * Could occur more than once, and could provide additional connection properties or a subset\n+     * of the properties auto computed. Also could replace IP addresses with hostnames, and expose\n+     * public credentials clients. If a user specified this parameter, the auto generated EPR will\n+     * not be exposed - unless an instance of this parameter is added with the string \"legacy\"\n+     * This parameter could be used to expose EPR's conforming to the proposed SOAP/JMS spec\n+     * until such time full support is implemented for it.\n+     */\n+    public static final String PARAM_PUBLISH_EPR = \"transport.jms.PublishEPR\";\n+    /**\n+     * The parameter indicating the JMS API specification to be used - if this is \"1.1\" the JMS\n+     * 1.1 API would be used, else the JMS 1.0.2B\n+     */\n+    public static final String PARAM_JMS_SPEC_VER = \"transport.jms.JMSSpecVersion\";\n+\n+    /**\n+     * The Parameter indicating whether the JMS Session should be transacted for the service\n+     * Specified as a \"true\" or \"false\"\n+     */\n+    public static final String PARAM_SESSION_TRANSACTED = \"transport.jms.SessionTransacted\";\n+    /**\n+     * The Parameter indicating the Session acknowledgement for the service. Must be one of the\n+     * following Strings, or the appropriate Integer used by the JMS API\n+     * \"AUTO_ACKNOWLEDGE\", \"CLIENT_ACKNOWLEDGE\", \"DUPS_OK_ACKNOWLEDGE\" or \"SESSION_TRANSACTED\"\n+     */\n+    public static final String PARAM_SESSION_ACK = \"transport.jms.SessionAcknowledgement\";\n+    /**\n+     * A message selector to be used when messages are sought for this service\n+     */\n+    public static final String PARAM_MSG_SELECTOR = \"transport.jms.MessageSelector\";\n+    /**\n+     * Is the Subscription durable ? - \"true\" or \"false\" See {@link PARAM_DURABLE_SUB_NAME}\n+     */\n+    public static final String PARAM_SUB_DURABLE = \"transport.jms.SubscriptionDurable\";\n+    /**\n+     * The name for the durable subscription See {@link PARAM_SUB_DURABLE}\n+     */\n+    public static final String PARAM_DURABLE_SUB_NAME = \"transport.jms.DurableSubscriberName\";\n+    /**\n+     * JMS Resource cachable level to be used for the service One of the following:\n+     * {@link CACHE_NONE}, {@link CACHE_CONNECTION}, {@link CACHE_SESSION}, {@link CACHE_PRODUCER},\n+     * {@link CACHE_CONSUMER}, or {@link CACHE_AUTO} - to let the transport decide\n+     */\n+    public static final String PARAM_CACHE_LEVEL = \"transport.jms.CacheLevel\";\n+    /**\n+     * Should a pub-sub connection receive messages published by itself?\n+     */\n+    public static final String PARAM_PUBSUB_NO_LOCAL = \"transport.jms.PubSubNoLocal\";\n+    /**\n+     * The number of milliseconds to wait for a message on a consumer.receive() call\n+     * negative number - wait forever\n+     * 0 - do not wait at all\n+     * positive number - indicates the number of milliseconds to wait\n+     */\n+    public static final String PARAM_RCV_TIMEOUT = \"transport.jms.ReceiveTimeout\";\n+    /**\n+     * The number of concurrent consumers to be created to poll for messages for this service\n+     * For Topics, this should be ONE, to prevent receipt of multiple copies of the same message\n+     */\n+    public static final String PARAM_CONCURRENT_CONSUMERS = \"transport.jms.ConcurrentConsumers\";\n+    /**\n+     * The maximum number of concurrent consumers for the service - See {@link PARAM_CONCURRENT_CONSUMERS}\n+     */\n+    public static final String PARAM_MAX_CONSUMERS = \"transport.jms.MaxConcurrentConsumers\";\n+    /**\n+     * The number of idle (i.e. message-less) polling attempts before a worker task commits suicide,\n+     * to scale down resources, as load decreases\n+     */\n+    public static final String PARAM_IDLE_TASK_LIMIT = \"transport.jms.IdleTaskLimit\";\n+    /**\n+     * The maximum number of messages a polling worker task should process, before suicide - to\n+     * prevent many longer running threads - default is unlimited (i.e. a worker task will live forever)\n+     */\n+    public static final String PARAM_MAX_MSGS_PER_TASK = \"transport.jms.MaxMessagesPerTask\";\n+    /**\n+     * Number of milliseconds before the first reconnection attempt is tried, on detection of an\n+     * error. Subsequent retries follow a geometric series, where the\n+     * duration = previous duration * factor\n+     * This is further limited by the {@link PARAM_RECON_MAX_DURATION} to be meaningful\n+     */\n+    public static final String PARAM_RECON_INIT_DURATION = \"transport.jms.InitialReconnectDuration\";\n+    /**\n+     * @see PARAM_RECON_INIT_DURATION\n+     */\n+    public static final String PARAM_RECON_FACTOR = \"transport.jms.ReconnectProgressFactor\";\n+    /**\n+     * @see PARAM_RECON_INIT_DURATION\n+     */\n+    public static final String PARAM_RECON_MAX_DURATION = \"transport.jms.MaxReconnectDuration\";\n+\n+    /**\n+     * The username to use when obtaining a JMS Connection\n+     */\n+    public static final String PARAM_JMS_USERNAME = \"transport.jms.UserName\";\n+    /**\n+     * The password to use when obtaining a JMS Connection\n+     */\n+    public static final String PARAM_JMS_PASSWORD = \"transport.jms.Password\";\n+\n+    public static final String PARAM_DURABLE_SUB_CLIENT_ID =\n+            \"transport.jms.DurableSubscriberClientID\";\n+\n+    //-------------- message context / transport header properties and client options --------------\n+    /**\n+     * A MessageContext property or client Option indicating the JMS message type\n+     */\n+    public static final String JMS_MESSAGE_TYPE = \"JMS_MESSAGE_TYPE\";\n+    /**\n+     * The message type indicating a BytesMessage. See {@link JMS_MESSAGE_TYPE}\n+     */\n+    public static final String JMS_BYTE_MESSAGE = \"JMS_BYTE_MESSAGE\";\n+    /**\n+     * The message type indicating a TextMessage. See {@link JMS_MESSAGE_TYPE}\n+     */\n+    public static final String JMS_TEXT_MESSAGE = \"JMS_TEXT_MESSAGE\";\n+    /**\n+     * The message type indicating a TextMessage. See {@link JMS_MESSAGE_TYPE}\n+     */\n+    public static final String JMS_MAP_MESSAGE = \"JMS_MAP_MESSAGE\";\n+    /**\n+     * A MessageContext property or client Option indicating the time to wait for a response JMS message\n+     */\n+    public static final String JMS_WAIT_REPLY = \"JMS_WAIT_REPLY\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS correlation id\n+     */\n+    public static final String JMS_COORELATION_ID = \"JMS_COORELATION_ID\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS message id\n+     */\n+    public static final String JMS_MESSAGE_ID = \"JMS_MESSAGE_ID\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS delivery mode as an Integer or String\n+     * Value 1 - javax.jms.DeliveryMode.NON_PERSISTENT\n+     * Value 2 - javax.jms.DeliveryMode.PERSISTENT\n+     */\n+    public static final String JMS_DELIVERY_MODE = \"JMS_DELIVERY_MODE\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS destination to use on a Send\n+     */\n+    public static final String JMS_DESTINATION = \"JMS_DESTINATION\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS message expiration - a Long value\n+     * specified as a String\n+     */\n+    public static final String JMS_EXPIRATION = \"JMS_EXPIRATION\";\n+    /**\n+     * A MessageContext property indicating if the message is a redelivery (Boolean as a String)\n+     */\n+    public static final String JMS_REDELIVERED = \"JMS_REDELIVERED\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS replyTo Destination\n+     */\n+    public static final String JMS_REPLY_TO = \"JMS_REPLY_TO\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS replyTo Destination type\n+     * See {@link DESTINATION_TYPE_QUEUE} and {@link DESTINATION_TYPE_TOPIC}\n+     */\n+    public static final String JMS_REPLY_TO_TYPE = \"JMS_REPLY_TO_TYPE\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS timestamp (Long specified as String)\n+     */\n+    public static final String JMS_TIMESTAMP = \"JMS_TIMESTAMP\";\n+    /**\n+     * A MessageContext property indicating the JMS type String returned by {@link javax.jms.Message.getJMSType()}\n+     */\n+    public static final String JMS_TYPE = \"JMS_TYPE\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS priority\n+     */\n+    public static final String JMS_PRIORITY = \"JMS_PRIORITY\";\n+    /**\n+     * A MessageContext property or client Option indicating the JMS time to live for message sent\n+     */\n+    public static final String JMS_TIME_TO_LIVE = \"JMS_TIME_TO_LIVE\";\n+\n+    /**\n+     * The prefix that denotes JMSX properties\n+     */\n+    public static final String JMSX_PREFIX = \"JMSX\";\n+    /**\n+     * The JMSXGroupID property\n+     */\n+    public static final String JMSX_GROUP_ID = \"JMSXGroupID\";\n+    /**\n+     * The JMSXGroupSeq property\n+     */\n+    public static final String JMSX_GROUP_SEQ = \"JMSXGroupSeq\";\n+\n+//\n+//    public static final String PARAM_NAMING_FACTORY_INITIAL = \"java.naming.factory.initial\";\n+//\n+//    public static final String PARAM_NAMING_PROVIDER_URL = \"java.naming.provider.url\";\n+//    public static final String PARAM_NAMING_SECURUTY_PRINCIPAL = \"java.naming.security.principal\";\n+//    public static final String PARAM_NAMING_SECURUTY_CREDENTIAKS = \"java.naming.security.credentials\";\n+}"
        },
        {
            "sha": "c44b6566dbcb22b15b9616559045f7fad04339e1",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/util/JMSEventAdapterConstants.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.util;\n+\n+public class JMSEventAdapterConstants {\n+\n+    public static final String ADAPTER_TYPE_JMS = \"jms\";\n+\n+    public static final String JNDI_INITIAL_CONTEXT_FACTORY_CLASS = \"java.naming.factory.initial\";\n+    public static final String JNDI_INITIAL_CONTEXT_FACTORY_CLASS_HINT = \"java.naming.factory.initial.hint\";\n+    public static final String JAVA_NAMING_PROVIDER_URL = \"java.naming.provider.url\";\n+    public static final String JAVA_NAMING_PROVIDER_URL_HINT = \"java.naming.provider.url.hint\";\n+    public static final String ADAPTER_JMS_USERNAME = \"transport.jms.UserName\";\n+    public static final String ADAPTER_JMS_PASSWORD = \"transport.jms.Password\";\n+    public static final String ADAPTER_JMS_CONNECTION_FACTORY_JNDINAME = \"transport.jms.ConnectionFactoryJNDIName\";\n+    public static final String ADAPTER_JMS_CONNECTION_FACTORY_JNDINAME_HINT =\n+            \"transport.jms.ConnectionFactoryJNDIName.hint\";\n+    public static final String ADAPTER_JMS_DESTINATION_TYPE = \"transport.jms.DestinationType\";\n+    public static final String ADAPTER_JMS_DESTINATION_TYPE_HINT = \"transport.jms.DestinationType.hint\";\n+\n+    public static final String ADAPTER_JMS_DESTINATION = \"transport.jms.Destination\";\n+    public static final String ADAPTER_JMS_HEADER = \"transport.jms.Header\";\n+    public static final String ADAPTER_JMS_HEADER_HINT = \"transport.jms.Header.Hint\";\n+}"
        },
        {
            "sha": "9191f908301f2fdc357f0ba4ab3b91bf95e41125",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/util/JMSMessageSender.java",
            "status": "added",
            "additions": 361,
            "deletions": 0,
            "changes": 361,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSMessageSender.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSMessageSender.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSMessageSender.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,361 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.util;\n+\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axis2.transport.base.BaseConstants;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+\n+import javax.jms.*;\n+import java.util.Map;\n+\n+/**\n+ * Performs the actual sending of a JMS message, and the subsequent committing of a JTA transaction\n+ * (if requested) or the local session transaction, if used. An instance of this class is unique\n+ * to a single message send out operation and will not be shared.\n+ */\n+public class JMSMessageSender {\n+\n+    private static final Log log = LogFactory.getLog(JMSMessageSender.class);\n+\n+    /**\n+     * The Connection to be used to send out\n+     */\n+    private Connection connection = null;\n+    /**\n+     * The Session to be used to send out\n+     */\n+    private Session session = null;\n+    /**\n+     * The MessageProducer used\n+     */\n+    private MessageProducer producer = null;\n+    /**\n+     * Target Destination\n+     */\n+    private Destination destination = null;\n+    /**\n+     * The level of cachability for resources\n+     */\n+    private int cacheLevel = JMSConstants.CACHE_CONNECTION;\n+    /**\n+     * Should this sender use JMS 1.1 ? (if false, defaults to 1.0.2b)\n+     */\n+    private boolean jmsSpec11 = true;\n+    /**\n+     * Are we sending to a Queue ?\n+     */\n+    private Boolean isQueue = null;\n+\n+    /**\n+     * This is a low-end method to support the one-time sends using JMS 1.0.2b\n+     *\n+     * @param connection  the JMS Connection\n+     * @param session     JMS Session\n+     * @param producer    the MessageProducer\n+     * @param destination the JMS Destination\n+     * @param cacheLevel  cacheLevel - None | Connection | Session | Producer\n+     * @param jmsSpec11   true if the JMS 1.1 API should be used\n+     * @param isQueue     posting to a Queue?\n+     */\n+//    public JMSMessageSender(Connection connection, Session session, MessageProducer producer,\n+//                            Destination destination, int cacheLevel, boolean jmsSpec11, Boolean isQueue) {\n+//\n+//        this.connection = connection;\n+//        this.session = session;\n+//        this.producer = producer;\n+//        this.destination = destination;\n+//        this.cacheLevel = cacheLevel;\n+//        this.jmsSpec11 = jmsSpec11;\n+//        this.isQueue = isQueue;\n+//    }\n+\n+    /**\n+     * Create a JMSSender using a JMSConnectionFactory and target EPR\n+     *\n+     * @param jmsConnectionFactory the JMSConnectionFactory\n+     */\n+    public JMSMessageSender(JMSConnectionFactory jmsConnectionFactory,\n+                            Map<String, String> messageProperties) {\n+\n+        this.cacheLevel = jmsConnectionFactory.getCacheLevel();\n+        this.jmsSpec11 = jmsConnectionFactory.isJmsSpec11();\n+        this.connection = jmsConnectionFactory.getConnection();\n+        this.session = jmsConnectionFactory.getSession(connection);\n+        this.destination =\n+                jmsConnectionFactory.getSharedDestination() == null ?\n+                        jmsConnectionFactory.getDestination(messageProperties.get(JMSConstants.PARAM_DESTINATION)) :\n+                        jmsConnectionFactory.getSharedDestination();\n+        this.producer = jmsConnectionFactory.getMessageProducer(connection, session, destination);\n+    }\n+\n+    /**\n+     * Perform actual send of JMS message to the Destination selected\n+     *\n+     * @param messageProperties the Axis2 MessageContext\n+     */\n+    public void send(Message jmsMessage, Map<String, String> messageProperties) {\n+\n+        Boolean jtaCommit = getBooleanProperty(messageProperties, BaseConstants.JTA_COMMIT_AFTER_SEND);\n+        Boolean rollbackOnly = getBooleanProperty(messageProperties, BaseConstants.SET_ROLLBACK_ONLY);\n+        Boolean persistent = getBooleanProperty(messageProperties, JMSConstants.JMS_DELIVERY_MODE);\n+        Integer priority = getIntegerProperty(messageProperties, JMSConstants.JMS_PRIORITY);\n+        Integer timeToLive = getIntegerProperty(messageProperties, JMSConstants.JMS_TIME_TO_LIVE);\n+\n+        // Do not commit, if message is marked for rollback\n+        if (rollbackOnly != null && rollbackOnly) {\n+            jtaCommit = Boolean.FALSE;\n+        }\n+\n+        if (persistent != null) {\n+            try {\n+                producer.setDeliveryMode(DeliveryMode.PERSISTENT);\n+            } catch (JMSException e) {\n+                handleConnectionException(\"Error setting JMS Producer for PERSISTENT delivery\", e);\n+            }\n+        }\n+        if (priority != null) {\n+            try {\n+                producer.setPriority(priority);\n+            } catch (JMSException e) {\n+                handleConnectionException(\"Error setting JMS Producer priority to : \" + priority, e);\n+            }\n+        }\n+        if (timeToLive != null) {\n+            try {\n+                producer.setTimeToLive(timeToLive);\n+            } catch (JMSException e) {\n+                handleConnectionException(\"Error setting JMS Producer TTL to : \" + timeToLive, e);\n+            }\n+        }\n+\n+\n+        boolean sendingSuccessful = false;\n+        // perform actual message sending\n+        try {\n+            if (jmsSpec11 || isQueue == null) {\n+                producer.send(jmsMessage);\n+\n+            } else {\n+                if (isQueue) {\n+                    ((QueueSender) producer).send(jmsMessage);\n+\n+                } else {\n+                    ((TopicPublisher) producer).publish(jmsMessage);\n+                }\n+            }\n+\n+//            // set the actual MessageID to the message context for use by any others down the line\n+            String msgId = null;\n+            try {\n+                msgId = jmsMessage.getJMSMessageID();\n+//                if (msgId != null) {\n+//                    msgCtx.setProperty(JMSConstants.JMS_MESSAGE_ID, msgId);\n+//                }\n+            } catch (JMSException ignore) {\n+            }\n+\n+            sendingSuccessful = true;\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\n+                        \" with JMS Message ID : \" + msgId +\n+                                \" to destination : \" + producer.getDestination());\n+            }\n+\n+        } catch (JMSException e) {\n+            handleConnectionException(\"Error sending message to destination : \" + destination, e);\n+\n+        } finally {\n+\n+            if (jtaCommit != null) {\n+\n+//                UserTransaction ut = (UserTransaction) msgCtx.getProperty(BaseConstants.USER_TRANSACTION);\n+//                if (ut != null) {\n+//\n+//                    try {\n+//                        if (sendingSuccessful && jtaCommit) {\n+//                            ut.commit();\n+//                        } else {\n+//                            ut.rollback();\n+//                        }\n+//                        msgCtx.removeProperty(BaseConstants.USER_TRANSACTION);\n+//\n+//                        if (log.isDebugEnabled()) {\n+//                            log.debug((sendingSuccessful ? \"Committed\" : \"Rolled back\") +\n+//                                \" JTA Transaction\");\n+//                        }\n+//\n+//                    } catch (Exception e) {\n+//                        handleException(\"Error committing/rolling back JTA transaction after \" +\n+//                            \"sending of message \"+//with MessageContext ID : \" + msgCtx.getMessageID() +\n+//                            \" to destination : \" + destination, e);\n+//                    }\n+//                }\n+//\n+//            } else {\n+                try {\n+                    if (session.getTransacted()) {\n+                        if (sendingSuccessful && (rollbackOnly == null || !rollbackOnly)) {\n+                            session.commit();\n+                        } else {\n+                            session.rollback();\n+                        }\n+                    }\n+\n+                    if (log.isDebugEnabled()) {\n+                        log.debug((sendingSuccessful ? \"Committed\" : \"Rolled back\") +\n+                                \" local (JMS Session) Transaction\");\n+                    }\n+\n+                } catch (JMSException e) {\n+                    handleConnectionException(\"Error committing/rolling back local (i.e. session) \" +\n+                            \"transaction after sending of message \"//with MessageContext ID : \" +\n+                            + \" to destination : \" + destination, e);\n+                }\n+            }\n+        }\n+    }\n+\n+    public Message convertToJMSMessage(Object messageObj, Map<String, String> messageProperties) {\n+        Message jmsMessage = null;\n+        try {\n+            if (messageObj instanceof OMElement) {\n+                jmsMessage = session.createTextMessage(messageObj.toString());\n+            } else if (messageObj instanceof String) {\n+                jmsMessage = session.createTextMessage((String) messageObj);\n+            } else if (messageObj instanceof Map) {\n+                MapMessage mapMessage = session.createMapMessage();\n+                Map sourceMessage = (Map) messageObj;\n+                for (Object key : sourceMessage.keySet()) {\n+                    mapMessage.setObject((String) key, sourceMessage.get(key));\n+                }\n+                jmsMessage = mapMessage;\n+            }\n+        } catch (JMSException e) {\n+            handleException(\"Failed to publish to topic:\" + messageProperties.get(JMSConstants.PARAM_DESTINATION), e);\n+        }\n+\n+        return jmsMessage;\n+    }\n+\n+    /**\n+     * Close non-shared producer, session and connection if any\n+     */\n+\n+    public void close() {\n+        if (producer != null && cacheLevel < JMSConstants.CACHE_PRODUCER) {\n+            try {\n+                producer.close();\n+            } catch (JMSException e) {\n+                log.error(\"Error closing JMS MessageProducer after send\", e);\n+            } finally {\n+                producer = null;\n+            }\n+        }\n+\n+        if (session != null && cacheLevel < JMSConstants.CACHE_SESSION) {\n+            try {\n+                session.close();\n+            } catch (JMSException e) {\n+                log.error(\"Error closing JMS Session after send\", e);\n+            } finally {\n+                session = null;\n+            }\n+        }\n+\n+        if (connection != null && cacheLevel < JMSConstants.CACHE_CONNECTION) {\n+            try {\n+                connection.close();\n+            } catch (JMSException e) {\n+                log.error(\"Error closing JMS Connection after send\", e);\n+            } finally {\n+                connection = null;\n+            }\n+        }\n+    }\n+\n+    private void handleException(String message, Exception e) {\n+        log.error(message, e);\n+        throw new OutputEventAdapterRuntimeException(message, e);\n+    }\n+\n+    private void handleConnectionException(String message, Exception e) {\n+        log.error(message, e);\n+        throw new ConnectionUnavailableException(message, e);\n+    }\n+\n+    private Boolean getBooleanProperty(Map<String, String> messageProperties, String name) {\n+        Object o = messageProperties.get(name);\n+        if (o != null) {\n+            if (o instanceof Boolean) {\n+                return (Boolean) o;\n+            } else if (o instanceof String) {\n+                return Boolean.valueOf((String) o);\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private Integer getIntegerProperty(Map<String, String> messageProperties, String name) {\n+        Object o = messageProperties.get(name);\n+        if (o != null) {\n+            if (o instanceof Integer) {\n+                return (Integer) o;\n+            } else if (o instanceof String) {\n+                return Integer.parseInt((String) o);\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public void setConnection(Connection connection) {\n+        this.connection = connection;\n+    }\n+\n+    public void setSession(Session session) {\n+        this.session = session;\n+    }\n+\n+    public void setProducer(MessageProducer producer) {\n+        this.producer = producer;\n+    }\n+\n+    public void setCacheLevel(int cacheLevel) {\n+        this.cacheLevel = cacheLevel;\n+    }\n+\n+    public int getCacheLevel() {\n+        return cacheLevel;\n+    }\n+\n+    public Connection getConnection() {\n+        return connection;\n+    }\n+\n+    public MessageProducer getProducer() {\n+        return producer;\n+    }\n+\n+    public Session getSession() {\n+        return session;\n+    }\n+}"
        },
        {
            "sha": "05fdfd70dfd4a809fb26c89d21d65931bc7309a9",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/java/org/wso2/carbon/event/output/adapter/jms/internal/util/JMSUtils.java",
            "status": "added",
            "additions": 564,
            "deletions": 0,
            "changes": 564,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSUtils.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSUtils.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Finternal%2Futil%2FJMSUtils.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,564 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.jms.internal.util;\n+\n+import org.apache.axis2.transport.base.BaseUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import javax.jms.*;\n+import javax.naming.Context;\n+import javax.naming.NameNotFoundException;\n+import javax.naming.NamingException;\n+import javax.naming.Reference;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Miscallaneous methods used for the JMS transport\n+ */\n+public class JMSUtils extends BaseUtils {\n+\n+    private static final Log log = LogFactory.getLog(JMSUtils.class);\n+\n+    /**\n+     * Get a String property from the JMS message\n+     *\n+     * @param message  JMS message\n+     * @param property property name\n+     * @return property value\n+     */\n+    public static String getProperty(Message message, String property) {\n+        try {\n+            return message.getStringProperty(property);\n+        } catch (JMSException e) {\n+            return null;\n+        }\n+    }\n+\n+\n+    /**\n+     * Set the JMS ReplyTo for the message\n+     *\n+     * @param replyDestination the JMS Destination where the reply is expected\n+     * @param session          the session to use to create a temp Queue if a response is expected\n+     *                         but a Destination has not been specified\n+     * @param message          the JMS message where the final Destinatio would be set as the JMS ReplyTo\n+     * @return the JMS ReplyTo Destination for the message\n+     */\n+    public static Destination setReplyDestination(Destination replyDestination, Session session,\n+                                                  Message message) {\n+\n+        if (replyDestination == null) {\n+            try {\n+                // create temporary queue to receive the reply\n+                replyDestination = createTemporaryDestination(session);\n+            } catch (JMSException e) {\n+                handleException(\"Error creating temporary queue for response\", e);\n+            }\n+        }\n+\n+        try {\n+            message.setJMSReplyTo(replyDestination);\n+        } catch (JMSException e) {\n+            log.warn(\"Error setting JMS ReplyTo destination to : \" + replyDestination, e);\n+        }\n+\n+        if (log.isDebugEnabled()) {\n+            try {\n+                assert replyDestination != null;\n+                log.debug(\"Expecting a response to JMS Destination : \" +\n+                        (replyDestination instanceof Queue ?\n+                                ((Queue) replyDestination).getQueueName() :\n+                                ((Topic) replyDestination).getTopicName()));\n+            } catch (JMSException ignore) {\n+            }\n+        }\n+        return replyDestination;\n+    }\n+\n+    /**\n+     * Set transport headers from the axis message context, into the JMS message\n+     *\n+     * @param messageConfiguration the adaptor message context\n+     * @param message              the JMS Message\n+     * @throws javax.jms.JMSException on exception\n+     */\n+    public static Message setTransportHeaders(Map<String, String> messageConfiguration,\n+                                              Message message)\n+            throws JMSException {\n+\n+\n+        if (messageConfiguration == null) {\n+            return message;\n+        }\n+\n+        for (String name : messageConfiguration.keySet()) {\n+\n+            if (name.startsWith(JMSConstants.JMSX_PREFIX) &&\n+                    !(name.equals(JMSConstants.JMSX_GROUP_ID) || name.equals(JMSConstants.JMSX_GROUP_SEQ))) {\n+                continue;\n+            }\n+\n+            if (JMSConstants.JMS_COORELATION_ID.equals(name)) {\n+                message.setJMSCorrelationID(messageConfiguration.get(JMSConstants.JMS_COORELATION_ID));\n+            } else if (JMSConstants.JMS_DELIVERY_MODE.equals(name)) {\n+                String mode = messageConfiguration.get(JMSConstants.JMS_DELIVERY_MODE);\n+                try {\n+                    message.setJMSDeliveryMode(Integer.parseInt(mode));\n+                } catch (NumberFormatException nfe) {\n+                    log.warn(\"Invalid delivery mode ignored : \" + mode, nfe);\n+                }\n+\n+            } else if (JMSConstants.JMS_EXPIRATION.equals(name)) {\n+                message.setJMSExpiration(\n+                        Long.parseLong(messageConfiguration.get(JMSConstants.JMS_EXPIRATION)));\n+            } else if (JMSConstants.JMS_MESSAGE_ID.equals(name)) {\n+                message.setJMSMessageID(messageConfiguration.get(JMSConstants.JMS_MESSAGE_ID));\n+            } else if (JMSConstants.JMS_PRIORITY.equals(name)) {\n+                message.setJMSPriority(\n+                        Integer.parseInt(messageConfiguration.get(JMSConstants.JMS_PRIORITY)));\n+            } else if (JMSConstants.JMS_TIMESTAMP.equals(name)) {\n+                message.setJMSTimestamp(\n+                        Long.parseLong(messageConfiguration.get(JMSConstants.JMS_TIMESTAMP)));\n+            } else if (JMSConstants.JMS_MESSAGE_TYPE.equals(name)) {\n+                message.setJMSType(messageConfiguration.get(JMSConstants.JMS_MESSAGE_TYPE));\n+\n+            } else {\n+\n+                //TODO currently only string is supported  in messageConfiguration\n+                Object value = messageConfiguration.get(name);\n+                if (value instanceof String) {\n+                    message.setStringProperty(name, (String) value);\n+                } else if (value instanceof Boolean) {\n+                    message.setBooleanProperty(name, (Boolean) value);\n+                } else if (value instanceof Integer) {\n+                    message.setIntProperty(name, (Integer) value);\n+                } else if (value instanceof Long) {\n+                    message.setLongProperty(name, (Long) value);\n+                } else if (value instanceof Double) {\n+                    message.setDoubleProperty(name, (Double) value);\n+                } else if (value instanceof Float) {\n+                    message.setFloatProperty(name, (Float) value);\n+                }\n+            }\n+        }\n+\n+        return message;\n+    }\n+\n+    /**\n+     * Extract transport level headers for JMS from the given message into a Map\n+     *\n+     * @param message the JMS message\n+     * @return a Map of the transport headers\n+     */\n+    public static Map<String, Object> getTransportHeaders(Message message) {\n+        // create a Map to hold transport headers\n+        Map<String, Object> map = new HashMap<String, Object>();\n+\n+        // correlation ID\n+        try {\n+            if (message.getJMSCorrelationID() != null) {\n+                map.put(JMSConstants.JMS_COORELATION_ID, message.getJMSCorrelationID());\n+            }\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // set the delivery mode as persistent or not\n+        try {\n+            map.put(JMSConstants.JMS_DELIVERY_MODE, Integer.toString(message.getJMSDeliveryMode()));\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // destination name\n+        try {\n+            if (message.getJMSDestination() != null) {\n+                Destination dest = message.getJMSDestination();\n+                map.put(JMSConstants.JMS_DESTINATION,\n+                        dest instanceof Queue ?\n+                                ((Queue) dest).getQueueName() : ((Topic) dest).getTopicName());\n+            }\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // expiration\n+        try {\n+            map.put(JMSConstants.JMS_EXPIRATION, Long.toString(message.getJMSExpiration()));\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // if a JMS message ID is found\n+        try {\n+            if (message.getJMSMessageID() != null) {\n+                map.put(JMSConstants.JMS_MESSAGE_ID, message.getJMSMessageID());\n+            }\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // priority\n+        try {\n+            map.put(JMSConstants.JMS_PRIORITY, Long.toString(message.getJMSPriority()));\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // redelivered\n+        try {\n+            map.put(JMSConstants.JMS_REDELIVERED, Boolean.toString(message.getJMSRedelivered()));\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // replyto destination name\n+        try {\n+            if (message.getJMSReplyTo() != null) {\n+                Destination dest = message.getJMSReplyTo();\n+                map.put(JMSConstants.JMS_REPLY_TO,\n+                        dest instanceof Queue ?\n+                                ((Queue) dest).getQueueName() : ((Topic) dest).getTopicName());\n+            }\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // priority\n+        try {\n+            map.put(JMSConstants.JMS_TIMESTAMP, Long.toString(message.getJMSTimestamp()));\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // message type\n+        try {\n+            if (message.getJMSType() != null) {\n+                map.put(JMSConstants.JMS_TYPE, message.getJMSType());\n+            }\n+        } catch (JMSException ignore) {\n+        }\n+\n+        // any other transport properties / headers\n+        Enumeration<?> e = null;\n+        try {\n+            e = message.getPropertyNames();\n+        } catch (JMSException ignore) {\n+        }\n+\n+        if (e != null) {\n+            while (e.hasMoreElements()) {\n+                String headerName = (String) e.nextElement();\n+                try {\n+                    map.put(headerName, message.getStringProperty(headerName));\n+                    continue;\n+                } catch (JMSException ignore) {\n+                }\n+                try {\n+                    map.put(headerName, message.getBooleanProperty(headerName));\n+                    continue;\n+                } catch (JMSException ignore) {\n+                }\n+                try {\n+                    map.put(headerName, message.getIntProperty(headerName));\n+                    continue;\n+                } catch (JMSException ignore) {\n+                }\n+                try {\n+                    map.put(headerName, message.getLongProperty(headerName));\n+                    continue;\n+                } catch (JMSException ignore) {\n+                }\n+                try {\n+                    map.put(headerName, message.getDoubleProperty(headerName));\n+                    continue;\n+                } catch (JMSException ignore) {\n+                }\n+                try {\n+                    map.put(headerName, message.getFloatProperty(headerName));\n+                } catch (JMSException ignore) {\n+                }\n+            }\n+        }\n+\n+        return map;\n+    }\n+\n+\n+    /**\n+     * Create a MessageConsumer for the given Destination\n+     *\n+     * @param session         JMS Session to use\n+     * @param dest            Destination for which the Consumer is to be created\n+     * @param messageSelector the message selector to be used if any\n+     * @return a MessageConsumer for the specified Destination\n+     * @throws javax.jms.JMSException\n+     */\n+    public static MessageConsumer createConsumer(Session session, Destination dest,\n+                                                 String messageSelector)\n+            throws JMSException {\n+\n+        if (dest instanceof Queue) {\n+            return ((QueueSession) session).createReceiver((Queue) dest, messageSelector);\n+        } else {\n+            return ((TopicSession) session).createSubscriber((Topic) dest, messageSelector, false);\n+        }\n+    }\n+\n+    /**\n+     * Create a temp queue or topic for synchronous receipt of responses, when a reply destination\n+     * is not specified\n+     *\n+     * @param session the JMS Session to use\n+     * @return a temporary Queue or Topic, depending on the session\n+     * @throws javax.jms.JMSException\n+     */\n+    public static Destination createTemporaryDestination(Session session) throws JMSException {\n+\n+        if (session instanceof QueueSession) {\n+            return session.createTemporaryQueue();\n+        } else {\n+            return session.createTemporaryTopic();\n+        }\n+    }\n+\n+\n+    public static <T> T lookup(Context context, Class<T> clazz, String name)\n+            throws NamingException {\n+\n+        Object object = context.lookup(name);\n+        try {\n+            return clazz.cast(object);\n+        } catch (ClassCastException ex) {\n+            // Instead of a ClassCastException, throw an exception with some\n+            // more information.\n+            if (object instanceof Reference) {\n+                Reference ref = (Reference) object;\n+                handleException(\"JNDI failed to de-reference Reference with name \" +\n+                        name + \"; is the factory \" + ref.getFactoryClassName() +\n+                        \" in your classpath?\");\n+                return null;\n+            } else {\n+                handleException(\"JNDI lookup of name \" + name + \" returned a \" +\n+                        object.getClass().getName() + \" while a \" + clazz + \" was expected\");\n+                return null;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * This is a JMS spec independent method to create a Connection. Please be cautious when\n+     * making any changes\n+     *\n+     * @param conFac    the ConnectionFactory to use\n+     * @param user      optional user name\n+     * @param pass      optional password\n+     * @param jmsSpec11 should we use JMS 1.1 API ?\n+     * @param isQueue   is this to deal with a Queue?\n+     * @return a JMS Connection as requested\n+     * @throws javax.jms.JMSException on errors, to be handled and logged by the caller\n+     */\n+    public static Connection createConnection(ConnectionFactory conFac,\n+                                              String user, String pass, boolean jmsSpec11,\n+                                              Boolean isQueue,\n+                                              boolean isDurable, String clientID)\n+            throws JMSException {\n+\n+        Connection connection = null;\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Creating a \" + (isQueue ? \"Queue\" : \"Topic\") +\n+                    \"Connection using credentials : (\" + user + \"/\" + pass + \")\");\n+        }\n+\n+        if (jmsSpec11 || isQueue == null) {\n+            if (user != null && pass != null) {\n+                connection = conFac.createConnection(user, pass);\n+            } else {\n+                connection = conFac.createConnection();\n+            }\n+            if (isDurable) {\n+                connection.setClientID(clientID);\n+            }\n+\n+        } else {\n+            QueueConnectionFactory qConFac = null;\n+            TopicConnectionFactory tConFac = null;\n+            if (isQueue) {\n+                qConFac = (QueueConnectionFactory) conFac;\n+            } else {\n+                tConFac = (TopicConnectionFactory) conFac;\n+            }\n+\n+            if (user != null && pass != null) {\n+                if (qConFac != null) {\n+                    connection = qConFac.createQueueConnection(user, pass);\n+                } else if (tConFac != null) {\n+                    connection = tConFac.createTopicConnection(user, pass);\n+                }\n+            } else {\n+                if (qConFac != null) {\n+                    connection = qConFac.createQueueConnection();\n+                } else if (tConFac != null) {\n+                    connection = tConFac.createTopicConnection();\n+                }\n+            }\n+            if (isDurable) {\n+                connection.setClientID(clientID);\n+            }\n+        }\n+        return connection;\n+    }\n+\n+    /**\n+     * This is a JMS spec independent method to create a Session. Please be cautious when\n+     * making any changes\n+     *\n+     * @param connection the JMS Connection\n+     * @param transacted should the session be transacted?\n+     * @param ackMode    the ACK mode for the session\n+     * @param jmsSpec11  should we use the JMS 1.1 API?\n+     * @param isQueue    is this Session to deal with a Queue?\n+     * @return a Session created for the given information\n+     * @throws javax.jms.JMSException on errors, to be handled and logged by the caller\n+     */\n+    public static Session createSession(Connection connection, boolean transacted, int ackMode,\n+                                        boolean jmsSpec11, Boolean isQueue) throws JMSException {\n+\n+        if (jmsSpec11 || isQueue == null) {\n+            return connection.createSession(transacted, ackMode);\n+\n+        } else {\n+            if (isQueue) {\n+                return ((QueueConnection) connection).createQueueSession(transacted, ackMode);\n+            } else {\n+                return ((TopicConnection) connection).createTopicSession(transacted, ackMode);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * This is a JMS spec independent method to create a MessageConsumer. Please be cautious when\n+     * making any changes\n+     *\n+     * @param session         JMS session\n+     * @param destination     the Destination\n+     * @param isQueue         is the Destination a queue?\n+     * @param subscriberName  optional client name to use for a durable subscription to a topic\n+     * @param messageSelector optional message selector\n+     * @param pubSubNoLocal   should we receive messages sent by us during pub-sub?\n+     * @param isDurable       is this a durable topic subscription?\n+     * @param jmsSpec11       should we use JMS 1.1 API ?\n+     * @return a MessageConsumer to receive messages\n+     * @throws javax.jms.JMSException on errors, to be handled and logged by the caller\n+     */\n+    public static MessageConsumer createConsumer(\n+            Session session, Destination destination, Boolean isQueue,\n+            String subscriberName, String messageSelector, boolean pubSubNoLocal,\n+            boolean isDurable, boolean jmsSpec11) throws JMSException {\n+\n+        if (jmsSpec11 || isQueue == null) {\n+            if (isDurable) {\n+                return session.createDurableSubscriber(\n+                        (Topic) destination, subscriberName, messageSelector, pubSubNoLocal);\n+            } else {\n+                return session.createConsumer(destination, messageSelector, pubSubNoLocal);\n+            }\n+        } else {\n+            if (isQueue) {\n+                return ((QueueSession) session).createReceiver((Queue) destination, messageSelector);\n+            } else {\n+                if (isDurable) {\n+                    return ((TopicSession) session).createDurableSubscriber(\n+                            (Topic) destination, subscriberName, messageSelector, pubSubNoLocal);\n+                } else {\n+                    return ((TopicSession) session).createSubscriber(\n+                            (Topic) destination, messageSelector, pubSubNoLocal);\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * This is a JMS spec independent method to create a MessageProducer. Please be cautious when\n+     * making any changes\n+     *\n+     * @param session     JMS session\n+     * @param destination the Destination\n+     * @param isQueue     is the Destination a queue?\n+     * @param jmsSpec11   should we use JMS 1.1 API ?\n+     * @return a MessageProducer to send messages to the given Destination\n+     * @throws javax.jms.JMSException on errors, to be handled and logged by the caller\n+     */\n+    public static MessageProducer createProducer(\n+            Session session, Destination destination, Boolean isQueue, boolean jmsSpec11)\n+            throws JMSException {\n+\n+        if (jmsSpec11 || isQueue == null) {\n+            return session.createProducer(destination);\n+        } else {\n+            if (isQueue) {\n+                return ((QueueSession) session).createSender((Queue) destination);\n+            } else {\n+                return ((TopicSession) session).createPublisher((Topic) destination);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Return a String representation of the destination type\n+     *\n+     * @param destType the destination type indicator int\n+     * @return a descriptive String\n+     */\n+    public static String getDestinationTypeAsString(int destType) {\n+        if (destType == JMSConstants.QUEUE) {\n+            return \"queue\";\n+        } else if (destType == JMSConstants.TOPIC) {\n+            return \"topic\";\n+        } else {\n+            return \"generic\";\n+        }\n+    }\n+\n+    /**\n+     * Return the JMS destination with the given destination name looked up from the context\n+     *\n+     * @param context         the Context to lookup\n+     * @param destinationName name of the destination to be looked up\n+     * @param destinationType type of the destination to be looked up\n+     * @return the JMS destination, or null if it does not exist\n+     */\n+    public static Destination lookupDestination(Context context, String destinationName,\n+                                                String destinationType) throws NamingException {\n+\n+        if (destinationName == null) {\n+            return null;\n+        }\n+\n+        try {\n+            return JMSUtils.lookup(context, Destination.class, destinationName);\n+        } catch (NameNotFoundException e) {\n+            try {\n+                return JMSUtils.lookup(context, Destination.class,\n+                        (JMSConstants.DESTINATION_TYPE_TOPIC.equalsIgnoreCase(destinationType) ?\n+                                \"dynamicTopics/\" : \"dynamicQueues/\") + destinationName);\n+            } catch (NamingException x) {\n+                log.warn(\"Cannot locate destination : \" + destinationName);\n+                throw x;\n+            }\n+        } catch (NamingException e) {\n+            log.warn(\"Cannot locate destination : \" + destinationName, e);\n+            throw e;\n+        }\n+    }\n+}"
        },
        {
            "sha": "a1904039c22ffbbf64a8e57b70d952f093b1aaa6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.jms/src/main/resources/org/wso2/carbon/event/output/adapter/jms/i18n/Resources.properties",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.jms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fjms%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,36 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+java.naming.factory.initial=JNDI Initial Context Factory Class\n+java.naming.factory.initial.hint=JNDI initial context factory class. The class must implement the java.naming.spi.InitialContextFactory interface.\n+java.naming.provider.url=JNDI Provider URL\n+java.naming.provider.url.hint=URL of the JNDI provider.\n+transport.jms.UserName=JMS Connection Username\n+transport.jms.Password=JMS Connection Password\n+transport.jms.ConnectionFactoryJNDIName=Connection Factory JNDI Name\n+transport.jms.ConnectionFactoryJNDIName.hint=The JNDI name of the connection factory.\n+transport.jms.SubscriptionDurable=Enable Durable Subscription\n+transport.jms.SubscriptionDurable.hint=Whether the subscription is durable or not.\n+transport.jms.DurableSubscriberName=Durable Subscriber Name\n+transport.jms.DurableSubscriberName.hint=Name of the durable subscriber.\n+transport.jms.DestinationType=Destination Type\n+transport.jms.DestinationType.hint=Type of the destination.\n+\n+transport.jms.Destination=Destination\n+transport.jms.Header=Header\n+transport.jms.Header.Hint=Define Transport Headers (eg header_name1:header_value1,header_name2:header_value2 )\n\\ No newline at end of file"
        },
        {
            "sha": "edcad66763a1d78b34f139c507b243f76720ffa5",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/pom.xml",
            "status": "added",
            "additions": 125,
            "deletions": 0,
            "changes": 125,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+\n+\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.kafka</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Kafka Adaptor Module</name>\n+    <description>org.wso2.carbon.event.output.adaptor.kafka provides the back-end\n+        functionality of output kafka adaptor\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <repositories>\n+        <repository>\n+            <id>wso2-maven2-repository</id>\n+            <name>WSO2 Maven2 Repository</name>\n+            <url>http://dist.wso2.org/maven2</url>\n+        </repository>\n+\n+        <repository>\n+            <id>MarketceteraRepo</id>\n+            <name>MarketceteraRepoy</name>\n+            <url>http://repo.marketcetera.org/maven/</url>\n+        </repository>\n+    </repositories>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.axis2.transport</groupId>\n+            <artifactId>axis2-transport-mail</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.kafka</groupId>\n+            <artifactId>kafka_2.10</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.kafka.internal,\n+                            org.wso2.carbon.event.output.adapter.kafka.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.output.adapter.kafka.internal,\n+                            org.wso2.carbon.event.output.adapter.kafka.internal.*,\n+                            org.wso2.carbon.event.output.adapter.kafka.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "e34aff342e3e5f0b3e9f898c827ec279c9118a95",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/java/org/wso2/carbon/event/output/adapter/kafka/KafkaEventAdapter.java",
            "status": "added",
            "additions": 164,
            "deletions": 0,
            "changes": 164,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,164 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.kafka;\n+\n+import kafka.admin.AdminUtils;\n+import kafka.javaapi.producer.Producer;\n+import kafka.producer.KeyedMessage;\n+import kafka.producer.ProducerConfig;\n+import org.I0Itec.zkclient.ZkClient;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.kafka.internal.util.KafkaEventAdapterConstants;\n+\n+import java.util.*;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+import kafka.utils.ZKStringSerializer$;\n+\n+public class KafkaEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(KafkaEventAdapter.class);\n+    private static ThreadPoolExecutor threadPoolExecutor;\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private ProducerConfig config;\n+    private Producer<String, Object> producer;\n+\n+    public KafkaEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                             Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        //ThreadPoolExecutor will be assigned  if it is null\n+        if (threadPoolExecutor == null) {\n+            int minThread;\n+            int maxThread;\n+            long defaultKeepAliveTime;\n+\n+            //If global properties are available those will be assigned else constant values will be assigned\n+            if (globalProperties.get(KafkaEventAdapterConstants.MIN_THREAD_NAME) != null) {\n+                minThread = Integer.parseInt(globalProperties.get(KafkaEventAdapterConstants.MIN_THREAD_NAME));\n+            } else {\n+                minThread = KafkaEventAdapterConstants.MIN_THREAD;\n+            }\n+\n+            if (globalProperties.get(KafkaEventAdapterConstants.MAX_THREAD_NAME) != null) {\n+                maxThread = Integer.parseInt(globalProperties.get(KafkaEventAdapterConstants.MAX_THREAD_NAME));\n+            } else {\n+                maxThread = KafkaEventAdapterConstants.MAX_THREAD;\n+            }\n+\n+            if (globalProperties.get(KafkaEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME) != null) {\n+                defaultKeepAliveTime = Integer.parseInt(globalProperties.get(\n+                        KafkaEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME));\n+            } else {\n+                defaultKeepAliveTime = KafkaEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME;\n+            }\n+\n+            threadPoolExecutor = new ThreadPoolExecutor(minThread, maxThread, defaultKeepAliveTime,\n+                    TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(1000));\n+        }\n+\n+    }\n+\n+    @Override\n+    public void testConnect() {\n+        connect();\n+    }\n+\n+    @Override\n+    public void connect() {\n+        Map<String, String> staticProperties = eventAdapterConfiguration.getStaticProperties();\n+        String kafkaConnect = staticProperties.get(KafkaEventAdapterConstants.ADAPTOR_META_BROKER_LIST);\n+        log.info(kafkaConnect);\n+\n+        String optionalConfigs = staticProperties.get(KafkaEventAdapterConstants.ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES);\n+        Properties props = new Properties();\n+        props.put(\"metadata.broker.list\", kafkaConnect);\n+        props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\");\n+\n+        if (optionalConfigs != null) {\n+            String[] optionalProperties = optionalConfigs.split(\",\");\n+\n+            if (optionalProperties != null && optionalProperties.length > 0) {\n+                for (String header : optionalProperties) {\n+                    String[] configPropertyWithValue = header.split(\":\");\n+                    if(configPropertyWithValue.length == 2){\n+                        props.put(configPropertyWithValue[0], configPropertyWithValue[1]);\n+                    }else {\n+                        log.warn(\"Optional configuration property not defined in the correct format\");\n+                    }\n+                }\n+            }\n+        }\n+\n+        config = new ProducerConfig(props);\n+        producer = new Producer<String, Object>(config);\n+       try {\n+           String testTopic = \"org.wso2.carbon.event.output.adapter.kafka.test\";\n+\n+           ZkClient zkClient = new ZkClient(\"localhost:2181\", 10000, 10000, ZKStringSerializer$.MODULE$);\n+           AdminUtils.createTopic(zkClient, testTopic, 10, 1, new Properties());\n+\n+           KeyedMessage<String, Object> data = new KeyedMessage<String, Object>(testTopic,\"Successfully connected to kafka server\");\n+           producer.send(data);\n+\n+        }catch(kafka.common.TopicExistsException e){\n+           log.info(\"test topic already created.\");\n+        }catch (Exception e){\n+           throw new OutputEventAdapterRuntimeException(\"The adaptor \"+eventAdapterConfiguration.getName()+\" failed to connect to the kafka server \"\n+                   ,e);\n+       }\n+\n+\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        String topic = dynamicProperties.get(KafkaEventAdapterConstants.ADAPTOR_PUBLISH_TOPIC);\n+\n+        KeyedMessage<String, Object> data = new KeyedMessage<String, Object>(topic,message.toString());\n+        producer.send(data);\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //close producer\n+        if(producer != null){\n+            producer.close();\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+}"
        },
        {
            "sha": "37e9b337c417c79942b958b778aa1a8b9528426c",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/java/org/wso2/carbon/event/output/adapter/kafka/KafkaEventAdapterFactory.java",
            "status": "added",
            "additions": 86,
            "deletions": 0,
            "changes": 86,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2FKafkaEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,86 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.kafka;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.kafka.internal.util.KafkaEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class KafkaEventAdapterFactory extends OutputEventAdapterFactory {\n+    private static final Log log = LogFactory.getLog(KafkaEventAdapterFactory.class);\n+\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.kafka.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return KafkaEventAdapterConstants.ADAPTOR_TYPE_KAFKA;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> propertyList = new ArrayList<Property>();\n+\n+        //set Kafka Connect of broker\n+        Property webKafkaConnect = new Property(KafkaEventAdapterConstants.ADAPTOR_META_BROKER_LIST);\n+        webKafkaConnect.setDisplayName(resourceBundle.getString(KafkaEventAdapterConstants.ADAPTOR_META_BROKER_LIST));\n+        webKafkaConnect.setRequired(true);\n+        propertyList.add(webKafkaConnect);\n+\n+        Property optionConfigProperties = new Property(KafkaEventAdapterConstants.ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES);\n+        optionConfigProperties.setDisplayName(\n+                resourceBundle.getString(KafkaEventAdapterConstants.ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES));\n+        optionConfigProperties.setHint(resourceBundle.getString(KafkaEventAdapterConstants.ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES_HINT));\n+        propertyList.add(optionConfigProperties);\n+\n+        return propertyList;\n+\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> propertyList = new ArrayList<Property>();\n+\n+        //set Topic of broker\n+        Property webTopic = new Property(KafkaEventAdapterConstants.ADAPTOR_PUBLISH_TOPIC);\n+        webTopic.setDisplayName(resourceBundle.getString(KafkaEventAdapterConstants.ADAPTOR_PUBLISH_TOPIC));\n+        webTopic.setRequired(true);\n+        propertyList.add(webTopic);\n+\n+        return propertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        return new KafkaEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "942b23f8b53f81731ecbb69a0266bc87e03c369b",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/java/org/wso2/carbon/event/output/adapter/kafka/internal/ds/KafkaEventAdapterServiceDS.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.kafka.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.kafka.KafkaEventAdapterFactory;\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * @scr.component name=\"output.email.EventAdaptorService.component\" immediate=\"true\"\n+ */\n+public class KafkaEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(KafkaEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the kafka service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory testOutEventAdaptorFactory = new KafkaEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), testOutEventAdaptorFactory, null);\n+            log.info(\"Successfully deployed the Kafka output event adaptor service\");\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the Kafka output event adaptor service \", e);\n+        }\n+    }\n+\n+    protected void setConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        KafkaEventAdapterServiceValueHolder.registerConfigurationContextService(configurationContextService);\n+    }\n+\n+    protected void unsetConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+\n+    }\n+\n+\n+}"
        },
        {
            "sha": "4427f029f664db207013a18060093c126e8efac6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/java/org/wso2/carbon/event/output/adapter/kafka/internal/ds/KafkaEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Fds%2FKafkaEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.kafka.internal.ds;\n+\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * common place to hold some OSGI bundle references.\n+ */\n+public final class KafkaEventAdapterServiceValueHolder {\n+\n+    private static ConfigurationContextService configurationContextService;\n+\n+    private KafkaEventAdapterServiceValueHolder() {\n+    }\n+\n+    public static void registerConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        KafkaEventAdapterServiceValueHolder.configurationContextService = configurationContextService;\n+    }\n+\n+    public static ConfigurationContextService getConfigurationContextService() {\n+        return KafkaEventAdapterServiceValueHolder.configurationContextService;\n+    }\n+\n+}"
        },
        {
            "sha": "64fbabf07a77e0bbc7fae6a3fbe9486f5cecc169",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/java/org/wso2/carbon/event/output/adapter/kafka/internal/util/KafkaEventAdapterConstants.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Futil%2FKafkaEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Futil%2FKafkaEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Finternal%2Futil%2FKafkaEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.kafka.internal.util;\n+\n+public class KafkaEventAdapterConstants {\n+\n+    private KafkaEventAdapterConstants() {\n+    }\n+\n+    public static final String MIN_THREAD_NAME = \"minThread\";\n+    public static final String MAX_THREAD_NAME = \"maxThread\";\n+    public static final String DEFAULT_KEEP_ALIVE_TIME_NAME = \"defaultKeepAliveTime\";\n+    public static final int MIN_THREAD = 8;\n+    public static final int MAX_THREAD = 100;\n+    public static final long DEFAULT_KEEP_ALIVE_TIME = 20;\n+\n+    public final static String ADAPTOR_TYPE_KAFKA = \"kafka\";\n+    public final static String ADAPTOR_PUBLISH_TOPIC = \"topic\";\n+    public final static String ADAPTOR_META_BROKER_LIST = \"meta.broker.list\";\n+    public final static String ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES=\"optional.configuration\";\n+    public final static String ADAPTOR_OPTIONAL_CONFIGURATION_PROPERTIES_HINT=\"optional.configuration.hint\";\n+\n+\n+}"
        },
        {
            "sha": "65ebfc35e8a726d3d570e2b735ccef377f95233d",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.kafka/src/main/resources/org/wso2/carbon/event/output/adapter/kafka/i18n/Resources.properties",
            "status": "added",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.kafka%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fkafka%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+topic=Topic Kafka\n+meta.broker.list=Meta Broker List\n+optional.configuration=Optional Configuration Properties\n+optional.configuration.hint=Define optional configuration properties (eg {property_name}:{property_value})\n+"
        },
        {
            "sha": "9be074847ba3ae3e45f3568f6d6981bdabd930a6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/pom.xml",
            "status": "added",
            "additions": 101,
            "deletions": 0,
            "changes": 101,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,101 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.logger</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Adapter - Logger Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.logger provides the back-end\n+        functionality of output logger adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.logger.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.logger.internal.*,\n+                            org.wso2.carbon.event.output.adapter.logger.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "c692149e9cf68b7f19cbf81f9bad0a748fae5538",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/src/main/java/org/wso2/carbon/event/output/adapter/logger/LoggerEventAdapter.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.logger;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.logger.internal.util.LoggerEventAdapterConstants;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+public final class LoggerEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(LoggerEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    public LoggerEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+        //not required\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        if (message instanceof Object[]) {\n+            log.info(\"Unique ID: \" + dynamicProperties.get(LoggerEventAdapterConstants.ADAPTER_MESSAGE_UNIQUE_ID) + \", Event: \" + Arrays.deepToString((Object[]) message));\n+        } else {\n+            log.info(\"Unique ID: \" + dynamicProperties.get(LoggerEventAdapterConstants.ADAPTER_MESSAGE_UNIQUE_ID) + \", Event: \" + message);\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+}"
        },
        {
            "sha": "a549cf85d818b1f0848d93451bc600ccdbbf5ea4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/src/main/java/org/wso2/carbon/event/output/adapter/logger/LoggerEventAdapterFactory.java",
            "status": "added",
            "additions": 69,
            "deletions": 0,
            "changes": 69,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2FLoggerEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,69 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.logger;\n+\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.logger.internal.util.LoggerEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class LoggerEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.logger.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return LoggerEventAdapterConstants.ADAPTER_TYPE_LOGGER;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        // set stream definition\n+        Property streamDefinitionProperty = new Property(LoggerEventAdapterConstants.ADAPTER_MESSAGE_UNIQUE_ID);\n+        streamDefinitionProperty.setDisplayName(\n+                resourceBundle.getString(LoggerEventAdapterConstants.ADAPTER_MESSAGE_UNIQUE_ID));\n+        streamDefinitionProperty.setHint(resourceBundle.getString(LoggerEventAdapterConstants.ADAPTER_MESSAGE_UNIQUE_ID_HINT));\n+        streamDefinitionProperty.setRequired(true);\n+\n+        dynamicPropertyList.add(streamDefinitionProperty);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        return new LoggerEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+}"
        },
        {
            "sha": "a795f6251b15266b0362ea6c93baa76beeae5130",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/src/main/java/org/wso2/carbon/event/output/adapter/logger/internal/ds/LoggerEventAdapterServiceDS.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Fds%2FLoggerEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Fds%2FLoggerEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Fds%2FLoggerEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.logger.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.logger.LoggerEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Logger.AdapterService.component\" immediate=\"true\"\n+ */\n+public class LoggerEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(LoggerEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the screenLogger adapter service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory loggerEventAdapterFactory = new LoggerEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), loggerEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output logger adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output logger adapter service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "40e28d24efd7afac821cc1422dabb7b1f691a456",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/src/main/java/org/wso2/carbon/event/output/adapter/logger/internal/util/LoggerEventAdapterConstants.java",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Futil%2FLoggerEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Futil%2FLoggerEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Finternal%2Futil%2FLoggerEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,30 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.logger.internal.util;\n+\n+\n+public final class LoggerEventAdapterConstants {\n+\n+    private LoggerEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_LOGGER = \"logger\";\n+    public static final String ADAPTER_MESSAGE_UNIQUE_ID = \"uniqueId\";\n+    public static final String ADAPTER_MESSAGE_UNIQUE_ID_HINT = \"uniqueIdHint\";\n+\n+}"
        },
        {
            "sha": "2fe070070dc7a9489318496d499be8309615cef3",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.logger/src/main/resources/org/wso2/carbon/event/output/adapter/logger/i18n/Resources.properties",
            "status": "added",
            "additions": 21,
            "deletions": 0,
            "changes": 21,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.logger%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Flogger%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,21 @@\n+#\n+# Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+uniqueId=Unique Identification\n+uniqueIdHint=Any unique Identification like topic\n+"
        },
        {
            "sha": "04d3d5d7e11675dd0a11aa1acd1e14bd7e9a0dc6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/pom.xml",
            "status": "added",
            "additions": 100,
            "deletions": 0,
            "changes": 100,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+~ use this file except in compliance with the License. You may obtain a copy\n+~ of the License at\n+~\n+~ http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software distributed\n+~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.mqtt</artifactId>\n+\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output MQTT Adaptor Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.mqtt provides the back-end functionality of mqtt event adaptor\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.paho</groupId>\n+            <artifactId>mqtt-client</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.mqtt.internal,\n+                            org.wso2.carbon.event.output.adapter.mqtt.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.mqtt.internal,\n+                            !org.wso2.carbon.event.output.adapter.mqtt.internal.*,\n+                            org.wso2.carbon.event.output.adapter.mqtt.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "c1a8128f370ff73a555251d42cd2bc8656696743",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/MQTTEventAdapter.java",
            "status": "added",
            "additions": 123,
            "deletions": 0,
            "changes": 123,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,123 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.mqtt.internal.util.MQTTAdapterPublisher;\n+import org.wso2.carbon.event.output.adapter.mqtt.internal.util.MQTTBrokerConnectionConfiguration;\n+import org.wso2.carbon.event.output.adapter.mqtt.internal.util.MQTTEventAdapterConstants;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class MQTTEventAdapter implements OutputEventAdapter {\n+\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private ConcurrentHashMap<String, ConcurrentHashMap<String, ConcurrentHashMap<String, MQTTAdapterPublisher>>>\n+            publisherMap = new ConcurrentHashMap<String,\n+            ConcurrentHashMap<String, ConcurrentHashMap<String, MQTTAdapterPublisher>>>();\n+\n+    private ConcurrentHashMap<String, ConcurrentHashMap<String, MQTTAdapterPublisher>> clientIdSpecificEventSenderMap;\n+\n+    public MQTTEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                            Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+        //not required\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        clientIdSpecificEventSenderMap = publisherMap.get(eventAdapterConfiguration.getName());\n+        if (null == clientIdSpecificEventSenderMap) {\n+            clientIdSpecificEventSenderMap =\n+                    new ConcurrentHashMap<String, ConcurrentHashMap<String, MQTTAdapterPublisher>>();\n+            if (null != publisherMap.putIfAbsent(eventAdapterConfiguration.getName(), clientIdSpecificEventSenderMap)) {\n+                clientIdSpecificEventSenderMap = publisherMap.get(eventAdapterConfiguration.getName());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        String clientId = dynamicProperties.get(MQTTEventAdapterConstants.ADAPTER_MESSAGE_CLIENTID);\n+        ConcurrentHashMap<String, MQTTAdapterPublisher> topicSpecificEventPublisherMap =\n+                clientIdSpecificEventSenderMap.get(clientId);\n+        if (null == topicSpecificEventPublisherMap) {\n+            topicSpecificEventPublisherMap = new ConcurrentHashMap<String, MQTTAdapterPublisher>();\n+            if (null != clientIdSpecificEventSenderMap.putIfAbsent(clientId, topicSpecificEventPublisherMap)) {\n+                topicSpecificEventPublisherMap = clientIdSpecificEventSenderMap.get(clientId);\n+            }\n+        }\n+\n+        String topic = dynamicProperties.get(MQTTEventAdapterConstants.ADAPTER_MESSAGE_TOPIC);\n+        MQTTAdapterPublisher mqttAdapterPublisher = topicSpecificEventPublisherMap.get(topic);\n+        if (mqttAdapterPublisher == null) {\n+            MQTTBrokerConnectionConfiguration mqttBrokerConnectionConfiguration =\n+                    new MQTTBrokerConnectionConfiguration(eventAdapterConfiguration.getStaticProperties()\n+                            .get(MQTTEventAdapterConstants.ADAPTER_CONF_URL),\n+                            eventAdapterConfiguration.getStaticProperties()\n+                                    .get(MQTTEventAdapterConstants.ADAPTER_CONF_USERNAME),\n+                            eventAdapterConfiguration.getStaticProperties()\n+                                    .get(MQTTEventAdapterConstants.ADAPTER_CONF_PASSWORD),\n+                            eventAdapterConfiguration.getStaticProperties()\n+                                    .get(MQTTEventAdapterConstants.ADAPTER_CONF_CLEAN_SESSION),\n+                            eventAdapterConfiguration.getStaticProperties()\n+                                    .get(MQTTEventAdapterConstants.ADAPTER_CONF_KEEP_ALIVE));\n+\n+            mqttAdapterPublisher = new MQTTAdapterPublisher(mqttBrokerConnectionConfiguration,\n+                    dynamicProperties.get(MQTTEventAdapterConstants.ADAPTER_MESSAGE_TOPIC),\n+                    dynamicProperties.get(MQTTEventAdapterConstants.ADAPTER_MESSAGE_CLIENTID));\n+            topicSpecificEventPublisherMap.put(topic, mqttAdapterPublisher);\n+        }\n+        String qos = eventAdapterConfiguration.getStaticProperties().get(MQTTEventAdapterConstants.ADAPTER_MESSAGE_QOS);\n+\n+        if (qos == null) {\n+            mqttAdapterPublisher.publish(message.toString());\n+        } else {\n+            mqttAdapterPublisher.publish(Integer.parseInt(qos), message.toString());\n+        }\n+\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        publisherMap.clear();\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+}"
        },
        {
            "sha": "d432f50216bf9034d52b9c925b5e3acbbd4f0065",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/MQTTEventAdapterFactory.java",
            "status": "added",
            "additions": 132,
            "deletions": 0,
            "changes": 132,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2FMQTTEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,132 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.mqtt.internal.util.MQTTEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class MQTTEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.mqtt.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return MQTTEventAdapterConstants.ADAPTER_TYPE_MQTT;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+        //Broker Url\n+        Property brokerUrl = new Property(MQTTEventAdapterConstants.ADAPTER_CONF_URL);\n+        brokerUrl.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_URL));\n+        brokerUrl.setRequired(true);\n+        brokerUrl.setHint(resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_URL_HINT));\n+\n+        //Broker Username\n+        Property userName = new Property(MQTTEventAdapterConstants.ADAPTER_CONF_USERNAME);\n+        userName.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_USERNAME));\n+        userName.setRequired(false);\n+        userName.setHint(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_USERNAME_HINT));\n+\n+        //Broker Password\n+        Property password = new Property(MQTTEventAdapterConstants.ADAPTER_CONF_PASSWORD);\n+        password.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_PASSWORD));\n+        password.setRequired(false);\n+        password.setHint(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_PASSWORD_HINT));\n+\n+        //Broker clear session\n+        Property clearSession = new Property(MQTTEventAdapterConstants.ADAPTER_CONF_CLEAN_SESSION);\n+        clearSession.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_CLEAN_SESSION));\n+        clearSession.setRequired(false);\n+        clearSession.setOptions(new String[]{\"true\", \"false\"});\n+        clearSession.setDefaultValue(\"true\");\n+        clearSession.setHint(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_CLEAN_SESSION_HINT));\n+\n+        //Broker clear session\n+        Property keepAlive = new Property(MQTTEventAdapterConstants.ADAPTER_CONF_KEEP_ALIVE);\n+        keepAlive.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_CONF_KEEP_ALIVE));\n+        keepAlive.setRequired(false);\n+\n+        staticPropertyList.add(brokerUrl);\n+        staticPropertyList.add(userName);\n+        staticPropertyList.add(password);\n+        staticPropertyList.add(clearSession);\n+        staticPropertyList.add(keepAlive);\n+\n+        return staticPropertyList;\n+\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        // set topic\n+        Property topicProperty = new Property(MQTTEventAdapterConstants.ADAPTER_MESSAGE_TOPIC);\n+        topicProperty.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_MESSAGE_TOPIC));\n+        topicProperty.setRequired(true);\n+\n+        // set clientId\n+        Property clientId = new Property(MQTTEventAdapterConstants.ADAPTER_MESSAGE_CLIENTID);\n+        clientId.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_MESSAGE_CLIENTID));\n+        clientId.setRequired(true);\n+\n+        // set Quality of Service\n+        Property qos = new Property(MQTTEventAdapterConstants.ADAPTER_MESSAGE_QOS);\n+        qos.setDisplayName(\n+                resourceBundle.getString(MQTTEventAdapterConstants.ADAPTER_MESSAGE_QOS));\n+        qos.setRequired(false);\n+        qos.setOptions(new String[]{\"0\", \"1\", \"2\"});\n+        qos.setDefaultValue(\"1\");\n+\n+        dynamicPropertyList.add(topicProperty);\n+        dynamicPropertyList.add(clientId);\n+        dynamicPropertyList.add(qos);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                                                 Map<String, String> globalProperties) {\n+        return new MQTTEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+}"
        },
        {
            "sha": "80f040957e29db2042842a64f64e3cebf0c542a5",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/internal/ds/MQTTEventAdapterServiceDS.java",
            "status": "added",
            "additions": 53,
            "deletions": 0,
            "changes": 53,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Fds%2FMQTTEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Fds%2FMQTTEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Fds%2FMQTTEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,53 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.mqtt.MQTTEventAdapterFactory;\n+\n+\n+/**\n+ * @scr.component component.name=\"output.Mqtt.AdapterService.component\" immediate=\"true\"\n+ */\n+public class MQTTEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(MQTTEventAdapterServiceDS.class);\n+\n+    /**\n+     * Deployment of the MQTT event adapter service will be done.\n+     *\n+     * @param context bundle context where service is registered\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory mqttEventAdapterFactory = new MQTTEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(),\n+                    mqttEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output MQTT event adapter service \");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not deployed the output MQTT event adapter service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "e795d189537a047ab4a7be1b918a14cf9418a8b4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/internal/util/MQTTAdapterPublisher.java",
            "status": "added",
            "additions": 132,
            "deletions": 0,
            "changes": 132,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTAdapterPublisher.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTAdapterPublisher.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTAdapterPublisher.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,132 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt.internal.util;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.eclipse.paho.client.mqttv3.MqttClient;\n+import org.eclipse.paho.client.mqttv3.MqttConnectOptions;\n+import org.eclipse.paho.client.mqttv3.MqttException;\n+import org.eclipse.paho.client.mqttv3.MqttMessage;\n+import org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+\n+\n+public class MQTTAdapterPublisher {\n+\n+    private static final Log log = LogFactory.getLog(MQTTAdapterPublisher.class);\n+\n+    private MqttClient mqttClient;\n+    private MqttConnectOptions connectionOptions;\n+    private boolean cleanSession;\n+    private int keepAlive;\n+    private MQTTBrokerConnectionConfiguration mqttBrokerConnectionConfiguration;\n+    private String mqttClientId;\n+    private String topic;\n+\n+    public MQTTAdapterPublisher(MQTTBrokerConnectionConfiguration mqttBrokerConnectionConfiguration,\n+                                String topic, String mqttClientId) {\n+\n+        this.mqttBrokerConnectionConfiguration = mqttBrokerConnectionConfiguration;\n+        this.mqttClientId = mqttClientId;\n+        this.cleanSession = mqttBrokerConnectionConfiguration.isCleanSession();\n+        this.keepAlive = mqttBrokerConnectionConfiguration.getKeepAlive();\n+        this.topic = topic;\n+\n+        //SORTING messages until the server fetches them\n+        String temp_directory = System.getProperty(MQTTEventAdapterConstants.ADAPTER_TEMP_DIRECTORY_NAME);\n+        MqttDefaultFilePersistence dataStore = new MqttDefaultFilePersistence(temp_directory);\n+\n+\n+        try {\n+            // Construct the connection options object that contains connection parameters\n+            // such as cleanSession and LWT\n+            connectionOptions = new MqttConnectOptions();\n+            connectionOptions.setCleanSession(cleanSession);\n+            connectionOptions.setKeepAliveInterval(keepAlive);\n+            if (this.mqttBrokerConnectionConfiguration.getBrokerPassword() != null) {\n+                connectionOptions\n+                        .setPassword(this.mqttBrokerConnectionConfiguration.getBrokerPassword().toCharArray());\n+            }\n+            if (this.mqttBrokerConnectionConfiguration.getBrokerUsername() != null) {\n+                connectionOptions.setUserName(this.mqttBrokerConnectionConfiguration.getBrokerUsername());\n+            }\n+\n+            // Construct an MQTT blocking mode client\n+            mqttClient = new MqttClient(this.mqttBrokerConnectionConfiguration.getBrokerUrl(), this.mqttClientId,\n+                    dataStore);\n+            mqttClient.connect(connectionOptions);\n+\n+        } catch (MqttException e) {\n+            log.error(\"Error occurred when constructing MQTT client for broker url : \"\n+                    + mqttBrokerConnectionConfiguration.getBrokerUrl());\n+            handleException(e);\n+        }\n+\n+    }\n+\n+    public void publish(int qos, String payload) {\n+        try {\n+            // Create and configure a message\n+            MqttMessage message = new MqttMessage(payload.getBytes());\n+            message.setQos(qos);\n+\n+            // Send the message to the server, control is not returned until\n+            // it has been delivered to the server meeting the specified\n+            // quality of service.\n+            mqttClient.publish(topic, message);\n+        } catch (MqttException e) {\n+            log.error(\"Error occurred when publishing message for MQTT server : \"\n+                    + mqttClient.getServerURI());\n+            handleException(e);\n+        }\n+    }\n+\n+    public void publish(String payload) {\n+        try {\n+            // Create and configure a message\n+            MqttMessage message = new MqttMessage(payload.getBytes());\n+            mqttClient.publish(topic, message);\n+        } catch (MqttException e) {\n+            log.error(\"Error occurred when publishing message for MQTT server : \"\n+                    + mqttClient.getServerURI());\n+            handleException(e);\n+        }\n+    }\n+\n+    public void close() throws OutputEventAdapterException {\n+        try {\n+            mqttClient.disconnect(1000);\n+            mqttClient.close();\n+        } catch (MqttException e) {\n+            throw new OutputEventAdapterException(e);\n+        }\n+    }\n+\n+    private void handleException(MqttException e) {\n+        //Check for Client not connected exception code and throw ConnectionUnavailableException\n+        if (e.getReasonCode() == 32104) {\n+            throw new ConnectionUnavailableException(e);\n+        } else {\n+            throw new OutputEventAdapterRuntimeException(e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "6adfb5ad21ed6098c6834b106169813000ae58c9",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/internal/util/MQTTBrokerConnectionConfiguration.java",
            "status": "added",
            "additions": 82,
            "deletions": 0,
            "changes": 82,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTBrokerConnectionConfiguration.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTBrokerConnectionConfiguration.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTBrokerConnectionConfiguration.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,82 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt.internal.util;\n+\n+public class MQTTBrokerConnectionConfiguration {\n+\n+    private String brokerUsername;\n+    private String brokerPassword;\n+    private boolean cleanSession = true;\n+    private int keepAlive = 60000;\n+    private String brokerUrl;\n+\n+    public String getBrokerPassword() {\n+        return brokerPassword;\n+    }\n+\n+    public void setBrokerPassword(String brokerPassword) {\n+        this.brokerPassword = brokerPassword;\n+    }\n+\n+    public String getBrokerUsername() {\n+        return brokerUsername;\n+    }\n+\n+    public void setBrokerUsername(String brokerUsername) {\n+        this.brokerUsername = brokerUsername;\n+    }\n+\n+    public void setCleanSession(boolean cleanSession) {\n+        this.cleanSession = cleanSession;\n+    }\n+\n+\n+    public boolean isCleanSession() {\n+        return cleanSession;\n+    }\n+\n+    public String getBrokerUrl() {\n+        return brokerUrl;\n+    }\n+\n+    public void setBrokerUrl(String brokerUrl) {\n+        this.brokerUrl = brokerUrl;\n+    }\n+\n+    public int getKeepAlive() {\n+        return keepAlive;\n+    }\n+\n+    public void setKeepAlive(int keepAlive) {\n+        this.keepAlive = keepAlive;\n+    }\n+\n+    public MQTTBrokerConnectionConfiguration(String brokerUrl, String brokerUsername,\n+                                             String brokerPassword, String cleanSession,\n+                                             String keepAlive) {\n+        this.brokerUsername = brokerUsername;\n+        this.brokerPassword = brokerPassword;\n+        this.brokerUrl = brokerUrl;\n+        if (cleanSession != null) {\n+            this.cleanSession = Boolean.parseBoolean(cleanSession);\n+        }\n+        if (keepAlive != null) {\n+            this.keepAlive = Integer.parseInt(keepAlive);\n+        }\n+    }\n+}"
        },
        {
            "sha": "cf5e90b78d4c952a94186d9711eee84ec37af74f",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/java/org/wso2/carbon/event/output/adapter/mqtt/internal/util/MQTTEventAdapterConstants.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Finternal%2Futil%2FMQTTEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,42 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.mqtt.internal.util;\n+\n+\n+public final class MQTTEventAdapterConstants {\n+\n+    private MQTTEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_MQTT = \"mqtt\";\n+    public static final String ADAPTER_CONF_URL = \"url\";\n+    public static final String ADAPTER_CONF_USERNAME = \"username\";\n+    public static final String ADAPTER_CONF_USERNAME_HINT = \"username.hint\";\n+    public static final String ADAPTER_CONF_PASSWORD = \"password\";\n+    public static final String ADAPTER_CONF_PASSWORD_HINT = \"password.hint\";\n+    public static final String ADAPTER_CONF_URL_HINT = \"url.hint\";\n+    public static final String ADAPTER_MESSAGE_TOPIC = \"topic\";\n+    public static final String ADAPTER_MESSAGE_CLIENTID = \"clientId\";\n+    public static final String ADAPTER_MESSAGE_QOS = \"qos\";\n+    public static final String ADAPTER_CONF_CLEAN_SESSION = \"cleanSession\";\n+    public static final String ADAPTER_CONF_CLEAN_SESSION_HINT = \"cleanSession.hint\";\n+    public static final String ADAPTER_CONF_KEEP_ALIVE = \"keepAlive\";\n+    public static final String ADAPTER_TEMP_DIRECTORY_NAME = \"java.io.tmpdir\";\n+\n+\n+}"
        },
        {
            "sha": "287096bd9743782b5680d2b365d71a06eb2bd7f9",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.mqtt/src/main/resources/org/wso2/carbon/event/output/adapter/mqtt/i18n/Resources.properties",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.mqtt%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fmqtt%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,30 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+topic=Topic\n+clientId=Client Id\n+url=Broker Url\n+username=Username\n+username.hint=Username of the broker (if required)\n+password=Password\n+password.hint=Password of the broker (if required)\n+url.hint=MQTT broker url\n+cleanSession=Clean Session\n+cleanSession.hint=Persist topic subscriptions and ack positions across client sessions\n+keepAlive=Keep Alive (In seconds)\n+qos=Quality of Service"
        },
        {
            "sha": "b6860a48f686b9219315102ffbbc72112b6fb13d",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/pom.xml",
            "status": "added",
            "additions": 96,
            "deletions": 0,
            "changes": 96,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,96 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright (c) 2014 - 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>org.wso2.carbon.event.output.adapter.rdbms</artifactId>\n+    <name>WSO2 Carbon - Event Output Adapter - RDBMS Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.rdbms provides the back-end\n+        functionality of output rdbms adapter\n+    </description>\n+    <packaging>bundle</packaging>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.commons</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.ndatasource.core</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.rdbms.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.rdbms.internal.*,\n+                            org.wso2.carbon.event.output.adapter.rdbms.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "e500cba2a505782cfb991129e66fb06cfb1c8427",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/RDBMSEventAdapter.java",
            "status": "added",
            "additions": 594,
            "deletions": 0,
            "changes": 594,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,594 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.databridge.commons.Attribute;\n+import org.wso2.carbon.databridge.commons.AttributeType;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.rdbms.internal.ExecutionInfo;\n+import org.wso2.carbon.event.output.adapter.rdbms.internal.ds.RDBMSEventAdapterServiceValueHolder;\n+import org.wso2.carbon.event.output.adapter.rdbms.internal.util.RDBMSEventAdapterConstants;\n+import org.wso2.carbon.ndatasource.common.DataSourceException;\n+import org.wso2.carbon.ndatasource.core.CarbonDataSource;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.ResourceBundle;\n+\n+/**\n+ * Class will Insert or Update/Insert values to selected RDBMS\n+ */\n+public class RDBMSEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(RDBMSEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private ResourceBundle resourceBundle;\n+    private Map<String, String> dbTypeMappings;\n+    private ExecutionInfo executionInfo = null;\n+    private DataSource dataSource;\n+\n+    public RDBMSEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+            Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        resourceBundle = ResourceBundle\n+                .getBundle(\"org.wso2.carbon.event.output.adapter.rdbms.i18n.Resources\", Locale.getDefault());\n+        populateDbMappings();\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+\n+        DataSource dataSource;\n+        Connection con = null;\n+        try {\n+            CarbonDataSource carbonDataSource = RDBMSEventAdapterServiceValueHolder.getDataSourceService().\n+                    getDataSource(eventAdapterConfiguration.getStaticProperties().\n+                            get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME));\n+            if (carbonDataSource != null) {\n+                dataSource = (DataSource) carbonDataSource.getDSObject();\n+                con = dataSource.getConnection();\n+            } else {\n+                throw new OutputEventAdapterRuntimeException(\"There is no any datasource found named \"\n+                        + RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME + \" to connect.\");\n+            }\n+        } catch (Exception e) {\n+            throw new OutputEventAdapterRuntimeException(e);\n+        } finally {\n+            cleanupConnections(null, con);\n+        }\n+    }\n+\n+    @Override\n+    public void connect() {\n+\n+        Connection con = null;\n+        try {\n+            CarbonDataSource carbonDataSource = RDBMSEventAdapterServiceValueHolder.getDataSourceService()\n+                    .getDataSource(\n+                            eventAdapterConfiguration.getStaticProperties().get(RDBMSEventAdapterConstants\n+                                    .ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME));\n+            dataSource = (DataSource) carbonDataSource.getDSObject();\n+            con = ((DataSource) carbonDataSource.getDSObject()).getConnection();\n+        } catch (DataSourceException e) {\n+            log.error(\"There is no any data-source found called : \" + eventAdapterConfiguration.getStaticProperties()\n+                    .get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME), e);\n+            throw new ConnectionUnavailableException(e.getMessage(), e);\n+        } catch (SQLException e) {\n+            throw new ConnectionUnavailableException(e);\n+        } finally {\n+            cleanupConnections(null, con);\n+        }\n+\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        String tableName;\n+\n+        try {\n+            if (message instanceof Map) {\n+\n+                tableName = eventAdapterConfiguration.getStaticProperties().get(RDBMSEventAdapterConstants\n+                        .ADAPTER_GENERIC_RDBMS_TABLE_NAME);\n+                String executionMode = eventAdapterConfiguration.getStaticProperties().get(RDBMSEventAdapterConstants\n+                        .ADAPTER_GENERIC_RDBMS_EXECUTION_MODE);\n+                String updateColumnKeys = eventAdapterConfiguration.getStaticProperties().get(RDBMSEventAdapterConstants\n+                        .ADAPTER_GENERIC_RDBMS_UPDATE_KEYS);\n+\n+                if (executionInfo == null) {\n+                    executionInfo = new ExecutionInfo();\n+                    initializeDatabaseExecutionInfo(tableName, executionMode, updateColumnKeys, message);\n+                }\n+                executeProcessActions(message,tableName);\n+            } else {\n+                throw new OutputEventAdapterRuntimeException(\n+                        message.getClass().toString() + \"is not a compatible type. Hence Event is dropped.\");\n+            }\n+        } catch (OutputEventAdapterException e) {\n+            log.error(e.getMessage() + \" Hence Event is dropped.\", e);\n+        }\n+    }\n+\n+    /**\n+     * Construct all the queries and assign to executionInfo instance\n+     */\n+    private void initializeDatabaseExecutionInfo(String tableName, String executionMode, String updateColumnKeys,\n+            Object message) {\n+\n+        if (resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_UPDATE)\n+                .equalsIgnoreCase(executionMode)) {\n+            executionInfo.setUpdateMode(true);\n+        }\n+\n+        //Constructing (eg: ID  varchar2(255),INFORMATION  varchar2(255)) type values : column_types\n+        StringBuilder column_types = new StringBuilder(\"\");\n+\n+        //Constructing (eg: id,information) type values : columns\n+        StringBuilder columns = new StringBuilder(\"\");\n+\n+        //Constructing (eg: ?,?,?) type values : valuePositionsBuilder\n+        StringBuilder valuePositionsBuilder = new StringBuilder(\"\");\n+\n+        List<Attribute> tableInsertColumnList = new ArrayList<Attribute>();\n+        boolean appendComma = false;\n+        for (Map.Entry<String, Object> entry : (((Map<String, Object>) message).entrySet())) {\n+            AttributeType type = null;\n+            String columnName = entry.getKey().toUpperCase();\n+            if (appendComma) {\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_COMMA));\n+            }\n+            column_types.append(columnName).append(\"  \");\n+            if (entry.getValue() instanceof Integer) {\n+                type = AttributeType.INT;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_INTEGER));\n+            } else if (entry.getValue() instanceof Long) {\n+                type = AttributeType.LONG;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_LONG));\n+            } else if (entry.getValue() instanceof Float) {\n+                type = AttributeType.FLOAT;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_FLOAT));\n+            } else if (entry.getValue() instanceof Double) {\n+                type = AttributeType.DOUBLE;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DOUBLE));\n+            } else if (entry.getValue() instanceof String) {\n+                type = AttributeType.STRING;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_STRING));\n+            } else if (entry.getValue() instanceof Boolean) {\n+                type = AttributeType.BOOL;\n+                column_types.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_BOOLEAN));\n+            }\n+            Attribute attribute = new Attribute(entry.getKey(), type);\n+            if (appendComma) {\n+                columns.append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_COMMA));\n+                valuePositionsBuilder\n+                        .append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_COMMA));\n+            } else {\n+                appendComma = true;\n+            }\n+            tableInsertColumnList.add(attribute);\n+            columns.append(attribute.getName());\n+            valuePositionsBuilder\n+                    .append(dbTypeMappings.get(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_QUESTION_MARK));\n+        }\n+\n+        //Constructing quert to create a new table\n+        String createTableQuery = constructQuery(tableName, dbTypeMappings.get(RDBMSEventAdapterConstants\n+                .ADAPTER_GENERIC_RDBMS_CREATE_TABLE), column_types, null, null, null, null);\n+\n+        //constructing query to insert date into the table row\n+        String insertTableRowQuery = constructQuery(tableName, dbTypeMappings.get(RDBMSEventAdapterConstants\n+                .ADAPTER_GENERIC_RDBMS_INSERT_DATA), null, columns, valuePositionsBuilder, null, null);\n+\n+        //Constructing query to check for the table existence\n+        String isTableExistQuery = constructQuery(tableName, dbTypeMappings.get(RDBMSEventAdapterConstants\n+                .ADAPTER_GENERIC_RDBMS_TABLE_EXIST), null, null, null, null, null);\n+\n+        executionInfo.setPreparedInsertStatement(insertTableRowQuery);\n+        executionInfo.setPreparedCreateTableStatement(createTableQuery);\n+        executionInfo.setInsertQueryColumnOrder(tableInsertColumnList);\n+        executionInfo.setPreparedTableExistenceCheckStatement(isTableExistQuery);\n+\n+        if (executionMode.equalsIgnoreCase(\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_UPDATE))) {\n+\n+            String[] queryAttributes = updateColumnKeys.trim().split(\",\");\n+            List<Attribute> queryAttributeList = new ArrayList<Attribute>(queryAttributes.length);\n+\n+            for (int i = 0; i < queryAttributes.length; i++) {\n+\n+                for (Attribute attribute : executionInfo.getInsertQueryColumnOrder()) {\n+                    if (queryAttributes[i].equalsIgnoreCase(attribute.getName())) {\n+                        queryAttributeList.add(attribute);\n+                        break;\n+                    }\n+                }\n+            }\n+            executionInfo.setExistenceCheckQueryColumnOrder(queryAttributeList);\n+\n+            //Constructing (eg: information = ?  , latitude = ?) type values : column_values\n+            StringBuilder column_values = new StringBuilder(\"\");\n+            List<Attribute> updateAttributes = new ArrayList<Attribute>();\n+\n+            appendComma = false;\n+            for (Attribute at : executionInfo.getInsertQueryColumnOrder()) {\n+                if (!executionInfo.getExistenceCheckQueryColumnOrder().contains(at)) {\n+                    if (appendComma) {\n+                        column_values.append(\" \").append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                                .ADAPTER_GENERIC_RDBMS_COMMA)).append(\" \");\n+                    }\n+                    column_values.append(at.getName());\n+                    column_values.append(\" \").append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                            .ADAPTER_GENERIC_RDBMS_EQUAL)).append(\" \")\n+                            .append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                                    .ADAPTER_GENERIC_RDBMS_QUESTION_MARK)).append(\" \");\n+                    updateAttributes.add(at);\n+                    appendComma = true;\n+                }\n+            }\n+\n+            //Constructing (eg: id = ?) type values for WHERE condition : condition\n+            StringBuilder condition = new StringBuilder(\"\");\n+            boolean appendAnd = false;\n+            for (Attribute at : executionInfo.getExistenceCheckQueryColumnOrder()) {\n+                if (appendAnd) {\n+                    condition.append(\" \").append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                            .ADAPTER_GENERIC_RDBMS_AND)).append(\" \");\n+                }\n+                condition.append(at.getName());\n+                condition.append(\" \").append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                        .ADAPTER_GENERIC_RDBMS_EQUAL)).append(\" \")\n+                        .append(dbTypeMappings.get(RDBMSEventAdapterConstants\n+                                .ADAPTER_GENERIC_RDBMS_QUESTION_MARK)).append(\" \");\n+                updateAttributes.add(at);\n+                appendAnd = true;\n+            }\n+            executionInfo.setUpdateQueryColumnOrder(updateAttributes);\n+\n+            //constructing query to update data into the table\n+            String tableUpdateRowQuery = constructQuery(tableName, dbTypeMappings.get(RDBMSEventAdapterConstants\n+                    .ADAPTER_GENERIC_RDBMS_UPDATE_TABLE), null, null, null, column_values, condition);\n+            executionInfo.setPreparedUpdateStatement(tableUpdateRowQuery);\n+        }\n+\n+    }\n+\n+    public void executeProcessActions(Object message,String tableName)\n+            throws OutputEventAdapterException {\n+\n+        createTableIfNotExist(tableName);\n+        executeDbActions(message);\n+    }\n+\n+    public void executeDbActions(Object message)\n+            throws OutputEventAdapterException {\n+\n+        PreparedStatement stmt = null;\n+        Connection con;\n+\n+        try {\n+            con = dataSource.getConnection();\n+            con.setAutoCommit(false);\n+        } catch (SQLException e) {\n+            throw new ConnectionUnavailableException(e);\n+        }\n+\n+        Map<String, Object> map = (Map<String, Object>) message;\n+\n+        boolean executeInsert = true;\n+\n+        try {\n+            synchronized (this) {\n+                if (executionInfo.isUpdateMode()) {\n+\n+                    stmt = con.prepareStatement(executionInfo.getPreparedUpdateStatement());\n+                    populateStatement(map, stmt, executionInfo.getUpdateQueryColumnOrder());\n+                    int updatedRows = stmt.executeUpdate();\n+                    con.commit();\n+\n+                    if (stmt != null) {\n+                        stmt.close();\n+                    }\n+\n+                    if (updatedRows > 0) {\n+                        executeInsert = false;\n+                    }\n+                }\n+\n+                if (executeInsert) {\n+                    stmt = con.prepareStatement(executionInfo.getPreparedInsertStatement());\n+                    populateStatement(map, stmt, executionInfo.getInsertQueryColumnOrder());\n+                    stmt.executeUpdate();\n+                    con.commit();\n+                }\n+\n+            }\n+        } catch (SQLException e) {\n+            throw new OutputEventAdapterException(\n+                    \"Cannot Execute Insert/Update Query for event \" + message.toString() + \" \" + e.getMessage(), e);\n+        } finally {\n+            cleanupConnections(stmt, con);\n+        }\n+    }\n+\n+    /**\n+     * Populating column values to table Insert query\n+     */\n+    private void populateStatement(Map<String, Object> map, PreparedStatement stmt, List<Attribute> colOrder)\n+            throws OutputEventAdapterException {\n+        Attribute attribute = null;\n+\n+        try {\n+            for (int i = 0; i < colOrder.size(); i++) {\n+                attribute = colOrder.get(i);\n+                Object value = map.get(attribute.getName());\n+                if (value != null) {\n+                    switch (attribute.getType()) {\n+                    case INT:\n+                        stmt.setInt(i + 1, (Integer) value);\n+                        break;\n+                    case LONG:\n+                        stmt.setLong(i + 1, (Long) value);\n+                        break;\n+                    case FLOAT:\n+                        stmt.setFloat(i + 1, (Float) value);\n+                        break;\n+                    case DOUBLE:\n+                        stmt.setDouble(i + 1, (Double) value);\n+                        break;\n+                    case STRING:\n+                        stmt.setString(i + 1, (String) value);\n+                        break;\n+                    case BOOL:\n+                        stmt.setBoolean(i + 1, (Boolean) value);\n+                        break;\n+                    }\n+                } else {\n+                    throw new OutputEventAdapterException(\"Cannot Execute Insert/Update. Null value detected for \" +\n+                            \"attribute\" + attribute.getName());\n+                }\n+            }\n+        } catch (SQLException e) {\n+            cleanupConnections(stmt, null);\n+            throw new OutputEventAdapterException(\"Cannot set value to attribute name \" + attribute.getName() + \". \" +\n+                    \"Hence dropping the event.\" + e.getMessage(), e);\n+        }\n+    }\n+\n+    public void createTableIfNotExist(String tableName)\n+            throws OutputEventAdapterException {\n+\n+        Statement stmt = null;\n+        Boolean tableExists = true;\n+        Connection con;\n+\n+        try {\n+            con = dataSource.getConnection();\n+            con.setAutoCommit(false);\n+        } catch (SQLException e) {\n+            throw new ConnectionUnavailableException(e);\n+        }\n+\n+        if (!executionInfo.isTableExist()) {\n+\n+            try {\n+                stmt = con.createStatement();\n+                stmt.executeQuery(executionInfo.getPreparedTableExistenceCheckStatement());\n+                executionInfo.setTableExist(true);\n+            } catch (SQLException e) {\n+                tableExists = false;\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Table \" + tableName + \" does not Exist. Table Will be created. \");\n+                }\n+            }\n+\n+            try {\n+                if (!tableExists) {\n+                    stmt.executeUpdate(executionInfo.getPreparedCreateTableStatement());\n+                    con.commit();\n+                    executionInfo.setTableExist(true);\n+                }\n+            } catch (SQLException e) {\n+                throw new OutputEventAdapterException(\"Cannot Execute Create Table Query. \" + e.getMessage(), e);\n+            } finally {\n+                cleanupConnections(stmt, con);\n+            }\n+        }\n+    }\n+\n+    private void cleanupConnections(Statement stmt, Connection connection) {\n+        if (stmt != null) {\n+            try {\n+                stmt.close();\n+            } catch (SQLException e) {\n+                log.error(\"unable to close statement.\" + e.getMessage(), e);\n+            }\n+        }\n+        if (connection != null) {\n+            try {\n+                connection.close();\n+            } catch (SQLException e) {\n+                log.error(\"unable to close connection.\" + e.getMessage(), e);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Replace attribute values with target build queries\n+     */\n+    public String constructQuery(String tableName, String query, StringBuilder column_types, StringBuilder columns,\n+            StringBuilder values, StringBuilder column_values, StringBuilder condition) {\n+\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_TABLE_NAME)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_TABLE_NAME, tableName);\n+        }\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_TYPES)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_TYPES,\n+                    column_types.toString());\n+        }\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMNS)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMNS,\n+                    columns.toString());\n+        }\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_VALUES)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_VALUES, values.toString());\n+        }\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_VALUES)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_VALUES,\n+                    column_values.toString());\n+        }\n+        if (query.contains(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_CONDITION)) {\n+            query = query.replace(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_ATTRIBUTE_CONDITION,\n+                    condition.toString());\n+        }\n+        return query;\n+    }\n+\n+    /**\n+     * Populate specific db Mappings\n+     */\n+    private void populateDbMappings() throws OutputEventAdapterException {\n+\n+        String dbName;\n+        dbTypeMappings = new HashMap<String, String>();\n+        Connection con;\n+\n+        try {\n+            CarbonDataSource carbonDataSource = RDBMSEventAdapterServiceValueHolder.getDataSourceService()\n+                    .getDataSource(\n+                            eventAdapterConfiguration.getStaticProperties().get(RDBMSEventAdapterConstants\n+                                    .ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME));\n+            con = ((DataSource) carbonDataSource.getDSObject()).getConnection();\n+            DatabaseMetaData databaseMetaData = con.getMetaData();\n+            dbName = databaseMetaData.getDatabaseProductName();\n+            dbName = dbName.toLowerCase();\n+        } catch (DataSourceException e) {\n+            log.error(\n+                    \"There is no any data-source found called : \" + eventAdapterConfiguration.getStaticProperties().get(\n+                            RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME), e);\n+            throw new ConnectionUnavailableException(e.getMessage(), e);\n+        } catch (SQLException e) {\n+            throw new ConnectionUnavailableException(e);\n+        }\n+\n+       // Map<String, String> defaultMappings = new HashMap<String, String>();\n+        String[] staticAttributes = { RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_STRING,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DOUBLE,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_INTEGER,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_LONG,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_FLOAT,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_BOOLEAN,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_CREATE_TABLE,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_INSERT_DATA,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_TABLE_EXIST,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_UPDATE_TABLE,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_PROPERTY_DATA_TYPE_IN_TABLE,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_PROPERTY_SELECT_FROM_TABLE,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_COMMA,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_QUESTION_MARK,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EQUAL,\n+                RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_AND };\n+\n+        Boolean staticAttributeExist;\n+        String attribute = null;\n+        Map<String, String> defaultMappings = new HashMap<String, String>();\n+\n+\n+        for(int i=0 ; i<staticAttributes.length ; i++){\n+            staticAttributeExist = false;\n+            for (Map.Entry<String, String> entry : globalProperties.entrySet()) {\n+                attribute = staticAttributes[i];\n+                if(staticAttributes[i].equals(entry.getKey())){\n+                    staticAttributeExist = true;\n+                    defaultMappings.put(entry.getKey(), entry.getValue());\n+                    break;\n+                }\n+            }\n+            if(!staticAttributeExist){\n+                throw new OutputEventAdapterRuntimeException(\"A mandatory attribute \" + attribute + \" does not exist\");\n+            }\n+        }\n+\n+        Boolean valueExist;\n+\n+        for (Map.Entry<String, String> defaultMap : defaultMappings.entrySet()) {\n+            valueExist = false;\n+            for (Map.Entry<String, String> entry : globalProperties.entrySet()) {\n+                if (entry.getKey().contains(dbName)) {\n+                    if (entry.getKey().contains(defaultMap.getKey())) {\n+                        dbTypeMappings.put(defaultMap.getKey(), entry.getValue());\n+                        valueExist = true;\n+                        break;\n+                    }\n+                }\n+            }\n+            if(!valueExist){\n+                dbTypeMappings.put(defaultMap.getKey(), defaultMap.getValue());\n+            }\n+        }\n+\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+\n+        if (dataSource != null) {\n+            dataSource = null;\n+        }\n+        if (executionInfo != null) {\n+            executionInfo.setTableExist(false);\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+        if (executionInfo != null) {\n+            executionInfo = null;\n+        }\n+        if (dataSource != null) {\n+            dataSource = null;\n+        }\n+    }\n+}"
        },
        {
            "sha": "9eb906430e5ab57315c9f1336dc0f1ccf89789c0",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/RDBMSEventAdapterFactory.java",
            "status": "added",
            "additions": 99,
            "deletions": 0,
            "changes": 99,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2FRDBMSEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,99 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms;\n+\n+import org.wso2.carbon.event.output.adapter.core.MessageType;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.core.Property;\n+import org.wso2.carbon.event.output.adapter.rdbms.internal.util.RDBMSEventAdapterConstants;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.ResourceBundle;\n+\n+public class RDBMSEventAdapterFactory extends OutputEventAdapterFactory {\n+\n+    private ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.rdbms.i18n\" +\n+            \".Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return RDBMSEventAdapterConstants.ADAPTER_TYPE_GENERIC_RDBMS;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportOutputMessageTypes = new ArrayList<String>();\n+        supportOutputMessageTypes.add(MessageType.MAP);\n+        return supportOutputMessageTypes;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+\n+        Property datasourceName = new Property(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME);\n+        datasourceName.setDisplayName(\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME));\n+        datasourceName.setRequired(true);\n+        staticPropertyList.add(datasourceName);\n+\n+        Property tableName = new Property(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_TABLE_NAME);\n+        tableName.setDisplayName(resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_TABLE_NAME));\n+        tableName.setRequired(true);\n+        staticPropertyList.add(tableName);\n+\n+        Property executionMode = new Property(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE);\n+        executionMode.setDisplayName(\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE));\n+        executionMode.setOptions(new String[] {\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_INSERT),\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_UPDATE) });\n+        executionMode.setHint(\n+                resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_HINT));\n+        executionMode.setRequired(true);\n+        staticPropertyList.add(executionMode);\n+\n+        Property updateColumnKeys = new Property(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_UPDATE_KEYS);\n+        updateColumnKeys\n+                .setDisplayName(resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_UPDATE_KEYS));\n+        updateColumnKeys\n+                .setHint(resourceBundle.getString(RDBMSEventAdapterConstants.ADAPTER_GENERIC_RDBMS_UPDATE_KEYS_HINT));\n+        staticPropertyList.add(updateColumnKeys);\n+\n+        return staticPropertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+            Map<String, String> globalProperties) {\n+        return new RDBMSEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+}"
        },
        {
            "sha": "ac08ba09bd2457497650eab17cfef50df2cbf40c",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/internal/ExecutionInfo.java",
            "status": "added",
            "additions": 115,
            "deletions": 0,
            "changes": 115,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2FExecutionInfo.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2FExecutionInfo.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2FExecutionInfo.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,115 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms.internal;\n+\n+\n+import org.wso2.carbon.databridge.commons.Attribute;\n+\n+import javax.sql.DataSource;\n+import java.util.List;\n+\n+/**\n+ * Contain all the configuration details to execute db actions\n+ */\n+public class ExecutionInfo {\n+\n+    private List<Attribute> insertQueryColumnOrder;\n+    private List<Attribute> updateQueryColumnOrder;\n+    private List<Attribute> existenceCheckQueryColumnOrder;\n+    private String preparedInsertStatement;\n+    private String preparedUpdateStatement;\n+    private String preparedCreateTableStatement;\n+    private String preparedTableExistenceCheckStatement;\n+    private boolean updateMode;\n+    private boolean tableExist = false;\n+\n+    public List<Attribute> getInsertQueryColumnOrder() {\n+        return insertQueryColumnOrder;\n+    }\n+\n+    public void setInsertQueryColumnOrder(List<Attribute> insertQueryColumnOrder) {\n+        this.insertQueryColumnOrder = insertQueryColumnOrder;\n+    }\n+\n+    public String getPreparedInsertStatement() {\n+        return preparedInsertStatement;\n+    }\n+\n+    public void setPreparedInsertStatement(String insertStatementPrefix) {\n+        this.preparedInsertStatement = insertStatementPrefix;\n+    }\n+\n+    public String getPreparedUpdateStatement() {\n+        return preparedUpdateStatement;\n+    }\n+\n+    public void setPreparedUpdateStatement(String preparedUpdateStatement) {\n+        this.preparedUpdateStatement = preparedUpdateStatement;\n+    }\n+\n+    public boolean isUpdateMode() {\n+        return updateMode;\n+    }\n+\n+    public void setUpdateMode(boolean updateMode) {\n+        this.updateMode = updateMode;\n+    }\n+\n+    public String getPreparedCreateTableStatement() {\n+        return preparedCreateTableStatement;\n+    }\n+\n+    public void setPreparedCreateTableStatement(String preparedCreateTableStatement) {\n+        this.preparedCreateTableStatement = preparedCreateTableStatement;\n+    }\n+\n+    public List<Attribute> getUpdateQueryColumnOrder() {\n+        return updateQueryColumnOrder;\n+    }\n+\n+    public void setUpdateQueryColumnOrder(List<Attribute> updateQueryColumnOrder) {\n+        this.updateQueryColumnOrder = updateQueryColumnOrder;\n+    }\n+\n+    public List<Attribute> getExistenceCheckQueryColumnOrder() {\n+        return existenceCheckQueryColumnOrder;\n+    }\n+\n+    public void setExistenceCheckQueryColumnOrder(List<Attribute> existenceCheckQueryColumnOrder) {\n+        this.existenceCheckQueryColumnOrder = existenceCheckQueryColumnOrder;\n+    }\n+\n+    public String getPreparedTableExistenceCheckStatement() {\n+        return preparedTableExistenceCheckStatement;\n+    }\n+\n+    public void setPreparedTableExistenceCheckStatement(String preparedTableExistenceCheckStatement) {\n+        this.preparedTableExistenceCheckStatement = preparedTableExistenceCheckStatement;\n+    }\n+\n+    public boolean isTableExist() {\n+        return tableExist;\n+    }\n+\n+    public void setTableExist(boolean tableExist) {\n+        this.tableExist = tableExist;\n+    }\n+}"
        },
        {
            "sha": "86a5cbe92732fdfd6453396f24358c6df855c4b3",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/internal/ds/RDBMSEventAdapterServiceDS.java",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,64 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.rdbms.RDBMSEventAdapterFactory;\n+import org.wso2.carbon.ndatasource.core.DataSourceService;\n+\n+/**\n+ * @scr.component name=\"output.RDBMSEventAdapterService.component\" immediate=\"true\"\n+ * @scr.reference name=\"org.wso2.carbon.ndatasource\" interface=\"org.wso2.carbon.ndatasource.core.DataSourceService\"\n+ * cardinality=\"1..1\" policy=\"dynamic\" bind=\"setDataSourceService\" unbind=\"unsetDataSourceService\"\n+ */\n+public class RDBMSEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(RDBMSEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the agent service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory rdbmsEventAdapterFactory = new RDBMSEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), rdbmsEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output rdbms event adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output rdbms event adapter service \", e);\n+        }\n+    }\n+\n+    protected void setDataSourceService(DataSourceService dataSourceService) {\n+        RDBMSEventAdapterServiceValueHolder.setDataSourceService(dataSourceService);\n+    }\n+\n+    protected void unsetDataSourceService(DataSourceService dataSourceService) {\n+        RDBMSEventAdapterServiceValueHolder.setDataSourceService(null);\n+    }\n+}"
        },
        {
            "sha": "006580f0ab5e90e24e33c81bc7524a965f5fc335",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/internal/ds/RDBMSEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Fds%2FRDBMSEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,37 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms.internal.ds;\n+\n+import org.wso2.carbon.ndatasource.core.DataSourceService;\n+\n+public class RDBMSEventAdapterServiceValueHolder {\n+\n+\n+    private static DataSourceService dataSourceService;\n+\n+    public static void setDataSourceService(DataSourceService dataSourceService) {\n+        RDBMSEventAdapterServiceValueHolder.dataSourceService = dataSourceService;\n+    }\n+\n+    public static DataSourceService getDataSourceService() {\n+        return dataSourceService;\n+    }\n+}"
        },
        {
            "sha": "400c17a2ff60f4f98d1cc8181d27061fae526e4a",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/java/org/wso2/carbon/event/output/adapter/rdbms/internal/util/RDBMSEventAdapterConstants.java",
            "status": "added",
            "additions": 65,
            "deletions": 0,
            "changes": 65,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Futil%2FRDBMSEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Futil%2FRDBMSEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Finternal%2Futil%2FRDBMSEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,65 @@\n+/*\n+ *\n+ *   Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ * /\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.rdbms.internal.util;\n+\n+\n+public final class RDBMSEventAdapterConstants {\n+\n+    private RDBMSEventAdapterConstants() {\n+    }\n+    public static final String ADAPTER_TYPE_GENERIC_RDBMS = \"rdbms\";\n+    public static final String ADAPTER_GENERIC_RDBMS_DATASOURCE_NAME = \"datasource.name\";\n+    public static final String ADAPTER_GENERIC_RDBMS_TABLE_NAME = \"table.name\";\n+    public static final String ADAPTER_GENERIC_RDBMS_EXECUTION_MODE = \"execution.mode\";\n+    public static final String ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_HINT = \"execution.mode.hint\";\n+    public static final String ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_UPDATE = \"execution.mode.update\";\n+    public static final String ADAPTER_GENERIC_RDBMS_EXECUTION_MODE_INSERT = \"execution.mode.insert\";\n+    public static final String ADAPTER_GENERIC_RDBMS_UPDATE_KEYS = \"update.keys\";\n+    public static final String ADAPTER_GENERIC_RDBMS_UPDATE_KEYS_HINT = \"update.keys.hint\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_TABLE_NAME = \"$TABLE_NAME\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_TYPES = \"$COLUMN_TYPES\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMNS = \"$COLUMNS\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_VALUES = \"$VALUES\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_COLUMN_VALUES = \"$COLUMN_VALUES\";\n+    public static final String ADAPTER_GENERIC_RDBMS_ATTRIBUTE_CONDITION = \"$CONDITION\";\n+    public static final String ADAPTER_GENERIC_RDBMS_COMMA = \"comma\";\n+    public static final String ADAPTER_GENERIC_RDBMS_INTEGER = \"integer\";\n+    public static final String ADAPTER_GENERIC_RDBMS_LONG = \"long\";\n+    public static final String ADAPTER_GENERIC_RDBMS_FLOAT = \"float\";\n+    public static final String ADAPTER_GENERIC_RDBMS_DOUBLE = \"double\";\n+    public static final String ADAPTER_GENERIC_RDBMS_STRING = \"string\";\n+    public static final String ADAPTER_GENERIC_RDBMS_BOOLEAN = \"boolean\";\n+    public static final String ADAPTER_GENERIC_RDBMS_QUESTION_MARK = \"questionMark\";\n+    public static final String ADAPTER_GENERIC_RDBMS_CREATE_TABLE = \"createTable\";\n+    public static final String ADAPTER_GENERIC_RDBMS_INSERT_DATA = \"insertDataToTable\";\n+    public static final String ADAPTER_GENERIC_RDBMS_TABLE_EXIST = \"isTableExist\";\n+    public static final String ADAPTER_GENERIC_RDBMS_EQUAL = \"equal\";\n+    public static final String ADAPTER_GENERIC_RDBMS_AND = \"and\";\n+    public static final String ADAPTER_GENERIC_RDBMS_UPDATE_TABLE = \"updateTableRow\";\n+    public static final String ADAPTER_GENERIC_RDBMS_PROPERTY_DATA_TYPE_IN_TABLE = \"selectAllColumnsDataTypeInTable\";\n+    public static final String ADAPTER_GENERIC_RDBMS_PROPERTY_SELECT_FROM_TABLE = \"selectFromTable\";\n+\n+\n+\n+\n+\n+\n+}"
        },
        {
            "sha": "f64ec11a123698a7551c471429bde8cec47bd738",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/main/resources/org/wso2/carbon/event/output/adapter/rdbms/i18n/Resources.properties",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Frdbms%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,26 @@\n+#\n+# Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+datasource.name=Data Source Name\n+table.name=Table Name\n+execution.mode=Execution Mode\n+execution.mode.hint=Choose between inserts or updates\n+execution.mode.update=update-or-insert\n+execution.mode.insert=insert\n+update.keys=Composite key columns\n+update.keys.hint=Attributes used for uniqueness checks for updates. Use \"comma\" to separate if more than one attribute is selected."
        },
        {
            "sha": "56f0837694ac14d1e2ff4b5432f622d9b942dd58",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.rdbms/src/test/resources/output-event-adapters.xml",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.rdbms%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+<!--\n+  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<outputEventAdaptersConfig>\n+\n+    <adapterConfig type=\"rdbms\">\n+        <property key=\"string\">VARCHAR(255)</property>\n+        <property key=\"double\">DOUBLE</property>\n+        <property key=\"integer\">INT</property>\n+        <property key=\"long\">BIGINT</property>\n+        <property key=\"float\">FLOAT</property>\n+        <property key=\"boolean\">BOOL</property>\n+        <property key=\"createTable\">CREATE TABLE $TABLE_NAME ($COLUMN_TYPES)</property>\n+        <property key=\"insertDataToTable\">INSERT INTO $TABLE_NAME ($COLUMNS) VALUES ($VALUES)</property>\n+        <property key=\"isTableExist\">SELECT * FROM $TABLE_NAME limit 1</property>\n+        <property key=\"updateTableRow\">UPDATE $TABLE_NAME SET $COLUMN_VALUES WHERE $CONDITION</property>\n+        <property key=\"comma\">,</property>\n+        <property key=\"questionMark\">?</property>\n+        <property key=\"equal\">=</property>\n+        <property key=\"and\">AND</property>\n+        <property key=\"selectAllColumnsDataTypeInTable\">SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '$TABLE_NAME'</property>\n+        <property key=\"selectFromTable\">SELECT $COLUMNS FROM $TABLE_NAME</property>\n+        <property key=\"oracle.string\">varchar2(255)</property>\n+        <property key=\"oracle.integer\">NUMBER(10)</property>\n+        <property key=\"oracle.long\">NUMBER(19)</property>\n+        <property key=\"oracle.double\">NUMBER(19,4)</property>\n+        <property key=\"oracle.float\">NUMBER(19,4)</property>\n+        <property key=\"oracle.isTableExist\">SELECT * FROM $TABLE_NAME WHERE ROWNUM = 1</property>\n+        <property key=\"oracle.selectAllColumnsDataTypeInTable\">SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLS WHERE TABLE_NAME = '$TABLE_NAME'</property>\n+        <property key=\"mssql.string\">varchar2(255)</property>\n+        <property key=\"mssql.long\">NUMERIC(19)</property>\n+        <property key=\"mssql.float\">FLOAT(16)</property>\n+        <property key=\"mssql.integer\">INTEGER</property>\n+        <property key=\"mssql.isTableExist\">SELECT TOP 1 * FROM $TABLE_NAME</property>\n+        <property key=\"mssql.selectAllColumnsDataTypeInTable\">SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '$TABLE_NAME'</property>\n+        <property key=\"h2.integer\">varchar2(255)</property>\n+        <property key=\"h2.long\">REAL</property>\n+        <property key=\"h2.selectAllColumnsDataTypeInTable\">SHOW COLUMNS FROM $TABLE_NAME</property>\n+    </adapterConfig>\n+</outputEventAdaptersConfig>\n\\ No newline at end of file"
        },
        {
            "sha": "2082f965a238fdc2a9c07225aa7d1a056d2fd999",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/pom.xml",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <artifactId>org.wso2.carbon.event.output.adapter.sms</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output SMS Adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.sms provides the back-end\n+        functionality of sms event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.code</groupId>\n+            <artifactId>jsmpp</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.sms.internal,\n+                            org.wso2.carbon.event.output.adapter.sms.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.sms.internal,\n+                            !org.wso2.carbon.event.output.adapter.sms.internal.*,\n+                            org.wso2.carbon.event.output.adapter.sms.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "e85cef268057dc6001347f2fda3757013e399ed2",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/java/org/wso2/carbon/event/output/adapter/sms/SMSEventAdapter.java",
            "status": "added",
            "additions": 120,
            "deletions": 0,
            "changes": 120,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.sms;\n+\n+import org.apache.axiom.om.OMAbstractFactory;\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.Constants;\n+import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.axis2.transport.base.BaseConstants;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.sms.internal.ds.SMSEventAdapterServiceValueHolder;\n+import org.wso2.carbon.event.output.adapter.sms.internal.util.SMSEventAdapterConstants;\n+\n+import java.util.Map;\n+\n+public final class SMSEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(SMSEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    private ServiceClient serviceClient;\n+\n+    public SMSEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+        String SMSNo = eventAdapterConfiguration.getStaticProperties().get(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO);\n+        ConfigurationContext configContext = SMSEventAdapterServiceValueHolder.getConfigurationContextService().getClientConfigContext();\n+        try{\n+            if (configContext != null) {\n+                serviceClient = new ServiceClient(configContext, null);\n+            } else {\n+                serviceClient = new ServiceClient();\n+            }\n+            Options options = new Options();\n+            options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);\n+            options.setTo(new EndpointReference(\"sms://\" + SMSNo));\n+            serviceClient.setOptions(options);\n+        } catch (AxisFault axisFault){\n+            String systemType = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"systemType\").toString();\n+            String systemID = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"systemId\").toString();\n+            String password = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"password\").toString();\n+            String host = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"host\").toString();\n+            String port = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"port\").toString();\n+            String phoneNumber = serviceClient.getAxisConfiguration().getTransportOut(\"sms\").getParameter(\"phoneNumber\").toString();\n+            String msg = \"Error in creating client, \" +\n+                    \"with configuration parameters systemType: \" + systemType + \", systemID: \" + systemID + \", password: \" + password\n+                    + \", host: \" + host + \", port: \" + port + \", phoneNumber: \" + phoneNumber\n+                    + \", to: \" + eventAdapterConfiguration.getStaticProperties().get(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO) + \".\";\n+            throw new OutputEventAdapterException(msg, axisFault);\n+        }\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //not applicable.\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        OMElement payload = OMAbstractFactory.getOMFactory().createOMElement(\n+                BaseConstants.DEFAULT_TEXT_WRAPPER, null);\n+        payload.setText(message.toString());\n+        try {\n+            serviceClient.fireAndForget(payload);\n+        } catch (AxisFault axisFault) {\n+            String msg = \"Error in delivering the message, \" +\n+                    \"message: \" + message + \", to: \" + eventAdapterConfiguration.getStaticProperties().get(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO) + \".\";\n+            log.error(msg, axisFault);\n+        } catch (Exception ex) {\n+            String msg = \"Error in delivering the message, \" +\n+                    \"message: \" + message + \", to: \" + eventAdapterConfiguration.getStaticProperties().get(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO) + \".\";\n+            log.error(msg, ex);\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //Not applicable.\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //Not required.\n+    }\n+}"
        },
        {
            "sha": "bc7547279d72a1fb2a693284d6b23244b1b3c089",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/java/org/wso2/carbon/event/output/adapter/sms/SMSEventAdapterFactory.java",
            "status": "added",
            "additions": 68,
            "deletions": 0,
            "changes": 68,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2FSMSEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.sms;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.sms.internal.util.SMSEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class SMSEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.sms.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return SMSEventAdapterConstants.ADAPTER_TYPE_SMS;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+\n+        Property phoneNo = new Property(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO);\n+        phoneNo.setDisplayName(\n+                resourceBundle.getString(SMSEventAdapterConstants.ADAPTER_MESSAGE_SMS_NO));\n+        phoneNo.setHint(resourceBundle.getString(SMSEventAdapterConstants.ADAPTER_CONF_SMS_HINT_NO));\n+        phoneNo.setRequired(true);\n+        staticPropertyList.add(phoneNo);\n+\n+        return staticPropertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        return new SMSEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "6f1867eecddecd4403d412415a9e0bd53e5afa6e",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/java/org/wso2/carbon/event/output/adapter/sms/internal/ds/SMSEventAdapterServiceDS.java",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.sms.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.sms.SMSEventAdapterFactory;\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+\n+/**\n+ * @scr.component name=\"output.sms.EventAdapterService.component\" immediate=\"true\"\n+ * @scr.reference name=\"configurationcontext.service\"\n+ * interface=\"org.wso2.carbon.utils.ConfigurationContextService\" cardinality=\"1..1\"\n+ * policy=\"dynamic\" bind=\"setConfigurationContextService\" unbind=\"unsetConfigurationContextService\"\n+ */\n+public class SMSEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(SMSEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the sms service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory smsEventAdapterFactory = new SMSEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), smsEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output SMS event adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output SMS event adapter service \", e);\n+        }\n+    }\n+\n+    protected void setConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        SMSEventAdapterServiceValueHolder.registerConfigurationContextService(configurationContextService);\n+    }\n+\n+    protected void unsetConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+\n+    }\n+\n+\n+}"
        },
        {
            "sha": "72794d6ff04be4635f1e1855557d73fd9433f002",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/java/org/wso2/carbon/event/output/adapter/sms/internal/ds/SMSEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Fds%2FSMSEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.sms.internal.ds;\n+\n+import org.wso2.carbon.utils.ConfigurationContextService;\n+\n+/**\n+ * common place to hold some OSGI bundle references.\n+ */\n+public final class SMSEventAdapterServiceValueHolder {\n+\n+    private static ConfigurationContextService configurationContextService;\n+\n+    private SMSEventAdapterServiceValueHolder() {\n+    }\n+\n+    public static void registerConfigurationContextService(\n+            ConfigurationContextService configurationContextService) {\n+        SMSEventAdapterServiceValueHolder.configurationContextService = configurationContextService;\n+    }\n+\n+    public static ConfigurationContextService getConfigurationContextService() {\n+        return SMSEventAdapterServiceValueHolder.configurationContextService;\n+    }\n+\n+}"
        },
        {
            "sha": "8aa65cd88c0ee2367a14f0f1ae460822b480e20e",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/java/org/wso2/carbon/event/output/adapter/sms/internal/util/SMSEventAdapterConstants.java",
            "status": "added",
            "additions": 29,
            "deletions": 0,
            "changes": 29,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Futil%2FSMSEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Futil%2FSMSEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Finternal%2Futil%2FSMSEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.sms.internal.util;\n+\n+\n+public final class SMSEventAdapterConstants {\n+\n+    private SMSEventAdapterConstants() {\n+    }\n+    public static final String ADAPTER_TYPE_SMS = \"sms\";\n+\n+    public static final String ADAPTER_MESSAGE_SMS_NO = \"sms.no\";\n+    public static final String ADAPTER_CONF_SMS_HINT_NO = \"sms.no.default.hint\";\n+}"
        },
        {
            "sha": "cdd90555bce91648ee2cd218163ac504c05ab530",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.sms/src/main/resources/org/wso2/carbon/event/output/adapter/sms/i18n/Resources.properties",
            "status": "added",
            "additions": 20,
            "deletions": 0,
            "changes": 20,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.sms%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsms%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,20 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+sms.no=Phone No\n+sms.no.default.hint=Phone No where SMS needs to be send (eg: [country-code][number])\n+"
        },
        {
            "sha": "a60ac205ba039ff17258a12039a57d0c23683933",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/pom.xml",
            "status": "added",
            "additions": 117,
            "deletions": 0,
            "changes": 117,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,117 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+~\n+~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+~ use this file except in compliance with the License. You may obtain a copy\n+~ of the License at\n+~\n+~ http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software distributed\n+~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+~ specific language governing permissions and limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>event-output-adapters</artifactId>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>org.wso2.carbon.event.output.adapter.soap</artifactId>\n+\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output SOAP Event Adaptor Module</name>\n+    <description>org.wso2.carbon.event.output.adaptor.soap provides the back-end functionality of ws event adaptor\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.rampart.wso2</groupId>\n+            <artifactId>rampart-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.rampart.wso2</groupId>\n+            <artifactId>rampart-policy</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.neethi.wso2</groupId>\n+            <artifactId>neethi</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.axis2.wso2</groupId>\n+            <artifactId>axis2</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.soap.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.soap.internal.*,\n+                            org.wso2.carbon.event.output.adapter.soap.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "8daffa3e83060f98b2458d6666a63e491a7926d4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/src/main/java/org/wso2/carbon/event/output/adapter/soap/SoapEventAdapter.java",
            "status": "added",
            "additions": 272,
            "deletions": 0,
            "changes": 272,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,272 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.soap;\n+\n+import org.apache.axiom.om.OMElement;\n+import org.apache.axiom.om.util.AXIOMUtil;\n+import org.apache.axis2.AxisFault;\n+import org.apache.axis2.addressing.EndpointReference;\n+import org.apache.axis2.client.Options;\n+import org.apache.axis2.client.ServiceClient;\n+import org.apache.axis2.context.ConfigurationContext;\n+import org.apache.axis2.context.ConfigurationContextFactory;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.neethi.Policy;\n+import org.apache.neethi.PolicyEngine;\n+import org.apache.rampart.RampartMessageData;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.soap.internal.util.SoapEventAdapterConstants;\n+import org.wso2.carbon.utils.ServerConstants;\n+\n+import javax.xml.stream.XMLStreamException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class SoapEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(SoapEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    ExecutorService executorService;\n+\n+    public SoapEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+                            Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        //executorService will be assigned  if it is null\n+        if (executorService == null) {\n+            int minThread;\n+            int maxThread;\n+            long defaultKeepAliveTime;\n+            int jobQueueSize;\n+\n+            //If global properties are available those will be assigned else constant values will be assigned\n+            if (globalProperties.get(SoapEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE_NAME) != null) {\n+                minThread = Integer.parseInt(globalProperties.get(\n+                        SoapEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE_NAME));\n+            } else {\n+                minThread = SoapEventAdapterConstants.ADAPTER_MIN_THREAD_POOL_SIZE;\n+            }\n+\n+            if (globalProperties.get(SoapEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE_NAME) != null) {\n+                maxThread = Integer.parseInt(globalProperties.get(\n+                        SoapEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE_NAME));\n+            } else {\n+                maxThread = SoapEventAdapterConstants.ADAPTER_MAX_THREAD_POOL_SIZE;\n+            }\n+\n+            if (globalProperties.get(SoapEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME) != null) {\n+                defaultKeepAliveTime = Integer.parseInt(globalProperties.get(\n+                        SoapEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME_NAME));\n+            } else {\n+                defaultKeepAliveTime = SoapEventAdapterConstants.DEFAULT_KEEP_ALIVE_TIME;\n+            }\n+\n+            if (globalProperties.get(SoapEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME) != null) {\n+                jobQueueSize = Integer.parseInt(globalProperties.get(\n+                        SoapEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME));\n+            } else {\n+                jobQueueSize = SoapEventAdapterConstants.ADAPTER_EXECUTOR_JOB_QUEUE_SIZE;\n+            }\n+\n+            executorService = new ThreadPoolExecutor(minThread, maxThread, defaultKeepAliveTime, TimeUnit.SECONDS,\n+                    new LinkedBlockingQueue<Runnable>(jobQueueSize));\n+        }\n+\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        throw new TestConnectionNotSupportedException(\"not-available\");\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        String url = dynamicProperties.get(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_URL);\n+        String userName = dynamicProperties.get(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_USERNAME);\n+        String password = dynamicProperties.get(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_PASSWORD);\n+        Map<String, String> headers = this.extractHeaders(dynamicProperties.get(\n+                SoapEventAdapterConstants.ADAPTER_CONF_SOAP_HEADERS));\n+\n+        this.executorService.submit(new SoapSender(url, message, userName, password, headers));\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //not required\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //not required\n+    }\n+\n+    private Map<String, String> extractHeaders(String headers) {\n+        if (headers == null || headers.trim().length() == 0) {\n+            return null;\n+        }\n+        try {\n+            String[] entries = headers.split(SoapEventAdapterConstants.HEADER_SEPARATOR);\n+            String[] keyValue;\n+            Map<String, String> result = new HashMap<String, String>();\n+            for (String entry : entries) {\n+                keyValue = entry.split(SoapEventAdapterConstants.ENTRY_SEPARATOR);\n+                result.put(keyValue[0].trim(), keyValue[1].trim());\n+            }\n+            return result;\n+        } catch (Exception e) {\n+            log.error(\"Invalid headers format: \\\"\" + headers + \"\\\", ignoring headers...\");\n+            return null;\n+        }\n+    }\n+\n+    public class SoapSender implements Runnable {\n+\n+        private String url;\n+        private Object payload;\n+        private String username;\n+        private String password;\n+        private Map<String, String> headers;\n+\n+        public SoapSender(String url, Object payload, String username, String password,\n+                          Map<String, String> headers) {\n+            this.url = url;\n+            this.payload = payload;\n+            this.username = username;\n+            this.password = password;\n+            this.headers = headers;\n+        }\n+\n+        @Override\n+        public void run() {\n+            ConfigurationContext configContext;\n+            try {\n+                configContext = ConfigurationContextFactory.createConfigurationContextFromFileSystem(\n+                        System.getProperty(ServerConstants.CARBON_HOME)\n+                                + SoapEventAdapterConstants.SERVER_CLIENT_DEPLOYMENT_DIR,\n+                        System.getProperty(ServerConstants.CARBON_CONFIG_DIR_PATH)\n+                                + SoapEventAdapterConstants.AXIS2_CLIENT_CONF_FILE);\n+\n+                ServiceClient serviceClient;\n+                try {\n+                    serviceClient = new ServiceClient(configContext, null);\n+                    Options options = new Options();\n+                    options.setTo(new EndpointReference(url));\n+                    try {\n+                        if (headers != null) {\n+                            for (Map.Entry<String, String> headerValue : headers.entrySet()) {\n+                                options.setProperty(headerValue.getKey(), headerValue.getValue());\n+                            }\n+                        }\n+                    } catch (Exception e) {\n+                        log.error(\"Invalid headers : \\\"\" + headers + \"\\\", ignoring headers...\");\n+                    }\n+\n+                    if (username != null || password != null) {\n+                        options.setUserName(username);\n+                        options.setPassword(password);\n+                        serviceClient.engageModule(\"rampart\");\n+                        options.setProperty(RampartMessageData.KEY_RAMPART_POLICY, loadPolicy());\n+                    }\n+\n+                    serviceClient.setOptions(options);\n+                    serviceClient.fireAndForget(AXIOMUtil.stringToOM(payload.toString()));\n+\n+                } catch (AxisFault e) {\n+                    throw new ConnectionUnavailableException(\"Exception in adapter \"\n+                            + eventAdapterConfiguration.getName() + \" while sending events to soap endpoint \"\n+                            + this.url, e);\n+                } catch (XMLStreamException e) {\n+                    throw new OutputEventAdapterRuntimeException(\n+                            \"Exception occurred in adapter \" + eventAdapterConfiguration.getName()\n+                                    + \" while converting the event to xml object \", e);\n+                } catch (Exception e) {\n+                    throw new OutputEventAdapterRuntimeException(\"Exception occurred in adapter \"\n+                            + eventAdapterConfiguration.getName(), e);\n+                }\n+            } catch (AxisFault axisFault) {\n+                throw new OutputEventAdapterRuntimeException(\"Exception occurred in adapter \"\n+                        + eventAdapterConfiguration.getName(), axisFault);\n+            }\n+\n+        }\n+\n+        private Policy loadPolicy() throws Exception {\n+            OMElement omElement = AXIOMUtil.stringToOM(\n+                    \"<wsp:Policy xmlns:wsp=\\\"http://schemas.xmlsoap.org/ws/2004/09/policy\\\"\\n\" +\n+                            \"            xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\"\\n\" +\n+                            \"            wsu:Id=\\\"UTOverTransport\\\">\\n\" +\n+                            \"    <wsp:ExactlyOne>\\n\" +\n+                            \"        <wsp:All>\\n\" +\n+                            \"            <sp:TransportBinding xmlns:sp=\\\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\\\">\\n\" +\n+                            \"                <wsp:Policy>\\n\" +\n+                            \"                    <sp:TransportToken>\\n\" +\n+                            \"                        <wsp:Policy>\\n\" +\n+                            \"                            <sp:HttpsToken RequireClientCertificate=\\\"false\\\"></sp:HttpsToken>\\n\" +\n+                            \"                        </wsp:Policy>\\n\" +\n+                            \"                    </sp:TransportToken>\\n\" +\n+                            \"                    <sp:AlgorithmSuite>\\n\" +\n+                            \"                        <wsp:Policy>\\n\" +\n+                            \"                            <sp:Basic256></sp:Basic256>\\n\" +\n+                            \"                        </wsp:Policy>\\n\" +\n+                            \"                    </sp:AlgorithmSuite>\\n\" +\n+                            \"                    <sp:Layout>\\n\" +\n+                            \"                        <wsp:Policy>\\n\" +\n+                            \"                            <sp:Lax></sp:Lax>\\n\" +\n+                            \"                        </wsp:Policy>\\n\" +\n+                            \"                    </sp:Layout>\\n\" +\n+                            \"                    <sp:IncludeTimestamp></sp:IncludeTimestamp>\\n\" +\n+                            \"                </wsp:Policy>\\n\" +\n+                            \"            </sp:TransportBinding>\\n\" +\n+                            \"            <sp:SignedSupportingTokens\\n\" +\n+                            \"                    xmlns:sp=\\\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\\\">\\n\" +\n+                            \"                <wsp:Policy>\\n\" +\n+                            \"                    <sp:UsernameToken\\n\" +\n+                            \"                            sp:IncludeToken=\\\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient\\\"></sp:UsernameToken>\\n\" +\n+                            \"                </wsp:Policy>\\n\" +\n+                            \"            </sp:SignedSupportingTokens>\\n\" +\n+                            \"        </wsp:All>\\n\" +\n+                            \"    </wsp:ExactlyOne>\\n\" +\n+                            \"</wsp:Policy>\");\n+            return PolicyEngine.getPolicy(omElement);\n+        }\n+    }\n+}\n+\n+"
        },
        {
            "sha": "35d2114442c689bdfbdf25419662d053f0197702",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/src/main/java/org/wso2/carbon/event/output/adapter/soap/SoapEventAdapterFactory.java",
            "status": "added",
            "additions": 92,
            "deletions": 0,
            "changes": 92,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2FSoapEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,92 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.soap;\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.core.MessageType;\n+import org.wso2.carbon.event.output.adapter.core.Property;\n+import org.wso2.carbon.event.output.adapter.soap.internal.util.SoapEventAdapterConstants;\n+\n+\n+import java.util.*;\n+\n+public class SoapEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle =\n+            ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.soap.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return SoapEventAdapterConstants.ADAPTER_TYPE_SOAP;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.XML);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        List<Property> dynamicPropertyList = new ArrayList<Property>();\n+\n+        // Url\n+        Property host = new Property(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_URL);\n+        host.setDisplayName(\n+                resourceBundle.getString(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_URL));\n+        host.setRequired(true);\n+        host.setHint(resourceBundle.getString(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_URL_HINT));\n+\n+        // Username\n+        Property userNameProperty = new Property(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_USERNAME);\n+        userNameProperty.setDisplayName(\n+                resourceBundle.getString(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_USERNAME));\n+\n+        // Password\n+        Property passwordProperty = new Property(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_PASSWORD);\n+        passwordProperty.setSecured(true);\n+        passwordProperty.setDisplayName(\n+                resourceBundle.getString(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_PASSWORD));\n+\n+        // header name\n+        Property headerProperty = new Property(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_HEADERS);\n+        headerProperty.setDisplayName(\n+                resourceBundle.getString(SoapEventAdapterConstants.ADAPTER_CONF_SOAP_HEADERS));\n+        headerProperty.setRequired(false);\n+\n+        dynamicPropertyList.add(host);\n+        dynamicPropertyList.add(userNameProperty);\n+        dynamicPropertyList.add(passwordProperty);\n+        dynamicPropertyList.add(headerProperty);\n+\n+        return dynamicPropertyList;\n+    }\n+\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        return new SoapEventAdapter(eventAdapterConfiguration, globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "ad53fc0a09502c12b552f271cd17277c58a697b4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/src/main/java/org/wso2/carbon/event/output/adapter/soap/internal/ds/SoapEventAdapterServiceDS.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Fds%2FSoapEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Fds%2FSoapEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Fds%2FSoapEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.soap.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.soap.SoapEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Soap.AdapterService.component\" immediate=\"true\"\n+ */\n+public class SoapEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(SoapEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the agent service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory wsEventAdaptorFactory = new SoapEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), wsEventAdaptorFactory,\n+                    null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output Soap adaptor service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output Soap adaptor service \", e);\n+        }\n+    }\n+}"
        },
        {
            "sha": "1c345542b46a818094ca6521ad3b88a7787af84f",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/src/main/java/org/wso2/carbon/event/output/adapter/soap/internal/util/SoapEventAdapterConstants.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Futil%2FSoapEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Futil%2FSoapEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Finternal%2Futil%2FSoapEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,45 @@\n+/*\n+*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.soap.internal.util;\n+\n+public class SoapEventAdapterConstants {\n+\n+    public static final String ADAPTER_TYPE_SOAP = \"soap\";\n+\n+    public static final String ADAPTER_CONF_SOAP_URL = \"url\";\n+    public static final String ADAPTER_CONF_SOAP_URL_HINT = \"url.hint\";\n+    public static final String ADAPTER_CONF_SOAP_USERNAME = \"username\";\n+    public static final String ADAPTER_CONF_SOAP_PASSWORD = \"password\";\n+    public static final String ADAPTER_CONF_SOAP_HEADERS = \"headers\";\n+    public static final String AXIS2_CLIENT_CONF_FILE = \"/axis2/axis2_client.xml\";\n+    public static final String SERVER_CLIENT_DEPLOYMENT_DIR = \"/repository/deployment/client/\";\n+\n+    public static final int ADAPTER_MIN_THREAD_POOL_SIZE = 8;\n+    public static final int ADAPTER_MAX_THREAD_POOL_SIZE = 100;\n+    public static final int ADAPTER_EXECUTOR_JOB_QUEUE_SIZE = 2000;\n+    public static final long DEFAULT_KEEP_ALIVE_TIME = 20;\n+\n+    public static final String ADAPTER_MIN_THREAD_POOL_SIZE_NAME = \"minThread\";\n+    public static final String ADAPTER_MAX_THREAD_POOL_SIZE_NAME = \"maxThread\";\n+    public static final String DEFAULT_KEEP_ALIVE_TIME_NAME = \"defaultKeepAliveTime\";\n+    public static final String ADAPTER_EXECUTOR_JOB_QUEUE_SIZE_NAME = \"jobQueueSize\";\n+\n+    public static final String HEADER_SEPARATOR = \",\";\n+    public static final String ENTRY_SEPARATOR = \":\";\n+\n+}"
        },
        {
            "sha": "29c894bbcb52edf19cc2ff2aa47b51ebd4207858",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.soap/src/main/resources/org/wso2/carbon/event/output/adapter/soap/i18n/Resources.properties",
            "status": "added",
            "additions": 24,
            "deletions": 0,
            "changes": 24,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.soap%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fsoap%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,24 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+url=Url\n+url.hint=Url of the remote service\n+username=User Name\n+password=Password\n+headers=Headers\n+"
        },
        {
            "sha": "2a4b00abd884596a61d99d92c1d13eda399add81",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/pom.xml",
            "status": "added",
            "additions": 79,
            "deletions": 0,
            "changes": 79,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,79 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ /*\n+  ~  * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~  *\n+  ~  * WSO2 Inc. licenses this file to you under the Apache License,\n+  ~  * Version 2.0 (the \"License\"); you may not use this file except\n+  ~  * in compliance with the License.\n+  ~  * You may obtain a copy of the License at\n+  ~  *\n+  ~  * http://www.apache.org/licenses/LICENSE-2.0\n+  ~  *\n+  ~  * Unless required by applicable law or agreed to in writing,\n+  ~  * software distributed under the License is distributed on an\n+  ~  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  * KIND, either express or implied.  See the License for the\n+  ~  * specific language governing permissions and limitations\n+  ~  * under the License.\n+  ~  */\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.ui.endpoint</artifactId>\n+    <packaging>war</packaging>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>WSO2 Carbon UI Webapp - Webapp for UI Output Event Adapter</name>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.tomcat</groupId>\n+            <artifactId>tomcat-websocket-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.ui</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.httpcomponents</groupId>\n+            <artifactId>httpcore</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.ws.rs</groupId>\n+            <artifactId>javax.ws.rs-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.cxf</groupId>\n+            <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <finalName>outputui</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <encoding>UTF-8</encoding>\n+                    <source>1.6</source>\n+                    <target>1.6</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
        },
        {
            "sha": "4c61c02ccc0559aabc460823bce0289ebef43529",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/SubscriptionEndpoint.java",
            "status": "added",
            "additions": 71,
            "deletions": 0,
            "changes": 71,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,71 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.ui.UIOutputCallbackControllerService;\n+\n+import javax.websocket.CloseReason;\n+import javax.websocket.Session;\n+\n+/**\n+ * Interface for subscription and un-subscription for web socket\n+ */\n+\n+public class SubscriptionEndpoint {\n+\n+    private static final Log log = LogFactory.getLog(SubscriptionEndpoint.class);\n+    protected UIOutputCallbackControllerService uiOutputCallbackControllerService;\n+\n+    public SubscriptionEndpoint() {\n+        uiOutputCallbackControllerService = (UIOutputCallbackControllerService) PrivilegedCarbonContext\n+                .getThreadLocalCarbonContext()\n+                .getOSGiService(UIOutputCallbackControllerService.class, null);\n+    }\n+\n+    /**\n+     * Web socket onClose - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param reason  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    public void onClose (Session session, CloseReason reason, String streamName, String version) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Closing a WebSocket due to \"+reason.getReasonPhrase()+\", for session ID:\"+session.getId()+\", for request URI - \"+session.getRequestURI());\n+        }\n+        uiOutputCallbackControllerService.unsubscribeWebsocket(streamName, version, session);\n+    }\n+\n+    /**\n+     * Web socket onError - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param throwable  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    public void onError (Session session, Throwable throwable, String streamName, String version) {\n+        log.error(\"Error occurred in session ID: \"+session.getId()+\", for request URI - \"+session.getRequestURI()+\", \"+throwable.getMessage(),throwable);\n+        uiOutputCallbackControllerService.unsubscribeWebsocket(streamName, version, session);\n+    }\n+}"
        },
        {
            "sha": "62b159cd41c50a70ee20ef9fb82fccb2d5a8f9d6",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/SuperTenantSubscriptionEndpoint.java",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n+\n+import javax.websocket.CloseReason;\n+import javax.websocket.OnClose;\n+import javax.websocket.OnError;\n+import javax.websocket.OnMessage;\n+import javax.websocket.OnOpen;\n+import javax.websocket.Session;\n+import javax.websocket.server.PathParam;\n+import javax.websocket.server.ServerEndpoint;\n+\n+/**\n+ * Connect to web socket with Super tenant\n+ */\n+\n+@ServerEndpoint(value = \"/{streamname}/{version}\")\n+public class SuperTenantSubscriptionEndpoint extends SubscriptionEndpoint {\n+\n+    private static final Log log = LogFactory.getLog(SuperTenantSubscriptionEndpoint.class);\n+\n+    /**\n+     * Web socket onOpen - When client sends a message\n+     *\n+     * @param session - Users registered session.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version -  Version extracted from the ws url.\n+     */\n+    @OnOpen\n+    public void onOpen (Session session, @PathParam(\"streamname\") String streamName ,\n+            @PathParam(\"version\") String version) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"WebSocket opened, for Session id: \"+session.getId()+\", for the Stream:\"+streamName);\n+        }\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n+        uiOutputCallbackControllerService.subscribeWebsocket(streamName, version, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    /**\n+     * Web socket onMessage - When client sens a message\n+     *\n+     * @param session - Users registered session.\n+     * @param message  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     */\n+    @OnMessage\n+    public void onMessage (Session session, String message, @PathParam(\"streamname\") String streamName) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Received and dropped message from client. Message: \" + message+\", \" +\n+                    \"for Session id: \"+session.getId()+\", for the Stream:\"+streamName);\n+        }\n+    }\n+\n+    /**\n+     * Web socket onClose - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param reason  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    @OnClose\n+    public void onClose (Session session, CloseReason reason, @PathParam(\"streamname\") String streamName,\n+            @PathParam(\"version\") String version) {\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n+        super.onClose(session, reason, streamName, version);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    /**\n+     * Web socket onError - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param throwable  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    @OnError\n+    public void onError (Session session, Throwable throwable, @PathParam(\"streamname\") String streamName,\n+            @PathParam(\"version\") String version) {\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n+        super.onError(session, throwable, streamName, version);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+}"
        },
        {
            "sha": "815b358f771aed5d7cca8140936e18ec990253e9",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/TenantSubscriptionEndpoint.java",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+\n+import javax.websocket.CloseReason;\n+import javax.websocket.OnClose;\n+import javax.websocket.OnError;\n+import javax.websocket.OnMessage;\n+import javax.websocket.OnOpen;\n+import javax.websocket.Session;\n+import javax.websocket.server.PathParam;\n+import javax.websocket.server.ServerEndpoint;\n+\n+/**\n+ * Connect to web socket with a tenant\n+ */\n+\n+@ServerEndpoint(value = \"/t/{tdomain}/{streamname}/{version}\")\n+public class TenantSubscriptionEndpoint extends SubscriptionEndpoint {\n+\n+    private static final Log log = LogFactory.getLog(TenantSubscriptionEndpoint.class);\n+\n+    /**\n+     * Web socket onOpen - When client sends a message\n+     *\n+     * @param session - Users registered session.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version -  Version extracted from the ws url.\n+     * @param tdomain - Tenant domain extracted from ws url.\n+     */\n+    @OnOpen\n+    public void onOpen (Session session, @PathParam(\"streamname\") String streamName ,\n+            @PathParam(\"version\") String version, @PathParam(\"tdomain\") String tdomain) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"WebSocket opened, for Session id: \"+session.getId()+\", for the Stream:\"+streamName);\n+        }\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(tdomain,true);\n+        PrivilegedCarbonContext.startTenantFlow();\n+        uiOutputCallbackControllerService.subscribeWebsocket(streamName, version, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    /**\n+     * Web socket onMessage - When client sens a message\n+     *\n+     * @param session - Users registered session.\n+     * @param message  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     */\n+    @OnMessage\n+    public void onMessage (Session session, String message, @PathParam(\"streamname\") String streamName, @PathParam(\"tdomain\") String tdomain) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Received and dropped message from client. Message: \" + message+\", for Session id: \"+session.getId()+\", for tenant domain\"+tdomain+\", for the Adaptor:\"+streamName);\n+        }\n+    }\n+\n+    /**\n+     * Web socket onClose - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param reason  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    @OnClose\n+    public void onClose (Session session, CloseReason reason, @PathParam(\"streamname\") String streamName,\n+            @PathParam(\"version\") String version, @PathParam(\"tdomain\") String tdomain) {\n+        PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n+        carbonContext.startTenantFlow();\n+        carbonContext.setTenantDomain(tdomain,true);\n+        super.onClose(session, reason, streamName, version);\n+        carbonContext.endTenantFlow();\n+    }\n+\n+    /**\n+     * Web socket onError - Remove the registered sessions\n+     *\n+     * @param session - Users registered session.\n+     * @param throwable  - Status code for web-socket close.\n+     * @param streamName - StreamName extracted from the ws url.\n+     * @param version - Version extracted from the ws url.\n+     */\n+    @OnError\n+    public void onError (Session session, Throwable throwable, @PathParam(\"streamname\") String streamName,\n+            @PathParam(\"version\") String version, @PathParam(\"tdomain\") String tdomain) {\n+        PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n+        carbonContext.startTenantFlow();\n+        carbonContext.setTenantDomain(tdomain,true);\n+        super.onError(session, throwable, streamName,version);\n+        carbonContext.endTenantFlow();\n+    }\n+}"
        },
        {
            "sha": "30abbe3ba88f9d3679201774a2d248a5740107b5",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/org/wso2/carbon/servlet/SuperTenantEventRetrievalEndpoint.java",
            "status": "added",
            "additions": 86,
            "deletions": 0,
            "changes": 86,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FSuperTenantEventRetrievalEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FSuperTenantEventRetrievalEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FSuperTenantEventRetrievalEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,86 @@\n+package org.wso2.carbon.servlet;/*\n+ *\n+ *  Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonObject;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.ui.UIOutputCallbackControllerService;\n+import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n+import util.UIConstants;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * Getting events for HTTP request for super tenant\n+ */\n+\n+@Path(\"/\")\n+public class SuperTenantEventRetrievalEndpoint{\n+\n+    protected UIOutputCallbackControllerService uiOutputCallbackControllerService;\n+\n+    public SuperTenantEventRetrievalEndpoint() {\n+        uiOutputCallbackControllerService = (UIOutputCallbackControllerService) PrivilegedCarbonContext\n+                .getThreadLocalCarbonContext()\n+                .getOSGiService(UIOutputCallbackControllerService.class,null);\n+    }\n+\n+    /**\n+     * Retrieve events when polling\n+     *\n+     * @param streamName - StreamName extracted from the http url.\n+     * @param version - Version extracted from the http url.\n+     * @param lastUpdatedTime - Last event's dispatched name.\n+     * @return respnse\n+     */\n+    @GET\n+    @Path(\"/{streamname}/{version}\")\n+    public Response retrieveEvents(@PathParam(\"streamname\") String streamName, @PathParam(\"version\") String version,\n+            @QueryParam(\"lastUpdatedTime\") String lastUpdatedTime) {\n+\n+\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n+        String streamId = streamName + UIConstants.ADAPTER_UI_COLON + version;\n+\n+        JsonObject eventDetails = uiOutputCallbackControllerService.retrieveEvents(streamName, version,\n+                lastUpdatedTime);\n+        String jsonString;\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().endTenantFlow();\n+\n+        if(eventDetails == null){\n+            JsonObject errorData = new JsonObject();\n+            errorData.addProperty(\"error\",\"StreamId: \" + streamId + \" is not registered to receive events.\");\n+            jsonString = new Gson().toJson(errorData);\n+            return Response.status(Response.Status.NOT_FOUND).entity(jsonString).header\n+                    (\"Access-Control-Allow-Origin\",\"*\").build();\n+        } else{\n+            jsonString = new Gson().toJson(eventDetails);\n+            return Response.ok(jsonString, MediaType.APPLICATION_JSON).header(\"Access-Control-Allow-Origin\",\n+                    \"*\").build();\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "4a541e2d770d9483d2f9f54a2d5bf19652095116",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/org/wso2/carbon/servlet/TenantEventRetrievalEndpoint.java",
            "status": "added",
            "additions": 88,
            "deletions": 0,
            "changes": 88,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FTenantEventRetrievalEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FTenantEventRetrievalEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fservlet%2FTenantEventRetrievalEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,88 @@\n+package org.wso2.carbon.servlet;\n+/*\n+ *\n+ * Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonObject;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.ui.UIOutputCallbackControllerService;\n+import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n+import util.UIConstants;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * Getting events for HTTP request from a tenant\n+ */\n+\n+@Path(\"/t/{tdomain}/\")\n+public class TenantEventRetrievalEndpoint{\n+\n+    private static final Log log = LogFactory.getLog(SuperTenantEventRetrievalEndpoint.class);\n+    protected UIOutputCallbackControllerService uiOutputCallbackControllerService;\n+\n+    public TenantEventRetrievalEndpoint() {\n+        uiOutputCallbackControllerService = (UIOutputCallbackControllerService) PrivilegedCarbonContext\n+                .getThreadLocalCarbonContext()\n+                .getOSGiService(UIOutputCallbackControllerService.class,null);\n+\n+    }\n+\n+    /**\n+     * Retrieve events when polling\n+     *\n+     * @param streamName - StreamName extracted from the http url.\n+     * @param version - Version extracted from the http url.\n+     * @param lastUpdatedTime - Last event's dispatched name.\n+     * @param tdomain - Tenant domain extracted from http url\n+     * @return response\n+     */\n+    @GET\n+    @Path(\"/{streamname}/{version}\")\n+    public Response retrieveEvents(@PathParam(\"streamname\") String streamName, @PathParam(\"version\") String version,\n+            @QueryParam(\"lastUpdatedTime\") String lastUpdatedTime, @PathParam(\"tdomain\") String tdomain) {\n+\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(tdomain,true);\n+        PrivilegedCarbonContext.startTenantFlow();\n+        String streamId = streamName + UIConstants.ADAPTER_UI_COLON + version;\n+        JsonObject eventDetails = uiOutputCallbackControllerService.retrieveEvents(streamName, version,lastUpdatedTime);\n+        PrivilegedCarbonContext.endTenantFlow();\n+        String jsonString;\n+        if(eventDetails == null){\n+            JsonObject errorData = new JsonObject();\n+            errorData.addProperty(\"error\",\"StreamId: \" + streamId + \" is not registered to receive events.\");\n+            jsonString = new Gson().toJson(errorData);\n+            return Response.status(Response.Status.NOT_FOUND).entity(jsonString).header\n+                    (\"Access-Control-Allow-Origin\",\"*\").build();\n+        } else{\n+            jsonString = new Gson().toJson(eventDetails);\n+            return Response.ok(jsonString, MediaType.APPLICATION_JSON).header(\"Access-Control-Allow-Origin\",\n+                    \"*\").build();\n+        }\n+    }\n+}"
        },
        {
            "sha": "c9dc96016fb61240ae0064e5ee0c1c1a516f3aed",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/java/util/UIConstants.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Futil%2FUIConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Futil%2FUIConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fjava%2Futil%2FUIConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,33 @@\n+/*\n+ *\n+ *  *\n+ *  *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *  *\n+ *  *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  *  in compliance with the License.\n+ *  *  You may obtain a copy of the License at\n+ *  *\n+ *  *  http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  *  Unless required by applicable law or agreed to in writing,\n+ *  *  software distributed under the License is distributed on an\n+ *  *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  *  KIND, either express or implied.  See the License for the\n+ *  *  specific language governing permissions and limitations\n+ *  *  under the License.\n+ *  *\n+ *\n+ */\n+\n+package util;\n+\n+/**\n+ * This class contains the constants related to ui client.\n+ */\n+public class UIConstants {\n+\n+    private UIConstants() {\n+    }\n+    public static final String ADAPTER_UI_COLON = \":\";\n+}"
        },
        {
            "sha": "8d9958f10854168515e2e2b6791536aac15f6672",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint/src/main/webapp/WEB-INF/web.xml",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,43 @@\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<!DOCTYPE web-app PUBLIC\n+        \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n+        \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n+\n+<web-app>\n+    <display-name>Output WebSocket</display-name>\n+    <servlet>\n+        <servlet-name>JAXServlet</servlet-name>\n+        <servlet-class>\n+            org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet\n+        </servlet-class>\n+        <init-param>\n+            <param-name>jaxrs.serviceClasses</param-name>\n+            <param-value>\n+                org.wso2.carbon.servlet.SuperTenantEventRetrievalEndpoint\n+                org.wso2.carbon.servlet.TenantEventRetrievalEndpoint\n+            </param-value>\n+        </init-param>\n+        <load-on-startup>1</load-on-startup>\n+    </servlet>\n+\n+    <servlet-mapping>\n+        <servlet-name>JAXServlet</servlet-name>\n+        <url-pattern>/*</url-pattern>\n+    </servlet-mapping>\n+</web-app>"
        },
        {
            "sha": "524689ccca482ebaa28e62f8eab4dd472fe5c5b1",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/pom.xml",
            "status": "added",
            "additions": 67,
            "deletions": 0,
            "changes": 67,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,67 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ /*\n+  ~  * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~  *\n+  ~  * WSO2 Inc. licenses this file to you under the Apache License,\n+  ~  * Version 2.0 (the \"License\"); you may not use this file except\n+  ~  * in compliance with the License.\n+  ~  * You may obtain a copy of the License at\n+  ~  *\n+  ~  * http://www.apache.org/licenses/LICENSE-2.0\n+  ~  *\n+  ~  * Unless required by applicable law or agreed to in writing,\n+  ~  * software distributed under the License is distributed on an\n+  ~  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  * KIND, either express or implied.  See the License for the\n+  ~  * specific language governing permissions and limitations\n+  ~  * under the License.\n+  ~  */\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.ui.test</artifactId>\n+    <packaging>war</packaging>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>WSO2 Carbon UI Webapp Test - Test Webapp for UI Output Event Adapter</name>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.tomcat</groupId>\n+            <artifactId>tomcat-websocket-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.ui</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <finalName>outputuitest</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <encoding>UTF-8</encoding>\n+                    <source>1.6</source>\n+                    <target>1.6</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
        },
        {
            "sha": "af1435b1c244f82a7fa8df51f1375ae0f66da345",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/WEB-INF/web.xml",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,27 @@\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<!DOCTYPE web-app PUBLIC\n+ \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n+ \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n+\n+<web-app>\n+  <display-name>Archetype Created Web Application</display-name>\n+    <welcome-file-list>\n+        <welcome-file>testEventReceiver.html</welcome-file>\n+    </welcome-file-list>\n+</web-app>"
        },
        {
            "sha": "4af8905e5b8a97dee4470a7d15ebbf0ad2a22a7d",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/css/bootstrap.min.css",
            "status": "added",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbootstrap.min.css",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbootstrap.min.css",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fbootstrap.min.css?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7b0c9b862b7252df45790797ff84f93ce63e2fe7",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/js/bootstrap.js",
            "status": "added",
            "additions": 2276,
            "deletions": 0,
            "changes": 2276,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,2276 @@\n+/*!\n+ * Bootstrap v3.3.0 (http://getbootstrap.com)\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ */\n+\n+if (typeof jQuery === 'undefined') {\n+  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n+}\n+\n++function ($) {\n+  var version = $.fn.jquery.split(' ')[0].split('.')\n+  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n+    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n+  }\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: transition.js v3.3.0\n+ * http://getbootstrap.com/javascript/#transitions\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n+  // ============================================================\n+\n+  function transitionEnd() {\n+    var el = document.createElement('bootstrap')\n+\n+    var transEndEventNames = {\n+      WebkitTransition : 'webkitTransitionEnd',\n+      MozTransition    : 'transitionend',\n+      OTransition      : 'oTransitionEnd otransitionend',\n+      transition       : 'transitionend'\n+    }\n+\n+    for (var name in transEndEventNames) {\n+      if (el.style[name] !== undefined) {\n+        return { end: transEndEventNames[name] }\n+      }\n+    }\n+\n+    return false // explicit for ie8 (  ._.)\n+  }\n+\n+  // http://blog.alexmaccaw.com/css-transitions\n+  $.fn.emulateTransitionEnd = function (duration) {\n+    var called = false\n+    var $el = this\n+    $(this).one('bsTransitionEnd', function () { called = true })\n+    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n+    setTimeout(callback, duration)\n+    return this\n+  }\n+\n+  $(function () {\n+    $.support.transition = transitionEnd()\n+\n+    if (!$.support.transition) return\n+\n+    $.event.special.bsTransitionEnd = {\n+      bindType: $.support.transition.end,\n+      delegateType: $.support.transition.end,\n+      handle: function (e) {\n+        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n+      }\n+    }\n+  })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: alert.js v3.3.0\n+ * http://getbootstrap.com/javascript/#alerts\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // ALERT CLASS DEFINITION\n+  // ======================\n+\n+  var dismiss = '[data-dismiss=\"alert\"]'\n+  var Alert   = function (el) {\n+    $(el).on('click', dismiss, this.close)\n+  }\n+\n+  Alert.VERSION = '3.3.0'\n+\n+  Alert.TRANSITION_DURATION = 150\n+\n+  Alert.prototype.close = function (e) {\n+    var $this    = $(this)\n+    var selector = $this.attr('data-target')\n+\n+    if (!selector) {\n+      selector = $this.attr('href')\n+      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n+    }\n+\n+    var $parent = $(selector)\n+\n+    if (e) e.preventDefault()\n+\n+    if (!$parent.length) {\n+      $parent = $this.closest('.alert')\n+    }\n+\n+    $parent.trigger(e = $.Event('close.bs.alert'))\n+\n+    if (e.isDefaultPrevented()) return\n+\n+    $parent.removeClass('in')\n+\n+    function removeElement() {\n+      // detach from parent, fire event then clean drillUp data\n+      $parent.detach().trigger('closed.bs.alert').remove()\n+    }\n+\n+    $.support.transition && $parent.hasClass('fade') ?\n+      $parent\n+        .one('bsTransitionEnd', removeElement)\n+        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n+      removeElement()\n+  }\n+\n+\n+  // ALERT PLUGIN DEFINITION\n+  // =======================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this = $(this)\n+      var data  = $this.data('bs.alert')\n+\n+      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n+      if (typeof option == 'string') data[option].call($this)\n+    })\n+  }\n+\n+  var old = $.fn.alert\n+\n+  $.fn.alert             = Plugin\n+  $.fn.alert.Constructor = Alert\n+\n+\n+  // ALERT NO CONFLICT\n+  // =================\n+\n+  $.fn.alert.noConflict = function () {\n+    $.fn.alert = old\n+    return this\n+  }\n+\n+\n+  // ALERT DATA-API\n+  // ==============\n+\n+  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: button.js v3.3.0\n+ * http://getbootstrap.com/javascript/#buttons\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // BUTTON PUBLIC CLASS DEFINITION\n+  // ==============================\n+\n+  var Button = function (element, options) {\n+    this.$element  = $(element)\n+    this.options   = $.extend({}, Button.DEFAULTS, options)\n+    this.isLoading = false\n+  }\n+\n+  Button.VERSION  = '3.3.0'\n+\n+  Button.DEFAULTS = {\n+    loadingText: 'loading...'\n+  }\n+\n+  Button.prototype.setState = function (state) {\n+    var d    = 'disabled'\n+    var $el  = this.$element\n+    var val  = $el.is('input') ? 'val' : 'html'\n+    var data = $el.data()\n+\n+    state = state + 'Text'\n+\n+    if (data.resetText == null) $el.data('resetText', $el[val]())\n+\n+    // push to event loop to allow forms to submit\n+    setTimeout($.proxy(function () {\n+      $el[val](data[state] == null ? this.options[state] : data[state])\n+\n+      if (state == 'loadingText') {\n+        this.isLoading = true\n+        $el.addClass(d).attr(d, d)\n+      } else if (this.isLoading) {\n+        this.isLoading = false\n+        $el.removeClass(d).removeAttr(d)\n+      }\n+    }, this), 0)\n+  }\n+\n+  Button.prototype.toggle = function () {\n+    var changed = true\n+    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n+\n+    if ($parent.length) {\n+      var $input = this.$element.find('input')\n+      if ($input.prop('type') == 'radio') {\n+        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\n+        else $parent.find('.active').removeClass('active')\n+      }\n+      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\n+    } else {\n+      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n+    }\n+\n+    if (changed) this.$element.toggleClass('active')\n+  }\n+\n+\n+  // BUTTON PLUGIN DEFINITION\n+  // ========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.button')\n+      var options = typeof option == 'object' && option\n+\n+      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n+\n+      if (option == 'toggle') data.toggle()\n+      else if (option) data.setState(option)\n+    })\n+  }\n+\n+  var old = $.fn.button\n+\n+  $.fn.button             = Plugin\n+  $.fn.button.Constructor = Button\n+\n+\n+  // BUTTON NO CONFLICT\n+  // ==================\n+\n+  $.fn.button.noConflict = function () {\n+    $.fn.button = old\n+    return this\n+  }\n+\n+\n+  // BUTTON DATA-API\n+  // ===============\n+\n+  $(document)\n+    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n+      var $btn = $(e.target)\n+      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n+      Plugin.call($btn, 'toggle')\n+      e.preventDefault()\n+    })\n+    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n+      $(e.target).closest('.btn').toggleClass('focus', e.type == 'focus')\n+    })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: carousel.js v3.3.0\n+ * http://getbootstrap.com/javascript/#carousel\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // CAROUSEL CLASS DEFINITION\n+  // =========================\n+\n+  var Carousel = function (element, options) {\n+    this.$element    = $(element)\n+    this.$indicators = this.$element.find('.carousel-indicators')\n+    this.options     = options\n+    this.paused      =\n+    this.sliding     =\n+    this.interval    =\n+    this.$active     =\n+    this.$items      = null\n+\n+    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n+\n+    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n+      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n+      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n+  }\n+\n+  Carousel.VERSION  = '3.3.0'\n+\n+  Carousel.TRANSITION_DURATION = 600\n+\n+  Carousel.DEFAULTS = {\n+    interval: 5000,\n+    pause: 'hover',\n+    wrap: true,\n+    keyboard: true\n+  }\n+\n+  Carousel.prototype.keydown = function (e) {\n+    switch (e.which) {\n+      case 37: this.prev(); break\n+      case 39: this.next(); break\n+      default: return\n+    }\n+\n+    e.preventDefault()\n+  }\n+\n+  Carousel.prototype.cycle = function (e) {\n+    e || (this.paused = false)\n+\n+    this.interval && clearInterval(this.interval)\n+\n+    this.options.interval\n+      && !this.paused\n+      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n+\n+    return this\n+  }\n+\n+  Carousel.prototype.getItemIndex = function (item) {\n+    this.$items = item.parent().children('.item')\n+    return this.$items.index(item || this.$active)\n+  }\n+\n+  Carousel.prototype.getItemForDirection = function (direction, active) {\n+    var delta = direction == 'prev' ? -1 : 1\n+    var activeIndex = this.getItemIndex(active)\n+    var itemIndex = (activeIndex + delta) % this.$items.length\n+    return this.$items.eq(itemIndex)\n+  }\n+\n+  Carousel.prototype.to = function (pos) {\n+    var that        = this\n+    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n+\n+    if (pos > (this.$items.length - 1) || pos < 0) return\n+\n+    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n+    if (activeIndex == pos) return this.pause().cycle()\n+\n+    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n+  }\n+\n+  Carousel.prototype.pause = function (e) {\n+    e || (this.paused = true)\n+\n+    if (this.$element.find('.next, .prev').length && $.support.transition) {\n+      this.$element.trigger($.support.transition.end)\n+      this.cycle(true)\n+    }\n+\n+    this.interval = clearInterval(this.interval)\n+\n+    return this\n+  }\n+\n+  Carousel.prototype.next = function () {\n+    if (this.sliding) return\n+    return this.slide('next')\n+  }\n+\n+  Carousel.prototype.prev = function () {\n+    if (this.sliding) return\n+    return this.slide('prev')\n+  }\n+\n+  Carousel.prototype.slide = function (type, next) {\n+    var $active   = this.$element.find('.item.active')\n+    var $next     = next || this.getItemForDirection(type, $active)\n+    var isCycling = this.interval\n+    var direction = type == 'next' ? 'left' : 'right'\n+    var fallback  = type == 'next' ? 'first' : 'last'\n+    var that      = this\n+\n+    if (!$next.length) {\n+      if (!this.options.wrap) return\n+      $next = this.$element.find('.item')[fallback]()\n+    }\n+\n+    if ($next.hasClass('active')) return (this.sliding = false)\n+\n+    var relatedTarget = $next[0]\n+    var slideEvent = $.Event('slide.bs.carousel', {\n+      relatedTarget: relatedTarget,\n+      direction: direction\n+    })\n+    this.$element.trigger(slideEvent)\n+    if (slideEvent.isDefaultPrevented()) return\n+\n+    this.sliding = true\n+\n+    isCycling && this.pause()\n+\n+    if (this.$indicators.length) {\n+      this.$indicators.find('.active').removeClass('active')\n+      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n+      $nextIndicator && $nextIndicator.addClass('active')\n+    }\n+\n+    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n+    if ($.support.transition && this.$element.hasClass('slide')) {\n+      $next.addClass(type)\n+      $next[0].offsetWidth // force reflow\n+      $active.addClass(direction)\n+      $next.addClass(direction)\n+      $active\n+        .one('bsTransitionEnd', function () {\n+          $next.removeClass([type, direction].join(' ')).addClass('active')\n+          $active.removeClass(['active', direction].join(' '))\n+          that.sliding = false\n+          setTimeout(function () {\n+            that.$element.trigger(slidEvent)\n+          }, 0)\n+        })\n+        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n+    } else {\n+      $active.removeClass('active')\n+      $next.addClass('active')\n+      this.sliding = false\n+      this.$element.trigger(slidEvent)\n+    }\n+\n+    isCycling && this.cycle()\n+\n+    return this\n+  }\n+\n+\n+  // CAROUSEL PLUGIN DEFINITION\n+  // ==========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.carousel')\n+      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n+      var action  = typeof option == 'string' ? option : options.slide\n+\n+      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n+      if (typeof option == 'number') data.to(option)\n+      else if (action) data[action]()\n+      else if (options.interval) data.pause().cycle()\n+    })\n+  }\n+\n+  var old = $.fn.carousel\n+\n+  $.fn.carousel             = Plugin\n+  $.fn.carousel.Constructor = Carousel\n+\n+\n+  // CAROUSEL NO CONFLICT\n+  // ====================\n+\n+  $.fn.carousel.noConflict = function () {\n+    $.fn.carousel = old\n+    return this\n+  }\n+\n+\n+  // CAROUSEL DATA-API\n+  // =================\n+\n+  var clickHandler = function (e) {\n+    var href\n+    var $this   = $(this)\n+    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n+    if (!$target.hasClass('carousel')) return\n+    var options = $.extend({}, $target.data(), $this.data())\n+    var slideIndex = $this.attr('data-slide-to')\n+    if (slideIndex) options.interval = false\n+\n+    Plugin.call($target, options)\n+\n+    if (slideIndex) {\n+      $target.data('bs.carousel').to(slideIndex)\n+    }\n+\n+    e.preventDefault()\n+  }\n+\n+  $(document)\n+    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n+    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n+\n+  $(window).on('load', function () {\n+    $('[data-ride=\"carousel\"]').each(function () {\n+      var $carousel = $(this)\n+      Plugin.call($carousel, $carousel.data())\n+    })\n+  })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: collapse.js v3.3.0\n+ * http://getbootstrap.com/javascript/#collapse\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // COLLAPSE PUBLIC CLASS DEFINITION\n+  // ================================\n+\n+  var Collapse = function (element, options) {\n+    this.$element      = $(element)\n+    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n+    this.$trigger      = $(this.options.trigger).filter('[href=\"#' + element.id + '\"], [data-target=\"#' + element.id + '\"]')\n+    this.transitioning = null\n+\n+    if (this.options.parent) {\n+      this.$parent = this.getParent()\n+    } else {\n+      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n+    }\n+\n+    if (this.options.toggle) this.toggle()\n+  }\n+\n+  Collapse.VERSION  = '3.3.0'\n+\n+  Collapse.TRANSITION_DURATION = 350\n+\n+  Collapse.DEFAULTS = {\n+    toggle: true,\n+    trigger: '[data-toggle=\"collapse\"]'\n+  }\n+\n+  Collapse.prototype.dimension = function () {\n+    var hasWidth = this.$element.hasClass('width')\n+    return hasWidth ? 'width' : 'height'\n+  }\n+\n+  Collapse.prototype.show = function () {\n+    if (this.transitioning || this.$element.hasClass('in')) return\n+\n+    var activesData\n+    var actives = this.$parent && this.$parent.find('> .panel').children('.in, .collapsing')\n+\n+    if (actives && actives.length) {\n+      activesData = actives.data('bs.collapse')\n+      if (activesData && activesData.transitioning) return\n+    }\n+\n+    var startEvent = $.Event('show.bs.collapse')\n+    this.$element.trigger(startEvent)\n+    if (startEvent.isDefaultPrevented()) return\n+\n+    if (actives && actives.length) {\n+      Plugin.call(actives, 'hide')\n+      activesData || actives.data('bs.collapse', null)\n+    }\n+\n+    var dimension = this.dimension()\n+\n+    this.$element\n+      .removeClass('collapse')\n+      .addClass('collapsing')[dimension](0)\n+      .attr('aria-expanded', true)\n+\n+    this.$trigger\n+      .removeClass('collapsed')\n+      .attr('aria-expanded', true)\n+\n+    this.transitioning = 1\n+\n+    var complete = function () {\n+      this.$element\n+        .removeClass('collapsing')\n+        .addClass('collapse in')[dimension]('')\n+      this.transitioning = 0\n+      this.$element\n+        .trigger('shown.bs.collapse')\n+    }\n+\n+    if (!$.support.transition) return complete.call(this)\n+\n+    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n+\n+    this.$element\n+      .one('bsTransitionEnd', $.proxy(complete, this))\n+      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n+  }\n+\n+  Collapse.prototype.hide = function () {\n+    if (this.transitioning || !this.$element.hasClass('in')) return\n+\n+    var startEvent = $.Event('hide.bs.collapse')\n+    this.$element.trigger(startEvent)\n+    if (startEvent.isDefaultPrevented()) return\n+\n+    var dimension = this.dimension()\n+\n+    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n+\n+    this.$element\n+      .addClass('collapsing')\n+      .removeClass('collapse in')\n+      .attr('aria-expanded', false)\n+\n+    this.$trigger\n+      .addClass('collapsed')\n+      .attr('aria-expanded', false)\n+\n+    this.transitioning = 1\n+\n+    var complete = function () {\n+      this.transitioning = 0\n+      this.$element\n+        .removeClass('collapsing')\n+        .addClass('collapse')\n+        .trigger('hidden.bs.collapse')\n+    }\n+\n+    if (!$.support.transition) return complete.call(this)\n+\n+    this.$element\n+      [dimension](0)\n+      .one('bsTransitionEnd', $.proxy(complete, this))\n+      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n+  }\n+\n+  Collapse.prototype.toggle = function () {\n+    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n+  }\n+\n+  Collapse.prototype.getParent = function () {\n+    return $(this.options.parent)\n+      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n+      .each($.proxy(function (i, element) {\n+        var $element = $(element)\n+        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n+      }, this))\n+      .end()\n+  }\n+\n+  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n+    var isOpen = $element.hasClass('in')\n+\n+    $element.attr('aria-expanded', isOpen)\n+    $trigger\n+      .toggleClass('collapsed', !isOpen)\n+      .attr('aria-expanded', isOpen)\n+  }\n+\n+  function getTargetFromTrigger($trigger) {\n+    var href\n+    var target = $trigger.attr('data-target')\n+      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n+\n+    return $(target)\n+  }\n+\n+\n+  // COLLAPSE PLUGIN DEFINITION\n+  // ==========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.collapse')\n+      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n+\n+      if (!data && options.toggle && option == 'show') options.toggle = false\n+      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.collapse\n+\n+  $.fn.collapse             = Plugin\n+  $.fn.collapse.Constructor = Collapse\n+\n+\n+  // COLLAPSE NO CONFLICT\n+  // ====================\n+\n+  $.fn.collapse.noConflict = function () {\n+    $.fn.collapse = old\n+    return this\n+  }\n+\n+\n+  // COLLAPSE DATA-API\n+  // =================\n+\n+  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n+    var $this   = $(this)\n+\n+    if (!$this.attr('data-target')) e.preventDefault()\n+\n+    var $target = getTargetFromTrigger($this)\n+    var data    = $target.data('bs.collapse')\n+    var option  = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this })\n+\n+    Plugin.call($target, option)\n+  })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: dropdown.js v3.3.0\n+ * http://getbootstrap.com/javascript/#dropdowns\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // DROPDOWN CLASS DEFINITION\n+  // =========================\n+\n+  var backdrop = '.dropdown-backdrop'\n+  var toggle   = '[data-toggle=\"dropdown\"]'\n+  var Dropdown = function (element) {\n+    $(element).on('click.bs.dropdown', this.toggle)\n+  }\n+\n+  Dropdown.VERSION = '3.3.0'\n+\n+  Dropdown.prototype.toggle = function (e) {\n+    var $this = $(this)\n+\n+    if ($this.is('.disabled, :disabled')) return\n+\n+    var $parent  = getParent($this)\n+    var isActive = $parent.hasClass('open')\n+\n+    clearMenus()\n+\n+    if (!isActive) {\n+      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n+        // if mobile we use a backdrop because click events don't delegate\n+        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n+      }\n+\n+      var relatedTarget = { relatedTarget: this }\n+      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n+\n+      if (e.isDefaultPrevented()) return\n+\n+      $this\n+        .trigger('focus')\n+        .attr('aria-expanded', 'true')\n+\n+      $parent\n+        .toggleClass('open')\n+        .trigger('shown.bs.dropdown', relatedTarget)\n+    }\n+\n+    return false\n+  }\n+\n+  Dropdown.prototype.keydown = function (e) {\n+    if (!/(38|40|27|32)/.test(e.which)) return\n+\n+    var $this = $(this)\n+\n+    e.preventDefault()\n+    e.stopPropagation()\n+\n+    if ($this.is('.disabled, :disabled')) return\n+\n+    var $parent  = getParent($this)\n+    var isActive = $parent.hasClass('open')\n+\n+    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n+      if (e.which == 27) $parent.find(toggle).trigger('focus')\n+      return $this.trigger('click')\n+    }\n+\n+    var desc = ' li:not(.divider):visible a'\n+    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n+\n+    if (!$items.length) return\n+\n+    var index = $items.index(e.target)\n+\n+    if (e.which == 38 && index > 0)                 index--                        // drillUp\n+    if (e.which == 40 && index < $items.length - 1) index++                        // drillDown\n+    if (!~index)                                      index = 0\n+\n+    $items.eq(index).trigger('focus')\n+  }\n+\n+  function clearMenus(e) {\n+    if (e && e.which === 3) return\n+    $(backdrop).remove()\n+    $(toggle).each(function () {\n+      var $this         = $(this)\n+      var $parent       = getParent($this)\n+      var relatedTarget = { relatedTarget: this }\n+\n+      if (!$parent.hasClass('open')) return\n+\n+      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n+\n+      if (e.isDefaultPrevented()) return\n+\n+      $this.attr('aria-expanded', 'false')\n+      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n+    })\n+  }\n+\n+  function getParent($this) {\n+    var selector = $this.attr('data-target')\n+\n+    if (!selector) {\n+      selector = $this.attr('href')\n+      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n+    }\n+\n+    var $parent = selector && $(selector)\n+\n+    return $parent && $parent.length ? $parent : $this.parent()\n+  }\n+\n+\n+  // DROPDOWN PLUGIN DEFINITION\n+  // ==========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this = $(this)\n+      var data  = $this.data('bs.dropdown')\n+\n+      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n+      if (typeof option == 'string') data[option].call($this)\n+    })\n+  }\n+\n+  var old = $.fn.dropdown\n+\n+  $.fn.dropdown             = Plugin\n+  $.fn.dropdown.Constructor = Dropdown\n+\n+\n+  // DROPDOWN NO CONFLICT\n+  // ====================\n+\n+  $.fn.dropdown.noConflict = function () {\n+    $.fn.dropdown = old\n+    return this\n+  }\n+\n+\n+  // APPLY TO STANDARD DROPDOWN ELEMENTS\n+  // ===================================\n+\n+  $(document)\n+    .on('click.bs.dropdown.data-api', clearMenus)\n+    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n+    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n+    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n+    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n+    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: modal.js v3.3.0\n+ * http://getbootstrap.com/javascript/#modals\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // MODAL CLASS DEFINITION\n+  // ======================\n+\n+  var Modal = function (element, options) {\n+    this.options        = options\n+    this.$body          = $(document.body)\n+    this.$element       = $(element)\n+    this.$backdrop      =\n+    this.isShown        = null\n+    this.scrollbarWidth = 0\n+\n+    if (this.options.remote) {\n+      this.$element\n+        .find('.modal-content')\n+        .load(this.options.remote, $.proxy(function () {\n+          this.$element.trigger('loaded.bs.modal')\n+        }, this))\n+    }\n+  }\n+\n+  Modal.VERSION  = '3.3.0'\n+\n+  Modal.TRANSITION_DURATION = 300\n+  Modal.BACKDROP_TRANSITION_DURATION = 150\n+\n+  Modal.DEFAULTS = {\n+    backdrop: true,\n+    keyboard: true,\n+    show: true\n+  }\n+\n+  Modal.prototype.toggle = function (_relatedTarget) {\n+    return this.isShown ? this.hide() : this.show(_relatedTarget)\n+  }\n+\n+  Modal.prototype.show = function (_relatedTarget) {\n+    var that = this\n+    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n+\n+    this.$element.trigger(e)\n+\n+    if (this.isShown || e.isDefaultPrevented()) return\n+\n+    this.isShown = true\n+\n+    this.checkScrollbar()\n+    this.$body.addClass('modal-open')\n+\n+    this.setScrollbar()\n+    this.escape()\n+\n+    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n+\n+    this.backdrop(function () {\n+      var transition = $.support.transition && that.$element.hasClass('fade')\n+\n+      if (!that.$element.parent().length) {\n+        that.$element.appendTo(that.$body) // don't move modals dom position\n+      }\n+\n+      that.$element\n+        .show()\n+        .scrollTop(0)\n+\n+      if (transition) {\n+        that.$element[0].offsetWidth // force reflow\n+      }\n+\n+      that.$element\n+        .addClass('in')\n+        .attr('aria-hidden', false)\n+\n+      that.enforceFocus()\n+\n+      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n+\n+      transition ?\n+        that.$element.find('.modal-dialog') // wait for modal to slide in\n+          .one('bsTransitionEnd', function () {\n+            that.$element.trigger('focus').trigger(e)\n+          })\n+          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n+        that.$element.trigger('focus').trigger(e)\n+    })\n+  }\n+\n+  Modal.prototype.hide = function (e) {\n+    if (e) e.preventDefault()\n+\n+    e = $.Event('hide.bs.modal')\n+\n+    this.$element.trigger(e)\n+\n+    if (!this.isShown || e.isDefaultPrevented()) return\n+\n+    this.isShown = false\n+\n+    this.escape()\n+\n+    $(document).off('focusin.bs.modal')\n+\n+    this.$element\n+      .removeClass('in')\n+      .attr('aria-hidden', true)\n+      .off('click.dismiss.bs.modal')\n+\n+    $.support.transition && this.$element.hasClass('fade') ?\n+      this.$element\n+        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n+        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n+      this.hideModal()\n+  }\n+\n+  Modal.prototype.enforceFocus = function () {\n+    $(document)\n+      .off('focusin.bs.modal') // guard against infinite focus loop\n+      .on('focusin.bs.modal', $.proxy(function (e) {\n+        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n+          this.$element.trigger('focus')\n+        }\n+      }, this))\n+  }\n+\n+  Modal.prototype.escape = function () {\n+    if (this.isShown && this.options.keyboard) {\n+      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n+        e.which == 27 && this.hide()\n+      }, this))\n+    } else if (!this.isShown) {\n+      this.$element.off('keydown.dismiss.bs.modal')\n+    }\n+  }\n+\n+  Modal.prototype.hideModal = function () {\n+    var that = this\n+    this.$element.hide()\n+    this.backdrop(function () {\n+      that.$body.removeClass('modal-open')\n+      that.resetScrollbar()\n+      that.$element.trigger('hidden.bs.modal')\n+    })\n+  }\n+\n+  Modal.prototype.removeBackdrop = function () {\n+    this.$backdrop && this.$backdrop.remove()\n+    this.$backdrop = null\n+  }\n+\n+  Modal.prototype.backdrop = function (callback) {\n+    var that = this\n+    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n+\n+    if (this.isShown && this.options.backdrop) {\n+      var doAnimate = $.support.transition && animate\n+\n+      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n+        .prependTo(this.$element)\n+        .on('click.dismiss.bs.modal', $.proxy(function (e) {\n+          if (e.target !== e.currentTarget) return\n+          this.options.backdrop == 'static'\n+            ? this.$element[0].focus.call(this.$element[0])\n+            : this.hide.call(this)\n+        }, this))\n+\n+      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n+\n+      this.$backdrop.addClass('in')\n+\n+      if (!callback) return\n+\n+      doAnimate ?\n+        this.$backdrop\n+          .one('bsTransitionEnd', callback)\n+          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n+        callback()\n+\n+    } else if (!this.isShown && this.$backdrop) {\n+      this.$backdrop.removeClass('in')\n+\n+      var callbackRemove = function () {\n+        that.removeBackdrop()\n+        callback && callback()\n+      }\n+      $.support.transition && this.$element.hasClass('fade') ?\n+        this.$backdrop\n+          .one('bsTransitionEnd', callbackRemove)\n+          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n+        callbackRemove()\n+\n+    } else if (callback) {\n+      callback()\n+    }\n+  }\n+\n+  Modal.prototype.checkScrollbar = function () {\n+    this.scrollbarWidth = this.measureScrollbar()\n+  }\n+\n+  Modal.prototype.setScrollbar = function () {\n+    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n+    if (this.scrollbarWidth) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n+  }\n+\n+  Modal.prototype.resetScrollbar = function () {\n+    this.$body.css('padding-right', '')\n+  }\n+\n+  Modal.prototype.measureScrollbar = function () { // thx walsh\n+    if (document.body.clientWidth >= window.innerWidth) return 0\n+    var scrollDiv = document.createElement('div')\n+    scrollDiv.className = 'modal-scrollbar-measure'\n+    this.$body.append(scrollDiv)\n+    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n+    this.$body[0].removeChild(scrollDiv)\n+    return scrollbarWidth\n+  }\n+\n+\n+  // MODAL PLUGIN DEFINITION\n+  // =======================\n+\n+  function Plugin(option, _relatedTarget) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.modal')\n+      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n+\n+      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n+      if (typeof option == 'string') data[option](_relatedTarget)\n+      else if (options.show) data.show(_relatedTarget)\n+    })\n+  }\n+\n+  var old = $.fn.modal\n+\n+  $.fn.modal             = Plugin\n+  $.fn.modal.Constructor = Modal\n+\n+\n+  // MODAL NO CONFLICT\n+  // =================\n+\n+  $.fn.modal.noConflict = function () {\n+    $.fn.modal = old\n+    return this\n+  }\n+\n+\n+  // MODAL DATA-API\n+  // ==============\n+\n+  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n+    var $this   = $(this)\n+    var href    = $this.attr('href')\n+    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n+    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n+\n+    if ($this.is('a')) e.preventDefault()\n+\n+    $target.one('show.bs.modal', function (showEvent) {\n+      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n+      $target.one('hidden.bs.modal', function () {\n+        $this.is(':visible') && $this.trigger('focus')\n+      })\n+    })\n+    Plugin.call($target, option, this)\n+  })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: tooltip.js v3.3.0\n+ * http://getbootstrap.com/javascript/#tooltip\n+ * Inspired by the original jQuery.tipsy by Jason Frame\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // TOOLTIP PUBLIC CLASS DEFINITION\n+  // ===============================\n+\n+  var Tooltip = function (element, options) {\n+    this.type       =\n+    this.options    =\n+    this.enabled    =\n+    this.timeout    =\n+    this.hoverState =\n+    this.$element   = null\n+\n+    this.init('tooltip', element, options)\n+  }\n+\n+  Tooltip.VERSION  = '3.3.0'\n+\n+  Tooltip.TRANSITION_DURATION = 150\n+\n+  Tooltip.DEFAULTS = {\n+    animation: true,\n+    placement: 'top',\n+    selector: false,\n+    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n+    trigger: 'hover focus',\n+    title: '',\n+    delay: 0,\n+    html: false,\n+    container: false,\n+    viewport: {\n+      selector: 'body',\n+      padding: 0\n+    }\n+  }\n+\n+  Tooltip.prototype.init = function (type, element, options) {\n+    this.enabled   = true\n+    this.type      = type\n+    this.$element  = $(element)\n+    this.options   = this.getOptions(options)\n+    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n+\n+    var triggers = this.options.trigger.split(' ')\n+\n+    for (var i = triggers.length; i--;) {\n+      var trigger = triggers[i]\n+\n+      if (trigger == 'click') {\n+        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n+      } else if (trigger != 'manual') {\n+        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n+        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n+\n+        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n+        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n+      }\n+    }\n+\n+    this.options.selector ?\n+      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n+      this.fixTitle()\n+  }\n+\n+  Tooltip.prototype.getDefaults = function () {\n+    return Tooltip.DEFAULTS\n+  }\n+\n+  Tooltip.prototype.getOptions = function (options) {\n+    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n+\n+    if (options.delay && typeof options.delay == 'number') {\n+      options.delay = {\n+        show: options.delay,\n+        hide: options.delay\n+      }\n+    }\n+\n+    return options\n+  }\n+\n+  Tooltip.prototype.getDelegateOptions = function () {\n+    var options  = {}\n+    var defaults = this.getDefaults()\n+\n+    this._options && $.each(this._options, function (key, value) {\n+      if (defaults[key] != value) options[key] = value\n+    })\n+\n+    return options\n+  }\n+\n+  Tooltip.prototype.enter = function (obj) {\n+    var self = obj instanceof this.constructor ?\n+      obj : $(obj.currentTarget).data('bs.' + this.type)\n+\n+    if (self && self.$tip && self.$tip.is(':visible')) {\n+      self.hoverState = 'in'\n+      return\n+    }\n+\n+    if (!self) {\n+      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n+      $(obj.currentTarget).data('bs.' + this.type, self)\n+    }\n+\n+    clearTimeout(self.timeout)\n+\n+    self.hoverState = 'in'\n+\n+    if (!self.options.delay || !self.options.delay.show) return self.show()\n+\n+    self.timeout = setTimeout(function () {\n+      if (self.hoverState == 'in') self.show()\n+    }, self.options.delay.show)\n+  }\n+\n+  Tooltip.prototype.leave = function (obj) {\n+    var self = obj instanceof this.constructor ?\n+      obj : $(obj.currentTarget).data('bs.' + this.type)\n+\n+    if (!self) {\n+      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n+      $(obj.currentTarget).data('bs.' + this.type, self)\n+    }\n+\n+    clearTimeout(self.timeout)\n+\n+    self.hoverState = 'out'\n+\n+    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n+\n+    self.timeout = setTimeout(function () {\n+      if (self.hoverState == 'out') self.hide()\n+    }, self.options.delay.hide)\n+  }\n+\n+  Tooltip.prototype.show = function () {\n+    var e = $.Event('show.bs.' + this.type)\n+\n+    if (this.hasContent() && this.enabled) {\n+      this.$element.trigger(e)\n+\n+      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n+      if (e.isDefaultPrevented() || !inDom) return\n+      var that = this\n+\n+      var $tip = this.tip()\n+\n+      var tipId = this.getUID(this.type)\n+\n+      this.setContent()\n+      $tip.attr('id', tipId)\n+      this.$element.attr('aria-describedby', tipId)\n+\n+      if (this.options.animation) $tip.addClass('fade')\n+\n+      var placement = typeof this.options.placement == 'function' ?\n+        this.options.placement.call(this, $tip[0], this.$element[0]) :\n+        this.options.placement\n+\n+      var autoToken = /\\s?auto?\\s?/i\n+      var autoPlace = autoToken.test(placement)\n+      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n+\n+      $tip\n+        .detach()\n+        .css({ top: 0, left: 0, display: 'block' })\n+        .addClass(placement)\n+        .data('bs.' + this.type, this)\n+\n+      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n+\n+      var pos          = this.getPosition()\n+      var actualWidth  = $tip[0].offsetWidth\n+      var actualHeight = $tip[0].offsetHeight\n+\n+      if (autoPlace) {\n+        var orgPlacement = placement\n+        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\n+        var containerDim = this.getPosition($container)\n+\n+        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\n+                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\n+                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\n+                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\n+                    placement\n+\n+        $tip\n+          .removeClass(orgPlacement)\n+          .addClass(placement)\n+      }\n+\n+      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n+\n+      this.applyPlacement(calculatedOffset, placement)\n+\n+      var complete = function () {\n+        var prevHoverState = that.hoverState\n+        that.$element.trigger('shown.bs.' + that.type)\n+        that.hoverState = null\n+\n+        if (prevHoverState == 'out') that.leave(that)\n+      }\n+\n+      $.support.transition && this.$tip.hasClass('fade') ?\n+        $tip\n+          .one('bsTransitionEnd', complete)\n+          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n+        complete()\n+    }\n+  }\n+\n+  Tooltip.prototype.applyPlacement = function (offset, placement) {\n+    var $tip   = this.tip()\n+    var width  = $tip[0].offsetWidth\n+    var height = $tip[0].offsetHeight\n+\n+    // manually read margins because getBoundingClientRect includes difference\n+    var marginTop = parseInt($tip.css('margin-top'), 10)\n+    var marginLeft = parseInt($tip.css('margin-left'), 10)\n+\n+    // we must check for NaN for ie 8/9\n+    if (isNaN(marginTop))  marginTop  = 0\n+    if (isNaN(marginLeft)) marginLeft = 0\n+\n+    offset.top  = offset.top  + marginTop\n+    offset.left = offset.left + marginLeft\n+\n+    // $.fn.offset doesn't round pixel values\n+    // so we use setOffset directly with our own function B-0\n+    $.offset.setOffset($tip[0], $.extend({\n+      using: function (props) {\n+        $tip.css({\n+          top: Math.round(props.top),\n+          left: Math.round(props.left)\n+        })\n+      }\n+    }, offset), 0)\n+\n+    $tip.addClass('in')\n+\n+    // check to see if placing tip in new offset caused the tip to resize itself\n+    var actualWidth  = $tip[0].offsetWidth\n+    var actualHeight = $tip[0].offsetHeight\n+\n+    if (placement == 'top' && actualHeight != height) {\n+      offset.top = offset.top + height - actualHeight\n+    }\n+\n+    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n+\n+    if (delta.left) offset.left += delta.left\n+    else offset.top += delta.top\n+\n+    var isVertical          = /top|bottom/.test(placement)\n+    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n+    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n+\n+    $tip.offset(offset)\n+    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n+  }\n+\n+  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {\n+    this.arrow()\n+      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n+      .css(isHorizontal ? 'top' : 'left', '')\n+  }\n+\n+  Tooltip.prototype.setContent = function () {\n+    var $tip  = this.tip()\n+    var title = this.getTitle()\n+\n+    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n+    $tip.removeClass('fade in top bottom left right')\n+  }\n+\n+  Tooltip.prototype.hide = function (callback) {\n+    var that = this\n+    var $tip = this.tip()\n+    var e    = $.Event('hide.bs.' + this.type)\n+\n+    function complete() {\n+      if (that.hoverState != 'in') $tip.detach()\n+      that.$element\n+        .removeAttr('aria-describedby')\n+        .trigger('hidden.bs.' + that.type)\n+      callback && callback()\n+    }\n+\n+    this.$element.trigger(e)\n+\n+    if (e.isDefaultPrevented()) return\n+\n+    $tip.removeClass('in')\n+\n+    $.support.transition && this.$tip.hasClass('fade') ?\n+      $tip\n+        .one('bsTransitionEnd', complete)\n+        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n+      complete()\n+\n+    this.hoverState = null\n+\n+    return this\n+  }\n+\n+  Tooltip.prototype.fixTitle = function () {\n+    var $e = this.$element\n+    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n+      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n+    }\n+  }\n+\n+  Tooltip.prototype.hasContent = function () {\n+    return this.getTitle()\n+  }\n+\n+  Tooltip.prototype.getPosition = function ($element) {\n+    $element   = $element || this.$element\n+\n+    var el     = $element[0]\n+    var isBody = el.tagName == 'BODY'\n+\n+    var elRect    = el.getBoundingClientRect()\n+    if (elRect.width == null) {\n+      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n+      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n+    }\n+    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n+    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n+    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n+\n+    return $.extend({}, elRect, scroll, outerDims, elOffset)\n+  }\n+\n+  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n+    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n+           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n+           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n+        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }\n+\n+  }\n+\n+  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n+    var delta = { top: 0, left: 0 }\n+    if (!this.$viewport) return delta\n+\n+    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n+    var viewportDimensions = this.getPosition(this.$viewport)\n+\n+    if (/right|left/.test(placement)) {\n+      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n+      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n+      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n+        delta.top = viewportDimensions.top - topEdgeOffset\n+      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n+        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n+      }\n+    } else {\n+      var leftEdgeOffset  = pos.left - viewportPadding\n+      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n+      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n+        delta.left = viewportDimensions.left - leftEdgeOffset\n+      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n+        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n+      }\n+    }\n+\n+    return delta\n+  }\n+\n+  Tooltip.prototype.getTitle = function () {\n+    var title\n+    var $e = this.$element\n+    var o  = this.options\n+\n+    title = $e.attr('data-original-title')\n+      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n+\n+    return title\n+  }\n+\n+  Tooltip.prototype.getUID = function (prefix) {\n+    do prefix += ~~(Math.random() * 1000000)\n+    while (document.getElementById(prefix))\n+    return prefix\n+  }\n+\n+  Tooltip.prototype.tip = function () {\n+    return (this.$tip = this.$tip || $(this.options.template))\n+  }\n+\n+  Tooltip.prototype.arrow = function () {\n+    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n+  }\n+\n+  Tooltip.prototype.enable = function () {\n+    this.enabled = true\n+  }\n+\n+  Tooltip.prototype.disable = function () {\n+    this.enabled = false\n+  }\n+\n+  Tooltip.prototype.toggleEnabled = function () {\n+    this.enabled = !this.enabled\n+  }\n+\n+  Tooltip.prototype.toggle = function (e) {\n+    var self = this\n+    if (e) {\n+      self = $(e.currentTarget).data('bs.' + this.type)\n+      if (!self) {\n+        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n+        $(e.currentTarget).data('bs.' + this.type, self)\n+      }\n+    }\n+\n+    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n+  }\n+\n+  Tooltip.prototype.destroy = function () {\n+    var that = this\n+    clearTimeout(this.timeout)\n+    this.hide(function () {\n+      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n+    })\n+  }\n+\n+\n+  // TOOLTIP PLUGIN DEFINITION\n+  // =========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this    = $(this)\n+      var data     = $this.data('bs.tooltip')\n+      var options  = typeof option == 'object' && option\n+      var selector = options && options.selector\n+\n+      if (!data && option == 'destroy') return\n+      if (selector) {\n+        if (!data) $this.data('bs.tooltip', (data = {}))\n+        if (!data[selector]) data[selector] = new Tooltip(this, options)\n+      } else {\n+        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n+      }\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.tooltip\n+\n+  $.fn.tooltip             = Plugin\n+  $.fn.tooltip.Constructor = Tooltip\n+\n+\n+  // TOOLTIP NO CONFLICT\n+  // ===================\n+\n+  $.fn.tooltip.noConflict = function () {\n+    $.fn.tooltip = old\n+    return this\n+  }\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: popover.js v3.3.0\n+ * http://getbootstrap.com/javascript/#popovers\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // POPOVER PUBLIC CLASS DEFINITION\n+  // ===============================\n+\n+  var Popover = function (element, options) {\n+    this.init('popover', element, options)\n+  }\n+\n+  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n+\n+  Popover.VERSION  = '3.3.0'\n+\n+  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n+    placement: 'right',\n+    trigger: 'click',\n+    content: '',\n+    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n+  })\n+\n+\n+  // NOTE: POPOVER EXTENDS tooltip.js\n+  // ================================\n+\n+  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n+\n+  Popover.prototype.constructor = Popover\n+\n+  Popover.prototype.getDefaults = function () {\n+    return Popover.DEFAULTS\n+  }\n+\n+  Popover.prototype.setContent = function () {\n+    var $tip    = this.tip()\n+    var title   = this.getTitle()\n+    var content = this.getContent()\n+\n+    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n+    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n+      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n+    ](content)\n+\n+    $tip.removeClass('fade top bottom left right in')\n+\n+    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n+    // this manually by checking the contents.\n+    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n+  }\n+\n+  Popover.prototype.hasContent = function () {\n+    return this.getTitle() || this.getContent()\n+  }\n+\n+  Popover.prototype.getContent = function () {\n+    var $e = this.$element\n+    var o  = this.options\n+\n+    return $e.attr('data-content')\n+      || (typeof o.content == 'function' ?\n+            o.content.call($e[0]) :\n+            o.content)\n+  }\n+\n+  Popover.prototype.arrow = function () {\n+    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n+  }\n+\n+  Popover.prototype.tip = function () {\n+    if (!this.$tip) this.$tip = $(this.options.template)\n+    return this.$tip\n+  }\n+\n+\n+  // POPOVER PLUGIN DEFINITION\n+  // =========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this    = $(this)\n+      var data     = $this.data('bs.popover')\n+      var options  = typeof option == 'object' && option\n+      var selector = options && options.selector\n+\n+      if (!data && option == 'destroy') return\n+      if (selector) {\n+        if (!data) $this.data('bs.popover', (data = {}))\n+        if (!data[selector]) data[selector] = new Popover(this, options)\n+      } else {\n+        if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n+      }\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.popover\n+\n+  $.fn.popover             = Plugin\n+  $.fn.popover.Constructor = Popover\n+\n+\n+  // POPOVER NO CONFLICT\n+  // ===================\n+\n+  $.fn.popover.noConflict = function () {\n+    $.fn.popover = old\n+    return this\n+  }\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: scrollspy.js v3.3.0\n+ * http://getbootstrap.com/javascript/#scrollspy\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // SCROLLSPY CLASS DEFINITION\n+  // ==========================\n+\n+  function ScrollSpy(element, options) {\n+    var process  = $.proxy(this.process, this)\n+\n+    this.$body          = $('body')\n+    this.$scrollElement = $(element).is('body') ? $(window) : $(element)\n+    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n+    this.selector       = (this.options.target || '') + ' .nav li > a'\n+    this.offsets        = []\n+    this.targets        = []\n+    this.activeTarget   = null\n+    this.scrollHeight   = 0\n+\n+    this.$scrollElement.on('scroll.bs.scrollspy', process)\n+    this.refresh()\n+    this.process()\n+  }\n+\n+  ScrollSpy.VERSION  = '3.3.0'\n+\n+  ScrollSpy.DEFAULTS = {\n+    offset: 10\n+  }\n+\n+  ScrollSpy.prototype.getScrollHeight = function () {\n+    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n+  }\n+\n+  ScrollSpy.prototype.refresh = function () {\n+    var offsetMethod = 'offset'\n+    var offsetBase   = 0\n+\n+    if (!$.isWindow(this.$scrollElement[0])) {\n+      offsetMethod = 'position'\n+      offsetBase   = this.$scrollElement.scrollTop()\n+    }\n+\n+    this.offsets = []\n+    this.targets = []\n+    this.scrollHeight = this.getScrollHeight()\n+\n+    var self     = this\n+\n+    this.$body\n+      .find(this.selector)\n+      .map(function () {\n+        var $el   = $(this)\n+        var href  = $el.data('target') || $el.attr('href')\n+        var $href = /^#./.test(href) && $(href)\n+\n+        return ($href\n+          && $href.length\n+          && $href.is(':visible')\n+          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n+      })\n+      .sort(function (a, b) { return a[0] - b[0] })\n+      .each(function () {\n+        self.offsets.push(this[0])\n+        self.targets.push(this[1])\n+      })\n+  }\n+\n+  ScrollSpy.prototype.process = function () {\n+    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n+    var scrollHeight = this.getScrollHeight()\n+    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n+    var offsets      = this.offsets\n+    var targets      = this.targets\n+    var activeTarget = this.activeTarget\n+    var i\n+\n+    if (this.scrollHeight != scrollHeight) {\n+      this.refresh()\n+    }\n+\n+    if (scrollTop >= maxScroll) {\n+      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n+    }\n+\n+    if (activeTarget && scrollTop < offsets[0]) {\n+      this.activeTarget = null\n+      return this.clear()\n+    }\n+\n+    for (i = offsets.length; i--;) {\n+      activeTarget != targets[i]\n+        && scrollTop >= offsets[i]\n+        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\n+        && this.activate(targets[i])\n+    }\n+  }\n+\n+  ScrollSpy.prototype.activate = function (target) {\n+    this.activeTarget = target\n+\n+    this.clear()\n+\n+    var selector = this.selector +\n+        '[data-target=\"' + target + '\"],' +\n+        this.selector + '[href=\"' + target + '\"]'\n+\n+    var active = $(selector)\n+      .parents('li')\n+      .addClass('active')\n+\n+    if (active.parent('.dropdown-menu').length) {\n+      active = active\n+        .closest('li.dropdown')\n+        .addClass('active')\n+    }\n+\n+    active.trigger('activate.bs.scrollspy')\n+  }\n+\n+  ScrollSpy.prototype.clear = function () {\n+    $(this.selector)\n+      .parentsUntil(this.options.target, '.active')\n+      .removeClass('active')\n+  }\n+\n+\n+  // SCROLLSPY PLUGIN DEFINITION\n+  // ===========================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.scrollspy')\n+      var options = typeof option == 'object' && option\n+\n+      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.scrollspy\n+\n+  $.fn.scrollspy             = Plugin\n+  $.fn.scrollspy.Constructor = ScrollSpy\n+\n+\n+  // SCROLLSPY NO CONFLICT\n+  // =====================\n+\n+  $.fn.scrollspy.noConflict = function () {\n+    $.fn.scrollspy = old\n+    return this\n+  }\n+\n+\n+  // SCROLLSPY DATA-API\n+  // ==================\n+\n+  $(window).on('load.bs.scrollspy.data-api', function () {\n+    $('[data-spy=\"scroll\"]').each(function () {\n+      var $spy = $(this)\n+      Plugin.call($spy, $spy.data())\n+    })\n+  })\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: tab.js v3.3.0\n+ * http://getbootstrap.com/javascript/#tabs\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // TAB CLASS DEFINITION\n+  // ====================\n+\n+  var Tab = function (element) {\n+    this.element = $(element)\n+  }\n+\n+  Tab.VERSION = '3.3.0'\n+\n+  Tab.TRANSITION_DURATION = 150\n+\n+  Tab.prototype.show = function () {\n+    var $this    = this.element\n+    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n+    var selector = $this.data('target')\n+\n+    if (!selector) {\n+      selector = $this.attr('href')\n+      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n+    }\n+\n+    if ($this.parent('li').hasClass('active')) return\n+\n+    var $previous = $ul.find('.active:last a')\n+    var hideEvent = $.Event('hide.bs.tab', {\n+      relatedTarget: $this[0]\n+    })\n+    var showEvent = $.Event('show.bs.tab', {\n+      relatedTarget: $previous[0]\n+    })\n+\n+    $previous.trigger(hideEvent)\n+    $this.trigger(showEvent)\n+\n+    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n+\n+    var $target = $(selector)\n+\n+    this.activate($this.closest('li'), $ul)\n+    this.activate($target, $target.parent(), function () {\n+      $previous.trigger({\n+        type: 'hidden.bs.tab',\n+        relatedTarget: $this[0]\n+      })\n+      $this.trigger({\n+        type: 'shown.bs.tab',\n+        relatedTarget: $previous[0]\n+      })\n+    })\n+  }\n+\n+  Tab.prototype.activate = function (element, container, callback) {\n+    var $active    = container.find('> .active')\n+    var transition = callback\n+      && $.support.transition\n+      && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\n+\n+    function next() {\n+      $active\n+        .removeClass('active')\n+        .find('> .dropdown-menu > .active')\n+          .removeClass('active')\n+        .end()\n+        .find('[data-toggle=\"tab\"]')\n+          .attr('aria-expanded', false)\n+\n+      element\n+        .addClass('active')\n+        .find('[data-toggle=\"tab\"]')\n+          .attr('aria-expanded', true)\n+\n+      if (transition) {\n+        element[0].offsetWidth // reflow for transition\n+        element.addClass('in')\n+      } else {\n+        element.removeClass('fade')\n+      }\n+\n+      if (element.parent('.dropdown-menu')) {\n+        element\n+          .closest('li.dropdown')\n+            .addClass('active')\n+          .end()\n+          .find('[data-toggle=\"tab\"]')\n+            .attr('aria-expanded', true)\n+      }\n+\n+      callback && callback()\n+    }\n+\n+    $active.length && transition ?\n+      $active\n+        .one('bsTransitionEnd', next)\n+        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n+      next()\n+\n+    $active.removeClass('in')\n+  }\n+\n+\n+  // TAB PLUGIN DEFINITION\n+  // =====================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this = $(this)\n+      var data  = $this.data('bs.tab')\n+\n+      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.tab\n+\n+  $.fn.tab             = Plugin\n+  $.fn.tab.Constructor = Tab\n+\n+\n+  // TAB NO CONFLICT\n+  // ===============\n+\n+  $.fn.tab.noConflict = function () {\n+    $.fn.tab = old\n+    return this\n+  }\n+\n+\n+  // TAB DATA-API\n+  // ============\n+\n+  var clickHandler = function (e) {\n+    e.preventDefault()\n+    Plugin.call($(this), 'show')\n+  }\n+\n+  $(document)\n+    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n+    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n+\n+}(jQuery);\n+\n+/* ========================================================================\n+ * Bootstrap: affix.js v3.3.0\n+ * http://getbootstrap.com/javascript/#affix\n+ * ========================================================================\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ * ======================================================================== */\n+\n+\n++function ($) {\n+  'use strict';\n+\n+  // AFFIX CLASS DEFINITION\n+  // ======================\n+\n+  var Affix = function (element, options) {\n+    this.options = $.extend({}, Affix.DEFAULTS, options)\n+\n+    this.$target = $(this.options.target)\n+      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n+      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n+\n+    this.$element     = $(element)\n+    this.affixed      =\n+    this.unpin        =\n+    this.pinnedOffset = null\n+\n+    this.checkPosition()\n+  }\n+\n+  Affix.VERSION  = '3.3.0'\n+\n+  Affix.RESET    = 'affix affix-top affix-bottom'\n+\n+  Affix.DEFAULTS = {\n+    offset: 0,\n+    target: window\n+  }\n+\n+  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n+    var scrollTop    = this.$target.scrollTop()\n+    var position     = this.$element.offset()\n+    var targetHeight = this.$target.height()\n+\n+    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n+\n+    if (this.affixed == 'bottom') {\n+      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n+      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n+    }\n+\n+    var initializing   = this.affixed == null\n+    var colliderTop    = initializing ? scrollTop : position.top\n+    var colliderHeight = initializing ? targetHeight : height\n+\n+    if (offsetTop != null && colliderTop <= offsetTop) return 'top'\n+    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n+\n+    return false\n+  }\n+\n+  Affix.prototype.getPinnedOffset = function () {\n+    if (this.pinnedOffset) return this.pinnedOffset\n+    this.$element.removeClass(Affix.RESET).addClass('affix')\n+    var scrollTop = this.$target.scrollTop()\n+    var position  = this.$element.offset()\n+    return (this.pinnedOffset = position.top - scrollTop)\n+  }\n+\n+  Affix.prototype.checkPositionWithEventLoop = function () {\n+    setTimeout($.proxy(this.checkPosition, this), 1)\n+  }\n+\n+  Affix.prototype.checkPosition = function () {\n+    if (!this.$element.is(':visible')) return\n+\n+    var height       = this.$element.height()\n+    var offset       = this.options.offset\n+    var offsetTop    = offset.top\n+    var offsetBottom = offset.bottom\n+    var scrollHeight = $('body').height()\n+\n+    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n+    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n+    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n+\n+    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n+\n+    if (this.affixed != affix) {\n+      if (this.unpin != null) this.$element.css('top', '')\n+\n+      var affixType = 'affix' + (affix ? '-' + affix : '')\n+      var e         = $.Event(affixType + '.bs.affix')\n+\n+      this.$element.trigger(e)\n+\n+      if (e.isDefaultPrevented()) return\n+\n+      this.affixed = affix\n+      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n+\n+      this.$element\n+        .removeClass(Affix.RESET)\n+        .addClass(affixType)\n+        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n+    }\n+\n+    if (affix == 'bottom') {\n+      this.$element.offset({\n+        top: scrollHeight - height - offsetBottom\n+      })\n+    }\n+  }\n+\n+\n+  // AFFIX PLUGIN DEFINITION\n+  // =======================\n+\n+  function Plugin(option) {\n+    return this.each(function () {\n+      var $this   = $(this)\n+      var data    = $this.data('bs.affix')\n+      var options = typeof option == 'object' && option\n+\n+      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n+      if (typeof option == 'string') data[option]()\n+    })\n+  }\n+\n+  var old = $.fn.affix\n+\n+  $.fn.affix             = Plugin\n+  $.fn.affix.Constructor = Affix\n+\n+\n+  // AFFIX NO CONFLICT\n+  // =================\n+\n+  $.fn.affix.noConflict = function () {\n+    $.fn.affix = old\n+    return this\n+  }\n+\n+\n+  // AFFIX DATA-API\n+  // ==============\n+\n+  $(window).on('load', function () {\n+    $('[data-spy=\"affix\"]').each(function () {\n+      var $spy = $(this)\n+      var data = $spy.data()\n+\n+      data.offset = data.offset || {}\n+\n+      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n+      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n+\n+      Plugin.call($spy, data)\n+    })\n+  })\n+\n+}(jQuery);"
        },
        {
            "sha": "63866bcb46b128471bde113e6657f994ee477cf7",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/js/bootstrap.min.js",
            "status": "added",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.min.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.min.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fbootstrap.min.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,7 @@\n+/*!\n+ * Bootstrap v3.3.0 (http://getbootstrap.com)\n+ * Copyright 2011-2014 Twitter, Inc.\n+ * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n+ */\n+if(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.0\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.0\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")&&(c.prop(\"checked\")&&this.$element.hasClass(\"active\")?a=!1:b.find(\".active\").removeClass(\"active\")),a&&c.prop(\"checked\",!this.$element.hasClass(\"active\")).trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\"));a&&this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",\"focus\"==b.type)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=this.sliding=this.interval=this.$active=this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.0\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=\"prev\"==a?-1:1,d=this.getItemIndex(b),e=(d+c)%this.$items.length;return this.$items.eq(e)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=\"next\"==b?\"first\":\"last\",j=this;if(!f.length){if(!this.options.wrap)return;f=this.$element.find(\".item\")[i]()}if(f.hasClass(\"active\"))return this.sliding=!1;var k=f[0],l=a.Event(\"slide.bs.carousel\",{relatedTarget:k,direction:h});if(this.$element.trigger(l),!l.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var m=a(this.$indicators.children()[this.getItemIndex(f)]);m&&m.addClass(\"active\")}var n=a.Event(\"slid.bs.carousel\",{relatedTarget:k,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),j.sliding=!1,setTimeout(function(){j.$element.trigger(n)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(n)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&\"show\"==b&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a(this.options.trigger).filter('[href=\"#'+b.id+'\"], [data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.0\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0,trigger:'[data-toggle=\"collapse\"]'},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.find(\"> .panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":a.extend({},e.data(),{trigger:this});c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){b&&3===b.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=c(d),f={relatedTarget:this};e.hasClass(\"open\")&&(e.trigger(b=a.Event(\"hide.bs.dropdown\",f)),b.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(\"hidden.bs.dropdown\",f)))}))}function c(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.0\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=c(e),g=f.hasClass(\"open\");if(b(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a('<div class=\"dropdown-backdrop\"/>').insertAfter(a(this)).on(\"click\",b);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(\"shown.bs.dropdown\",h)}return!1}},g.prototype.keydown=function(b){if(/(38|40|27|32)/.test(b.which)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=c(d),g=e.hasClass(\"open\");if(!g&&27!=b.which||g&&27==b.which)return 27==b.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.divider):visible a\",i=e.find('[role=\"menu\"]'+h+', [role=\"listbox\"]'+h);if(i.length){var j=i.index(b.target);38==b.which&&j>0&&j--,40==b.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",b).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",'[role=\"menu\"]',g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",'[role=\"listbox\"]',g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.0\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass(\"modal-open\"),this.setScrollbar(),this.escape(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\").attr(\"aria-hidden\",!1),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$element.find(\".modal-dialog\").one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").attr(\"aria-hidden\",!0).off(\"click.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a('<div class=\"modal-backdrop '+e+'\" />').prependTo(this.$element).on(\"click.dismiss.bs.modal\",a.proxy(function(a){a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.checkScrollbar=function(){this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.scrollbarWidth&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",\"\")},c.prototype.measureScrollbar=function(){if(document.body.clientWidth>=window.innerWidth)return 0;var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b,g=f&&f.selector;(e||\"destroy\"!=b)&&(g?(e||d.data(\"bs.tooltip\",e={}),e[g]||(e[g]=new c(this,f))):e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.0\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(this.options.viewport.selector||this.options.viewport);for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c&&c.$tip&&c.$tip.is(\":visible\")?void(c.hoverState=\"in\"):(c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.options.container?a(this.options.container):this.$element.parent(),p=this.getPosition(o);h=\"bottom\"==h&&k.bottom+m>p.bottom?\"top\":\"top\"==h&&k.top-m<p.top?\"bottom\":\"right\"==h&&k.right+l>p.width?\"left\":\"left\"==h&&k.left-l<p.left?\"right\":h,f.removeClass(n).addClass(h)}var q=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(q,h);var r=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",r).emulateTransitionEnd(c.TRANSITION_DURATION):r()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top=b.top+g,b.left=b.left+h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=this.tip(),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.width&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type)})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b,g=f&&f.selector;(e||\"destroy\"!=b)&&(g?(e||d.data(\"bs.popover\",e={}),e[g]||(e[g]=new c(this,f))):e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.0\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")},c.prototype.tip=function(){return this.$tip||(this.$tip=a(this.options.template)),this.$tip};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){var e=a.proxy(this.process,this);this.$body=a(\"body\"),this.$scrollElement=a(a(c).is(\"body\")?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",e),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.0\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=\"offset\",c=0;a.isWindow(this.$scrollElement[0])||(b=\"position\",c=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var d=this;this.$body.find(this.selector).map(function(){var d=a(this),e=d.data(\"target\")||d.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[b]().top+c,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){d.offsets.push(this[0]),d.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(!e[a+1]||b<=e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.0\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\")&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)\n+}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.0\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=i?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=a(\"body\").height();\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\n\\ No newline at end of file"
        },
        {
            "sha": "eb1e1978ae817dfd9ffe756c17040ad712325a99",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/js/eventsRequester.js",
            "status": "added",
            "additions": 266,
            "deletions": 0,
            "changes": 266,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FeventsRequester.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FeventsRequester.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FeventsRequester.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,266 @@\n+/*\n+ *\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ *\n+ */\n+\n+var CONSTANTS = {\n+    webAppName: 'outputui',\n+    urlSeperator: '/',\n+    tenantUrlAttribute: 't',\n+    urlUnsecureTransportHttp : 'http://',\n+    urlGetParameter : '?lastUpdatedTime=',\n+    urlUnsecureTransportWebsocket : 'ws://',\n+    urlSecureTransportWebsocket : 'wss://',\n+    urlSecureTransportHttp : 'https://',\n+    colon : ':',\n+    defaultMode : 'AUTO',\n+    processModeHTTP : 'HTTP',\n+    processModeWebSocket : 'WEBSOCKET',\n+    processModeAuto : 'AUTO',\n+    superTenantId : 'carbon.super',\n+    numThousand : 1000,\n+    websocketTimeAppender : 400,\n+    secureMode : 'SECURED'\n+};\n+\n+var websocket = null;\n+var webSocketUrl;\n+var httpUrl;\n+var cepHostName;\n+var cepPortNumber;\n+var isErrorOccured = false;\n+var lastUpdatedtime = -1;\n+var polingInterval;\n+var stream;\n+var streamVersion;\n+var firstPollingAttempt;\n+var processMode;\n+var userDomainUrl = \"\";\n+var terminateWebsocketInstance = false;\n+var transportToBeUsedHttp;\n+var transportToBeUsedWebsocket;\n+\n+//select default dropDownValue\n+$(\"#idMode\").val(\"auto\");\n+$(\"#idSecureLevel\").val(\"unsecured\");\n+\n+/**\n+ * Publishing events for data views\n+ */\n+function retrieveEvents(streamName,version,cepHost,cepPort,intervalTime,mode,domain,secureMode){\n+\n+    $(\"textarea#idRecievedEvents\").val(\"\");\n+    $(\"textarea#idConsole\").val(\"\");\n+\n+    if(websocket != null){\n+        terminateWebsocketInstance = true;\n+        websocket.onclose;\n+    }\n+\n+    firstPollingAttempt = true;\n+    stream = streamName;\n+    streamVersion = version;\n+    polingInterval = intervalTime * CONSTANTS.numThousand;\n+    cepHostName = cepHost;\n+    cepPortNumber = cepPort;\n+    processMode = mode;\n+\n+    if(secureMode == CONSTANTS.secureMode){\n+        transportToBeUsedHttp = CONSTANTS.urlSecureTransportHttp;\n+        transportToBeUsedWebsocket = CONSTANTS.urlSecureTransportWebsocket;\n+    } else {\n+        transportToBeUsedHttp = CONSTANTS.urlUnsecureTransportHttp;\n+        transportToBeUsedWebsocket = CONSTANTS.urlUnsecureTransportWebsocket;\n+    }\n+\n+    if(domain != CONSTANTS.superTenantId){\n+        userDomainUrl = CONSTANTS.tenantUrlAttribute + CONSTANTS.urlSeperator + domain + CONSTANTS.urlSeperator;\n+\n+    }\n+    webSocketUrl = transportToBeUsedWebsocket + cepHostName + CONSTANTS.colon + cepPortNumber +\n+        CONSTANTS.urlSeperator + CONSTANTS.webAppName + CONSTANTS.urlSeperator + userDomainUrl + stream +\n+        CONSTANTS.urlSeperator + streamVersion;\n+\n+    if(processMode == CONSTANTS.processModeHTTP){\n+        firstPollingAttempt = true;\n+        startPoll();\n+    } else{\n+        initializeWebSocket(webSocketUrl);\n+    }\n+}\n+\n+/**\n+ * Polling to retrieve events from http request periodically\n+ */\n+function startPoll(){\n+\n+    (function poll(){\n+        setTimeout(function(){\n+            httpUrl = transportToBeUsedHttp + cepHostName + CONSTANTS.colon + cepPortNumber + CONSTANTS.urlSeperator+\n+                CONSTANTS.webAppName + CONSTANTS.urlSeperator + userDomainUrl + stream + CONSTANTS.urlSeperator +\n+                streamVersion + CONSTANTS.urlGetParameter + lastUpdatedtime;\n+\n+            $.getJSON(httpUrl, function(responseText) {\n+                if(firstPollingAttempt){\n+                    var data = $(\"textarea#idConsole\").val();\n+                    $(\"textarea#idConsole\").val(data + \"Successfully connected to HTTP.\");\n+                    firstPollingAttempt = false;\n+                }\n+                var eventList = $.parseJSON(responseText.events);\n+                $(\"textarea#idRecievedEvents\").val(\"\");\n+                if(eventList.length != 0){\n+                    lastUpdatedtime = responseText.lastEventTime;\n+                    var streamId = stream + \":\" + streamVersion + \" =\";\n+                    for(var i=0;i<eventList.length;i++){\n+                        var data = $(\"textarea#idRecievedEvents\").val();\n+                        $(\"textarea#idRecievedEvents\").val(data + streamId + \" [\" +eventList[i]+ \"]\\n\");\n+                    }\n+                }\n+                startPoll();\n+            })\n+                .fail(function(errorData) {\n+                    var data = $(\"textarea#idConsole\").val();\n+                    var errorData = JSON.parse(errorData.responseText);\n+                    $(\"textarea#idConsole\").val(data + errorData.error + \"\\n\");\n+                });\n+        }, polingInterval);\n+    })()\n+}\n+\n+/**\n+ * Initializing Web Socket\n+ */\n+function initializeWebSocket(webSocketUrl){\n+    websocket = new WebSocket(webSocketUrl);\n+    websocket.onopen = webSocketOnOpen;\n+    websocket.onmessage = webSocketOnMessage;\n+    websocket.onclose = webSocketOnClose;\n+    websocket.onerror = webSocketOnError;\n+}\n+\n+/**\n+ * Web socket On Open\n+ */\n+\n+var webSocketOnOpen = function () {\n+    $(\"textarea#idConsole\").val(\"Successfully connected to URL:\" + webSocketUrl + \"\\n\");\n+};\n+\n+\n+/**\n+ * On server sends a message\n+ */\n+var webSocketOnMessage = function (evt) {\n+    var data = $(\"textarea#idRecievedEvents\").val();\n+    var event = stream + \":\" + streamVersion + \" =\" + evt.data;\n+    $(\"textarea#idRecievedEvents\").val(data + event + \"\\n\");\n+};\n+\n+/**\n+ * On server close\n+ */\n+var webSocketOnClose =function (e) {\n+\n+    if(isErrorOccured){\n+        if(processMode != CONSTANTS.processModeWebSocket){\n+            firstPollingAttempt = true;\n+            var data = $(\"textarea#idConsole\").val();\n+            $(\"textarea#idConsole\").val( data + \"Starting to poll from http endpoint... \\n\");\n+            startPoll();\n+        }\n+    } else{\n+        var data = $(\"textarea#idConsole\").val();\n+        $(\"textarea#idConsole\").val(data + \"Closing the connection... \\n\");\n+\n+        if(!terminateWebsocketInstance){\n+            data = $(\"textarea#idConsole\").val();\n+            $(\"textarea#idConsole\").val(data + \"Starting to retry connection... \\n\");\n+            waitForSocketConnection(websocket);\n+        } else{\n+            terminateWebsocketInstance = false;\n+        }\n+\n+\n+    }\n+};\n+\n+/**\n+ * On server Error\n+ */\n+var webSocketOnError = function (err) {\n+    isErrorOccured = true;\n+    var data = $(\"textarea#idConsole\").val();\n+    $(\"textarea#idConsole\").val(data +\"Error: Cannot connect to Websocket URL:\" + webSocketUrl +\n+        \" .Hence closing the connection! \\n\");\n+\n+};\n+\n+/**\n+ * Gracefully increments the connection retry\n+ */\n+var waitTime = CONSTANTS.numThousand;\n+function waitForSocketConnection(socket, callback){\n+    setTimeout(\n+        function () {\n+            if (socket.readyState === 1) {\n+                initializeWebSocket(webSocketUrl);\n+                var data = $(\"textarea#idConsole\").val();\n+                $(\"textarea#idConsole\").val(data + \"Connection is made... \\n\");\n+                if(callback != null){\n+                    callback();\n+                }\n+                return;\n+            } else {\n+                websocket = new WebSocket(webSocketUrl);\n+                waitTime += CONSTANTS.websocketTimeAppender;\n+                waitForSocketConnection(websocket, callback);\n+            }\n+        }, waitTime);\n+}\n+\n+function clearTextArea(){\n+    $(\"textarea#idRecievedEvents\").val(\"\");\n+}\n+\n+function connectToSource() {\n+\n+    var streamName = $(\"#idStreamName\").val();\n+    var version = $(\"#idVersion\").val();\n+    var hostName = $(\"#idHost\").val();\n+    var port = $(\"#idPort\").val();\n+    var timeToPoll = $(\"#idPollingInterval\").val();\n+    var mode = $( \"#idMode option:selected\" ).text();\n+    var secureLevel = $( \"#idSecureLevel option:selected\" ).text();\n+    var tenantDomain = $(\"#idDomain\").val();\n+\n+    if(hostName == \"\"){\n+        hostName = $(\"#idHost\").attr(\"placeholder\");\n+    }\n+    if(port == \"\"){\n+        port = $(\"#idPort\").attr(\"placeholder\");\n+    }\n+    if(timeToPoll == \"\"){\n+        timeToPoll = $(\"#idPollingInterval\").attr(\"placeholder\");\n+    }\n+    if(tenantDomain == \"\"){\n+        tenantDomain = $(\"#idDomain\").attr(\"placeholder\");\n+    }\n+    retrieveEvents(streamName,version,hostName,port,timeToPoll,mode,tenantDomain,secureLevel);\n+}"
        },
        {
            "sha": "18a8b895d9bf6ddef4660c652538541d7381b4cf",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/js/jquery-2.1.1.min.js",
            "status": "added",
            "additions": 2066,
            "deletions": 0,
            "changes": 2066,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fjquery-2.1.1.min.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fjquery-2.1.1.min.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2Fjquery-2.1.1.min.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "9dbb59b79894bd3aea4c928cb7ad6efc966bc255",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/js/outputAdapterUiLibrary.js",
            "status": "added",
            "additions": 277,
            "deletions": 0,
            "changes": 277,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FoutputAdapterUiLibrary.js",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FoutputAdapterUiLibrary.js",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2Fjs%2FoutputAdapterUiLibrary.js?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,277 @@\n+/*\n+ *\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ *\n+ */\n+\n+var CONSTANTS = {\n+    webAppName: 'outputui',\n+    urlSeperator: '/',\n+    urlGetParameter : '?lastUpdatedTime=',\n+    tenantUrlAttribute: 't',\n+    urlUnsecureTransportHttp : 'http://',\n+    urlUnsecureTransportWebsocket : 'ws://',\n+    urlSecureTransportWebsocket : 'wss://',\n+    urlSecureTransportHttp : 'https://',\n+    colon : ':',\n+    defaultIntervalTime : 10 * 1000,\n+    defaultUserDomain : 'carbon.super',\n+    defaultHostName : 'localhost',\n+    defaultNonsecurePortNumber : '9763',\n+    defaultSecurePortNumber : '9443',\n+    defaultMode : 'AUTO',\n+    processModeHTTP : 'HTTP',\n+    processModeWebSocket : 'WEBSOCKET',\n+    processModeAuto : 'AUTO',\n+    superTenantId : 'carbon.super',\n+    numThousand : 1000,\n+    websocketTimeAppender : 400,\n+    secureMode : 'SECURED'\n+};\n+\n+\n+var websocket = null;\n+var webSocketUrl;\n+var httpUrl;\n+var cepHostName;\n+var cepPortNumber;\n+var isErrorOccured = false;\n+var lastUpdatedtime = -1;\n+var polingInterval;\n+var stream;\n+var streamVersion;\n+var firstPollingAttempt;\n+var processMode;\n+var onSuccessFunction;\n+var onErrorFunction;\n+var userDomainUrl = \"\";\n+var terminateWebsocketInstance = false;\n+var pollingContinue = true;\n+var transportToBeUsedHttp;\n+var transportToBeUsedWebsocket;\n+\n+function subscribe(streamName,version,intervalTime,domain,\n+                   listningFuncSuccessData,listningFuncErrorData,cepHost,cepPort,mode,secureMode){\n+\n+    killPollingProcesses();\n+    stream = streamName;\n+    streamVersion = version;\n+    onSuccessFunction = listningFuncSuccessData;\n+    onErrorFunction = listningFuncErrorData;\n+\n+    if(secureMode == CONSTANTS.secureMode){\n+        transportToBeUsedHttp = CONSTANTS.urlSecureTransportHttp;\n+        transportToBeUsedWebsocket = CONSTANTS.urlSecureTransportWebsocket;\n+    } else {\n+        transportToBeUsedHttp = CONSTANTS.urlUnsecureTransportHttp;\n+        transportToBeUsedWebsocket = CONSTANTS.urlUnsecureTransportWebsocket;\n+    }\n+\n+    if(intervalTime == null || intervalTime == \"\"){\n+        polingInterval = CONSTANTS.defaultIntervalTime;\n+    } else{\n+        polingInterval = intervalTime * CONSTANTS.numThousand;\n+    }\n+\n+    if(domain == null || domain == \"\"){\n+        domain = CONSTANTS.defaultUserDomain;\n+    }\n+\n+    if(cepHost == null || cepHost == \"\"){\n+        cepHostName = CONSTANTS.defaultHostName;\n+    } else{\n+        cepHostName = cepHost;\n+    }\n+\n+    if(cepPort == null || cepPort == \"\"){\n+        if(secureMode == CONSTANTS.secureMode){\n+            cepPortNumber = CONSTANTS.defaultSecurePortNumber;\n+        } else{\n+            cepPortNumber = CONSTANTS.defaultNonsecurePortNumber;\n+        }\n+    } else{\n+        cepPortNumber = cepPort;\n+    }\n+\n+    if(mode == null || mode == \"\"){\n+        processMode = CONSTANTS.defaultMode;\n+    } else{\n+        processMode = mode;\n+    }\n+\n+    if(domain != CONSTANTS.superTenantId){\n+        userDomainUrl = CONSTANTS.tenantUrlAttribute + CONSTANTS.urlSeperator + domain + CONSTANTS.urlSeperator;\n+\n+    }\n+    webSocketUrl = transportToBeUsedWebsocket + cepHostName + CONSTANTS.colon + cepPortNumber +\n+        CONSTANTS.urlSeperator + CONSTANTS.webAppName+ CONSTANTS.urlSeperator + userDomainUrl + stream +\n+        CONSTANTS.urlSeperator + streamVersion;\n+\n+    if(processMode == CONSTANTS.processModeHTTP){\n+        firstPollingAttempt = true;\n+        pollingContinue = true;\n+        startPoll();\n+    } else{\n+        initializeWebSocket(webSocketUrl);\n+    }\n+}\n+\n+\n+/**\n+ * Initializing Web Socket\n+ */\n+function initializeWebSocket(webSocketUrl){\n+    websocket = new WebSocket(webSocketUrl);\n+    websocket.onopen = webSocketOnOpen;\n+    websocket.onmessage = webSocketOnMessage;\n+    websocket.onclose = webSocketOnClose;\n+    websocket.onerror = webSocketOnError;\n+}\n+\n+/**\n+ * Web socket On Open\n+ */\n+\n+var webSocketOnOpen = function () {\n+    //onErrorFunction(\"Successfully connected to URL:\" + webSocketUrl + \"\\n\");\n+};\n+\n+\n+/**\n+ * On server sends a message\n+ */\n+var webSocketOnMessage = function (evt) {\n+    var event = evt.data;\n+    constructPayload(event);\n+};\n+\n+/**\n+ * On server close\n+ */\n+var webSocketOnClose =function (e) {\n+\n+    if(isErrorOccured){\n+        if(processMode != CONSTANTS.processModeWebSocket){\n+            firstPollingAttempt = true;\n+            pollingContinue = true;\n+            startPoll();\n+        }\n+    } else{\n+        if(!terminateWebsocketInstance){\n+            waitForSocketConnection(websocket);\n+        } else{\n+            terminateWebsocketInstance = false;\n+        }\n+\n+    }\n+};\n+\n+/**\n+ * On server Error\n+ */\n+var webSocketOnError = function (err) {\n+    var error = \"Error: Cannot connect to Websocket URL:\" + webSocketUrl + \" .Hence closing the connection!\";\n+\n+    onErrorFunction(error);\n+    isErrorOccured = true;\n+\n+};\n+\n+/**\n+ * Gracefully increments the connection retry\n+ */\n+var waitTime = CONSTANTS.numThousand;\n+function waitForSocketConnection(socket, callback){\n+    setTimeout(\n+        function () {\n+            if (socket.readyState === 1) {\n+                initializeWebSocket(webSocketUrl);\n+                console.log(\"Connection is made\");\n+                if(callback != null){\n+                    callback();\n+                }\n+                return;\n+            } else {\n+                websocket = new WebSocket(webSocketUrl);\n+                waitTime += CONSTANTS.websocketTimeAppender;\n+                waitForSocketConnection(websocket, callback);\n+            }\n+        }, waitTime);\n+}\n+\n+/**\n+ * Polling to retrieve events from http request periodically\n+ */\n+function startPoll(){\n+\n+    (function poll(){\n+        setTimeout(function(){\n+            httpUrl = transportToBeUsedHttp + cepHostName + CONSTANTS.colon + cepPortNumber + CONSTANTS.urlSeperator\n+                + CONSTANTS.webAppName + CONSTANTS.urlSeperator + userDomainUrl + stream + CONSTANTS.urlSeperator +\n+                streamVersion + CONSTANTS.urlGetParameter + lastUpdatedtime;\n+\n+            $.getJSON(httpUrl, function(responseText) {\n+                if(firstPollingAttempt){\n+                    /*var data = $(\"textarea#idConsole\").val();\n+                     $(\"textarea#idConsole\").val(data + \"Successfully connected to HTTP.\");*/\n+                    firstPollingAttempt = false;\n+                }\n+\n+                var eventList = $.parseJSON(responseText.events);\n+                if(eventList.length != 0){\n+                    lastUpdatedtime = responseText.lastEventTime;\n+                    constructPayload(eventList);\n+                }\n+                if(pollingContinue){\n+                    startPoll();\n+                }\n+            })\n+                .fail(function(errorData) {\n+                    var errorData = JSON.parse(errorData.responseText);\n+                    onErrorFunction(errorData.error);\n+                });\n+        }, polingInterval);\n+    })()\n+}\n+\n+function killPollingProcesses(){\n+\n+    //stopping the Websocket\n+    if(websocket != null){\n+        terminateWebsocketInstance = true;\n+        websocket.onclose;\n+    }\n+    //stopping the HTTPS Request\n+    pollingContinue = false;\n+\n+}\n+\n+function constructPayload(eventsArray){\n+\n+    var streamId = stream + CONSTANTS.colon + streamVersion;\n+    var eventsData = {};\n+    var jsonData = [];\n+\n+    eventsData [\"source\"] = streamId;\n+    eventsData [\"data\"] = eventsArray;\n+    jsonData.push(eventsData);\n+    console.log(jsonData);\n+    onSuccessFunction(jsonData);\n+\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "da559ce290ef2ca11509cc5ab189845a5789d118",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test/src/main/webapp/testEventReceiver.html",
            "status": "added",
            "additions": 141,
            "deletions": 0,
            "changes": 141,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FtestEventReceiver.html",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FtestEventReceiver.html",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Forg.wso2.carbon.event.output.adapter.ui.test%2Fsrc%2Fmain%2Fwebapp%2FtestEventReceiver.html?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,141 @@\n+<!DOCTYPE html>\n+<!--\n+  ~ /*\n+  ~  *\n+  ~  *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~  *\n+  ~  *  WSO2 Inc. licenses this file to you under the Apache License,\n+  ~  *  Version 2.0 (the \"License\"); you may not use this file except\n+  ~  *  in compliance with the License.\n+  ~  *  You may obtain a copy of the License at\n+  ~  *\n+  ~  *  http://www.apache.org/licenses/LICENSE-2.0\n+  ~  *\n+  ~  *  Unless required by applicable law or agreed to in writing,\n+  ~  *  software distributed under the License is distributed on an\n+  ~  *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  *  KIND, either express or implied.  See the License for the\n+  ~  *  specific language governing permissions and limitations\n+  ~  *  under the License.\n+  ~  *\n+  ~  */\n+  -->\n+\n+<html>\n+<head lang=\"en\">\n+    <meta charset=\"UTF-8\">\n+    <title></title>\n+    <script src=\"js/jquery-2.1.1.min.js\"></script>\n+    <script src=\"js/eventsRequester.js\"></script>\n+    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\n+    <script src=\"js/bootstrap.min.js\"></script>\n+    <style>\n+        #idRecievedEvents {\n+            overflow-y: scroll;\n+            height: 300px;\n+            width: 800px;\n+            resize: none; /* Remove this if you want the user to resize the textarea */\n+        }\n+        #idConsole {\n+            height: 300px;\n+            width: 850px;\n+            resize: none;\n+        }\n+        #divBtnClear {\n+            float: right;\n+        }\n+        #divBtnConnect{\n+            float: right;\n+        }\n+        td, th {\n+            padding: 1px;\n+        }\n+    </style>\n+</head>\n+<body>\n+<div id=\"wrapper\">\n+    <nav class=\"navbar navbar-default navbar-static-top\" style=\"margin-bottom: 0\" role=\"navigation\">\n+        <div class=\"navbar-default sidebar\" role=\"navigation\">\n+        </div>\n+    </nav>\n+    <div id=\"page-wrapper\" style=\"min-height: 623px;\">\n+        <div class=\"row\">\n+            <div class=\"col-lg-12\">\n+                <h1 class=\"page-header\">WSO2 CEP - Output Adapter UI Test Application</h1>\n+            </div>\n+        </div>\n+        <div class=\"row\">\n+            <div class=\"col-lg-3\">\n+\n+            </div>\n+            <div class=\"col-lg-6\">\n+                <div class=\"panel panel-default\">\n+                    <div class=\"panel-heading\"> Configuration </div>\n+                    <div class=\"panel-body\">\n+                        <table>\n+                            <tr>\n+                                <td>Stream Name :</td>\n+                                <td><input type=\"text\" id=\"idStreamName\"></td>\n+                                <td>Version :</td>\n+                                <td><input type=\"text\" id=\"idVersion\"></td>\n+                                <td>CEP Host Name :</td>\n+                                <td><input type=\"text\" placeholder=\"localhost\" id=\"idHost\"></td>\n+                            </tr>\n+                            <tr>\n+                                <td>CEP Port :</td>\n+                                <td><input type=\"text\" placeholder=\"9763\" id=\"idPort\"></td>\n+                                <td>Polling Interval :</td>\n+                                <td><input type=\"text\" placeholder=\"30\" id=\"idPollingInterval\"></td>\n+                                <td>Domain :</td>\n+                                <td><input type=\"text\" placeholder=\"carbon.super\" id=\"idDomain\"></td>\n+                            </tr>\n+                            <tr>\n+                                <td>Mode :</td>\n+                                <td><select id=\"idMode\">\n+                                    <option value=\"auto\">~ ANY ~</option>\n+                                    <option value=\"websocket\">WEBSOCKET</option>\n+                                    <option value=\"http\">HTTP</option>\n+                                    </select>\n+                                </td>\n+                                <td>Secure level :</td>\n+                                <td><select id=\"idSecureLevel\">\n+                                    <option value=\"unsecured\">UNSECURED</option>\n+                                    <option value=\"secured\">SECURED</option>\n+                                </select>\n+                                </td>\n+                            </tr>\n+                        </table>\n+                        <div id=\"divBtnConnect\">\n+                            <input type=\"button\" id=\"idConnect\" onclick=\"connectToSource()\" value=\"Connect\">\n+                        </div>\n+                    </div>\n+                </div>\n+            </div>\n+            <div class=\"col-lg-3\">\n+            </div>\n+            <div class=\"col-lg-3\">\n+\n+            </div>\n+            <div class=\"col-lg-6\">\n+                <div class=\"panel panel-default\">\n+                    <div class=\"panel-heading\"> Recieved Events </div>\n+                    <div class=\"panel-body\">\n+                        <div id=\"divTextArea\"><textarea id=\"idRecievedEvents\"></textarea></div>\n+                        <div id=\"divBtnClear\"><input type=\"button\" value=\"Clear\" onclick=\"clearTextArea()\"> </div>\n+\n+                    </div>\n+                </div>\n+            </div>\n+            <div class=\"col-lg-6\">\n+                <div class=\"panel panel-default\">\n+                    <div class=\"panel-heading\"> Console </div>\n+                    <div class=\"panel-body\">\n+                        <textarea id=\"idConsole\"></textarea>\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+</body>\n+</html>\n\\ No newline at end of file"
        },
        {
            "sha": "a6de8a52a29db195dbc1ec1bad4eb9e4eae3a323",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/pom.xml",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.ui</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output ui Adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.ui provides the back-end functionality of\n+        ui event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId><!--TODO: Move to top-pom -->\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.websocket</groupId>\n+            <artifactId>javax.websocket-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.commons</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.ui.internal.*;\n+                        </Private-Package>\n+                        <Export-Package>\n+                            org.wso2.carbon.event.output.adapter.ui.*,\n+                            !org.wso2.carbon.event.output.adapter.ui.internal.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "e42f23fb91b30529e4e4efebd6a80a92fa5408b5",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/UIEventAdapter.java",
            "status": "added",
            "additions": 314,
            "deletions": 0,
            "changes": 314,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,314 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.CarbonContext;\n+import org.wso2.carbon.databridge.commons.Event;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.ui.internal.UIOutputCallbackControllerServiceImpl;\n+import org.wso2.carbon.event.output.adapter.ui.internal.ds.UIEventAdaptorServiceInternalValueHolder;\n+import org.wso2.carbon.event.output.adapter.ui.internal.util.UIEventAdapterConstants;\n+\n+import javax.websocket.Session;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.LinkedBlockingDeque;\n+\n+/**\n+ * Contains the life cycle of executions regarding the UI Adapter\n+ *\n+ */\n+\n+public class UIEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(UIEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+    private String streamId;\n+    private LinkedBlockingDeque<Object> streamSpecificEvents;\n+\n+    public UIEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String,\n+            String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+\n+        if(eventAdapterConfiguration.getStaticProperties().get(UIEventAdapterConstants\n+                .ADAPTER_UI_OUTPUT_STREAM_VERSION) == null || \" \".equals(eventAdapterConfiguration\n+                .getStaticProperties().get(UIEventAdapterConstants\n+                        .ADAPTER_UI_OUTPUT_STREAM_VERSION))){\n+            eventAdapterConfiguration.getStaticProperties().put(UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_VERSION,\n+                    UIEventAdapterConstants.ADAPTER_UI_DEFAULT_OUTPUT_STREAM_VERSION);\n+\n+        }\n+\n+        streamId = eventAdapterConfiguration.getStaticProperties().get(\n+                UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_NAME) + UIEventAdapterConstants.ADAPTER_UI_COLON +\n+                eventAdapterConfiguration.getStaticProperties().get(UIEventAdapterConstants\n+                        .ADAPTER_UI_OUTPUT_STREAM_VERSION);\n+\n+        ConcurrentHashMap<Integer,ConcurrentHashMap<String, String>> tenantSpecifcEventOutputAdapterMap =\n+                UIEventAdaptorServiceInternalValueHolder.getTenantSpecificOutputEventStreamAdapterMap();\n+\n+        ConcurrentHashMap<String, String> streamSpecifAdapterMap = tenantSpecifcEventOutputAdapterMap.get(tenantId);\n+\n+        if(streamSpecifAdapterMap == null){\n+            streamSpecifAdapterMap = new ConcurrentHashMap<String, String>();\n+            if (null != tenantSpecifcEventOutputAdapterMap.putIfAbsent(tenantId, streamSpecifAdapterMap)){\n+                streamSpecifAdapterMap = tenantSpecifcEventOutputAdapterMap.get(tenantId);\n+            }\n+        }\n+\n+        String adapterName = streamSpecifAdapterMap.get(streamId);\n+\n+        if(adapterName != null){\n+            throw new OutputEventAdapterException((\"An Output ui event adapter \\\"\"+ adapterName +\"\\\" is already\" +\n+                    \" exist for stream id \\\"\"+ streamId + \"\\\"\"));\n+        } else{\n+            streamSpecifAdapterMap.put(streamId, eventAdapterConfiguration.getName());\n+\n+            ConcurrentHashMap<Integer, ConcurrentHashMap<String, LinkedBlockingDeque<Object>>> tenantSpecificStreamMap =\n+                    UIEventAdaptorServiceInternalValueHolder.getTenantSpecificStreamEventMap();\n+            ConcurrentHashMap<String, LinkedBlockingDeque<Object>> streamSpecificEventsMap = tenantSpecificStreamMap.get(tenantId);\n+\n+            if(streamSpecificEventsMap == null){\n+                streamSpecificEventsMap = new ConcurrentHashMap<String, LinkedBlockingDeque<Object>>();\n+                if (null != tenantSpecificStreamMap.putIfAbsent(tenantId, streamSpecificEventsMap)){\n+                    streamSpecificEventsMap = tenantSpecificStreamMap.get(tenantId);\n+                }\n+            }\n+            streamSpecificEvents = streamSpecificEventsMap.get(streamId);\n+\n+            if (streamSpecificEvents == null){\n+                streamSpecificEvents = new LinkedBlockingDeque<Object>();\n+                if (null != streamSpecificEventsMap.putIfAbsent(streamId,streamSpecificEvents)){\n+                    streamSpecificEvents = streamSpecificEventsMap.get(streamId);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        //Not needed\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //Not needed\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+\n+        UIOutputCallbackControllerServiceImpl uiOutputCallbackControllerServiceImpl =\n+                UIEventAdaptorServiceInternalValueHolder\n+                        .getUIOutputCallbackRegisterServiceImpl();\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        CopyOnWriteArrayList<Session> sessions = uiOutputCallbackControllerServiceImpl.getSessions(tenantId, streamId);\n+\n+        StringBuilder allEventsAsString = null;\n+        int queueSize;\n+\n+        if(globalProperties.get(\"eventQueueSize\") != null){\n+            queueSize = Integer.parseInt(globalProperties.get(\"eventQueueSize\"));\n+        } else {\n+            queueSize = UIEventAdapterConstants.EVENTS_QUEUE_SIZE;\n+        }\n+\n+        if (message instanceof Object[]) {\n+\n+            Boolean firstFilteredValue = true;\n+            for (Object object : (Object[])message){\n+                allEventsAsString = new StringBuilder(\"[\");\n+                Event event = (Event) object;\n+                Boolean eventsExists = false;\n+                if(!firstFilteredValue){\n+                    allEventsAsString.append(\",\");\n+                }\n+                firstFilteredValue = false;\n+\n+                if(streamSpecificEvents.size() == queueSize){\n+                    streamSpecificEvents.removeFirst();\n+                }\n+\n+                if(event.getMetaData() != null){\n+                    Object[] metaData = event.getMetaData();\n+                    eventsExists = true;\n+                    for(int i=0;i < metaData.length;i++){\n+                        allEventsAsString.append(\"\\\"\");\n+                        allEventsAsString.append(metaData[i]);\n+                        allEventsAsString.append(\"\\\"\");\n+                        if(i != (metaData.length-1)){\n+                            allEventsAsString.append(\",\");\n+                        }\n+                    }\n+                }\n+                if(event.getCorrelationData() != null){\n+                    Object[] correlationData = event.getCorrelationData();\n+\n+                    if(eventsExists){\n+                        allEventsAsString.append(\",\");\n+                    } else{\n+                        eventsExists = true;\n+                    }\n+                    for(int i=0;i < correlationData.length;i++){\n+                        allEventsAsString.append(\"\\\"\");\n+                        allEventsAsString.append(correlationData[i]);\n+                        allEventsAsString.append(\"\\\"\");\n+                        if(i != (correlationData.length-1)){\n+                            allEventsAsString.append(\",\");\n+                        }\n+                    }\n+                }\n+                if(event.getPayloadData() != null){\n+\n+                    Object[] payloadData = event.getPayloadData();\n+                    if(eventsExists){\n+                        allEventsAsString.append(\",\");\n+                    }\n+\n+                    for(int i=0;i < payloadData.length;i++){\n+                        allEventsAsString.append(\"\\\"\");\n+                        allEventsAsString.append(payloadData[i]);\n+                        allEventsAsString.append(\"\\\"\");\n+                        if(i != (payloadData.length-1)){\n+                            allEventsAsString.append(\",\");\n+                        }\n+                    }\n+                }\n+                allEventsAsString.append(\"]\");\n+                Object[] eventValues = new Object[UIEventAdapterConstants.INDEX_TWO];\n+                eventValues[UIEventAdapterConstants.INDEX_ZERO] = allEventsAsString;\n+                eventValues[UIEventAdapterConstants.INDEX_ONE] = System.currentTimeMillis();\n+                streamSpecificEvents.add(eventValues);\n+            }\n+        } else {\n+\n+            Event event = (Event)(message);\n+            allEventsAsString = new StringBuilder(\"[\");\n+            Boolean eventsExists = false;\n+\n+            if(streamSpecificEvents.size() == queueSize){\n+                streamSpecificEvents.removeFirst();\n+            }\n+\n+            if(event.getMetaData() != null){\n+\n+                Object[] metaData = event.getMetaData();\n+                eventsExists = true;\n+                for(int i=0;i < metaData.length;i++){\n+                    allEventsAsString.append(\"\\\"\");\n+                    allEventsAsString.append(metaData[i]);\n+                    allEventsAsString.append(\"\\\"\");\n+                    if(i != (metaData.length-1)){\n+                        allEventsAsString.append(\",\");\n+                    }\n+                }\n+            }\n+\n+            if(event.getCorrelationData() != null){\n+                Object[] correlationData = event.getCorrelationData();\n+\n+                if(eventsExists){\n+                    allEventsAsString.append(\",\");\n+                } else{\n+                    eventsExists = true;\n+                }\n+                for(int i=0;i < correlationData.length;i++){\n+                    allEventsAsString.append(\"\\\"\");\n+                    allEventsAsString.append(correlationData[i]);\n+                    allEventsAsString.append(\"\\\"\");\n+                    if(i != (correlationData.length-1)){\n+                        allEventsAsString.append(\",\");\n+                    }\n+                }\n+            }\n+\n+            if(event.getPayloadData() != null){\n+\n+                Object[] payloadData = event.getPayloadData();\n+                if(eventsExists){\n+                    allEventsAsString.append(\",\");\n+                }\n+                for(int i=0;i < payloadData.length;i++){\n+                    allEventsAsString.append(\"\\\"\");\n+                    allEventsAsString.append(payloadData[i]);\n+                    allEventsAsString.append(\"\\\"\");\n+                    if(i != (payloadData.length-1)){\n+                        allEventsAsString.append(\",\");\n+                    }\n+                }\n+            }\n+\n+            allEventsAsString.append(\"]\");\n+            Object[] eventValues = new Object[UIEventAdapterConstants.INDEX_TWO];\n+            eventValues[UIEventAdapterConstants.INDEX_ZERO] = allEventsAsString;\n+            eventValues[UIEventAdapterConstants.INDEX_ONE] = System.currentTimeMillis();\n+            streamSpecificEvents.add(eventValues);\n+        }\n+\n+        if (sessions != null){\n+            for (Session session : sessions) {\n+                synchronized (session) {\n+                    session.getAsyncRemote().sendText(allEventsAsString.toString());\n+                }\n+            }\n+        } else {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\n+                        \"Dropping the message: '\" + message + \"', since no clients have being registered to receive \" +\n+                                \"events from ui adapter: '\" + eventAdapterConfiguration.getName() + \"', \" +\n+                                \"for tenant ID: \" + tenantId);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //Not needed\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+\n+        //Removing outputadapter and streamId\n+        UIEventAdaptorServiceInternalValueHolder\n+                .getTenantSpecificOutputEventStreamAdapterMap().get(tenantId).remove(streamId);\n+\n+        //Removing the streamId and events registered for the output adapter\n+        UIEventAdaptorServiceInternalValueHolder.getTenantSpecificStreamEventMap().get(tenantId).remove(streamId);\n+\n+    }\n+}\n+"
        },
        {
            "sha": "dd05ee1d2bf41cbab82c91a49264b3a24cef5b19",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/UIEventAdapterFactory.java",
            "status": "added",
            "additions": 81,
            "deletions": 0,
            "changes": 81,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,81 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui;\n+\n+import org.wso2.carbon.event.output.adapter.core.MessageType;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.core.Property;\n+import org.wso2.carbon.event.output.adapter.ui.internal.util.UIEventAdapterConstants;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.ResourceBundle;\n+\n+public class UIEventAdapterFactory extends OutputEventAdapterFactory{\n+\n+    private ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.ui.i18n\" +\n+            \".Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return UIEventAdapterConstants.ADAPTER_TYPE_UI;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.WSO2EVENT);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+\n+        Property outputStreamName = new Property(UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_NAME);\n+        outputStreamName.setDisplayName(\n+                resourceBundle.getString(UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_NAME));\n+        outputStreamName.setRequired(true);\n+        staticPropertyList.add(outputStreamName);\n+\n+        Property outputStreamVersion = new Property(UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_VERSION);\n+        outputStreamVersion.setDisplayName(\n+                resourceBundle.getString(UIEventAdapterConstants.ADAPTER_UI_OUTPUT_STREAM_VERSION));\n+        outputStreamVersion.setRequired(false);\n+        staticPropertyList.add(outputStreamVersion);\n+\n+        return staticPropertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+            Map<String, String> globalProperties) {\n+        return new UIEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+}"
        },
        {
            "sha": "031f4b216dddd2d6e7351925c08b86a508cf9abb",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/UIOutputCallbackControllerService.java",
            "status": "added",
            "additions": 61,
            "deletions": 0,
            "changes": 61,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIOutputCallbackControllerService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIOutputCallbackControllerService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2FUIOutputCallbackControllerService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,61 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.ui;\n+\n+import com.google.gson.JsonObject;\n+\n+import javax.websocket.Session;\n+\n+/**\n+ * This interface is exposed as an OSGI service, which will be invoked by the local websocket endpoint to inform new subscriptions; and do un-subscriptions..\n+ */\n+public interface UIOutputCallbackControllerService {\n+\n+    /**\n+     * Used to subscribe the session id and stream id for later web socket connectivity\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param session - Session which user registered.\n+     * @return\n+     */\n+    public void subscribeWebsocket(String streamName, String version, Session session);\n+\n+    /**\n+     * Used to return events per streamId\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param session - Session which user subscribed to.\n+     * @return the events list.\n+     */\n+    public void unsubscribeWebsocket(String streamName, String version, Session session);\n+\n+    /**\n+     * Used to return events per http GET request.\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param lastUpdatedTime - Last dispatched events time.\n+     * @return the events list.\n+     */\n+    public JsonObject retrieveEvents(String streamName, String version, String lastUpdatedTime);\n+}"
        },
        {
            "sha": "b441028815d3b3698b671392968a08342f8a36ad",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/internal/UIOutputCallbackControllerServiceImpl.java",
            "status": "added",
            "additions": 209,
            "deletions": 0,
            "changes": 209,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2FUIOutputCallbackControllerServiceImpl.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2FUIOutputCallbackControllerServiceImpl.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2FUIOutputCallbackControllerServiceImpl.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,209 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui.internal;\n+\n+import com.google.gson.JsonObject;\n+import org.wso2.carbon.context.CarbonContext;\n+import org.wso2.carbon.event.output.adapter.ui.UIOutputCallbackControllerService;\n+import org.wso2.carbon.event.output.adapter.ui.internal.ds.UIEventAdaptorServiceInternalValueHolder;\n+import org.wso2.carbon.event.output.adapter.ui.internal.util.UIEventAdapterConstants;\n+import javax.websocket.Session;\n+import java.util.Iterator;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.LinkedBlockingDeque;\n+\n+/**\n+ * Service implementation class which exposes to front end\n+ *\n+ */\n+public class UIOutputCallbackControllerServiceImpl implements UIOutputCallbackControllerService {\n+\n+    private ConcurrentHashMap<Integer, ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>>\n+            outputEventAdaptorSessionMap;\n+\n+    public UIOutputCallbackControllerServiceImpl(){\n+        outputEventAdaptorSessionMap =\n+                new ConcurrentHashMap<Integer, ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>>();\n+    }\n+\n+\n+    /**\n+     * Used to subscribe the session id and stream id for later web socket connectivity\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param session - Session which user registered.\n+     * @return\n+     */\n+    public void subscribeWebsocket(String streamName, String version, Session session) {\n+\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+\n+        if(version == null || \" \".equals(version)){\n+            version = UIEventAdapterConstants.ADAPTER_UI_DEFAULT_OUTPUT_STREAM_VERSION;\n+        }\n+        String streamId = streamName + UIEventAdapterConstants.ADAPTER_UI_COLON + version;\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap =\n+                outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap == null) {\n+            tenantSpecificAdaptorMap = new ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>();\n+            if (null != outputEventAdaptorSessionMap.putIfAbsent(tenantId, tenantSpecificAdaptorMap)){\n+                tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+            }\n+        }\n+        CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(streamId);\n+        if (adapterSpecificSessions == null){\n+            adapterSpecificSessions = new CopyOnWriteArrayList<Session>();\n+            if (null != tenantSpecificAdaptorMap.putIfAbsent(streamId,adapterSpecificSessions)){\n+                adapterSpecificSessions = tenantSpecificAdaptorMap.get(streamId);\n+            }\n+        }\n+        adapterSpecificSessions.add(session);\n+    }\n+\n+    /**\n+     * Used to return registered sessions per streamId\n+     *\n+     * @param tenantId - Tenant id of the user.\n+     * @param streamId - Stream name and version which user register to.\n+     * @return the sessions list.\n+     */\n+    public CopyOnWriteArrayList<Session> getSessions(int tenantId, String streamId){\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap =\n+                outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap != null) {\n+            CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(streamId);\n+            return adapterSpecificSessions;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Used to return events per streamId\n+     *\n+     * @param tenanId - Tenant id of the user.\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @return the events list.\n+     */\n+    public LinkedBlockingDeque<Object> getEvents(int tenanId, String streamName, String version){\n+\n+        ConcurrentHashMap<String, LinkedBlockingDeque<Object>> tenantSpecificStreamMap =\n+                UIEventAdaptorServiceInternalValueHolder.getTenantSpecificStreamEventMap().get(tenanId);\n+\n+        if(tenantSpecificStreamMap != null){\n+            String streamId = streamName + UIEventAdapterConstants.ADAPTER_UI_COLON + version;\n+            return tenantSpecificStreamMap.get(streamId);\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Used to return events per streamId\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param session - Session which user subscribed to.\n+     * @return the events list.\n+     */\n+    public void unsubscribeWebsocket(String streamName, String version, Session session) {\n+\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+\n+        if(version == null || \" \".equals(version)){\n+            version = UIEventAdapterConstants.ADAPTER_UI_DEFAULT_OUTPUT_STREAM_VERSION;\n+        }\n+        String id = streamName + UIEventAdapterConstants.ADAPTER_UI_COLON + version;\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap != null) {\n+            CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(id);\n+            if (adapterSpecificSessions != null) {\n+                Session sessionToRemove = null;\n+                for (Iterator<Session> iterator = adapterSpecificSessions.iterator(); iterator.hasNext(); ) {\n+                    Session thisSession = iterator.next();\n+                    if (session.getId().equals(thisSession.getId())) {\n+                        sessionToRemove = session;\n+                        break;\n+                    }\n+                }\n+                if (sessionToRemove != null) {\n+                    adapterSpecificSessions.remove(sessionToRemove);\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Used to return events per http GET request.\n+     *\n+     * @param streamName - Stream name which user register to.\n+     * @param version - Stream version which user uses.\n+     * @param lastUpdatedTime - Last dispatched events time.\n+     * @return the events list.\n+     */\n+    @Override\n+    public JsonObject retrieveEvents(String streamName, String version, String lastUpdatedTime) {\n+\n+        int tenantId = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        LinkedBlockingDeque<Object> allEvents = getEvents(tenantId, streamName, version);\n+        //List<Object> eventsListToBeSent;\n+        Object lastEventTime = null;\n+        JsonObject eventsData;\n+\n+        if(allEvents != null){\n+            eventsData = new JsonObject();\n+\n+                Boolean firstFilteredValue = true;\n+                long sentTimeStamp = Long.parseLong(lastUpdatedTime);\n+                //eventsListToBeSent = new ArrayList<Object>();\n+\n+                StringBuilder allEventsAsString = new StringBuilder(\"[\");\n+                // set Iterator as descending\n+                Iterator iterator = allEvents.descendingIterator();\n+\n+                while (iterator.hasNext()) {\n+\n+                    Object[] eventValues = (Object[]) iterator.next();\n+                    long eventTimeStamp = (Long) eventValues[UIEventAdapterConstants.INDEX_ONE];\n+                    if(sentTimeStamp < eventTimeStamp){\n+\n+                        if(!firstFilteredValue){\n+                            allEventsAsString.append(\",\");\n+                        }\n+                        firstFilteredValue = false;\n+                        StringBuilder eventString = (StringBuilder) eventValues[UIEventAdapterConstants.INDEX_ZERO];\n+                        allEventsAsString.append(eventString);\n+                    }\n+                }\n+                allEventsAsString.append(\"]\");\n+\n+                if(allEvents.size() != 0){\n+                    Object[] lastObj = (Object[]) allEvents.getLast();\n+                    lastEventTime = lastObj[UIEventAdapterConstants.INDEX_ONE];\n+                    eventsData.addProperty(\"lastEventTime\",String.valueOf(lastEventTime));\n+                }\n+                eventsData.addProperty(\"events\",allEventsAsString.toString());\n+\n+            return eventsData;\n+        }\n+        return null;\n+    }\n+}"
        },
        {
            "sha": "57548083d6305209c8a0b11ecd24cf71d6552536",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/internal/ds/UIEventAdaptorServiceInternalValueHolder.java",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUIEventAdaptorServiceInternalValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUIEventAdaptorServiceInternalValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUIEventAdaptorServiceInternalValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,57 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui.internal.ds;\n+\n+import org.wso2.carbon.event.output.adapter.ui.internal.UIOutputCallbackControllerServiceImpl;\n+\n+import java.util.LinkedList;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.LinkedBlockingDeque;\n+\n+/**\n+ * Creates a holder of type UIOutputCallbackRegisterServiceImpl.\n+ */\n+public final class UIEventAdaptorServiceInternalValueHolder {\n+\n+    private static UIOutputCallbackControllerServiceImpl UIOutputCallbackRegisterServiceImpl;\n+    private static ConcurrentHashMap<Integer,ConcurrentHashMap<String, String>> tenantSpecificOutputEventStreamAdapterMap = new\n+            ConcurrentHashMap<Integer,ConcurrentHashMap<String, String>>();\n+    private static ConcurrentHashMap<Integer, ConcurrentHashMap<String, LinkedBlockingDeque<Object>>> tenantSpecificStreamEventMap\n+            = new ConcurrentHashMap<Integer, ConcurrentHashMap<String, LinkedBlockingDeque<Object>>>();\n+\n+    public static void registerUIOutputCallbackRegisterServiceInternal(\n+            UIOutputCallbackControllerServiceImpl UIOutputCallbackRegisterServiceImpl) {\n+        UIEventAdaptorServiceInternalValueHolder.UIOutputCallbackRegisterServiceImpl =\n+                UIOutputCallbackRegisterServiceImpl;\n+    }\n+\n+    public static UIOutputCallbackControllerServiceImpl getUIOutputCallbackRegisterServiceImpl() {\n+        return UIEventAdaptorServiceInternalValueHolder.UIOutputCallbackRegisterServiceImpl;\n+    }\n+\n+    public static ConcurrentHashMap<Integer,ConcurrentHashMap<String, String>> getTenantSpecificOutputEventStreamAdapterMap() {\n+        return tenantSpecificOutputEventStreamAdapterMap;\n+    }\n+\n+    public static ConcurrentHashMap<Integer, ConcurrentHashMap<String, LinkedBlockingDeque<Object>>>\n+    getTenantSpecificStreamEventMap() {\n+        return tenantSpecificStreamEventMap;\n+    }\n+}"
        },
        {
            "sha": "ac5d2c95582afecf388ed5a03953abc1647af782",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/internal/ds/UILocalEventAdapterDS.java",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUILocalEventAdapterDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUILocalEventAdapterDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Fds%2FUILocalEventAdapterDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,64 @@\n+/*\n+ *\n+ *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.http.HttpService;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.ui.internal.UIOutputCallbackControllerServiceImpl;\n+import org.wso2.carbon.event.output.adapter.ui.UIEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.ui.UIOutputCallbackControllerService;\n+import org.wso2.carbon.user.core.service.RealmService;\n+\n+/**\n+ * @scr.component component.name=\"output.Ui.AdapterService.component\" immediate=\"true\"\n+ */\n+public class UILocalEventAdapterDS {\n+\n+    private static final Log log = LogFactory.getLog(UILocalEventAdapterDS.class);\n+\n+    /**\n+     * initialize the ui adapter service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory uiEventAdapterFactory = new UIEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), uiEventAdapterFactory, null);\n+\n+            UIOutputCallbackControllerServiceImpl UIOutputCallbackRegisterServiceImpl = new UIOutputCallbackControllerServiceImpl();\n+            context.getBundleContext().registerService(UIOutputCallbackControllerService.class.getName(),\n+                    UIOutputCallbackRegisterServiceImpl, null);\n+\n+            UIEventAdaptorServiceInternalValueHolder.registerUIOutputCallbackRegisterServiceInternal(\n+                    UIOutputCallbackRegisterServiceImpl);\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output ui adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output ui adapter service \", e);\n+        }\n+    }\n+}"
        },
        {
            "sha": "acc589eb090476ee8a5fb43404176d0e009dee2b",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/java/org/wso2/carbon/event/output/adapter/ui/internal/util/UIEventAdapterConstants.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Futil%2FUIEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Futil%2FUIEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Finternal%2Futil%2FUIEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,39 @@\n+/*\n+ *\n+ *  Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ *\n+ */\n+package org.wso2.carbon.event.output.adapter.ui.internal.util;\n+\n+/**\n+ * This class contains the constants related to ui Output Event Adaptor.\n+ */\n+public class UIEventAdapterConstants {\n+\n+    private UIEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_UI = \"ui\";\n+    public static final String ADAPTER_UI_OUTPUT_STREAM_NAME = \"output.event.stream.name\";\n+    public static final String ADAPTER_UI_OUTPUT_STREAM_VERSION = \"output.event.stream.version\";\n+    public static final String ADAPTER_UI_DEFAULT_OUTPUT_STREAM_VERSION = \"1.0.0\";\n+    public static final String ADAPTER_UI_COLON = \":\";\n+    public static final int EVENTS_QUEUE_SIZE = 30;\n+    public static final int INDEX_ZERO = 0;\n+    public static final int INDEX_ONE = 1;\n+    public static final int INDEX_TWO = 2;\n+}"
        },
        {
            "sha": "50842e74fee35e718ac276cba3d43b0b8c4e32f1",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.ui/src/main/resources/org/wso2/carbon/event/output/adapter/ui/i18n/Resources.properties",
            "status": "added",
            "additions": 21,
            "deletions": 0,
            "changes": 21,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fui%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,21 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+output.event.stream.name=Output Stream Name\n+output.event.stream.version=Output Stream Version\n+"
        },
        {
            "sha": "2a730107a3026f5c04faac70ef87f6512cd03d54",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint/pom.xml",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.websocket.endpoint</artifactId>\n+    <packaging>war</packaging>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>WSO2 Carbon Websocket Webapp - Webapp for Websocket Output Event Adapter</name>\n+    <url>http://wso2.org</url>\n+    <dependencies>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.tomcat</groupId>\n+            <artifactId>tomcat-websocket-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.websocket.local</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.httpcomponents</groupId>\n+            <artifactId>httpcore</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <finalName>outputwebsocket</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <encoding>UTF-8</encoding>\n+                    <source>1.6</source>\n+                    <target>1.6</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
        },
        {
            "sha": "61818f24f70cf855883031c9d7edba7b3ea6c359",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint/src/main/java/SubscriptionEndpoint.java",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.websocket.local.WebsocketLocalOutputCallbackRegisterService;\n+\n+import javax.websocket.CloseReason;\n+import javax.websocket.Session;\n+\n+\n+public class SubscriptionEndpoint {\n+\n+    protected WebsocketLocalOutputCallbackRegisterService websocketLocalOutputCallbackRegisterService;\n+\n+    private static final Log log = LogFactory.getLog(SubscriptionEndpoint.class);\n+\n+    public SubscriptionEndpoint() {\n+        websocketLocalOutputCallbackRegisterService = (WebsocketLocalOutputCallbackRegisterService) PrivilegedCarbonContext.getThreadLocalCarbonContext()\n+                .getOSGiService(WebsocketLocalOutputCallbackRegisterService.class, null);\n+    }\n+\n+    public void onClose (Session session, CloseReason reason, String adaptorName, int tenantId) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Closing a WebSocket due to \"+reason.getReasonPhrase()+\", for session ID:\"+session.getId()+\", for request URI - \"+session.getRequestURI());\n+        }\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(tenantId);\n+        websocketLocalOutputCallbackRegisterService.unsubscribe(adaptorName, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    public void onError (Session session, Throwable throwable, String adaptorName, int tenantId) {\n+        log.error(\"Error occurred in session ID: \"+session.getId()+\", for request URI - \"+session.getRequestURI()+\", \"+throwable.getMessage(),throwable);\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(tenantId);\n+        websocketLocalOutputCallbackRegisterService.unsubscribe(adaptorName, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+}"
        },
        {
            "sha": "4cc2335e45950eb05ce9391c8bb276640440f288",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint/src/main/java/SuperTenantSubscriptionEndpoint.java",
            "status": "added",
            "additions": 65,
            "deletions": 0,
            "changes": 65,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FSuperTenantSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n+\n+import javax.websocket.*;\n+import javax.websocket.server.PathParam;\n+import javax.websocket.server.ServerEndpoint;\n+\n+\n+@ServerEndpoint(value = \"/{adaptorname}\")\n+public class SuperTenantSubscriptionEndpoint extends SubscriptionEndpoint {\n+\n+    private static final Log log = LogFactory.getLog(SuperTenantSubscriptionEndpoint.class);\n+    private int tenantId;\n+\n+    @OnOpen\n+    public void onOpen (Session session, @PathParam(\"adaptorname\") String adaptorName) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"WebSocket opened, for Session id: \"+session.getId()+\", for the Adaptor:\"+adaptorName);\n+        }\n+        PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n+        tenantId = MultitenantConstants.SUPER_TENANT_ID;\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(tenantId);\n+        websocketLocalOutputCallbackRegisterService.subscribe(adaptorName, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    @OnMessage\n+    public void onMessage (Session session, String message, @PathParam(\"adaptorname\") String adaptorName) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Received and dropped message from client. Message: \" + message+\", for Session id: \"+session.getId()+\", for the Adaptor:\"+adaptorName);\n+        }\n+    }\n+\n+    @OnClose\n+    public void onClose (Session session, CloseReason reason, @PathParam(\"adaptorname\") String adaptorName) {\n+        super.onClose(session, reason, adaptorName, tenantId);\n+    }\n+\n+    @OnError\n+    public void onError (Session session, Throwable throwable, @PathParam(\"adaptorname\") String adaptorName) {\n+        super.onError(session, throwable, adaptorName, tenantId);\n+    }\n+\n+}"
        },
        {
            "sha": "3e57ff958c37d5a2b772078ad339c85332a1b6ce",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint/src/main/java/TenantSubscriptionEndpoint.java",
            "status": "added",
            "additions": 63,
            "deletions": 0,
            "changes": 63,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fjava%2FTenantSubscriptionEndpoint.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+\n+import javax.websocket.*;\n+import javax.websocket.server.PathParam;\n+import javax.websocket.server.ServerEndpoint;\n+\n+@ServerEndpoint(value = \"/t/{tdomain}/{adaptorname}\")\n+public class TenantSubscriptionEndpoint extends SubscriptionEndpoint {\n+\n+    private static final Log log = LogFactory.getLog(TenantSubscriptionEndpoint.class);\n+    private int tenantId;\n+\n+    @OnOpen\n+    public void onOpen (Session session, @PathParam(\"adaptorname\") String adaptorName, @PathParam(\"tdomain\") String tdomain) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"WebSocket opened, for Session id: \"+session.getId()+\", for tenant domain\"+tdomain+\", for the Adaptor:\"+adaptorName);\n+        }\n+        PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n+        carbonContext.setTenantDomain(tdomain,true);\n+        tenantId = carbonContext.getTenantId();\n+        PrivilegedCarbonContext.startTenantFlow();\n+        PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(tenantId);\n+        websocketLocalOutputCallbackRegisterService.subscribe(adaptorName, session);\n+        PrivilegedCarbonContext.endTenantFlow();\n+    }\n+\n+    @OnMessage\n+    public void onMessage (Session session, String message, @PathParam(\"adaptorname\") String adaptorName, @PathParam(\"tdomain\") String tdomain) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Received and dropped message from client. Message: \" + message+\", for Session id: \"+session.getId()+\", for tenant domain\"+tdomain+\", for the Adaptor:\"+adaptorName);\n+        }\n+    }\n+\n+    @OnClose\n+    public void onClose (Session session, CloseReason reason, @PathParam(\"adaptorname\") String adaptorName, @PathParam(\"tdomain\") String tdomain) {\n+        super.onClose(session, reason, adaptorName, tenantId);\n+    }\n+\n+    @OnError\n+    public void onError (Session session, Throwable throwable, @PathParam(\"adaptorname\") String adaptorName, @PathParam(\"tdomain\") String tdomain) {\n+        super.onError(session, throwable, adaptorName, tenantId);\n+    }\n+}"
        },
        {
            "sha": "e1dcf942ea4575e97defe36f5eca6a8bf23081e4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint/src/main/webapp/WEB-INF/web.xml",
            "status": "added",
            "additions": 24,
            "deletions": 0,
            "changes": 24,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Forg.wso2.carbon.event.output.adapter.websocket.endpoint%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,24 @@\n+<!--\n+  ~ Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<!DOCTYPE web-app PUBLIC\n+ \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n+ \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n+\n+<web-app>\n+  <display-name>Output WebSocket</display-name>\n+</web-app>"
        },
        {
            "sha": "4cb38cda68fa2b362e2aa7aa9e0ae127261b71cd",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/pom.xml",
            "status": "added",
            "additions": 104,
            "deletions": 0,
            "changes": 104,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,104 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.websocket.local</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Websocket Adapter - Local - Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.websocket.local provides the back-end functionality of\n+        websocket event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>                                   <!--TODO: Move to top-pom -->\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.websocket</groupId>\n+            <artifactId>javax.websocket-api</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.websocket.local.internal.*;\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.websocket.local.internal.*,\n+                            org.wso2.carbon.event.output.adapter.websocket.local.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "d0cdae32512b4db822590596d6d8050ee4b7d7f1",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/WebsocketLocalEventAdapter.java",
            "status": "added",
            "additions": 103,
            "deletions": 0,
            "changes": 103,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.websocket.local;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.context.CarbonContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.websocket.local.internal.WebsocketLocalOutputCallbackRegisterServiceImpl;\n+import org.wso2.carbon.event.output.adapter.websocket.local.internal.ds.WebsocketLocalEventAdaptorServiceInternalValueHolder;\n+\n+import javax.websocket.Session;\n+import java.util.Map;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+public final class WebsocketLocalEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(WebsocketLocalEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    private int tenantID;\n+\n+    public WebsocketLocalEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+        this.tenantID = CarbonContext.getThreadLocalCarbonContext().getTenantId();\n+    }\n+\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+        //Nothing to initialize.\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        //Not applicable.\n+    }\n+\n+    @Override\n+    public void connect() {\n+        //Nothing to do.\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        WebsocketLocalOutputCallbackRegisterServiceImpl websocketLocalOutputCallbackRegisterServiceImpl = WebsocketLocalEventAdaptorServiceInternalValueHolder.getWebsocketLocalOutputCallbackRegisterServiceImpl();\n+        CopyOnWriteArrayList<Session> sessions = websocketLocalOutputCallbackRegisterServiceImpl.getSessions(tenantID, eventAdapterConfiguration.getName());\n+        if (sessions != null){\n+            if (message instanceof Object[]) {\n+                //TODO: send message in one send() operation by defining a new events-schema.\n+                for (Object object : (Object[])message){\n+                    for (Session session : sessions){\n+                        synchronized (session){\n+                            session.getAsyncRemote().sendText(object.toString());  //this method call was synchronized to fix CEP-996\n+                        }\n+                    }\n+                }\n+            } else {\n+                for (Session session : sessions){\n+                    synchronized (session){\n+                        session.getAsyncRemote().sendText(message.toString());  //this method call was synchronized to fix CEP-996\n+                    }\n+                }\n+            }\n+        } else {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Dropping the message: '\"+message+\"', since no clients have being registered to receive events from websocket-local adapter: '\"\n+                        +eventAdapterConfiguration.getName()+\"', for tenant ID: \"+tenantID);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        //Nothing to do.\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //Nothing to be destroyed.\n+    }\n+}"
        },
        {
            "sha": "c278fcef2950c0c6fd878074fa90f83968709cb4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/WebsocketLocalEventAdapterFactory.java",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket.local;\n+\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.websocket.local.internal.util.WebsocketLocalEventAdapterConstants;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class WebsocketLocalEventAdapterFactory extends OutputEventAdapterFactory {\n+    @Override\n+    public String getType() {\n+        return WebsocketLocalEventAdapterConstants.ADAPTER_TYPE_WEBSOCKET_LOCAL;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        return new WebsocketLocalEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+}"
        },
        {
            "sha": "fa4b1d9a4b7469d1360d429aa63ce1aecea95c50",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/WebsocketLocalOutputCallbackRegisterService.java",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalOutputCallbackRegisterService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalOutputCallbackRegisterService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2FWebsocketLocalOutputCallbackRegisterService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.websocket.local;\n+\n+import javax.websocket.Session;\n+\n+/**\n+ * This interface is exposed as an OSGI service, which will be invoked by the local websocket endpoint to inform new subscriptions; and do un-subscriptions..\n+ */\n+public interface WebsocketLocalOutputCallbackRegisterService {\n+\n+    public void subscribe(String adaptorName, Session session);\n+\n+    public void unsubscribe(String adaptorName, Session session);\n+}"
        },
        {
            "sha": "1bab3e9b95328be8fea370ed8ea08973c89debb0",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/internal/WebsocketLocalOutputCallbackRegisterServiceImpl.java",
            "status": "added",
            "additions": 87,
            "deletions": 0,
            "changes": 87,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2FWebsocketLocalOutputCallbackRegisterServiceImpl.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2FWebsocketLocalOutputCallbackRegisterServiceImpl.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2FWebsocketLocalOutputCallbackRegisterServiceImpl.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket.local.internal;\n+\n+import org.wso2.carbon.context.PrivilegedCarbonContext;\n+import org.wso2.carbon.event.output.adapter.websocket.local.WebsocketLocalOutputCallbackRegisterService;\n+\n+import javax.websocket.Session;\n+import java.util.Iterator;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+public class WebsocketLocalOutputCallbackRegisterServiceImpl implements WebsocketLocalOutputCallbackRegisterService {\n+\n+    private ConcurrentHashMap<Integer, ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>> outputEventAdaptorSessionMap;\n+\n+    public WebsocketLocalOutputCallbackRegisterServiceImpl(){\n+        outputEventAdaptorSessionMap =\n+                new ConcurrentHashMap<Integer, ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>>();\n+    }\n+\n+\n+    public void subscribe(String adaptorName, Session session) {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap == null) {\n+            tenantSpecificAdaptorMap = new ConcurrentHashMap<String, CopyOnWriteArrayList<Session>>();\n+            if (null != outputEventAdaptorSessionMap.putIfAbsent(tenantId, tenantSpecificAdaptorMap)){\n+                tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+            }\n+        }\n+        CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(adaptorName);\n+        if (adapterSpecificSessions == null){\n+            adapterSpecificSessions = new CopyOnWriteArrayList<Session>();\n+            if (null != tenantSpecificAdaptorMap.putIfAbsent(adaptorName,adapterSpecificSessions)){\n+                adapterSpecificSessions = tenantSpecificAdaptorMap.get(adaptorName);\n+            }\n+        }\n+        adapterSpecificSessions.add(session);\n+    }\n+\n+\n+    public CopyOnWriteArrayList<Session> getSessions(int tenantId, String adaptorName){\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap != null) {\n+            CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(adaptorName);\n+            return adapterSpecificSessions;\n+        }\n+        return null;\n+    }\n+\n+    public void unsubscribe(String adaptorName, Session session) {\n+        int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n+        ConcurrentHashMap<String, CopyOnWriteArrayList<Session>> tenantSpecificAdaptorMap = outputEventAdaptorSessionMap.get(tenantId);\n+        if (tenantSpecificAdaptorMap != null) {\n+            CopyOnWriteArrayList<Session> adapterSpecificSessions = tenantSpecificAdaptorMap.get(adaptorName);\n+            if (adapterSpecificSessions != null) {\n+                Session sessionToRemove = null;\n+                for (Iterator<Session> iterator = adapterSpecificSessions.iterator(); iterator.hasNext(); ) {\n+                    Session thisSession = iterator.next();\n+                    if (session.getId().equals(thisSession.getId())) {\n+                        sessionToRemove = session;\n+                        break;\n+                    }\n+                }\n+                if (sessionToRemove != null) {\n+                    adapterSpecificSessions.remove(sessionToRemove);\n+                }\n+            }\n+        }\n+    }\n+}"
        },
        {
            "sha": "69f262453db9c57ccdb3793746468071155ea739",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/internal/ds/WebsocketLocalEventAdapterServiceDS.java",
            "status": "added",
            "additions": 59,
            "deletions": 0,
            "changes": 59,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket.local.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.websocket.local.WebsocketLocalEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.websocket.local.WebsocketLocalOutputCallbackRegisterService;\n+import org.wso2.carbon.event.output.adapter.websocket.local.internal.WebsocketLocalOutputCallbackRegisterServiceImpl;\n+\n+/**\n+ * @scr.component component.name=\"output.Websocket.AdapterService.component\" immediate=\"true\"\n+ */\n+public class WebsocketLocalEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(WebsocketLocalEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the websocket adapter service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory websocketLocalEventAdapterFactory = new WebsocketLocalEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), websocketLocalEventAdapterFactory, null);\n+\n+            WebsocketLocalOutputCallbackRegisterServiceImpl websocketLocalOutputCallbackRegisterServiceImpl = new WebsocketLocalOutputCallbackRegisterServiceImpl();\n+            context.getBundleContext().registerService(WebsocketLocalOutputCallbackRegisterService.class.getName(), websocketLocalOutputCallbackRegisterServiceImpl, null);\n+\n+            WebsocketLocalEventAdaptorServiceInternalValueHolder.registerWebsocketOutputCallbackRegisterServiceInternal(websocketLocalOutputCallbackRegisterServiceImpl);\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output websocket-local adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output websocket-local adapter service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "00946481998320cd1e92c3a5a71a3dccabc0be9f",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/internal/ds/WebsocketLocalEventAdaptorServiceInternalValueHolder.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdaptorServiceInternalValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdaptorServiceInternalValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Fds%2FWebsocketLocalEventAdaptorServiceInternalValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket.local.internal.ds;\n+\n+import org.wso2.carbon.event.output.adapter.websocket.local.internal.WebsocketLocalOutputCallbackRegisterServiceImpl;\n+\n+/**\n+ * Creates a holder of type WebsocketLocalOutputCallbackRegisterServiceImpl.\n+ */\n+public final class WebsocketLocalEventAdaptorServiceInternalValueHolder {\n+\n+    private static WebsocketLocalOutputCallbackRegisterServiceImpl websocketLocalOutputCallbackRegisterServiceImpl;\n+\n+    public static void registerWebsocketOutputCallbackRegisterServiceInternal(WebsocketLocalOutputCallbackRegisterServiceImpl websocketLocalOutputCallbackRegisterServiceImpl) {\n+        WebsocketLocalEventAdaptorServiceInternalValueHolder.websocketLocalOutputCallbackRegisterServiceImpl = websocketLocalOutputCallbackRegisterServiceImpl;\n+    }\n+\n+    public static WebsocketLocalOutputCallbackRegisterServiceImpl getWebsocketLocalOutputCallbackRegisterServiceImpl() {\n+        return WebsocketLocalEventAdaptorServiceInternalValueHolder.websocketLocalOutputCallbackRegisterServiceImpl;\n+    }\n+}"
        },
        {
            "sha": "cf226dadae0ca38c80d85ec307393c849504c14a",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/java/org/wso2/carbon/event/output/adapter/websocket/local/internal/util/WebsocketLocalEventAdapterConstants.java",
            "status": "added",
            "additions": 29,
            "deletions": 0,
            "changes": 29,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Futil%2FWebsocketLocalEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Futil%2FWebsocketLocalEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Finternal%2Futil%2FWebsocketLocalEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,29 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.websocket.local.internal.util;\n+\n+/**\n+ * This class contains the constants related to Websocket Local Output Event Adaptor.\n+ */\n+public final class WebsocketLocalEventAdapterConstants {\n+\n+    private WebsocketLocalEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_WEBSOCKET_LOCAL = \"websocket-local\";\n+}"
        },
        {
            "sha": "89f0fa21b4ca7aaed2f8703909671e01e801d728",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket.local/src/main/resources/org/wso2/carbon/event/output/adapter/websocket/local/i18n/Resources.properties",
            "status": "added",
            "additions": 17,
            "deletions": 0,
            "changes": 17,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket.local%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Flocal%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,17 @@\n+#\n+# Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#"
        },
        {
            "sha": "cc7f89660a8ce4cea58754338ff2b4699ac14edf",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/pom.xml",
            "status": "added",
            "additions": 108,
            "deletions": 0,
            "changes": 108,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,108 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+ ~ Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ ~\n+ ~ WSO2 Inc. licenses this file to you under the Apache License,\n+ ~ Version 2.0 (the \"License\"); you may not use this file except\n+ ~ in compliance with the License.\n+ ~ You may obtain a copy of the License at\n+ ~\n+ ~    http://www.apache.org/licenses/LICENSE-2.0\n+ ~\n+ ~ Unless required by applicable law or agreed to in writing,\n+ ~ software distributed under the License is distributed on an\n+ ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ ~ KIND, either express or implied.  See the License for the\n+ ~ specific language governing permissions and limitations\n+ ~ under the License.\n+ -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <version>1.0.0-SNAPSHOT</version>\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.websocket</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Websocket Adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.websocket provides the back-end functionality of\n+        websocket event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>                                   <!--TODO: Move to top-pom -->\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.tyrus.bundles.wso2</groupId>\n+            <artifactId>tyrus-standalone-client</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.websocket.internal.*;\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.websocket.internal.*,\n+                            org.wso2.carbon.event.output.adapter.websocket.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            javax.xml.namespace; version=0.0.0,\n+                            <!--org.glassfish.tyrus.client.*,-->     <!--Commenting this out since dynamic import is enabled.-->\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "9933208d315f2fe5533995f29ea8720e1e2782ce",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/java/org/wso2/carbon/event/output/adapter/websocket/WebsocketEventAdapter.java",
            "status": "added",
            "additions": 114,
            "deletions": 0,
            "changes": 114,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.glassfish.tyrus.client.ClientManager;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.websocket.internal.WebsocketClient;\n+import org.wso2.carbon.event.output.adapter.websocket.internal.util.WebsocketEventAdapterConstants;\n+\n+import javax.websocket.ClientEndpointConfig;\n+import javax.websocket.DeploymentException;\n+import javax.websocket.Session;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Map;\n+\n+public final class WebsocketEventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(WebsocketEventAdapter.class);\n+    private OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private Map<String, String> globalProperties;\n+\n+    private Session session;\n+    private String socketServerUrl;\n+\n+    public WebsocketEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+\n+    @Override\n+    public void init() throws OutputEventAdapterException {\n+        WebsocketEventAdapterFactory.validateOutputEventAdapterConfigurations(eventAdapterConfiguration);\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+          connect();\n+    }\n+\n+    @Override\n+    public void connect() {\n+        ClientEndpointConfig clientEndpointConfig = ClientEndpointConfig.Builder.create().build();\n+        ClientManager client = ClientManager.createClient();\n+        socketServerUrl = eventAdapterConfiguration.getStaticProperties().get(WebsocketEventAdapterConstants.ADAPTER_SERVER_URL);\n+        try {\n+            session = client.connectToServer(new WebsocketClient(), clientEndpointConfig, new URI(socketServerUrl));\n+        } catch (DeploymentException e) {\n+            throw new OutputEventAdapterRuntimeException(\"The adaptor \"+eventAdapterConfiguration.getName()+\" failed to connect to the websocket server \"+\n+                    socketServerUrl ,e);\n+        } catch (IOException e) {\n+            throw new OutputEventAdapterRuntimeException(\"The adaptor \"+eventAdapterConfiguration.getName()+\" failed to connect to the websocket server \"+\n+                    socketServerUrl ,e);\n+        } catch (URISyntaxException e) {\n+            throw new OutputEventAdapterRuntimeException(\"The adaptor \"+eventAdapterConfiguration.getName()+\" failed to connect to the websocket server \"+\n+                    socketServerUrl ,e);\n+        }\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        if (message instanceof Object[]) {\n+            for (Object object : (Object[])message){\n+                synchronized (session){\n+                    session.getAsyncRemote().sendText(object.toString());\n+                }\n+            }\n+        } else {\n+            synchronized (session){\n+                session.getAsyncRemote().sendText(message.toString());      //this method call was synchronized to fix CEP-996\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        try {\n+            if(session != null){\n+                session.close();\n+            }\n+        } catch (IOException e) {\n+            throw new OutputEventAdapterRuntimeException(\"The adaptor \"+eventAdapterConfiguration.getName()+\" failed to disconnect from the websocket server \"+\n+                    socketServerUrl ,e);\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        //Nothing to be destroyed.\n+    }\n+}"
        },
        {
            "sha": "50482558dd8551d4d974c868900ca2f6ac79b2c4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/java/org/wso2/carbon/event/output/adapter/websocket/WebsocketEventAdapterFactory.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2FWebsocketEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket;\n+\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.websocket.internal.util.WebsocketEventAdapterConstants;\n+\n+import java.util.*;\n+\n+public class WebsocketEventAdapterFactory extends OutputEventAdapterFactory {\n+    private ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.websocket.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return WebsocketEventAdapterConstants.ADAPTER_TYPE_WEBSOCKET;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportedMessageFormats = new ArrayList<String>();\n+        supportedMessageFormats.add(MessageType.TEXT);\n+        supportedMessageFormats.add(MessageType.XML);\n+        supportedMessageFormats.add(MessageType.JSON);\n+        return supportedMessageFormats;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> staticPropertyList = new ArrayList<Property>();\n+\n+        Property adapterServerURL = new Property(WebsocketEventAdapterConstants.ADAPTER_SERVER_URL);\n+        adapterServerURL.setDisplayName(\n+                resourceBundle.getString(WebsocketEventAdapterConstants.ADAPTER_SERVER_URL));\n+        adapterServerURL.setHint(resourceBundle.getString(WebsocketEventAdapterConstants.ADAPTER_SERVER_URL_HINT));\n+        adapterServerURL.setRequired(true);\n+        staticPropertyList.add(adapterServerURL);\n+\n+        return staticPropertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    public static void validateOutputEventAdapterConfigurations(OutputEventAdapterConfiguration eventAdapterConfiguration) throws OutputEventAdapterException {\n+        String socketServerUrl = eventAdapterConfiguration.getStaticProperties().get(WebsocketEventAdapterConstants.ADAPTER_SERVER_URL);\n+        if (!socketServerUrl.startsWith(\"ws://\")){\n+            throw new OutputEventAdapterException(\"Provided websocket URL - \"+socketServerUrl+\" is invalid for websocket output adaptor with name\"+\n+            eventAdapterConfiguration.getName()+\". The websocket URL should start with 'ws://' prefix.\");\n+        }\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        return new WebsocketEventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+\n+}"
        },
        {
            "sha": "02605dfaa26b9fe5ed77bb2d7c7f76fcc2efad7d",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/java/org/wso2/carbon/event/output/adapter/websocket/internal/WebsocketClient.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2FWebsocketClient.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2FWebsocketClient.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2FWebsocketClient.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.websocket.internal;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import javax.websocket.Endpoint;\n+import javax.websocket.EndpointConfig;\n+import javax.websocket.Session;\n+\n+/**\n+ * This is the client that is used to publish events to a user-configured websocket-server end point.\n+ */\n+public class WebsocketClient extends Endpoint {\n+\n+    private static final Log log = LogFactory.getLog(WebsocketClient.class);\n+\n+    @Override\n+    public void onOpen(Session session, EndpointConfig endpointConfig) {\n+        if (log.isDebugEnabled()){\n+            log.debug(\"Websocket Output Adaptor: WebsocketClient connected, with session ID: \" + session.getId()+\", to the remote end point URI - \"+session.getRequestURI());\n+        }\n+    }\n+}"
        },
        {
            "sha": "8621cbaf9c54071691583267878f275610cca685",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/java/org/wso2/carbon/event/output/adapter/websocket/internal/ds/WebsocketEventAdapterServiceDS.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Fds%2FWebsocketEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Fds%2FWebsocketEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Fds%2FWebsocketEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,51 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.websocket.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.websocket.WebsocketEventAdapterFactory;\n+\n+/**\n+ * @scr.component component.name=\"output.Websocket.AdapterService.component\" immediate=\"true\"\n+ */\n+public class WebsocketEventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(WebsocketEventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the websocket adapter service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory websocketEventAdapterFactory = new WebsocketEventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), websocketEventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output websocket adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output websocket adapter service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "0daa5c6dfd86277f3d14b4176b6d01dbbe09b422",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/java/org/wso2/carbon/event/output/adapter/websocket/internal/util/WebsocketEventAdapterConstants.java",
            "status": "added",
            "additions": 29,
            "deletions": 0,
            "changes": 29,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Futil%2FWebsocketEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Futil%2FWebsocketEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Finternal%2Futil%2FWebsocketEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,29 @@\n+/*\n+*  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.wso2.carbon.event.output.adapter.websocket.internal.util;\n+\n+\n+public final class WebsocketEventAdapterConstants {\n+\n+    private WebsocketEventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_TYPE_WEBSOCKET = \"websocket\";\n+    public static final String ADAPTER_SERVER_URL = \"websocket.server.url\";\n+    public static final String ADAPTER_SERVER_URL_HINT = \"websocket.server.url.hint\";\n+}"
        },
        {
            "sha": "e51e9a24f5fad41d69ca52336354a9536aa3bcca",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.websocket/src/main/resources/org/wso2/carbon/event/output/adapter/websocket/i18n/Resources.properties",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.websocket%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwebsocket%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,19 @@\n+#\n+# Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+websocket.server.url=Websocket Server URL\n+websocket.server.url.hint=URL of the web socket server which the events to be published; e.g. \"ws://localhost:9099\"."
        },
        {
            "sha": "7bb264f14fb7569d9d8d7a31ca54ea47e12f41d2",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/pom.xml",
            "status": "added",
            "additions": 128,
            "deletions": 0,
            "changes": 128,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,128 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-output-adapters</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.wso2event</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output WSO2Event Adapter Module</name>\n+    <description>org.wso2.carbon.event.output.adapter.wso2event provides the back-end\n+        functionality of output wso2event adapter\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.logging</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.agent</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.commons</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.commons.thrift</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.commons.binary</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.databridge.core</artifactId>\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.wso2event.internal,\n+                            org.wso2.carbon.event.output.adapter.wso2event.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.wso2event.internal,\n+                            !org.wso2.carbon.event.output.adapter.wso2event.internal.*,\n+                            org.wso2.carbon.event.output.adapter.wso2event.*,\n+                        </Export-Package>\n+                        <Import-Package>\n+                            org.wso2.carbon.event.output.adapter.core,\n+                            org.wso2.carbon.event.output.adapter.core.*,\n+                            !javax.xml.namespace,\n+                            javax.xml.namespace; version=0.0.0,\n+                            *;resolution:=optional,\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <properties>\n+    </properties>\n+\n+\n+</project>\n+\n+\n+\n+"
        },
        {
            "sha": "d2ea614afa2df58d932333121c4c9903dff87806",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/java/org/wso2/carbon/event/output/adapter/wso2event/WSO2EventAdapter.java",
            "status": "added",
            "additions": 180,
            "deletions": 0,
            "changes": 180,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,180 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.wso2event;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.databridge.agent.AgentHolder;\n+import org.wso2.carbon.databridge.agent.DataPublisher;\n+import org.wso2.carbon.databridge.agent.exception.DataEndpointAgentConfigurationException;\n+import org.wso2.carbon.databridge.agent.exception.DataEndpointAuthenticationException;\n+import org.wso2.carbon.databridge.agent.exception.DataEndpointConfigurationException;\n+import org.wso2.carbon.databridge.agent.exception.DataEndpointException;\n+import org.wso2.carbon.databridge.commons.Event;\n+import org.wso2.carbon.databridge.commons.exception.TransportException;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapter;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterConfiguration;\n+import org.wso2.carbon.event.output.adapter.core.exception.ConnectionUnavailableException;\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterRuntimeException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+import org.wso2.carbon.event.output.adapter.wso2event.internal.util.WSO2EventAdapterConstants;\n+\n+import java.util.Map;\n+\n+import static org.wso2.carbon.event.output.adapter.wso2event.internal.util.WSO2EventAdapterConstants.*;\n+\n+public final class WSO2EventAdapter implements OutputEventAdapter {\n+\n+    private static final Log log = LogFactory.getLog(WSO2EventAdapter.class);\n+    private final OutputEventAdapterConfiguration eventAdapterConfiguration;\n+    private final Map<String, String> globalProperties;\n+    private DataPublisher dataPublisher = null;\n+    private boolean isBlockingMode = false;\n+    private long timeout = 0;\n+    private String streamId;\n+\n+    public WSO2EventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration,\n+            Map<String, String> globalProperties) {\n+\n+        this.eventAdapterConfiguration = eventAdapterConfiguration;\n+        this.globalProperties = globalProperties;\n+    }\n+\n+    /**\n+     * Initialises the resource bundle\n+     */\n+    @Override\n+    public void init() {\n+        streamId = eventAdapterConfiguration.getStaticProperties().get(\n+                WSO2EventAdapterConstants.ADAPTER_STATIC_CONFIG_STREAM_NAME) + \":\" +\n+                eventAdapterConfiguration.getStaticProperties().get(WSO2EventAdapterConstants\n+                        .ADAPTER_STATIC_CONFIG_STREAM_VERSION);\n+        String configPath = globalProperties.get(ADAPTOR_CONF_PATH);\n+        if (configPath != null) {\n+            AgentHolder.setConfigPath(configPath);\n+        }\n+    }\n+\n+    @Override\n+    public void testConnect() throws TestConnectionNotSupportedException {\n+        connect();\n+    }\n+\n+    @Override\n+    public synchronized void connect() {\n+\n+        String userName = eventAdapterConfiguration.getStaticProperties().get(ADAPTER_CONF_WSO2EVENT_PROP_USER_NAME);\n+        String password = eventAdapterConfiguration.getStaticProperties().get(ADAPTER_CONF_WSO2EVENT_PROP_PASSWORD);\n+        String authUrl = eventAdapterConfiguration.getStaticProperties()\n+                .get(ADAPTER_CONF_WSO2EVENT_PROP_AUTHENTICATOR_URL);\n+        String receiverUrl = eventAdapterConfiguration.getStaticProperties()\n+                .get(ADAPTER_CONF_WSO2EVENT_PROP_RECEIVER_URL);\n+        String protocol = eventAdapterConfiguration.getStaticProperties().get(ADAPTER_CONF_WSO2EVENT_PROP_PROTOCOL);\n+        String publishingMode = eventAdapterConfiguration.getStaticProperties()\n+                .get(ADAPTER_CONF_WSO2EVENT_PROP_PUBLISHING_MODE);\n+        String timeoutString = eventAdapterConfiguration.getStaticProperties()\n+                .get(ADAPTER_CONF_WSO2EVENT_PROP_PUBLISH_TIMEOUT_MS);\n+\n+        if (publishingMode.equalsIgnoreCase(ADAPTER_PUBLISHING_MODE_BLOCKING)) {\n+            isBlockingMode = true;\n+        } else {\n+            try {\n+                timeout = Long.parseLong(timeoutString);\n+            } catch (RuntimeException e) {\n+                throwRuntimeException(receiverUrl, authUrl, protocol, userName, e);\n+            }\n+        }\n+\n+        try {\n+            if (authUrl != null && authUrl.length() > 0) {\n+                dataPublisher = new DataPublisher(protocol, receiverUrl, authUrl, userName, password);\n+            } else {\n+                dataPublisher = new DataPublisher(protocol, receiverUrl, null, userName, password);\n+            }\n+        } catch (DataEndpointAgentConfigurationException e) {\n+            throwRuntimeException(receiverUrl, authUrl, protocol, userName, e);\n+        } catch (DataEndpointException e) {\n+            throwConnectionException(receiverUrl, authUrl, protocol, userName, e);\n+        } catch (DataEndpointConfigurationException e) {\n+            throwRuntimeException(receiverUrl, authUrl, protocol, userName, e);\n+        } catch (DataEndpointAuthenticationException e) {\n+            throwConnectionException(receiverUrl, authUrl, protocol, userName, e);\n+        } catch (TransportException e) {\n+            throwConnectionException(receiverUrl, authUrl, protocol, userName, e);\n+        }\n+\n+    }\n+\n+    @Override\n+    public void publish(Object message, Map<String, String> dynamicProperties) {\n+        Event event = (Event) (message);\n+        //StreamDefinition streamDefinition = (StreamDefinition) ((Object[]) message)[1];\n+        event.setStreamId(streamId);\n+\n+        if (isBlockingMode) {\n+            dataPublisher.publish(event);\n+        } else {\n+            dataPublisher.tryPublish(event, timeout);\n+        }\n+    }\n+\n+    @Override\n+    public void disconnect() {\n+        if (dataPublisher != null) {\n+            try {\n+                dataPublisher.shutdown();\n+            } catch (DataEndpointException e) {\n+                String userName = eventAdapterConfiguration.getStaticProperties()\n+                        .get(ADAPTER_CONF_WSO2EVENT_PROP_USER_NAME);\n+                String authUrl = eventAdapterConfiguration.getStaticProperties()\n+                        .get(ADAPTER_CONF_WSO2EVENT_PROP_AUTHENTICATOR_URL);\n+                String receiverUrl = eventAdapterConfiguration.getStaticProperties()\n+                        .get(ADAPTER_CONF_WSO2EVENT_PROP_RECEIVER_URL);\n+                String protocol = eventAdapterConfiguration.getStaticProperties()\n+                        .get(ADAPTER_CONF_WSO2EVENT_PROP_PROTOCOL);\n+                logException(\"Error in shutting down the data publisher\", receiverUrl, authUrl, protocol, userName, e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+    }\n+\n+    private void throwRuntimeException(String receiverUrl, String authUrl, String protocol, String userName,\n+            Exception e) {\n+        throw new OutputEventAdapterRuntimeException(\n+                \"Error in data-bridge config for adaptor \" + eventAdapterConfiguration.getName()\n+                        + \" with the receiverUrl:\" + receiverUrl + \" authUrl:\" + authUrl + \" protocol:\" + protocol\n+                        + \" and userName:\" + userName + \",\" + e.getMessage(), e);\n+    }\n+\n+    private void logException(String message, String receiverUrl, String authUrl, String protocol, String userName,\n+            Exception e) {\n+        log.error(message + \" for adaptor \" + eventAdapterConfiguration.getName()\n+                + \" with the receiverUrl:\" + receiverUrl + \" authUrl:\" + authUrl + \" protocol:\" + protocol\n+                + \" and userName:\" + userName + \",\" + e.getMessage(), e);\n+    }\n+\n+    private void throwConnectionException(String receiverUrl, String authUrl, String protocol, String userName,\n+            Exception e) {\n+        throw new ConnectionUnavailableException(\n+                \"Connection not available for adaptor \" + eventAdapterConfiguration.getName()\n+                        + \" with the receiverUrl:\" + receiverUrl + \" authUrl:\" + authUrl + \" protocol:\" + protocol\n+                        + \" and userName:\" + userName + \",\" + e.getMessage(), e);\n+    }\n+\n+}"
        },
        {
            "sha": "d6cb3e88dd148b95ac056c685ab9262133f569cc",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/java/org/wso2/carbon/event/output/adapter/wso2event/WSO2EventAdapterFactory.java",
            "status": "added",
            "additions": 134,
            "deletions": 0,
            "changes": 134,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2FWSO2EventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.wso2event;\n+\n+\n+import org.wso2.carbon.event.output.adapter.core.*;\n+import org.wso2.carbon.event.output.adapter.wso2event.internal.util.WSO2EventAdapterConstants;\n+\n+import java.util.*;\n+\n+\n+public class WSO2EventAdapterFactory extends OutputEventAdapterFactory {\n+\n+    ResourceBundle resourceBundle = ResourceBundle.getBundle(\"org.wso2.carbon.event.output.adapter.wso2event.i18n.Resources\", Locale.getDefault());\n+\n+    @Override\n+    public String getType() {\n+        return WSO2EventAdapterConstants.ADAPTER_TYPE_WSO2EVENT;\n+    }\n+\n+    @Override\n+    public List<String> getSupportedMessageFormats() {\n+        List<String> supportOutputMessageTypes = new ArrayList<String>();\n+        supportOutputMessageTypes.add(MessageType.WSO2EVENT);\n+        return supportOutputMessageTypes;\n+    }\n+\n+    @Override\n+    public List<Property> getStaticPropertyList() {\n+        List<Property> propertyList = new ArrayList<Property>();\n+\n+        // set receiver url event adapter\n+        Property ipProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_RECEIVER_URL);\n+        ipProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_RECEIVER_URL));\n+        ipProperty.setRequired(true);\n+        ipProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_RECEIVER_URL));\n+\n+        // set authenticator url of event adapter\n+        Property authenticatorIpProperty = new Property(WSO2EventAdapterConstants.\n+                ADAPTER_CONF_WSO2EVENT_PROP_AUTHENTICATOR_URL);\n+        authenticatorIpProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_AUTHENTICATOR_URL));\n+        authenticatorIpProperty.setRequired(false);\n+        authenticatorIpProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_AUTHENTICATOR_URL));\n+\n+\n+        // set connection user name as property\n+        Property userNameProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_USER_NAME);\n+        userNameProperty.setRequired(true);\n+        userNameProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_USER_NAME));\n+        userNameProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_USER_NAME));\n+\n+        // set connection password as property\n+        Property passwordProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PASSWORD);\n+        passwordProperty.setRequired(true);\n+        passwordProperty.setSecured(true);\n+        passwordProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PASSWORD));\n+        passwordProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_PASSWORD));\n+\n+        // set connection protocol as property\n+        Property protocolProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PROTOCOL);\n+        protocolProperty.setRequired(true);\n+        protocolProperty.setDefaultValue(WSO2EventAdapterConstants.ADAPTER_PROTOCOL_THRIFT);\n+        protocolProperty.setOptions(new String[]{WSO2EventAdapterConstants.ADAPTER_PROTOCOL_THRIFT, WSO2EventAdapterConstants.ADAPTER_PROTOCOL_BINARY});\n+        protocolProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PROTOCOL));\n+        protocolProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_PROTOCOL));\n+\n+        // set publishingMode as property\n+        Property publishingModeProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PUBLISHING_MODE);\n+        publishingModeProperty.setDefaultValue(WSO2EventAdapterConstants.ADAPTER_PUBLISHING_MODE_NON_BLOCKING);\n+        publishingModeProperty.setOptions(new String[]{WSO2EventAdapterConstants.ADAPTER_PUBLISHING_MODE_BLOCKING, WSO2EventAdapterConstants.ADAPTER_PUBLISHING_MODE_NON_BLOCKING});\n+        publishingModeProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PUBLISHING_MODE));\n+        publishingModeProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_PUBLISHING_MODE));\n+\n+        // set publishTimeout as property\n+        Property publishTimeoutProperty = new Property(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PUBLISH_TIMEOUT_MS);\n+        publishingModeProperty.setDefaultValue(\"0\");\n+        publishingModeProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_PROP_PUBLISH_TIMEOUT_MS));\n+        publishingModeProperty.setHint(resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_CONF_WSO2EVENT_HINT_PUBLISH_TIMEOUT_MS));\n+\n+        // set stream definition\n+        Property streamDefinitionProperty = new Property(WSO2EventAdapterConstants.ADAPTER_STATIC_CONFIG_STREAM_NAME);\n+        streamDefinitionProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_STATIC_CONFIG_STREAM_NAME));\n+        streamDefinitionProperty.setRequired(true);\n+\n+\n+        // set stream version\n+        Property streamVersionProperty = new Property(WSO2EventAdapterConstants.ADAPTER_STATIC_CONFIG_STREAM_VERSION);\n+        streamVersionProperty.setDisplayName(\n+                resourceBundle.getString(WSO2EventAdapterConstants.ADAPTER_STATIC_CONFIG_STREAM_VERSION));\n+        streamVersionProperty.setDefaultValue(\"1.0.0\");\n+        streamVersionProperty.setRequired(true);\n+\n+        propertyList.add(ipProperty);\n+        propertyList.add(authenticatorIpProperty);\n+        propertyList.add(userNameProperty);\n+        propertyList.add(passwordProperty);\n+        propertyList.add(protocolProperty);\n+        propertyList.add(publishingModeProperty);\n+        propertyList.add(streamDefinitionProperty);\n+        propertyList.add(streamVersionProperty);\n+\n+        return propertyList;\n+    }\n+\n+    @Override\n+    public List<Property> getDynamicPropertyList() {\n+        return null;\n+    }\n+\n+    @Override\n+    public OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties) {\n+        return new WSO2EventAdapter(eventAdapterConfiguration,globalProperties);\n+    }\n+}"
        },
        {
            "sha": "cb04a7efa44ba647c0e306e37e9557317d005185",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/java/org/wso2/carbon/event/output/adapter/wso2event/internal/ds/WSO2EventAdapterServiceDS.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Fds%2FWSO2EventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Fds%2FWSO2EventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Fds%2FWSO2EventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.wso2event.internal.ds;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.osgi.service.component.ComponentContext;\n+import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterFactory;\n+import org.wso2.carbon.event.output.adapter.wso2event.WSO2EventAdapterFactory;\n+\n+\n+/**\n+ * @scr.component name=\"output.wso2EventAdapterService.component\" immediate=\"true\"\n+ */\n+public class WSO2EventAdapterServiceDS {\n+\n+    private static final Log log = LogFactory.getLog(WSO2EventAdapterServiceDS.class);\n+\n+    /**\n+     * initialize the agent service here service here.\n+     *\n+     * @param context\n+     */\n+    protected void activate(ComponentContext context) {\n+\n+        try {\n+            OutputEventAdapterFactory wso2EventAdapterFactory = new WSO2EventAdapterFactory();\n+            context.getBundleContext().registerService(OutputEventAdapterFactory.class.getName(), wso2EventAdapterFactory, null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Successfully deployed the output WSO2Event adapter service\");\n+            }\n+        } catch (RuntimeException e) {\n+            log.error(\"Can not create the output WSO2Event adapter service \", e);\n+        }\n+    }\n+\n+}"
        },
        {
            "sha": "3853fe90cce7b910f7dbb5cff14ba638c51c5c8e",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/java/org/wso2/carbon/event/output/adapter/wso2event/internal/util/WSO2EventAdapterConstants.java",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Futil%2FWSO2EventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Futil%2FWSO2EventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Finternal%2Futil%2FWSO2EventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.wso2event.internal.util;\n+\n+\n+public final class WSO2EventAdapterConstants {\n+\n+    private WSO2EventAdapterConstants() {\n+    }\n+\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_RECEIVER_URL = \"receiverURL\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_AUTHENTICATOR_URL = \"authenticatorURL\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_USER_NAME = \"username\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_PASSWORD = \"password\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_PROTOCOL = \"protocol\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_PUBLISHING_MODE = \"publishingMode\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_PROP_PUBLISH_TIMEOUT_MS = \"publishTimeout\";\n+    public static final String ADAPTER_TYPE_WSO2EVENT = \"wso2event\";\n+\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_RECEIVER_URL = \"enterReceiverUrl\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_AUTHENTICATOR_URL = \"enterAuthenticatorUrl\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_USER_NAME = \"enterUsername\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_PASSWORD = \"enterPassword\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_PROTOCOL = \"selectProtocol\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_PUBLISHING_MODE = \"selectPublishingMode\";\n+    public static final String ADAPTER_CONF_WSO2EVENT_HINT_PUBLISH_TIMEOUT_MS = \"enterPublishTimeout\";\n+    public static final String ADAPTER_STATIC_CONFIG_STREAM_NAME = \"stream\";\n+    public static final String ADAPTER_STATIC_CONFIG_STREAM_VERSION = \"version\";\n+\n+    public static final String ADAPTER_PROTOCOL_THRIFT = \"thrift\";\n+    public static final String ADAPTER_PROTOCOL_BINARY = \"binary\";\n+\n+    public static final String ADAPTER_PUBLISHING_MODE_BLOCKING = \"blocking\";\n+    public static final String ADAPTER_PUBLISHING_MODE_NON_BLOCKING = \"non-blocking\";\n+\n+    public static final String ADAPTOR_CONF_PATH = \"config.path\";\n+\n+\n+    ;\n+}"
        },
        {
            "sha": "fc40f4efed735aa44d6319588d7feb4ec676f1fd",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/resources/org/wso2/carbon/event/output/adapter/wso2event/i18n/Resources.properties",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fwso2event%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# WSO2 Inc. licenses this file to you under the Apache License,\n+# Version 2.0 (the \"License\"); you may not use this file except\n+# in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+username=User Name\n+password=Password\n+protocol=Protocol\n+publishingMode=Publishing Mode\n+publishTimeout=Publishing Timeout\n+receiverURL=Receiver URL\n+authenticatorURL=Authenticator URL\n+stream=Stream Name\n+version=Stream Version\n+enterReceiverUrl=Enter the Receiver Url\n+enterAuthenticatorUrl=Enter the Authenticator Url\n+enterUsername=Enter the UserName\n+enterPassword=Enter the Password\n+selectPublishingMode = Select the how events should be published\n+selectProtocol= The communication protocol that will be used to published events\n+enterPublishTimeout=Timeout for the non-blocking Publishing Mode, default its '0' (fail immediately)\n\\ No newline at end of file"
        },
        {
            "sha": "a664d7e0ea0b5ad3d979ffa3fb701c9b17274cf4",
            "filename": "components/event-publisher/event-output-adapters/org.wso2.carbon.event.output.adapter.wso2event/src/main/resources/org/wso2/carbon/event/output/adaptor/wso2event/i18n/Resources.properties",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadaptor%2Fwso2event%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadaptor%2Fwso2event%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Forg.wso2.carbon.event.output.adapter.wso2event%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadaptor%2Fwso2event%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+# use this file except in compliance with the License. You may obtain a copy\n+# of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed\n+# under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+# CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations under the License.\n+#\n+\n+username=User Name\n+password=Password\n+protocol=Protocol\n+publishingMode=Publishing Mode\n+publishTimeout=Publishing Timeout\n+receiverURL=Receiver URL\n+authenticatorURL=Authenticator URL\n+stream=Stream Name\n+version=Stream Version\n+enterReceiverUrl=Enter the Receiver Url\n+enterAuthenticatorUrl=Enter the Authenticator Url\n+enterUsername=Enter the UserName\n+enterPassword=Enter the Password\n+selectPublishingMode = Select the how events should be published\n+selectProtocol= The communication protocol that will be used to published events\n+enterPublishTimeout=Timeout for the non-blocking Publishing Mode, default its '0' (fail immediately)\n\\ No newline at end of file"
        },
        {
            "sha": "df215a75e7aeadb79744b173b1fd2a0972444ce8",
            "filename": "components/event-publisher/event-output-adapters/pom.xml",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Fevent-output-adapters%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Fevent-output-adapters%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-publisher</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>event-output-adapters</artifactId>\n+    <packaging>pom</packaging>\n+    <name>WSO2 Carbon - Event Output Adapters Module</name>\n+    <description>This is a Carbon bundle that represent the event-adapter module.</description>\n+    <url>http://wso2.org</url>\n+\n+    <modules>\n+        <module>org.wso2.carbon.event.output.adapter.logger</module>\n+        <module>org.wso2.carbon.event.output.adapter.email</module>\n+        <module>org.wso2.carbon.event.output.adapter.kafka</module>\n+       <module>org.wso2.carbon.event.output.adapter.rdbms</module>\n+        <module>org.wso2.carbon.event.output.adapter.http</module>\n+        <module>org.wso2.carbon.event.output.adapter.soap</module>\n+        <module>org.wso2.carbon.event.output.adapter.jms</module>\n+        <module>org.wso2.carbon.event.output.adapter.cassandra</module>\n+        <module>org.wso2.carbon.event.output.adapter.wso2event</module>\n+        <module>org.wso2.carbon.event.output.adapter.websocket</module>\n+        <module>org.wso2.carbon.event.output.adapter.websocket.local</module>\n+        <module>org.wso2.carbon.event.output.adapter.websocket.local/org.wso2.carbon.event.output.adapter.websocket.endpoint</module>\n+        <module>org.wso2.carbon.event.output.adapter.ui</module>\n+        <module>org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.endpoint</module>\n+        <module>org.wso2.carbon.event.output.adapter.ui/org.wso2.carbon.event.output.adapter.ui.test</module>\n+        <module>org.wso2.carbon.event.output.adapter.mqtt</module>\n+        <module>org.wso2.carbon.event.output.adapter.sms</module>\n+    </modules>\n+</project>\n+\n+\n+"
        },
        {
            "sha": "6cec7088cd491ab15f404fd7f420b2279af9cea6",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/pom.xml",
            "status": "added",
            "additions": 89,
            "deletions": 0,
            "changes": 89,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,89 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy\n+  ~ of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software distributed\n+  ~ under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+  ~ CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.analytics-common</groupId>\n+        <artifactId>event-publisher</artifactId>\n+        <version>1.0.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.event.output.adapter.core</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>WSO2 Carbon - Event Output Adapter Core Module</name>\n+    <description>org.wso2.carbon.output.event.adapter.core provides the core functionality for publishing native events\n+    </description>\n+    <url>http://wso2.org</url>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon</groupId>\n+            <artifactId>org.wso2.carbon.utils</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.analytics-common</groupId>\n+            <artifactId>org.wso2.carbon.event.statistics</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-scr-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>generate-scr-scrdescriptor</id>\n+                        <goals>\n+                            <goal>scr</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.felix</groupId>\n+                <artifactId>maven-bundle-plugin</artifactId>\n+                <extensions>true</extensions>\n+                <configuration>\n+                    <instructions>\n+                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n+                        <Bundle-Name>${project.artifactId}</Bundle-Name>\n+                        <Private-Package>\n+                            org.wso2.carbon.event.output.adapter.core.internal.*\n+                        </Private-Package>\n+                        <Export-Package>\n+                            !org.wso2.carbon.event.output.adapter.core.internal,\n+                            !org.wso2.carbon.event.output.adapter.core.internal.*,\n+                            org.wso2.carbon.event.output.adapter.core.*\n+                        </Export-Package>\n+                        <Import-Package>\n+                            *;resolution:=optional\n+                        </Import-Package>\n+                        <DynamicImport-Package>*</DynamicImport-Package>\n+                    </instructions>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
        },
        {
            "sha": "8f3bad7a4b4595e50ef9a0627d4506000ef4eac4",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/EventAdapterUtil.java",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FEventAdapterUtil.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FEventAdapterUtil.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FEventAdapterUtil.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+import org.apache.axis2.engine.AxisConfiguration;\n+import org.wso2.carbon.context.CarbonContext;\n+import org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils;\n+import org.wso2.carbon.event.output.adapter.core.internal.ds.OutputEventAdapterServiceValueHolder;\n+import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n+\n+public class EventAdapterUtil {\n+\n+    public static AxisConfiguration getAxisConfiguration() {\n+        AxisConfiguration axisConfiguration;\n+        if (CarbonContext.getThreadLocalCarbonContext().getTenantId() == MultitenantConstants.SUPER_TENANT_ID) {\n+            axisConfiguration = OutputEventAdapterServiceValueHolder.getConfigurationContextService().\n+                    getServerConfigContext().getAxisConfiguration();\n+        } else {\n+            axisConfiguration = TenantAxisUtils.getTenantAxisConfiguration(CarbonContext.\n+                            getThreadLocalCarbonContext().getTenantDomain(),\n+                    OutputEventAdapterServiceValueHolder.getConfigurationContextService().\n+                            getServerConfigContext());\n+        }\n+        return axisConfiguration;\n+    }\n+}"
        },
        {
            "sha": "93a061107a056da3cfc40c33c26b2fb621e15e79",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/MessageType.java",
            "status": "added",
            "additions": 28,
            "deletions": 0,
            "changes": 28,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FMessageType.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FMessageType.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FMessageType.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+/**\n+ * Adaptor type that supports\n+ */\n+public class MessageType {\n+\n+    public static final String XML = \"xml\";\n+    public static final String WSO2EVENT = \"wso2event\";\n+    public static final String MAP = \"map\";\n+    public static final String TEXT = \"text\";\n+    public static final String JSON = \"json\";\n+\n+}"
        },
        {
            "sha": "76d0792c7a95cf840b5be2db3af5f821401ea321",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/OutputEventAdapter.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+\n+import java.util.Map;\n+\n+/**\n+ * This is a EventAdapter type. these interface let users to publish subscribe messages according to\n+ * some type. this type can either be local, jms or ws\n+ */\n+public interface OutputEventAdapter {\n+\n+    void init() throws OutputEventAdapterException;\n+\n+    void testConnect() throws TestConnectionNotSupportedException;\n+\n+    void connect();\n+\n+    void publish(Object message, Map<String, String> dynamicProperties);\n+\n+    void disconnect();\n+\n+    void destroy();\n+\n+}"
        },
        {
            "sha": "04aa1d4d426fcfabb32ff4345dcdb06424410353",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/OutputEventAdapterConfiguration.java",
            "status": "added",
            "additions": 87,
            "deletions": 0,
            "changes": 87,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterConfiguration.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterConfiguration.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterConfiguration.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+\n+import java.util.Map;\n+\n+/**\n+ * This class contain the configuration details of the event\n+ */\n+\n+public class OutputEventAdapterConfiguration {\n+\n+    private String name;\n+    private String type;\n+    private String messageFormat;\n+    private Map<String, String> staticProperties;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public String getMessageFormat() {\n+        return messageFormat;\n+    }\n+\n+    public void setMessageFormat(String messageFormat) {\n+        this.messageFormat = messageFormat;\n+    }\n+\n+    public Map<String, String> getStaticProperties() {\n+        return staticProperties;\n+    }\n+\n+    public void setStaticProperties(Map<String, String> staticProperties) {\n+        this.staticProperties = staticProperties;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof OutputEventAdapterConfiguration)) return false;\n+\n+        OutputEventAdapterConfiguration that = (OutputEventAdapterConfiguration) o;\n+\n+        if (messageFormat != null ? !messageFormat.equals(that.messageFormat) : that.messageFormat != null)\n+            return false;\n+        if (name != null ? !name.equals(that.name) : that.name != null) return false;\n+        if (staticProperties != null ? !staticProperties.equals(that.staticProperties) : that.staticProperties != null)\n+            return false;\n+        return !(type != null ? !type.equals(that.type) : that.type != null);\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = name != null ? name.hashCode() : 0;\n+        result = 31 * result + (type != null ? type.hashCode() : 0);\n+        result = 31 * result + (messageFormat != null ? messageFormat.hashCode() : 0);\n+        result = 31 * result + (staticProperties != null ? staticProperties.hashCode() : 0);\n+        return result;\n+    }\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "5580285a14f5f03348a53e7f26f2b16b67ac7b12",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/OutputEventAdapterFactory.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public abstract class OutputEventAdapterFactory {\n+\n+    private OutputEventAdapterSchema outputEventAdapterSchema;\n+\n+    public abstract String getType();\n+\n+    public abstract List<String> getSupportedMessageFormats();\n+\n+    public abstract List<Property> getStaticPropertyList();\n+\n+    public abstract List<Property> getDynamicPropertyList();\n+\n+    public abstract OutputEventAdapter createEventAdapter(OutputEventAdapterConfiguration eventAdapterConfiguration, Map<String, String> globalProperties);\n+\n+    public OutputEventAdapterSchema getOutputEventAdapterSchema() {\n+        if (outputEventAdapterSchema == null) {\n+            outputEventAdapterSchema = new OutputEventAdapterSchema(getType(), getSupportedMessageFormats(), getStaticPropertyList(), getDynamicPropertyList());\n+        }\n+        return outputEventAdapterSchema;\n+    }\n+\n+}"
        },
        {
            "sha": "00c89cc171f966e014aeb1604223f09ed9a42f6f",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/OutputEventAdapterSchema.java",
            "status": "added",
            "additions": 53,
            "deletions": 0,
            "changes": 53,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterSchema.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterSchema.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterSchema.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+import java.util.List;\n+\n+/**\n+ * this class is used to transfer the event adapter type details to the UI. UI renders the\n+ * properties according to the properties specified here.\n+ */\n+public class OutputEventAdapterSchema {\n+\n+    private final String type;\n+    private final List<String> supportedMessageFormats;\n+    private final List<Property> staticPropertyList;\n+    private final List<Property> dynamicPropertyList;\n+\n+    public OutputEventAdapterSchema(String type, List<String> supportedMessageFormats, List<Property> staticPropertyList, List<Property> dynamicPropertyList) {\n+        this.type = type;\n+        this.supportedMessageFormats = supportedMessageFormats;\n+        this.staticPropertyList = staticPropertyList;\n+        this.dynamicPropertyList = dynamicPropertyList;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public List<String> getSupportedMessageFormats() {\n+        return supportedMessageFormats;\n+    }\n+\n+    public List<Property> getStaticPropertyList() {\n+        return staticPropertyList;\n+    }\n+\n+    public List<Property> getDynamicPropertyList() {\n+        return dynamicPropertyList;\n+    }\n+\n+}"
        },
        {
            "sha": "db7d4e60e365edf1f509ea78dd1ee96ec9d64091",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/OutputEventAdapterService.java",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FOutputEventAdapterService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+\n+import org.wso2.carbon.event.output.adapter.core.exception.OutputEventAdapterException;\n+import org.wso2.carbon.event.output.adapter.core.exception.TestConnectionNotSupportedException;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * OSGI interface for the EventAdapter Service\n+ */\n+\n+public interface OutputEventAdapterService {\n+\n+\n+    /**\n+     * this method returns all the available event adapter types. UI use this details to\n+     * show the types and the properties to be set to the user when creating the\n+     * event adapter objects.\n+     *\n+     * @return list of available types\n+     */\n+    List<String> getOutputEventAdapterTypes();\n+\n+    /**\n+     * This method returns the event adapter dto for a specific event adapter type\n+     *\n+     * @param eventAdapterType\n+     * @return\n+     */\n+    OutputEventAdapterSchema getOutputEventAdapterSchema(String eventAdapterType);\n+\n+\n+    void create(OutputEventAdapterConfiguration outputEventAdapterConfiguration) throws OutputEventAdapterException;\n+\n+    /**\n+     * publishes the message using the given event adapter to the given topic.\n+     *  @param name              - name of the event adapter\n+     * @param dynamicProperties\n+     */\n+    void publish(String name, Map<String, String> dynamicProperties, Object message);\n+\n+    /**\n+     * publish testConnect message using the given event adapter.\n+     *\n+     * @param outputEventAdapterConfiguration - Configuration Details of the event adapter\n+     */\n+    void testConnection(OutputEventAdapterConfiguration outputEventAdapterConfiguration) throws OutputEventAdapterException, TestConnectionNotSupportedException;\n+\n+    void destroy(String name);\n+}"
        },
        {
            "sha": "7e1d5f6dd2da114596799e7d6fcc03a89caa70a2",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/Property.java",
            "status": "added",
            "additions": 91,
            "deletions": 0,
            "changes": 91,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FProperty.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FProperty.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2FProperty.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core;\n+\n+/**\n+ * Event Adapter property details are stored\n+ */\n+public class Property {\n+\n+    private final String propertyName;\n+    // property is a required field or not\n+    private boolean isRequired = false;\n+    // property is a password field or not\n+    private boolean isSecured = false;\n+    // display name in ui\n+    private String displayName;\n+    // default value of the property\n+    private String defaultValue;\n+    // in out type of the property\n+    private String[] options;\n+    // hint for the property\n+    private String hint;\n+\n+    public String[] getOptions() {\n+        return options;\n+    }\n+\n+    public void setOptions(String[] options) {\n+        this.options = options;\n+    }\n+\n+    public String getHint() {\n+        return hint;\n+    }\n+\n+    public void setHint(String hint) {\n+        this.hint = hint;\n+    }\n+\n+    public String getDefaultValue() {\n+        return defaultValue;\n+    }\n+\n+    public void setDefaultValue(String defaultValue) {\n+        this.defaultValue = defaultValue;\n+    }\n+\n+    public Property(String propertyName) {\n+        this.propertyName = propertyName;\n+    }\n+\n+    public void setRequired(boolean required) {\n+        isRequired = required;\n+    }\n+\n+    public void setSecured(boolean secured) {\n+        isSecured = secured;\n+    }\n+\n+    public String getPropertyName() {\n+        return propertyName;\n+    }\n+\n+    public boolean isRequired() {\n+        return isRequired;\n+    }\n+\n+    public boolean isSecured() {\n+        return isSecured;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public void setDisplayName(String displayName) {\n+        this.displayName = displayName;\n+    }\n+}"
        },
        {
            "sha": "9874c653d103683dd5edacb3f8a143a595c7e919",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/exception/ConnectionUnavailableException.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FConnectionUnavailableException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FConnectionUnavailableException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FConnectionUnavailableException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.core.exception;\n+\n+public class ConnectionUnavailableException extends OutputEventAdapterRuntimeException {\n+    public ConnectionUnavailableException() {\n+    }\n+\n+    public ConnectionUnavailableException(String message) {\n+        super(message);\n+    }\n+\n+    public ConnectionUnavailableException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public ConnectionUnavailableException(Throwable cause) {\n+        super(cause);\n+    }\n+\n+}"
        },
        {
            "sha": "ec50e91bd7d5688fd91713e2d0c6a9d0aea8fa09",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/exception/OutputEventAdapterException.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core.exception;\n+\n+public class OutputEventAdapterException extends Exception {\n+    public OutputEventAdapterException() {\n+    }\n+\n+    public OutputEventAdapterException(String message) {\n+        super(message);\n+    }\n+\n+    public OutputEventAdapterException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public OutputEventAdapterException(Throwable cause) {\n+        super(cause);\n+    }\n+\n+}"
        },
        {
            "sha": "3520497fdec63f23fde5bfcac03931ec715d14d8",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/exception/OutputEventAdapterRuntimeException.java",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterRuntimeException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterRuntimeException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FOutputEventAdapterRuntimeException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package org.wso2.carbon.event.output.adapter.core.exception;\n+\n+public class OutputEventAdapterRuntimeException extends RuntimeException {\n+    public OutputEventAdapterRuntimeException() {\n+    }\n+\n+    public OutputEventAdapterRuntimeException(String message) {\n+        super(message);\n+    }\n+\n+    public OutputEventAdapterRuntimeException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public OutputEventAdapterRuntimeException(Throwable cause) {\n+        super(cause);\n+    }\n+\n+}"
        },
        {
            "sha": "396b1dfe2e32431a22a4ed883621f5761bebf3e3",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/exception/TestConnectionNotSupportedException.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FTestConnectionNotSupportedException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FTestConnectionNotSupportedException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Fexception%2FTestConnectionNotSupportedException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837",
            "patch": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2005 - 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy\n+ * of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed\n+ * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n+ * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package org.wso2.carbon.event.output.adapter.core.exception;\n+\n+/**\n+ * this class represents the message processing time issues\n+ */\n+public class TestConnectionNotSupportedException extends Exception {\n+\n+    public TestConnectionNotSupportedException() {\n+    }\n+\n+    public TestConnectionNotSupportedException(String message) {\n+        super(message);\n+    }\n+\n+    public TestConnectionNotSupportedException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public TestConnectionNotSupportedException(Throwable cause) {\n+        super(cause);\n+    }\n+}"
        },
        {
            "sha": "3022be2b7a8da1e2dce2bf58df65f86fd3f32555",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/CarbonOutputEventAdapterService.java",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FCarbonOutputEventAdapterService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FCarbonOutputEventAdapterService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FCarbonOutputEventAdapterService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "2fa6ad2f463e74d9c511307c6b89f0b0f8e5acd9",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/DecayTimer.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FDecayTimer.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FDecayTimer.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FDecayTimer.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7c66312a5c192690fda63a1a6fc78b764b722f86",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/EventAdapterConstants.java",
            "status": "added",
            "additions": 25,
            "deletions": 0,
            "changes": 25,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FEventAdapterConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FEventAdapterConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FEventAdapterConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "28f33649e8b734053828ac2ce781b7e67d26d4db",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/OutputAdapterRuntime.java",
            "status": "added",
            "additions": 127,
            "deletions": 0,
            "changes": 127,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FOutputAdapterRuntime.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FOutputAdapterRuntime.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2FOutputAdapterRuntime.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "ef1fd187beec1a1d1f1f79cc1f70b59dd05ea4cf",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/config/AdapterConfig.java",
            "status": "added",
            "additions": 69,
            "deletions": 0,
            "changes": 69,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfig.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfig.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfig.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "d45fea727865286f86dc7e4a14ff731b5e747b35",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/config/AdapterConfigs.java",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfigs.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfigs.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FAdapterConfigs.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "dab783fdabd1ac32a4c5ee584057306e10338a59",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/config/Property.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FProperty.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FProperty.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fconfig%2FProperty.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "4bb648b24d2ea37a01128e25f0d72bd83bbac598",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/ds/OutputEventAdapterServiceDS.java",
            "status": "added",
            "additions": 136,
            "deletions": 0,
            "changes": 136,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "653fa04009d78af407053fc5874f622ceddcf346",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/main/java/org/wso2/carbon/event/output/adapter/core/internal/ds/OutputEventAdapterServiceValueHolder.java",
            "status": "added",
            "additions": 74,
            "deletions": 0,
            "changes": 74,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Foutput%2Fadapter%2Fcore%2Finternal%2Fds%2FOutputEventAdapterServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "4259b8c4d125b8432133aa1377b6e640b681217a",
            "filename": "components/event-publisher/org.wso2.carbon.event.output.adapter.core/src/test/resources/output-event-adapters.xml",
            "status": "added",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.output.adapter.core%2Fsrc%2Ftest%2Fresources%2Foutput-event-adapters.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "5d9b6ef4efe3851c5ef51a5bb008333ac2b4923e",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/pom.xml",
            "status": "added",
            "additions": 94,
            "deletions": 0,
            "changes": 94,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "ca592d525733437cd03eaecac95c74b9a607e453",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/BasicOutputAdapterPropertyDto.java",
            "status": "added",
            "additions": 60,
            "deletions": 0,
            "changes": 60,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FBasicOutputAdapterPropertyDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FBasicOutputAdapterPropertyDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FBasicOutputAdapterPropertyDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "d6bbcc724dd84c0103c5d2fe071086ac562d66d8",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/DetailOutputAdapterPropertyDto.java",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FDetailOutputAdapterPropertyDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FDetailOutputAdapterPropertyDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FDetailOutputAdapterPropertyDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "391437fc5750f77d93a17fe6a5d010a20a09c16e",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/EventMappingPropertyDto.java",
            "status": "added",
            "additions": 75,
            "deletions": 0,
            "changes": 75,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventMappingPropertyDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventMappingPropertyDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventMappingPropertyDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c9cdba90a0d68e1af817223d119dae7fde919875",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/EventPublisherAdminService.java",
            "status": "added",
            "additions": 925,
            "deletions": 0,
            "changes": 925,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherAdminService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherAdminService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherAdminService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "a9c4e70845f7610dcfff9514c025aeaac2c9f52d",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/EventPublisherConfigurationDto.java",
            "status": "added",
            "additions": 130,
            "deletions": 0,
            "changes": 130,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6b0d113e4ff009829146e384145b46fc92aefecb",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/EventPublisherConfigurationFileDto.java",
            "status": "added",
            "additions": 55,
            "deletions": 0,
            "changes": 55,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationFileDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationFileDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationFileDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "190540396205e08bf974cab4c198436a6503b4b0",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/EventPublisherConfigurationInfoDto.java",
            "status": "added",
            "additions": 86,
            "deletions": 0,
            "changes": 86,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationInfoDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationInfoDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FEventPublisherConfigurationInfoDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c185f76db30e14d17a90be118f952586b29a5d09",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/JSONOutputMappingDto.java",
            "status": "added",
            "additions": 42,
            "deletions": 0,
            "changes": 42,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FJSONOutputMappingDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FJSONOutputMappingDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FJSONOutputMappingDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "f255980a669cef884b070693e33edbbc398df4a2",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/MapOutputMappingDto.java",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FMapOutputMappingDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FMapOutputMappingDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FMapOutputMappingDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "f9bbfddc19e5b052d26148a81ab67968ae4ea51c",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/OutputAdapterConfigurationDto.java",
            "status": "added",
            "additions": 60,
            "deletions": 0,
            "changes": 60,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FOutputAdapterConfigurationDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FOutputAdapterConfigurationDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FOutputAdapterConfigurationDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "2efb1c53daf64ae7c517e66641cc0b9154537d3d",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/TextOutputMappingDto.java",
            "status": "added",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FTextOutputMappingDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FTextOutputMappingDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FTextOutputMappingDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "f5fcfb2753f5f9d02296678adceabff2a1f28219",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/WSO2EventOutputMappingDto.java",
            "status": "added",
            "additions": 58,
            "deletions": 0,
            "changes": 58,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FWSO2EventOutputMappingDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FWSO2EventOutputMappingDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FWSO2EventOutputMappingDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7bb8582462a7c0943d03e47de4d6b01d8a3cca6e",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/XMLOutputMappingDto.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FXMLOutputMappingDto.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FXMLOutputMappingDto.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2FXMLOutputMappingDto.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "4733d7c4702b4c983c69c0ce9dddb11477c4cfd1",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/internal/PropertyAttributeTypeConstants.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2FPropertyAttributeTypeConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2FPropertyAttributeTypeConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2FPropertyAttributeTypeConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c610176f805322fe09fff345cd054d33e1a657ab",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/internal/ds/EventPublisherAdminServiceDS.java",
            "status": "added",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "37ada8345ff71f0308a60c56feca12bfee93e971",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/java/org/wso2/carbon/event/publisher/admin/internal/ds/EventPublisherAdminServiceValueHolder.java",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fadmin%2Finternal%2Fds%2FEventPublisherAdminServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "1c428809c70ad4cdbc7596e59a6da0604ed0478a",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.admin/src/main/resources/META-INF/services.xml",
            "status": "added",
            "additions": 149,
            "deletions": 0,
            "changes": 149,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.admin%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "dd277cd75e5e78b9020cd770d97ae46591e9763f",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/pom.xml",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "cd68e7f48e89e5424ae25c4701a129b0d12b16d9",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/EventPublisherDeployer.java",
            "status": "added",
            "additions": 265,
            "deletions": 0,
            "changes": 265,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherDeployer.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherDeployer.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherDeployer.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "902d9ebb7e0493ac33ce9acbd7e892df25b6dcf6",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/EventPublisherService.java",
            "status": "added",
            "additions": 182,
            "deletions": 0,
            "changes": 182,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventPublisherService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "874729ff32675fde03854d6c3ae4603bdcd75ea2",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/EventStreamListenerImpl.java",
            "status": "added",
            "additions": 53,
            "deletions": 0,
            "changes": 53,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventStreamListenerImpl.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventStreamListenerImpl.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2FEventStreamListenerImpl.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "08560a96e016f6893c111ceb12b27cceecff0356",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/EventOutputProperty.java",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventOutputProperty.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventOutputProperty.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventOutputProperty.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "b1e9e2f1725320d62f9a7c5ca06b41f0b4bce276",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/EventPublisherConfiguration.java",
            "status": "added",
            "additions": 105,
            "deletions": 0,
            "changes": 105,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfiguration.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfiguration.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfiguration.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6cef714d27bacf71617c9acc00f6f5bcd8f173f0",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/EventPublisherConfigurationFile.java",
            "status": "added",
            "additions": 97,
            "deletions": 0,
            "changes": 97,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfigurationFile.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfigurationFile.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConfigurationFile.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6cb4f4542fc1cbd6c14a8bca246c1b7d2fa36d4f",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/EventPublisherConstants.java",
            "status": "added",
            "additions": 104,
            "deletions": 0,
            "changes": 104,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FEventPublisherConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7f3b74a7430c956fd380fbee9592e249159c84b2",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/OutputMapperFactory.java",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "8556fbaf0e1db8cbff8299ff6d817e1435552979",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/OutputMapping.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2FOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "85ead90d2c4d43516327877e07ee425d96ae5c63",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/mapping/JSONOutputMapping.java",
            "status": "added",
            "additions": 47,
            "deletions": 0,
            "changes": 47,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FJSONOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FJSONOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FJSONOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7aed6c10e4403102a05dacfa569bdd062d40d64c",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/mapping/MapOutputMapping.java",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FMapOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FMapOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FMapOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "27c41c300ecdcad9f0744b3ca036e95cb1677fd0",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/mapping/TextOutputMapping.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FTextOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FTextOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FTextOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "fc79f9a5ca0b17ccae6a538f71b6e9da79967da7",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/mapping/WSO2EventOutputMapping.java",
            "status": "added",
            "additions": 83,
            "deletions": 0,
            "changes": 83,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FWSO2EventOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FWSO2EventOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FWSO2EventOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "257e3d887bddc9af2db5859916af5a71d381b498",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/config/mapping/XMLOutputMapping.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FXMLOutputMapping.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FXMLOutputMapping.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fconfig%2Fmapping%2FXMLOutputMapping.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "46e34984b5442475eef67bf7996437fcbfc8e8a9",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/exception/EventPublisherConfigurationException.java",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherConfigurationException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherConfigurationException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherConfigurationException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "9a5e8ed9c2f26c4e8e310b76a44a4d4919be4dd1",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/exception/EventPublisherProcessingException.java",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherProcessingException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherProcessingException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherProcessingException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6850732657d59a547ef371b85d6472efff0acf25",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/exception/EventPublisherStreamValidationException.java",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherStreamValidationException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherStreamValidationException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherStreamValidationException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "e0a61b72ed61fc3f8cb7ebf09daa5d9bf0e0affa",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/exception/EventPublisherValidationException.java",
            "status": "added",
            "additions": 32,
            "deletions": 0,
            "changes": 32,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherValidationException.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherValidationException.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Fexception%2FEventPublisherValidationException.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "8e936d4e7ea3a80023d4aa9863b238102dd45dbf",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/CarbonEventPublisherService.java",
            "status": "added",
            "additions": 613,
            "deletions": 0,
            "changes": 613,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "a152fa4a3aacf3a9f5ff7b1673e23d017beba673",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/EventPublisher.java",
            "status": "added",
            "additions": 242,
            "deletions": 0,
            "changes": 242,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FEventPublisher.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FEventPublisher.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FEventPublisher.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "65d9acb9ed2f2d3394cd8f5a96ae5de6a166a2a0",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/OutputMapper.java",
            "status": "added",
            "additions": 25,
            "deletions": 0,
            "changes": 25,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7a456c5fe64cc4429bd31521e02159f16b55f103",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/build/Axis2ConfigurationContextObserverImpl.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fbuild%2FAxis2ConfigurationContextObserverImpl.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fbuild%2FAxis2ConfigurationContextObserverImpl.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fbuild%2FAxis2ConfigurationContextObserverImpl.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "a3fc1f33f55741097d1ff6bd10750305ee05596d",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/ds/EventPublisherServiceDS.java",
            "status": "added",
            "additions": 164,
            "deletions": 0,
            "changes": 164,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceDS.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceDS.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceDS.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "cf6d763baa1fc7e40b3ac9239f52af740414c529",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/ds/EventPublisherServiceValueHolder.java",
            "status": "added",
            "additions": 122,
            "deletions": 0,
            "changes": 122,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceValueHolder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceValueHolder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Fds%2FEventPublisherServiceValueHolder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "2cc110105629398edd43586cfb496b4c0bafbbd2",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/json/JSONOutputMapper.java",
            "status": "added",
            "additions": 186,
            "deletions": 0,
            "changes": 186,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "cc0508ced63654b8797999feddddec9969289073",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/json/JSONOutputMapperConfigurationBuilder.java",
            "status": "added",
            "additions": 134,
            "deletions": 0,
            "changes": 134,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c826cd8a84a891a774b4695cea3b7738e540b25e",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/json/JSONOutputMapperFactory.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fjson%2FJSONOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "88ad7ca8a052c23f61a01ba8035357a19754814c",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/map/MapOutputMapper.java",
            "status": "added",
            "additions": 120,
            "deletions": 0,
            "changes": 120,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "66b144157dd0e9feb2c457533d9e65bd63d05d40",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/map/MapOutputMapperConfigurationBuilder.java",
            "status": "added",
            "additions": 154,
            "deletions": 0,
            "changes": 154,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "ef33618299da17af0fc50a8a6dfe6a12ef10bdb4",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/map/MapOutputMapperFactory.java",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fmap%2FMapOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "1cc448f855d421c4b3926541e504c5cc3c62a840",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/text/TextOutputMapper.java",
            "status": "added",
            "additions": 169,
            "deletions": 0,
            "changes": 169,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "0e5964fa733f065dbe398483e44572e85d7051ec",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/text/TextOutputMapperConfigurationBuilder.java",
            "status": "added",
            "additions": 134,
            "deletions": 0,
            "changes": 134,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "73d9685a0fd55f16f28c65559133785a4d751ebe",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/text/TextOutputMapperFactory.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Ftext%2FTextOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "f5b6464f39542453006bf595f2fdd93e9429db2d",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/wso2event/WSO2EventOutputMapper.java",
            "status": "added",
            "additions": 234,
            "deletions": 0,
            "changes": 234,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "7467b2c27175919036ea50e9fb161e3544214a87",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/wso2event/WSO2EventOutputMapperConfigurationBuilder.java",
            "status": "added",
            "additions": 232,
            "deletions": 0,
            "changes": 232,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "118ed2565d95e6089d70aec57610092d35b9c937",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/wso2event/WSO2EventOutputMapperFactory.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fwso2event%2FWSO2EventOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6dff840ad8cbac5686b7a4146a79fb9178e4bcb6",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/xml/XMLOutputMapper.java",
            "status": "added",
            "additions": 216,
            "deletions": 0,
            "changes": 216,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "f216fa277e0f766376750a88040c439046519275",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/xml/XMLOutputMapperConfigurationBuilder.java",
            "status": "added",
            "additions": 158,
            "deletions": 0,
            "changes": 158,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "aba0f38714a120765e082e017d0a272736493b46",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/type/xml/XMLOutputMapperFactory.java",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperFactory.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperFactory.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Ftype%2Fxml%2FXMLOutputMapperFactory.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "e9eaa752bd4f068b91b2cf9c304aa0194eed280b",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/EventPublisherConfigurationBuilder.java",
            "status": "added",
            "additions": 299,
            "deletions": 0,
            "changes": 299,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherConfigurationBuilder.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherConfigurationBuilder.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherConfigurationBuilder.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "9eaf6d1880a4d635f903a8bb3981371b17fcfdd7",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/EventPublisherUtil.java",
            "status": "added",
            "additions": 80,
            "deletions": 0,
            "changes": 80,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "aaff7fc3ad80e40de3a8b82502286f52a7bf2714",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/helper/EventPublisherConfigurationFilesystemInvoker.java",
            "status": "added",
            "additions": 191,
            "deletions": 0,
            "changes": 191,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationFilesystemInvoker.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationFilesystemInvoker.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationFilesystemInvoker.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "de397db907970cb5f823ad267074f36442940e42",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/helper/EventPublisherConfigurationHelper.java",
            "status": "added",
            "additions": 269,
            "deletions": 0,
            "changes": 269,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationHelper.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationHelper.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FEventPublisherConfigurationHelper.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "05c73133f50b20270d617d5eabf9ecda244ed15c",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/helper/XmlFormatter.java",
            "status": "added",
            "additions": 80,
            "deletions": 0,
            "changes": 80,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FXmlFormatter.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FXmlFormatter.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2Fhelper%2FXmlFormatter.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "d01aedc57f6008364cacea22cb66f90ebd7ea2a4",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "6ba4655242ccff380ddecf5d9cebb13c1184ac7b",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/test/resources/FaultSampleEventPublisher.xml",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FFaultSampleEventPublisher.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FFaultSampleEventPublisher.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FFaultSampleEventPublisher.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "d1acac1624afd342ba0a6911d10f1ff94a7a0e6c",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/test/resources/SampleEventPublisher.xml",
            "status": "added",
            "additions": 18,
            "deletions": 0,
            "changes": 18,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FSampleEventPublisher.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FSampleEventPublisher.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Ftest%2Fresources%2FSampleEventPublisher.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "decb443e5aa854d0d18c4fbf231e1bba03412fca",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/pom.xml",
            "status": "added",
            "additions": 90,
            "deletions": 0,
            "changes": 90,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fpom.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fpom.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "8faa949453ca220e3872b3e6fe9c478a8c4f4583",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/java/org/wso2/carbon/event/publisher/ui/EventPublisherUIConstants.java",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIConstants.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIConstants.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIConstants.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "dec19c0371c159173ff189e1f4799a22fe88f7ab",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/java/org/wso2/carbon/event/publisher/ui/EventPublisherUIUtils.java",
            "status": "added",
            "additions": 101,
            "deletions": 0,
            "changes": 101,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIUtils.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIUtils.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2FEventPublisherUIUtils.java?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "400596eb3ffd3b2640363b62ed332d65e5cc76e1",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/META-INF/component.xml",
            "status": "added",
            "additions": 44,
            "deletions": 0,
            "changes": 44,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcomponent.xml?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c2df1a2ace073ac6ed642559b4316b14f08e9352",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/org/wso2/carbon/event/publisher/ui/i18n/Resources.properties",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2Fi18n%2FResources.properties",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2Fi18n%2FResources.properties",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fui%2Fi18n%2FResources.properties?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "73c6669a3356bb0731d8622a84a9780e8631c65f",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/add_event_publisher_ajaxprocessor.jsp",
            "status": "added",
            "additions": 190,
            "deletions": 0,
            "changes": 190,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fadd_event_publisher_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fadd_event_publisher_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fadd_event_publisher_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "c4c23881e2a144ac29c1ae885755ec3c5e53a7a8",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/create_event_publisher.jsp",
            "status": "added",
            "additions": 842,
            "deletions": 0,
            "changes": 842,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcreate_event_publisher.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcreate_event_publisher.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcreate_event_publisher.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "1a0ff40d668b8c51684858101a3aba9895ebabbb",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/css/dsxmleditor.css",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Fdsxmleditor.css",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Fdsxmleditor.css",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Fdsxmleditor.css?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "ce00a1ca92aa94270dbefae78a7d02d6d2483df7",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/css/eventPublisher.css",
            "status": "added",
            "additions": 128,
            "deletions": 0,
            "changes": 128,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2FeventPublisher.css",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2FeventPublisher.css",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2FeventPublisher.css?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "8c7b8baf0debe3fa146dec44a89fde56d5c8ff94",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/css/tree-styles.css",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Ftree-styles.css",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Ftree-styles.css",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fcss%2Ftree-styles.css?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "44c7a171590f89593d21e13f09ef5ed21c3e6b6f",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/docs/userguide.html",
            "status": "added",
            "additions": 145,
            "deletions": 0,
            "changes": 145,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fdocs%2Fuserguide.html",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fdocs%2Fuserguide.html",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fdocs%2Fuserguide.html?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "b5d891a9de5a125c6cc812aa2b302ad04be0709b",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/edit_event_publisher_ajaxprocessor.jsp",
            "status": "added",
            "additions": 47,
            "deletions": 0,
            "changes": 47,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "d60ea5db402b6022c49d4a0831ffcd9ca217a5c3",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/edit_event_publisher_details.jsp",
            "status": "added",
            "additions": 244,
            "deletions": 0,
            "changes": 244,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_details.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_details.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fedit_event_publisher_details.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "65ce6ab005e76246e2dfa65c069591aec3baec11",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/eventPublisher_details.jsp",
            "status": "added",
            "additions": 739,
            "deletions": 0,
            "changes": 739,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2FeventPublisher_details.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2FeventPublisher_details.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2FeventPublisher_details.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "a1797cc818c5221bcd1168c9b3cdd98a61292479",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/get_active_event_publishers_ajaxprocessor.jsp",
            "status": "added",
            "additions": 36,
            "deletions": 0,
            "changes": 36,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_active_event_publishers_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_active_event_publishers_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_active_event_publishers_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "cb622ddf29282bc9629efe67f139440b2153d5b3",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/get_adapter_properties_ajaxprocessor.jsp",
            "status": "added",
            "additions": 37,
            "deletions": 0,
            "changes": 37,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_adapter_properties_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_adapter_properties_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_adapter_properties_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "509c61a6a1025394714fc0322d881e3f6de0f1b8",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/get_mappings_ajaxprocessor.jsp",
            "status": "added",
            "additions": 32,
            "deletions": 0,
            "changes": 32,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_mappings_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_mappings_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_mappings_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "97ffb3e133aaf765ab9225c03710ea04b980bb88",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/get_streamdefinition_ajaxprocessor.jsp",
            "status": "added",
            "additions": 66,
            "deletions": 0,
            "changes": 66,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_streamdefinition_ajaxprocessor.jsp",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_streamdefinition_ajaxprocessor.jsp",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fget_streamdefinition_ajaxprocessor.jsp?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "4bfdd7983ecbb7e4207daf7b698159207d208d4e",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/images/add.gif",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fadd.gif",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fadd.gif",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fadd.gif?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "b657c80f80941297a64dbe686911327d661d2a56",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/images/agentTransportAdaptor.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2FagentTransportAdaptor.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2FagentTransportAdaptor.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2FagentTransportAdaptor.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "b1afa6260250a504add788b0ebfe6fe41757ba2f",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/images/bucket.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fbucket.png",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fbucket.png",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fbucket.png?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "64c2310086ffe6e281c36e3cb28390d43be13ec4",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/images/design-view.gif",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fdesign-view.gif",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fdesign-view.gif",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fdesign-view.gif?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        },
        {
            "sha": "90bd4dce695dffa491f2c9977c6d30a31ba77740",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.ui/src/main/resources/web/eventpublisher/images/edit.gif",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fedit.gif",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/7f9e44c0ee709f80badb39bb32c1de386a05f837/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fedit.gif",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.ui%2Fsrc%2Fmain%2Fresources%2Fweb%2Feventpublisher%2Fimages%2Fedit.gif?ref=7f9e44c0ee709f80badb39bb32c1de386a05f837"
        }
    ]
}