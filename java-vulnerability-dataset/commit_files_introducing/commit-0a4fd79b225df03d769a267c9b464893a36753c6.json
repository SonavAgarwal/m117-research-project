{
    "sha": "0a4fd79b225df03d769a267c9b464893a36753c6",
    "node_id": "MDY6Q29tbWl0MTExMjU1ODk6MGE0ZmQ3OWIyMjVkZjAzZDc2OWEyNjdjOWI0NjQ4OTNhMzY3NTNjNg==",
    "commit": {
        "author": {
            "name": "pedroigor",
            "email": "pigor.craveiro@gmail.com",
            "date": "2018-02-16T18:14:32Z"
        },
        "committer": {
            "name": "pedroigor",
            "email": "pigor.craveiro@gmail.com",
            "date": "2018-03-09T13:56:35Z"
        },
        "message": "[KEYCLOAK-6116] - Get email attribute from 'subject alternative name' using X509 certificate",
        "tree": {
            "sha": "cb10e237bd2032a793e8313894e6bd42e411c3dc",
            "url": "https://api.github.com/repos/keycloak/keycloak/git/trees/cb10e237bd2032a793e8313894e6bd42e411c3dc"
        },
        "url": "https://api.github.com/repos/keycloak/keycloak/git/commits/0a4fd79b225df03d769a267c9b464893a36753c6",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/keycloak/keycloak/commits/0a4fd79b225df03d769a267c9b464893a36753c6",
    "html_url": "https://github.com/keycloak/keycloak/commit/0a4fd79b225df03d769a267c9b464893a36753c6",
    "comments_url": "https://api.github.com/repos/keycloak/keycloak/commits/0a4fd79b225df03d769a267c9b464893a36753c6/comments",
    "author": {
        "login": "pedroigor",
        "id": 1143437,
        "node_id": "MDQ6VXNlcjExNDM0Mzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1143437?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pedroigor",
        "html_url": "https://github.com/pedroigor",
        "followers_url": "https://api.github.com/users/pedroigor/followers",
        "following_url": "https://api.github.com/users/pedroigor/following{/other_user}",
        "gists_url": "https://api.github.com/users/pedroigor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pedroigor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pedroigor/subscriptions",
        "organizations_url": "https://api.github.com/users/pedroigor/orgs",
        "repos_url": "https://api.github.com/users/pedroigor/repos",
        "events_url": "https://api.github.com/users/pedroigor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pedroigor/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "pedroigor",
        "id": 1143437,
        "node_id": "MDQ6VXNlcjExNDM0Mzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1143437?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pedroigor",
        "html_url": "https://github.com/pedroigor",
        "followers_url": "https://api.github.com/users/pedroigor/followers",
        "following_url": "https://api.github.com/users/pedroigor/following{/other_user}",
        "gists_url": "https://api.github.com/users/pedroigor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pedroigor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pedroigor/subscriptions",
        "organizations_url": "https://api.github.com/users/pedroigor/orgs",
        "repos_url": "https://api.github.com/users/pedroigor/repos",
        "events_url": "https://api.github.com/users/pedroigor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pedroigor/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "b29edc70562fc2c72104f7adeb46fd61f7d38460",
            "url": "https://api.github.com/repos/keycloak/keycloak/commits/b29edc70562fc2c72104f7adeb46fd61f7d38460",
            "html_url": "https://github.com/keycloak/keycloak/commit/b29edc70562fc2c72104f7adeb46fd61f7d38460"
        }
    ],
    "stats": {
        "total": 67,
        "additions": 67,
        "deletions": 0
    },
    "files": [
        {
            "sha": "742454ed37672004f68a982ac22d6adc8cb7ad2b",
            "filename": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticator.java",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https://github.com/keycloak/keycloak/blob/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticator.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticator.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticator.java?ref=0a4fd79b225df03d769a267c9b464893a36753c6",
            "patch": "@@ -57,6 +57,7 @@ public abstract class AbstractX509ClientCertificateAuthenticator implements Auth\n     public static final String MAPPING_SOURCE_SELECTION = \"x509-cert-auth.mapping-source-selection\";\n     public static final String MAPPING_SOURCE_CERT_SUBJECTDN = \"Match SubjectDN using regular expression\";\n     public static final String MAPPING_SOURCE_CERT_SUBJECTDN_EMAIL = \"Subject's e-mail\";\n+    public static final String MAPPING_SOURCE_CERT_SUBJECTALTNAME_EMAIL = \"Subject's Alternative Name E-mail\";\n     public static final String MAPPING_SOURCE_CERT_SUBJECTDN_CN = \"Subject's Common Name\";\n     public static final String MAPPING_SOURCE_CERT_ISSUERDN = \"Match IssuerDN using regular expression\";\n     public static final String MAPPING_SOURCE_CERT_ISSUERDN_EMAIL = \"Issuer's e-mail\";\n@@ -146,6 +147,9 @@ static UserIdentityExtractor fromConfig(X509AuthenticatorConfigModel config) {\n                             .either(UserIdentityExtractor.getX500NameExtractor(BCStyle.EmailAddress, subject))\n                             .or(UserIdentityExtractor.getX500NameExtractor(BCStyle.E, subject));\n                     break;\n+                case SUBJECTALTNAME_EMAIL:\n+                    extractor = UserIdentityExtractor.getSubjectAltNameExtractor(1);\n+                    break;\n                 case ISSUERDN_CN:\n                     extractor = UserIdentityExtractor.getX500NameExtractor(BCStyle.CN, issuer);\n                     break;"
        },
        {
            "sha": "29af551a758c1e7fbe6b07f6b9551f975c09e6b6",
            "filename": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java",
            "status": "modified",
            "additions": 2,
            "deletions": 0,
            "changes": 2,
            "blob_url": "https://github.com/keycloak/keycloak/blob/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticatorFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticatorFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FAbstractX509ClientCertificateAuthenticatorFactory.java?ref=0a4fd79b225df03d769a267c9b464893a36753c6",
            "patch": "@@ -43,6 +43,7 @@\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_ISSUERDN_CN;\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_ISSUERDN_EMAIL;\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_SERIALNUMBER;\n+import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_SUBJECTALTNAME_EMAIL;\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_SUBJECTDN;\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_SUBJECTDN_CN;\n import static org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator.MAPPING_SOURCE_CERT_SUBJECTDN_EMAIL;\n@@ -68,6 +69,7 @@ public abstract class AbstractX509ClientCertificateAuthenticatorFactory implemen\n     private static final String[] mappingSources = {\n             MAPPING_SOURCE_CERT_SUBJECTDN,\n             MAPPING_SOURCE_CERT_SUBJECTDN_EMAIL,\n+            MAPPING_SOURCE_CERT_SUBJECTALTNAME_EMAIL,\n             MAPPING_SOURCE_CERT_SUBJECTDN_CN,\n             MAPPING_SOURCE_CERT_ISSUERDN,\n             MAPPING_SOURCE_CERT_ISSUERDN_EMAIL,"
        },
        {
            "sha": "881fdb7671e8c01e5c9f6bc076ef98c520f60b72",
            "filename": "services/src/main/java/org/keycloak/authentication/authenticators/x509/UserIdentityExtractor.java",
            "status": "modified",
            "additions": 60,
            "deletions": 0,
            "changes": 60,
            "blob_url": "https://github.com/keycloak/keycloak/blob/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FUserIdentityExtractor.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FUserIdentityExtractor.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FUserIdentityExtractor.java?ref=0a4fd79b225df03d769a267c9b464893a36753c6",
            "patch": "@@ -25,7 +25,11 @@\n import org.bouncycastle.asn1.x500.style.IETFUtils;\n import org.keycloak.services.ServicesLogger;\n \n+import java.security.cert.CertificateParsingException;\n import java.security.cert.X509Certificate;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -92,6 +96,52 @@ public Object extractUserIdentity(X509Certificate[] certs) {\n         }\n     }\n \n+    /**\n+     * Extracts the subject identifier from the subjectAltName extension.\n+     */\n+    static class SubjectAltNameExtractor extends UserIdentityExtractor {\n+\n+        private final int generalName;\n+\n+        /**\n+         * Creates a new instance\n+         *\n+         * @param generalName an integer representing the general name. See {@link X509Certificate#getSubjectAlternativeNames()}\n+         */\n+        SubjectAltNameExtractor(int generalName) {\n+            this.generalName = generalName;\n+        }\n+\n+        @Override\n+        public Object extractUserIdentity(X509Certificate[] certs) {\n+            if (certs == null || certs.length == 0) {\n+                throw new IllegalArgumentException();\n+            }\n+\n+            try {\n+                Collection<List<?>> subjectAlternativeNames = certs[0].getSubjectAlternativeNames();\n+\n+                if (subjectAlternativeNames == null) {\n+                    return null;\n+                }\n+\n+                Iterator<List<?>> iterator = subjectAlternativeNames.iterator();\n+\n+                while (iterator.hasNext()) {\n+                    List<?> next = iterator.next();\n+\n+                    if (Integer.class.cast(next.get(0)) == generalName) {\n+                        return next.get(1);\n+                    }\n+                }\n+            } catch (CertificateParsingException cause) {\n+                logger.errorf(cause, \"Failed to obtain identity from subjectAltName extension\");\n+            }\n+\n+            return null;\n+        }\n+    }\n+\n     static class PatternMatcher extends UserIdentityExtractor {\n         private final String _pattern;\n         private final Function<X509Certificate[],String> _f;\n@@ -143,6 +193,16 @@ public static UserIdentityExtractor getX500NameExtractor(ASN1ObjectIdentifier id\n         return new X500NameRDNExtractor(identifier, x500Name);\n     }\n \n+    /**\n+     * Obtains the subjectAltName given a <code>generalName</code>.\n+     *\n+     * @param generalName an integer representing the general name. See {@link X509Certificate#getSubjectAlternativeNames()}\n+     * @return the value from the subjectAltName extension\n+     */\n+    public static SubjectAltNameExtractor getSubjectAltNameExtractor(int generalName) {\n+        return new SubjectAltNameExtractor(generalName);\n+    }\n+\n     public static OrBuilder either(UserIdentityExtractor extractor) {\n         return new OrBuilder(extractor);\n     }"
        },
        {
            "sha": "a738f42100acd85affdd1c19c8f703293d0b2662",
            "filename": "services/src/main/java/org/keycloak/authentication/authenticators/x509/X509AuthenticatorConfigModel.java",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FX509AuthenticatorConfigModel.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/0a4fd79b225df03d769a267c9b464893a36753c6/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FX509AuthenticatorConfigModel.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fauthentication%2Fauthenticators%2Fx509%2FX509AuthenticatorConfigModel.java?ref=0a4fd79b225df03d769a267c9b464893a36753c6",
            "patch": "@@ -60,6 +60,7 @@ public enum MappingSourceType {\n         ISSUERDN(MAPPING_SOURCE_CERT_ISSUERDN),\n         SUBJECTDN_CN(MAPPING_SOURCE_CERT_SUBJECTDN_CN),\n         SUBJECTDN_EMAIL(MAPPING_SOURCE_CERT_SUBJECTDN_EMAIL),\n+        SUBJECTALTNAME_EMAIL(MAPPING_SOURCE_CERT_SUBJECTALTNAME_EMAIL),\n         SUBJECTDN(MAPPING_SOURCE_CERT_SUBJECTDN);\n \n         private String name;"
        }
    ]
}