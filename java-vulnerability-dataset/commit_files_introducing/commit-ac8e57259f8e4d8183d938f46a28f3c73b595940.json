{
    "sha": "ac8e57259f8e4d8183d938f46a28f3c73b595940",
    "node_id": "MDY6Q29tbWl0Mjc5MTEwODg6YWM4ZTU3MjU5ZjhlNGQ4MTgzZDkzOGY0NmEyOGYzYzczYjU5NTk0MA==",
    "commit": {
        "author": {
            "name": "Matt Gilman",
            "email": "matt.c.gilman@gmail.com",
            "date": "2017-05-16T18:55:01Z"
        },
        "committer": {
            "name": "Andy LoPresto",
            "email": "alopresto@apache.org",
            "date": "2017-05-16T18:55:36Z"
        },
        "message": "NIFI-3907 Added response headers.\n\nSigned-off-by: Andy LoPresto <alopresto@apache.org>",
        "tree": {
            "sha": "5f9bad03763cdfe682253468620ab91de1af4965",
            "url": "https://api.github.com/repos/apache/nifi/git/trees/5f9bad03763cdfe682253468620ab91de1af4965"
        },
        "url": "https://api.github.com/repos/apache/nifi/git/commits/ac8e57259f8e4d8183d938f46a28f3c73b595940",
        "comment_count": 0,
        "verification": {
            "verified": true,
            "reason": "valid",
            "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJZG0soAAoJEG7CkxUtkLYdq9QQAJP27z5eEPNE7/qxxAtVekDs\nmgwpLBoyCUomufce2zoHWNLEFxEIGNbO2qCVi8EArLjBxYNK5PRCAUutc1Ll6xBp\nEW1LKRK2X6twAKTLnEBYTE3CdKheZINsLjiDBZZgxOQ+skF1WlFGls1b1FoBpAYJ\nh887hc5qvf0N0kvYc7um3sJzPJ80++casCCw4DMkdrOJWPY9K+O/pSjMaMz7kYig\nPxsC+u3Dfa2xuREu1e2kUK7fR1/+zajbxX/7IomzO2LJ5yAJTup6z5dk7pKuHFnS\noJ3ObNpOUZsPWyRnhoqJ9J9f9U30R6+4ssTtIrjUzpU6w0dM82TzPS1UDUC+pvY7\ndxkq1DPS9EuXzSsULKa6EhC2JmqE9/ydUtfcON+vGIaV5RFtc9bflbAMS/gOT5ff\nUySUwuLxecczYeSXufzDwHmtkK+ly+TaT1EDoiwsBj1gglDCgwrd+v7kP5UOSJFh\nF61DIpeVy5Mt8/uCK+9Kai6l6fZ6RnX5rqg5NLIQVTkhjgFkuiD1CYo+t/6lGD+w\nbqw+QTP7PyNBHw+yvtM/y+fV6cr95AQEPi1kI4MlRcm/eEiyRMfng6k7vCqZQ/1p\nK+GBsbykNZIQRLn2M11bfikdQBKZyhNUa3qncfXG5PUn0bhuBFwz1PIb01c9zSJZ\nEKCgJTeHdTXvU1ZNGVXq\n=sgAk\n-----END PGP SIGNATURE-----",
            "payload": "tree 5f9bad03763cdfe682253468620ab91de1af4965\nparent fb94990e60068eb244cae1d12d3a0790ece29adc\nauthor Matt Gilman <matt.c.gilman@gmail.com> 1494960901 -0700\ncommitter Andy LoPresto <alopresto@apache.org> 1494960936 -0700\n\nNIFI-3907 Added response headers.\n\nSigned-off-by: Andy LoPresto <alopresto@apache.org>\n",
            "verified_at": "2024-11-09T14:23:11Z"
        }
    },
    "url": "https://api.github.com/repos/apache/nifi/commits/ac8e57259f8e4d8183d938f46a28f3c73b595940",
    "html_url": "https://github.com/apache/nifi/commit/ac8e57259f8e4d8183d938f46a28f3c73b595940",
    "comments_url": "https://api.github.com/repos/apache/nifi/commits/ac8e57259f8e4d8183d938f46a28f3c73b595940/comments",
    "author": {
        "login": "mcgilman",
        "id": 123395,
        "node_id": "MDQ6VXNlcjEyMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/123395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mcgilman",
        "html_url": "https://github.com/mcgilman",
        "followers_url": "https://api.github.com/users/mcgilman/followers",
        "following_url": "https://api.github.com/users/mcgilman/following{/other_user}",
        "gists_url": "https://api.github.com/users/mcgilman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mcgilman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mcgilman/subscriptions",
        "organizations_url": "https://api.github.com/users/mcgilman/orgs",
        "repos_url": "https://api.github.com/users/mcgilman/repos",
        "events_url": "https://api.github.com/users/mcgilman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mcgilman/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "alopresto",
        "id": 798465,
        "node_id": "MDQ6VXNlcjc5ODQ2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/798465?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alopresto",
        "html_url": "https://github.com/alopresto",
        "followers_url": "https://api.github.com/users/alopresto/followers",
        "following_url": "https://api.github.com/users/alopresto/following{/other_user}",
        "gists_url": "https://api.github.com/users/alopresto/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alopresto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alopresto/subscriptions",
        "organizations_url": "https://api.github.com/users/alopresto/orgs",
        "repos_url": "https://api.github.com/users/alopresto/repos",
        "events_url": "https://api.github.com/users/alopresto/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alopresto/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "fb94990e60068eb244cae1d12d3a0790ece29adc",
            "url": "https://api.github.com/repos/apache/nifi/commits/fb94990e60068eb244cae1d12d3a0790ece29adc",
            "html_url": "https://github.com/apache/nifi/commit/fb94990e60068eb244cae1d12d3a0790ece29adc"
        }
    ],
    "stats": {
        "total": 33,
        "additions": 33,
        "deletions": 0
    },
    "files": [
        {
            "sha": "4fa01a5361cace8bbefc734895b0445c0e28886e",
            "filename": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-jetty/src/main/java/org/apache/nifi/web/server/JettyServer.java",
            "status": "modified",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/apache/nifi/blob/ac8e57259f8e4d8183d938f46a28f3c73b595940/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java",
            "raw_url": "https://github.com/apache/nifi/raw/ac8e57259f8e4d8183d938f46a28f3c73b595940/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java",
            "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java?ref=ac8e57259f8e4d8183d938f46a28f3c73b595940",
            "patch": "@@ -69,7 +69,14 @@\n import org.springframework.web.context.support.WebApplicationContextUtils;\n \n import javax.servlet.DispatcherType;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletResponse;\n import java.io.BufferedReader;\n import java.io.File;\n import java.io.FileFilter;\n@@ -463,6 +470,9 @@ private WebAppContext loadWar(final File warFile, final String contextPath, fina\n         // configure the max form size (3x the default)\n         webappContext.setMaxFormContentSize(600000);\n \n+        // add a filter to set the X-Frame-Options filter\n+        webappContext.addFilter(new FilterHolder(FRAME_OPTIONS_FILTER), \"/*\", EnumSet.allOf(DispatcherType.class));\n+\n         try {\n             // configure the class loader - webappClassLoader -> jetty nar -> web app's nar -> ...\n             webappContext.setClassLoader(new WebAppClassLoader(parentClassLoader, webappContext));\n@@ -883,4 +893,27 @@ public void stop() {\n         }\n     }\n \n+    private static final Filter FRAME_OPTIONS_FILTER = new Filter() {\n+        private static final String FRAME_OPTIONS = \"X-Frame-Options\";\n+        private static final String SAME_ORIGIN = \"SAMEORIGIN\";\n+\n+        @Override\n+        public void doFilter(final ServletRequest req, final ServletResponse resp, final FilterChain filterChain)\n+                throws IOException, ServletException {\n+\n+            // set frame options accordingly\n+            final HttpServletResponse response = (HttpServletResponse) resp;\n+            response.addHeader(FRAME_OPTIONS, SAME_ORIGIN);\n+\n+            filterChain.doFilter(req, resp);\n+        }\n+\n+        @Override\n+        public void init(final FilterConfig config) {\n+        }\n+\n+        @Override\n+        public void destroy() {\n+        }\n+    };\n }"
        }
    ]
}