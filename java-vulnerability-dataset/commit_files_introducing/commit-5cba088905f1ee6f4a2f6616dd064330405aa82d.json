{
    "sha": "5cba088905f1ee6f4a2f6616dd064330405aa82d",
    "node_id": "MDY6Q29tbWl0MjM1Mjc0NDo1Y2JhMDg4OTA1ZjFlZTZmNGEyZjY2MTZkZDA2NDMzMDQwNWFhODJk",
    "commit": {
        "author": {
            "name": "Misagh Moayyed",
            "email": "mm1844@gmail.com",
            "date": "2019-05-06T08:24:29Z"
        },
        "committer": {
            "name": "Misagh Moayyed",
            "email": "mm1844@gmail.com",
            "date": "2019-05-06T08:24:29Z"
        },
        "message": "provider selection tests",
        "tree": {
            "sha": "4812bd699efe02d53021a2eaed8ba8e2ae9ca0b4",
            "url": "https://api.github.com/repos/apereo/cas/git/trees/4812bd699efe02d53021a2eaed8ba8e2ae9ca0b4"
        },
        "url": "https://api.github.com/repos/apereo/cas/git/commits/5cba088905f1ee6f4a2f6616dd064330405aa82d",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apereo/cas/commits/5cba088905f1ee6f4a2f6616dd064330405aa82d",
    "html_url": "https://github.com/apereo/cas/commit/5cba088905f1ee6f4a2f6616dd064330405aa82d",
    "comments_url": "https://api.github.com/repos/apereo/cas/commits/5cba088905f1ee6f4a2f6616dd064330405aa82d/comments",
    "author": {
        "login": "mmoayyed",
        "id": 1205228,
        "node_id": "MDQ6VXNlcjEyMDUyMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1205228?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmoayyed",
        "html_url": "https://github.com/mmoayyed",
        "followers_url": "https://api.github.com/users/mmoayyed/followers",
        "following_url": "https://api.github.com/users/mmoayyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/mmoayyed/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mmoayyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mmoayyed/subscriptions",
        "organizations_url": "https://api.github.com/users/mmoayyed/orgs",
        "repos_url": "https://api.github.com/users/mmoayyed/repos",
        "events_url": "https://api.github.com/users/mmoayyed/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mmoayyed/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "mmoayyed",
        "id": 1205228,
        "node_id": "MDQ6VXNlcjEyMDUyMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1205228?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmoayyed",
        "html_url": "https://github.com/mmoayyed",
        "followers_url": "https://api.github.com/users/mmoayyed/followers",
        "following_url": "https://api.github.com/users/mmoayyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/mmoayyed/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mmoayyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mmoayyed/subscriptions",
        "organizations_url": "https://api.github.com/users/mmoayyed/orgs",
        "repos_url": "https://api.github.com/users/mmoayyed/repos",
        "events_url": "https://api.github.com/users/mmoayyed/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mmoayyed/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "be532ed4944b59d6c633bb404bc2fd0fd4fa3d09",
            "url": "https://api.github.com/repos/apereo/cas/commits/be532ed4944b59d6c633bb404bc2fd0fd4fa3d09",
            "html_url": "https://github.com/apereo/cas/commit/be532ed4944b59d6c633bb404bc2fd0fd4fa3d09"
        }
    ],
    "stats": {
        "total": 133,
        "additions": 125,
        "deletions": 8
    },
    "files": [
        {
            "sha": "4253e927e6a1142ee2759224656b67ddcdc980a4",
            "filename": ".github/renovate.json",
            "status": "modified",
            "additions": 11,
            "deletions": 3,
            "changes": 14,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/.github%2Frenovate.json",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/.github%2Frenovate.json",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/.github%2Frenovate.json?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -9,7 +9,8 @@\n     \"enabled\": true\n   },\n   \"ignoreDeps\": [\n-    \"com.github.coova:jradius\"\n+    \"com.github.coova:jradius\",\n+    \"com.mebigfatguy.fb-contrib:fb-contrib\"\n   ],\n   \"packageRules\": [\n     {\n@@ -21,13 +22,20 @@\n     {\n       \"groupName\": \"JAXB2\",\n       \"packagePatterns\": [\n-        \"^org.jvnet.jaxb2_commons:\"\n+        \"^org.jvnet.jaxb2_commons:\",\n+        \"^com.sun.xml.bind\"\n       ]\n     },\n     {\n       \"groupName\": \"AmazonSDK\",\n       \"packagePatterns\": [\n-        \"^com.amazonaws\"\n+        \"^com.amazonaws:\"\n+      ]\n+    },\n+    {\n+      \"groupName\": \"Swagger\",\n+      \"packagePatterns\": [\n+        \"^io.swagger:\"\n       ]\n     }\n "
        },
        {
            "sha": "229d529d368f544f27e6331bf43a2c48cc44a817",
            "filename": "core/cas-server-core-authentication-mfa-api/src/test/java/org/apereo/cas/authentication/mfa/TestMultifactorAuthenticationProvider.java",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-authentication-mfa-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fauthentication%2Fmfa%2FTestMultifactorAuthenticationProvider.java",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-authentication-mfa-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fauthentication%2Fmfa%2FTestMultifactorAuthenticationProvider.java",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-authentication-mfa-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fauthentication%2Fmfa%2FTestMultifactorAuthenticationProvider.java?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -1,9 +1,9 @@\n package org.apereo.cas.authentication.mfa;\n \n import org.apereo.cas.authentication.AbstractMultifactorAuthenticationProvider;\n-import org.apereo.cas.authentication.MultifactorAuthenticationProvider;\n import org.apereo.cas.util.spring.ApplicationContextProvider;\n \n+import org.apache.commons.lang3.RandomStringUtils;\n import org.springframework.context.ConfigurableApplicationContext;\n \n /**\n@@ -26,9 +26,10 @@ public class TestMultifactorAuthenticationProvider extends AbstractMultifactorAu\n      * @param applicationContext the application context\n      * @return the multifactor authentication provider\n      */\n-    public static MultifactorAuthenticationProvider registerProviderIntoApplicationContext(final ConfigurableApplicationContext applicationContext) {\n+    public static TestMultifactorAuthenticationProvider registerProviderIntoApplicationContext(final ConfigurableApplicationContext applicationContext) {\n         return ApplicationContextProvider.registerBeanIntoApplicationContext(applicationContext,\n-            TestMultifactorAuthenticationProvider.class, \"provider\" + System.currentTimeMillis());\n+            TestMultifactorAuthenticationProvider.class,\n+            \"provider\" + RandomStringUtils.randomAlphabetic(8));\n     }\n \n     @Override"
        },
        {
            "sha": "55aeea8e838277a1e078a037a3d23315b8075732",
            "filename": "core/cas-server-core-webflow-mfa-api/src/main/java/org/apereo/cas/web/flow/resolver/impl/SelectiveMultifactorAuthenticationProviderWebflowEventEventResolver.java",
            "status": "modified",
            "additions": 5,
            "deletions": 2,
            "changes": 7,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fresolver%2Fimpl%2FSelectiveMultifactorAuthenticationProviderWebflowEventEventResolver.java",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fresolver%2Fimpl%2FSelectiveMultifactorAuthenticationProviderWebflowEventEventResolver.java",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-webflow-mfa-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fresolver%2Fimpl%2FSelectiveMultifactorAuthenticationProviderWebflowEventEventResolver.java?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -78,8 +78,11 @@ protected Set<Event> resolveEventsInternal(final Set<Event> resolveEvents, final\n      * @return the set of events\n      */\n     protected Pair<Set<Event>, Collection<MultifactorAuthenticationProvider>> filterEventsByMultifactorAuthenticationProvider(\n-        final Set<Event> resolveEvents, final Authentication authentication,\n-        final RegisteredService registeredService, final HttpServletRequest request) {\n+        final Set<Event> resolveEvents,\n+        final Authentication authentication,\n+        final RegisteredService registeredService,\n+        final HttpServletRequest request) {\n+\n         LOGGER.debug(\"Locating multifactor providers to determine support for this authentication sequence\");\n         val providers = MultifactorAuthenticationUtils.getAvailableMultifactorAuthenticationProviders(\n             getWebflowEventResolutionConfigurationContext().getApplicationContext());"
        },
        {
            "sha": "87083717367b4c356473febaa5f8a2e69f32e67a",
            "filename": "core/cas-server-core-webflow-mfa/src/test/java/org/apereo/cas/AllTestsSuite.java",
            "status": "modified",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2FAllTestsSuite.java",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2FAllTestsSuite.java",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2FAllTestsSuite.java?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -1,6 +1,9 @@\n \n package org.apereo.cas;\n \n+import org.apereo.cas.web.flow.authentication.GroovyScriptMultifactorAuthenticationProviderSelectorTests;\n+import org.apereo.cas.web.flow.authentication.RankedMultifactorAuthenticationProviderSelectorTests;\n+\n import org.junit.platform.suite.api.SelectClasses;\n \n /**\n@@ -16,6 +19,8 @@\n     AuthenticationAttributeMultifactorAuthenticationPolicyEventResolverTests.class,\n     AdaptiveMultifactorAuthenticationPolicyEventResolverTests.class,\n     MultifactorAuthenticationTests.class,\n+    GroovyScriptMultifactorAuthenticationProviderSelectorTests.class,\n+    RankedMultifactorAuthenticationProviderSelectorTests.class,\n     RequestSessionAttributeMultifactorAuthenticationPolicyEventResolverTests.class,\n     TimedMultifactorAuthenticationPolicyEventResolverTests.class,\n     AllMultifactorAuthenticationWebflowTests.class"
        },
        {
            "sha": "e46b144920bbdea792f0b16dcbb5dd75d0a53080",
            "filename": "core/cas-server-core-webflow-mfa/src/test/java/org/apereo/cas/web/flow/authentication/GroovyScriptMultifactorAuthenticationProviderSelectorTests.java",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FGroovyScriptMultifactorAuthenticationProviderSelectorTests.java",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FGroovyScriptMultifactorAuthenticationProviderSelectorTests.java",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FGroovyScriptMultifactorAuthenticationProviderSelectorTests.java?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -0,0 +1,41 @@\n+package org.apereo.cas.web.flow.authentication;\n+\n+import org.apereo.cas.BaseCasWebflowMultifactorAuthenticationTests;\n+import org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector;\n+import org.apereo.cas.authentication.mfa.TestMultifactorAuthenticationProvider;\n+import org.apereo.cas.services.RegisteredServiceTestUtils;\n+import org.apereo.cas.util.CollectionUtils;\n+\n+import lombok.val;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.test.context.TestPropertySource;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+/**\n+ * This is {@link GroovyScriptMultifactorAuthenticationProviderSelectorTests}.\n+ *\n+ * @author Misagh Moayyed\n+ * @since 6.1.0\n+ */\n+@Tag(\"Groovy\")\n+@TestPropertySource(properties = \"cas.authn.mfa.providerSelectorGroovyScript=classpath:mfaGroovySelector.groovy\")\n+public class GroovyScriptMultifactorAuthenticationProviderSelectorTests extends BaseCasWebflowMultifactorAuthenticationTests {\n+\n+    @Autowired\n+    @Qualifier(\"multifactorAuthenticationProviderSelector\")\n+    private MultifactorAuthenticationProviderSelector multifactorAuthenticationProviderSelector;\n+\n+    @Test\n+    public void verifySelectionOfMfaProvider() {\n+        val dummy = TestMultifactorAuthenticationProvider.registerProviderIntoApplicationContext(applicationContext);\n+        val provider = multifactorAuthenticationProviderSelector.resolve(CollectionUtils.wrapList(dummy),\n+            RegisteredServiceTestUtils.getRegisteredService(), RegisteredServiceTestUtils.getPrincipal());\n+        assertNotNull(provider);\n+        assertEquals(TestMultifactorAuthenticationProvider.ID, provider.getId());\n+    }\n+\n+}"
        },
        {
            "sha": "585d740b7ad14886048a74bdeea865bc5630cae4",
            "filename": "core/cas-server-core-webflow-mfa/src/test/java/org/apereo/cas/web/flow/authentication/RankedMultifactorAuthenticationProviderSelectorTests.java",
            "status": "added",
            "additions": 45,
            "deletions": 0,
            "changes": 45,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FRankedMultifactorAuthenticationProviderSelectorTests.java",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FRankedMultifactorAuthenticationProviderSelectorTests.java",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapereo%2Fcas%2Fweb%2Fflow%2Fauthentication%2FRankedMultifactorAuthenticationProviderSelectorTests.java?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -0,0 +1,45 @@\n+package org.apereo.cas.web.flow.authentication;\n+\n+import org.apereo.cas.BaseCasWebflowMultifactorAuthenticationTests;\n+import org.apereo.cas.authentication.MultifactorAuthenticationProviderSelector;\n+import org.apereo.cas.authentication.mfa.TestMultifactorAuthenticationProvider;\n+import org.apereo.cas.services.RegisteredServiceMultifactorPolicyFailureModes;\n+import org.apereo.cas.services.RegisteredServiceTestUtils;\n+import org.apereo.cas.util.CollectionUtils;\n+\n+import lombok.val;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+/**\n+ * This is {@link RankedMultifactorAuthenticationProviderSelectorTests}.\n+ *\n+ * @author Misagh Moayyed\n+ * @since 6.1.0\n+ */\n+public class RankedMultifactorAuthenticationProviderSelectorTests extends BaseCasWebflowMultifactorAuthenticationTests {\n+\n+    @Autowired\n+    @Qualifier(\"multifactorAuthenticationProviderSelector\")\n+    private MultifactorAuthenticationProviderSelector multifactorAuthenticationProviderSelector;\n+\n+    @Test\n+    public void verifySelectionOfMfaProvider() {\n+        val dummy1 = TestMultifactorAuthenticationProvider.registerProviderIntoApplicationContext(applicationContext);\n+        dummy1.setOrder(10);\n+        dummy1.setFailureMode(RegisteredServiceMultifactorPolicyFailureModes.PHANTOM.name());\n+        val dummy2 = TestMultifactorAuthenticationProvider.registerProviderIntoApplicationContext(applicationContext);\n+        dummy2.setOrder(5);\n+\n+        val provider = multifactorAuthenticationProviderSelector.resolve(CollectionUtils.wrapList(dummy1, dummy2),\n+            RegisteredServiceTestUtils.getRegisteredService(), RegisteredServiceTestUtils.getPrincipal());\n+        assertNotNull(provider);\n+        assertEquals(dummy1.getId(), provider.getId());\n+        assertEquals(dummy1.getOrder(), provider.getOrder());\n+        assertEquals(RegisteredServiceMultifactorPolicyFailureModes.PHANTOM, provider.getFailureMode());\n+    }\n+\n+}"
        },
        {
            "sha": "0c6d4dac6e7d2cf15f7be359d11a98ae9367f85a",
            "filename": "core/cas-server-core-webflow-mfa/src/test/resources/mfaGroovySelector.groovy",
            "status": "added",
            "additions": 13,
            "deletions": 0,
            "changes": 13,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fresources%2FmfaGroovySelector.groovy",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fresources%2FmfaGroovySelector.groovy",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/core%2Fcas-server-core-webflow-mfa%2Fsrc%2Ftest%2Fresources%2FmfaGroovySelector.groovy?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -0,0 +1,13 @@\n+import java.util.*\n+\n+class SampleGroovyProviderSelection {\n+    def run(final Object... args) {\n+        def service = args[0]\n+        def principal = args[1]\n+        def providersCollection = args[2]\n+        def logger = args[3]\n+\n+        logger.debug(\"Resolving provider from ${providersCollection} for ${principal} with service ${service}\")\n+        return \"mfa-dummy\"\n+    }\n+}"
        },
        {
            "sha": "e67bd91569ed1171470bb67e13152042a37bc991",
            "filename": "gradle/tests.gradle",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/apereo/cas/blob/5cba088905f1ee6f4a2f6616dd064330405aa82d/gradle%2Ftests.gradle",
            "raw_url": "https://github.com/apereo/cas/raw/5cba088905f1ee6f4a2f6616dd064330405aa82d/gradle%2Ftests.gradle",
            "contents_url": "https://api.github.com/repos/apereo/cas/contents/gradle%2Ftests.gradle?ref=5cba088905f1ee6f4a2f6616dd064330405aa82d",
            "patch": "@@ -244,6 +244,7 @@ tasks.withType(Test) {\n         }\n     }\n \n+    systemProperty(\"spring.main.banner-mode\", \"off\")\n     failFast = true\n     jvmArgs.addAll([\"-Xms512m\", \"-Xmx4g\"])\n     classpath = it.classpath + files(\"${projectDir}/src/main/resources\") + files(\"${projectDir}/src/test/resources\")"
        }
    ]
}