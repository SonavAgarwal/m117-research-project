{
    "sha": "80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
    "node_id": "MDY6Q29tbWl0MTExMjU1ODk6ODBlMmI4ZWIzOWFmNjQwZWFmNmNlYzhiOWRjZGQwZWVmN2M0OGFhNw==",
    "commit": {
        "author": {
            "name": "Marko Strukelj",
            "email": "marko.strukelj@gmail.com",
            "date": "2016-01-05T14:14:31Z"
        },
        "committer": {
            "name": "Marko Strukelj",
            "email": "marko.strukelj@gmail.com",
            "date": "2016-01-10T11:39:30Z"
        },
        "message": "KEYCLOAK-1717 Truststore SPI and file provider",
        "tree": {
            "sha": "7c27bd3e07af398fa312f18309430b256e1d27ed",
            "url": "https://api.github.com/repos/keycloak/keycloak/git/trees/7c27bd3e07af398fa312f18309430b256e1d27ed"
        },
        "url": "https://api.github.com/repos/keycloak/keycloak/git/commits/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/keycloak/keycloak/commits/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
    "html_url": "https://github.com/keycloak/keycloak/commit/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
    "comments_url": "https://api.github.com/repos/keycloak/keycloak/commits/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/comments",
    "author": {
        "login": "mstruk",
        "id": 213880,
        "node_id": "MDQ6VXNlcjIxMzg4MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/213880?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mstruk",
        "html_url": "https://github.com/mstruk",
        "followers_url": "https://api.github.com/users/mstruk/followers",
        "following_url": "https://api.github.com/users/mstruk/following{/other_user}",
        "gists_url": "https://api.github.com/users/mstruk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mstruk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mstruk/subscriptions",
        "organizations_url": "https://api.github.com/users/mstruk/orgs",
        "repos_url": "https://api.github.com/users/mstruk/repos",
        "events_url": "https://api.github.com/users/mstruk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mstruk/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "mstruk",
        "id": 213880,
        "node_id": "MDQ6VXNlcjIxMzg4MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/213880?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mstruk",
        "html_url": "https://github.com/mstruk",
        "followers_url": "https://api.github.com/users/mstruk/followers",
        "following_url": "https://api.github.com/users/mstruk/following{/other_user}",
        "gists_url": "https://api.github.com/users/mstruk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mstruk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mstruk/subscriptions",
        "organizations_url": "https://api.github.com/users/mstruk/orgs",
        "repos_url": "https://api.github.com/users/mstruk/repos",
        "events_url": "https://api.github.com/users/mstruk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mstruk/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "ba1a17e668d67d62431d0eb7d3d82047fb204c10",
            "url": "https://api.github.com/repos/keycloak/keycloak/commits/ba1a17e668d67d62431d0eb7d3d82047fb204c10",
            "html_url": "https://github.com/keycloak/keycloak/commit/ba1a17e668d67d62431d0eb7d3d82047fb204c10"
        }
    ],
    "stats": {
        "total": 862,
        "additions": 761,
        "deletions": 101
    },
    "files": [
        {
            "sha": "b10c46e9fa56b3c6a9207f6b46f9328355a283fb",
            "filename": "broker/core/src/main/java/org/keycloak/broker/provider/util/SimpleHttp.java",
            "status": "modified",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/broker%2Fcore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Fprovider%2Futil%2FSimpleHttp.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/broker%2Fcore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Fprovider%2Futil%2FSimpleHttp.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/broker%2Fcore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Fprovider%2Futil%2FSimpleHttp.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -1,5 +1,8 @@\n package org.keycloak.broker.provider.util;\n \n+import javax.net.ssl.HostnameVerifier;\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLSocketFactory;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n@@ -24,6 +27,9 @@ public class SimpleHttp {\n     private Map<String, String> headers;\n     private Map<String, String> params;\n \n+    private SSLSocketFactory sslFactory;\n+    private HostnameVerifier hostnameVerifier;\n+\n     protected SimpleHttp(String url, String method) {\n         this.url = url;\n         this.method = method;\n@@ -53,6 +59,15 @@ public SimpleHttp param(String name, String value) {\n         return this;\n     }\n \n+    public SimpleHttp sslFactory(SSLSocketFactory factory) {\n+        sslFactory = factory;\n+        return this;\n+    }\n+\n+    public SimpleHttp hostnameVerifier(HostnameVerifier verifier) {\n+        hostnameVerifier = verifier;\n+        return this;\n+    }\n \n     public String asString() throws IOException {\n         boolean get = method.equals(\"GET\");\n@@ -85,6 +100,7 @@ public String asString() throws IOException {\n         }\n \n         HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();\n+        setupTruststoreIfApplicable(connection);\n         OutputStream os = null;\n         InputStream is = null;\n \n@@ -171,6 +187,7 @@ public int asStatus() throws IOException {\n         }\n \n         HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();\n+        setupTruststoreIfApplicable(connection);\n         OutputStream os = null;\n         InputStream is = null;\n \n@@ -235,4 +252,13 @@ private String toString(InputStream is) throws IOException {\n         return writer.toString();\n     }\n \n+    private void setupTruststoreIfApplicable(HttpURLConnection connection) {\n+        if (connection instanceof HttpsURLConnection && sslFactory != null) {\n+            HttpsURLConnection con = (HttpsURLConnection) connection;\n+            con.setSSLSocketFactory(sslFactory);\n+            if (hostnameVerifier != null) {\n+                con.setHostnameVerifier(hostnameVerifier);\n+            }\n+        }\n+    }\n }"
        },
        {
            "sha": "6e2543bd5ece5c2d8a153ce2958df11bc1b2996b",
            "filename": "broker/oidc/src/main/java/org/keycloak/broker/oidc/AbstractOAuth2IdentityProvider.java",
            "status": "modified",
            "additions": 5,
            "deletions": 1,
            "changes": 6,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/broker%2Foidc%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Foidc%2FAbstractOAuth2IdentityProvider.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/broker%2Foidc%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Foidc%2FAbstractOAuth2IdentityProvider.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/broker%2Foidc%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fbroker%2Foidc%2FAbstractOAuth2IdentityProvider.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -27,6 +27,7 @@\n import org.keycloak.broker.provider.AuthenticationRequest;\n import org.keycloak.broker.provider.BrokeredIdentityContext;\n import org.keycloak.broker.provider.IdentityBrokerException;\n+import org.keycloak.connections.truststore.JSSETruststoreConfigurator;\n import org.keycloak.events.Errors;\n import org.keycloak.events.EventBuilder;\n import org.keycloak.events.EventType;\n@@ -247,12 +248,15 @@ public Response authResponse(@QueryParam(AbstractOAuth2IdentityProvider.OAUTH2_P\n         }\n \n         public SimpleHttp generateTokenRequest(String authorizationCode) {\n+            JSSETruststoreConfigurator configurator = new JSSETruststoreConfigurator(session);\n             return SimpleHttp.doPost(getConfig().getTokenUrl())\n                     .param(OAUTH2_PARAMETER_CODE, authorizationCode)\n                     .param(OAUTH2_PARAMETER_CLIENT_ID, getConfig().getClientId())\n                     .param(OAUTH2_PARAMETER_CLIENT_SECRET, getConfig().getClientSecret())\n                     .param(OAUTH2_PARAMETER_REDIRECT_URI, uriInfo.getAbsolutePath().toString())\n-                    .param(OAUTH2_PARAMETER_GRANT_TYPE, OAUTH2_GRANT_TYPE_AUTHORIZATION_CODE);\n+                    .param(OAUTH2_PARAMETER_GRANT_TYPE, OAUTH2_GRANT_TYPE_AUTHORIZATION_CODE)\n+                    .sslFactory(configurator.getSSLSocketFactory())\n+                    .hostnameVerifier(configurator.getHostnameVerifier());\n         }\n     }\n }"
        },
        {
            "sha": "07e7f6ff2dab1f3a80fa78b7476fe52d744533f2",
            "filename": "connections/http-client/pom.xml",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fpom.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Fhttp-client%2Fpom.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -22,6 +22,10 @@\n             <groupId>org.keycloak</groupId>\n             <artifactId>keycloak-model-api</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.keycloak</groupId>\n+            <artifactId>keycloak-connections-truststore</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.apache.httpcomponents</groupId>\n             <artifactId>httpclient</artifactId>"
        },
        {
            "sha": "67f7cbd5d486dcfcd835c7aac3e14794814f275f",
            "filename": "connections/http-client/src/main/java/org/keycloak/connections/httpclient/DefaultHttpClientFactory.java",
            "status": "modified",
            "additions": 61,
            "deletions": 39,
            "changes": 100,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FDefaultHttpClientFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FDefaultHttpClientFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FDefaultHttpClientFactory.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -10,6 +10,7 @@\n import org.apache.http.impl.client.CloseableHttpClient;\n import org.jboss.logging.Logger;\n import org.keycloak.Config;\n+import org.keycloak.connections.truststore.TruststoreProvider;\n import org.keycloak.models.KeycloakSession;\n import org.keycloak.models.KeycloakSessionFactory;\n import org.keycloak.common.util.EnvUtil;\n@@ -28,9 +29,12 @@ public class DefaultHttpClientFactory implements HttpClientFactory {\n     private static final Logger logger = Logger.getLogger(DefaultHttpClientFactory.class);\n \n     private volatile CloseableHttpClient httpClient;\n+    private Config.Scope config;\n \n     @Override\n     public HttpClientProvider create(KeycloakSession session) {\n+        lazyInit(session);\n+\n         return new HttpClientProvider() {\n             @Override\n             public HttpClient getHttpClient() {\n@@ -74,7 +78,9 @@ public InputStream get(String uri) throws IOException {\n     @Override\n     public void close() {\n         try {\n-            httpClient.close();\n+            if (httpClient != null) {\n+                httpClient.close();\n+            }\n         } catch (IOException e) {\n \n         }\n@@ -87,46 +93,62 @@ public String getId() {\n \n     @Override\n     public void init(Config.Scope config) {\n-        long socketTimeout = config.getLong(\"socket-timeout-millis\", -1L);\n-        long establishConnectionTimeout = config.getLong(\"establish-connection-timeout-millis\", -1L);\n-        int maxPooledPerRoute = config.getInt(\"max-pooled-per-route\", 0);\n-        int connectionPoolSize = config.getInt(\"connection-pool-size\", 200);\n-        boolean disableTrustManager = config.getBoolean(\"disable-trust-manager\", false);\n-        boolean disableCookies = config.getBoolean(\"disable-cookies\", true);\n-        String hostnameVerificationPolicy = config.get(\"hostname-verification-policy\", \"WILDCARD\");\n-        HttpClientBuilder.HostnameVerificationPolicy hostnamePolicy = HttpClientBuilder.HostnameVerificationPolicy.valueOf(hostnameVerificationPolicy);\n-        String truststore = config.get(\"truststore\");\n-        String truststorePassword = config.get(\"truststore-password\");\n-        String clientKeystore = config.get(\"client-keystore\");\n-        String clientKeystorePassword = config.get(\"client-keystore-password\");\n-        String clientPrivateKeyPassword = config.get(\"client-key-password\");\n-\n-        HttpClientBuilder builder = new HttpClientBuilder();\n-        builder.socketTimeout(socketTimeout, TimeUnit.MILLISECONDS)\n-               .establishConnectionTimeout(establishConnectionTimeout, TimeUnit.MILLISECONDS)\n-                .maxPooledPerRoute(maxPooledPerRoute)\n-                .connectionPoolSize(connectionPoolSize)\n-                .hostnameVerification(hostnamePolicy)\n-                .disableCookies(disableCookies);\n-        if (disableTrustManager) builder.disableTrustManager();\n-        if (truststore != null) {\n-            truststore = EnvUtil.replace(truststore);\n-            try {\n-                builder.trustStore(KeystoreUtil.loadKeyStore(truststore, truststorePassword));\n-            } catch (Exception e) {\n-                throw new RuntimeException(\"Failed to load truststore\", e);\n-            }\n-        }\n-        if (clientKeystore != null) {\n-            clientKeystore = EnvUtil.replace(clientKeystore);\n-            try {\n-                KeyStore clientCertKeystore = KeystoreUtil.loadKeyStore(clientKeystore, clientKeystorePassword);\n-                builder.keyStore(clientCertKeystore, clientPrivateKeyPassword);\n-            } catch (Exception e) {\n-                throw new RuntimeException(\"Failed to load keystore\", e);\n+        this.config = config;\n+    }\n+\n+    private void lazyInit(KeycloakSession session) {\n+        if (httpClient == null) {\n+            synchronized(this) {\n+                if (httpClient == null) {\n+                    long socketTimeout = config.getLong(\"socket-timeout-millis\", -1L);\n+                    long establishConnectionTimeout = config.getLong(\"establish-connection-timeout-millis\", -1L);\n+                    int maxPooledPerRoute = config.getInt(\"max-pooled-per-route\", 0);\n+                    int connectionPoolSize = config.getInt(\"connection-pool-size\", 200);\n+                    boolean disableCookies = config.getBoolean(\"disable-cookies\", true);\n+                    String clientKeystore = config.get(\"client-keystore\");\n+                    String clientKeystorePassword = config.get(\"client-keystore-password\");\n+                    String clientPrivateKeyPassword = config.get(\"client-key-password\");\n+\n+                    TruststoreProvider truststoreProvider = session.getProvider(TruststoreProvider.class);\n+                    boolean disableTrustManager = truststoreProvider == null || truststoreProvider.getTruststore() == null;\n+                    if (disableTrustManager) {\n+                        logger.warn(\"Truststore is disabled\");\n+                    }\n+                    HttpClientBuilder.HostnameVerificationPolicy hostnamePolicy = disableTrustManager ? null\n+                            : HttpClientBuilder.HostnameVerificationPolicy.valueOf(truststoreProvider.getPolicy().name());\n+\n+                    HttpClientBuilder builder = new HttpClientBuilder();\n+                    builder.socketTimeout(socketTimeout, TimeUnit.MILLISECONDS)\n+                            .establishConnectionTimeout(establishConnectionTimeout, TimeUnit.MILLISECONDS)\n+                            .maxPooledPerRoute(maxPooledPerRoute)\n+                            .connectionPoolSize(connectionPoolSize)\n+                            .disableCookies(disableCookies);\n+\n+                    if (disableTrustManager) {\n+                        // TODO: is it ok to do away with disabling trust manager?\n+                        //builder.disableTrustManager();\n+                    } else {\n+                        builder.hostnameVerification(hostnamePolicy);\n+                        try {\n+                            builder.trustStore(truststoreProvider.getTruststore());\n+                        } catch (Exception e) {\n+                            throw new RuntimeException(\"Failed to load truststore\", e);\n+                        }\n+                    }\n+\n+                    if (clientKeystore != null) {\n+                        clientKeystore = EnvUtil.replace(clientKeystore);\n+                        try {\n+                            KeyStore clientCertKeystore = KeystoreUtil.loadKeyStore(clientKeystore, clientKeystorePassword);\n+                            builder.keyStore(clientCertKeystore, clientPrivateKeyPassword);\n+                        } catch (Exception e) {\n+                            throw new RuntimeException(\"Failed to load keystore\", e);\n+                        }\n+                    }\n+                    httpClient = builder.build();\n+                }\n             }\n         }\n-        httpClient = builder.build();\n     }\n \n     @Override"
        },
        {
            "sha": "a16c12ac8492c582ca0f32689011184fae2ceb28",
            "filename": "connections/http-client/src/main/java/org/keycloak/connections/httpclient/HttpClientBuilder.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FHttpClientBuilder.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FHttpClientBuilder.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Fhttp-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Fhttpclient%2FHttpClientBuilder.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -145,7 +145,7 @@ public HttpClientBuilder disableTrustManager() {\n      * Disable cookie management.\n      */\n     public HttpClientBuilder disableCookies(boolean disable) {\n-        this.disableTrustManager = disable;\n+        this.disableCookies = disable;\n         return this;\n     }\n "
        },
        {
            "sha": "17cca7f33d79ab79a531d105b3b815e9dc074aa8",
            "filename": "connections/pom.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fpom.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Fpom.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -19,6 +19,7 @@\n         <module>mongo</module>\n         <module>mongo-update</module>\n         <module>http-client</module>\n+        <module>truststore</module>\n     </modules>\n \n     <build>"
        },
        {
            "sha": "d72b6d809e3bae1dad1bb61530f1808c26a929de",
            "filename": "connections/truststore/pom.xml",
            "status": "added",
            "additions": 35,
            "deletions": 0,
            "changes": 35,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fpom.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fpom.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    <parent>\n+        <artifactId>keycloak-parent</artifactId>\n+        <groupId>org.keycloak</groupId>\n+        <version>1.8.0.CR1-SNAPSHOT</version>\n+        <relativePath>../../pom.xml</relativePath>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>keycloak-connections-truststore</artifactId>\n+    <name>Keycloak Truststore</name>\n+    <description/>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.httpcomponents</groupId>\n+            <artifactId>httpclient</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.keycloak</groupId>\n+            <artifactId>keycloak-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.keycloak</groupId>\n+            <artifactId>keycloak-model-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss.logging</groupId>\n+            <artifactId>jboss-logging</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+    </dependencies>\n+</project>"
        },
        {
            "sha": "d49ddb1c571524b60c5b36f3fa51bea29fb451f9",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/FileTruststoreProvider.java",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProvider.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProvider.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProvider.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,31 @@\n+package org.keycloak.connections.truststore;\n+\n+import java.security.KeyStore;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public class FileTruststoreProvider implements TruststoreProvider {\n+\n+    private final HostnameVerificationPolicy policy;\n+    private final KeyStore truststore;\n+\n+    FileTruststoreProvider(KeyStore truststore, HostnameVerificationPolicy policy) {\n+        this.policy = policy;\n+        this.truststore = truststore;\n+    }\n+\n+    @Override\n+    public HostnameVerificationPolicy getPolicy() {\n+        return policy;\n+    }\n+\n+    @Override\n+    public KeyStore getTruststore() {\n+        return truststore;\n+    }\n+\n+    @Override\n+    public void close() {\n+    }\n+}"
        },
        {
            "sha": "0e2a5d3f20e21c1ac473ce8ae071149d134106bf",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/FileTruststoreProviderFactory.java",
            "status": "added",
            "additions": 102,
            "deletions": 0,
            "changes": 102,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProviderFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProviderFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FFileTruststoreProviderFactory.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,102 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.jboss.logging.Logger;\n+import org.keycloak.Config;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.KeycloakSessionFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.security.KeyStore;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public class FileTruststoreProviderFactory implements TruststoreProviderFactory {\n+\n+    private static final Logger log = Logger.getLogger(FileTruststoreProviderFactory.class);\n+\n+    private TruststoreProvider provider;\n+\n+    @Override\n+    public TruststoreProvider create(KeycloakSession session) {\n+        return provider;\n+    }\n+\n+    @Override\n+    public void init(Config.Scope config) {\n+\n+        String storepath = config.get(\"file\");\n+        String pass = config.get(\"password\");\n+        String policy = config.get(\"hostname-verification-policy\");\n+        Boolean disabled = config.getBoolean(\"disabled\", null);\n+\n+        // if \"truststore\" . \"file\" is not configured then it is disabled\n+        if (storepath == null && pass == null && policy == null && disabled == null) {\n+            return;\n+        }\n+\n+        // if explicitly disabled\n+        if (disabled != null && disabled) {\n+            return;\n+        }\n+\n+        HostnameVerificationPolicy verificationPolicy = null;\n+        KeyStore truststore = null;\n+\n+        if (storepath == null) {\n+            throw new RuntimeException(\"Attribute 'file' missing in 'truststore':'file' configuration\");\n+        }\n+        if (pass == null) {\n+            throw new RuntimeException(\"Attribute 'password' missing in 'truststore':'file' configuration\");\n+        }\n+\n+        try {\n+            truststore = loadStore(storepath, pass == null ? null :pass.toCharArray());\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Failed to initialize TruststoreProviderFactory: \" + new File(storepath).getAbsolutePath(), e);\n+        }\n+        if (policy == null) {\n+            verificationPolicy = HostnameVerificationPolicy.WILDCARD;\n+        } else {\n+            try {\n+                verificationPolicy = HostnameVerificationPolicy.valueOf(policy);\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Invalid value for 'hostname-verification-policy': \" + policy + \" (must be one of: ANY, WILDCARD, STRICT)\");\n+            }\n+        }\n+\n+        provider = new FileTruststoreProvider(truststore, verificationPolicy);\n+        TruststoreProviderSingleton.set(provider);\n+        log.debug(\"File trustore provider initialized: \" + new File(storepath).getAbsolutePath());\n+    }\n+\n+    private KeyStore loadStore(String path, char[] password) throws Exception {\n+        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());\n+        InputStream is = new FileInputStream(path);\n+        try {\n+            ks.load(is, password);\n+            return ks;\n+        } finally {\n+            try {\n+                is.close();\n+            } catch (IOException ignored) {\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void postInit(KeycloakSessionFactory factory) {\n+    }\n+\n+    @Override\n+    public void close() {\n+    }\n+\n+    @Override\n+    public String getId() {\n+        return \"file\";\n+    }\n+}"
        },
        {
            "sha": "0b6c53b1e442dc69bd72ebaf94a487b03d8b446a",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/HostnameVerificationPolicy.java",
            "status": "added",
            "additions": 19,
            "deletions": 0,
            "changes": 19,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FHostnameVerificationPolicy.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FHostnameVerificationPolicy.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FHostnameVerificationPolicy.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,19 @@\n+package org.keycloak.connections.truststore;\n+\n+public enum HostnameVerificationPolicy {\n+\n+    /**\n+     * Hostname verification is not done on the server's certificate\n+     */\n+    ANY,\n+\n+    /**\n+     * Allows wildcards in subdomain names i.e. *.foo.com\n+     */\n+    WILDCARD,\n+\n+    /**\n+     * CN must match hostname connecting to\n+     */\n+    STRICT\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "e323f7af19421b878fe8ef63094008cf9da44b5e",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/JSSETruststoreConfigurator.java",
            "status": "added",
            "additions": 106,
            "deletions": 0,
            "changes": 106,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FJSSETruststoreConfigurator.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FJSSETruststoreConfigurator.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FJSSETruststoreConfigurator.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,106 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.apache.http.conn.ssl.BrowserCompatHostnameVerifier;\n+import org.apache.http.conn.ssl.StrictHostnameVerifier;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.KeycloakSessionFactory;\n+\n+import javax.net.ssl.HostnameVerifier;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSession;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public class JSSETruststoreConfigurator {\n+\n+    private TruststoreProvider provider;\n+    private volatile javax.net.ssl.SSLSocketFactory sslFactory;\n+    private volatile TrustManager[] tm;\n+\n+    public JSSETruststoreConfigurator(KeycloakSession session) {\n+        KeycloakSessionFactory factory = session.getKeycloakSessionFactory();\n+        TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) factory.getProviderFactory(TruststoreProvider.class, \"file\");\n+\n+        provider = truststoreFactory.create(session);\n+        if (provider != null && provider.getTruststore() == null) {\n+            provider = null;\n+        }\n+    }\n+\n+    public JSSETruststoreConfigurator(TruststoreProvider provider) {\n+        this.provider = provider;\n+    }\n+\n+    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory() {\n+        if (provider == null) {\n+            return null;\n+        }\n+\n+        if (sslFactory == null) {\n+            synchronized(this) {\n+                if (sslFactory == null) {\n+                    try {\n+                        SSLContext sslctx = SSLContext.getInstance(\"TLS\");\n+                        sslctx.init(null, getTrustManagers(), null);\n+                        sslFactory = sslctx.getSocketFactory();\n+                    } catch (Exception e) {\n+                        throw new RuntimeException(\"Failed to initialize SSLContext: \", e);\n+                    }\n+                }\n+            }\n+        }\n+        return sslFactory;\n+    }\n+\n+    public TrustManager[] getTrustManagers() {\n+        if (provider == null) {\n+            return null;\n+        }\n+\n+        if (tm == null) {\n+            synchronized (this) {\n+                if (tm == null) {\n+                    TrustManagerFactory tmf = null;\n+                    try {\n+                        tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+                        tmf.init(provider.getTruststore());\n+                        tm = tmf.getTrustManagers();\n+                    } catch (Exception e) {\n+                        throw new RuntimeException(\"Failed to initialize TrustManager: \", e);\n+                    }\n+                }\n+            }\n+        }\n+        return tm;\n+    }\n+\n+    public HostnameVerifier getHostnameVerifier() {\n+        if (provider == null) {\n+            return null;\n+        }\n+\n+        HostnameVerificationPolicy policy = provider.getPolicy();\n+        switch (policy) {\n+            case ANY:\n+                return new HostnameVerifier() {\n+                    @Override\n+                    public boolean verify(String s, SSLSession sslSession) {\n+                        return true;\n+                    }\n+                };\n+            case WILDCARD:\n+                return new BrowserCompatHostnameVerifier();\n+            case STRICT:\n+                return new StrictHostnameVerifier();\n+            default:\n+                throw new IllegalStateException(\"Unknown policy: \" + policy.name());\n+        }\n+    }\n+\n+    public TruststoreProvider getProvider() {\n+        return provider;\n+    }\n+}"
        },
        {
            "sha": "86f56671e3714d0e5ae3d789294a4ad6ab68ed48",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/SSLSocketFactory.java",
            "status": "added",
            "additions": 87,
            "deletions": 0,
            "changes": 87,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FSSLSocketFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FSSLSocketFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FSSLSocketFactory.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,87 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.jboss.logging.Logger;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.Socket;\n+\n+\n+/**\n+ * Using this class is ugly, but it is the only way to push our truststore to the default LDAP client implementation.\n+ * <p>\n+ * This SSLSocketFactory can only use truststore configured by TruststoreProvider after the ProviderFactory was\n+ * initialized using standard Spi load / init mechanism. That will only happen if \"truststore\" provider is configured\n+ * in keycloak-server.json.\n+ * <p>\n+ * If TruststoreProvider is not available this SSLSocketFactory will delegate all operations to javax.net.ssl.SSLSocketFactory.getDefault().\n+ *\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+\n+public class SSLSocketFactory extends javax.net.ssl.SSLSocketFactory {\n+\n+    private static final Logger log = Logger.getLogger(SSLSocketFactory.class);\n+\n+    private static SSLSocketFactory instance;\n+\n+    private final javax.net.ssl.SSLSocketFactory sslsf;\n+\n+    private SSLSocketFactory() {\n+\n+        TruststoreProvider provider = TruststoreProviderSingleton.get();\n+        javax.net.ssl.SSLSocketFactory sf = null;\n+        if (provider != null) {\n+            sf = new JSSETruststoreConfigurator(provider).getSSLSocketFactory();\n+        }\n+\n+        if (sf == null) {\n+            log.info(\"No truststore provider found - using default SSLSocketFactory\");\n+            sf = (javax.net.ssl.SSLSocketFactory) javax.net.ssl.SSLSocketFactory.getDefault();\n+        }\n+\n+        sslsf = sf;\n+    }\n+\n+    public static synchronized SSLSocketFactory getDefault() {\n+        if (instance == null) {\n+            instance = new SSLSocketFactory();\n+        }\n+        return instance;\n+    }\n+\n+    @Override\n+    public String[] getDefaultCipherSuites() {\n+        return sslsf.getDefaultCipherSuites();\n+    }\n+\n+    @Override\n+    public String[] getSupportedCipherSuites() {\n+        return sslsf.getSupportedCipherSuites();\n+    }\n+\n+    @Override\n+    public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException {\n+        return sslsf.createSocket(socket, host, port, autoClose);\n+    }\n+\n+    @Override\n+    public Socket createSocket(String host, int port) throws IOException {\n+        return sslsf.createSocket(host, port);\n+    }\n+\n+    @Override\n+    public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {\n+        return sslsf.createSocket(host, port, localHost, localPort);\n+    }\n+\n+    @Override\n+    public Socket createSocket(InetAddress host, int port) throws IOException {\n+        return sslsf.createSocket(host, port);\n+    }\n+\n+    @Override\n+    public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {\n+        return sslsf.createSocket(address, port, localAddress, localPort);\n+    }\n+}"
        },
        {
            "sha": "54cc6c3207d858f4f634ef746409bc26bce909ff",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/TruststoreProvider.java",
            "status": "added",
            "additions": 15,
            "deletions": 0,
            "changes": 15,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProvider.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProvider.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProvider.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,15 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.keycloak.provider.Provider;\n+\n+import java.security.KeyStore;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public interface TruststoreProvider extends Provider {\n+\n+    HostnameVerificationPolicy getPolicy();\n+\n+    KeyStore getTruststore();\n+}"
        },
        {
            "sha": "10ed86750f6a1fc9424c197134d50b814b94710b",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/TruststoreProviderFactory.java",
            "status": "added",
            "additions": 9,
            "deletions": 0,
            "changes": 9,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderFactory.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,9 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.keycloak.provider.ProviderFactory;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public interface TruststoreProviderFactory extends ProviderFactory<TruststoreProvider> {\n+}"
        },
        {
            "sha": "520e7814d1f2a7ceab0bc0935421445294605af0",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/TruststoreProviderSingleton.java",
            "status": "added",
            "additions": 17,
            "deletions": 0,
            "changes": 17,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderSingleton.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderSingleton.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreProviderSingleton.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,17 @@\n+package org.keycloak.connections.truststore;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+class TruststoreProviderSingleton {\n+\n+    static private TruststoreProvider provider;\n+\n+    static void set(TruststoreProvider tp) {\n+        provider = tp;\n+    }\n+\n+    static TruststoreProvider get() {\n+        return provider;\n+    }\n+}"
        },
        {
            "sha": "385346e6004d3356b4c5a6484482d8450135bc33",
            "filename": "connections/truststore/src/main/java/org/keycloak/connections/truststore/TruststoreSpi.java",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreSpi.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreSpi.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Fconnections%2Ftruststore%2FTruststoreSpi.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,31 @@\n+package org.keycloak.connections.truststore;\n+\n+import org.keycloak.provider.Provider;\n+import org.keycloak.provider.ProviderFactory;\n+import org.keycloak.provider.Spi;\n+\n+/**\n+ * @author <a href=\"mailto:mstrukel@redhat.com\">Marko Strukelj</a>\n+ */\n+public class TruststoreSpi implements Spi {\n+\n+    @Override\n+    public boolean isInternal() {\n+        return true;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"truststore\";\n+    }\n+\n+    @Override\n+    public Class<? extends Provider> getProviderClass() {\n+        return TruststoreProvider.class;\n+    }\n+\n+    @Override\n+    public Class<? extends ProviderFactory> getProviderFactoryClass() {\n+        return TruststoreProviderFactory.class;\n+    }\n+}"
        },
        {
            "sha": "5b38b43c634b71a9430af5fd3475d8f71d1a9b2b",
            "filename": "connections/truststore/src/main/resources/META-INF/services/org.keycloak.connections.truststore.TruststoreProviderFactory",
            "status": "added",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.connections.truststore.TruststoreProviderFactory",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.connections.truststore.TruststoreProviderFactory",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.connections.truststore.TruststoreProviderFactory?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1 @@\n+org.keycloak.connections.truststore.FileTruststoreProviderFactory\n\\ No newline at end of file"
        },
        {
            "sha": "3be9970d469827cbc4e7e198f2fd000ac0e33fef",
            "filename": "connections/truststore/src/main/resources/META-INF/services/org.keycloak.provider.Spi",
            "status": "added",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.provider.Spi",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.provider.Spi",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/connections%2Ftruststore%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fservices%2Forg.keycloak.provider.Spi?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1 @@\n+org.keycloak.connections.truststore.TruststoreSpi\n\\ No newline at end of file"
        },
        {
            "sha": "422cc2852ae9356ec23c8d1295f091b1e051bf0d",
            "filename": "dependencies/server-min/pom.xml",
            "status": "modified",
            "additions": 4,
            "deletions": 1,
            "changes": 5,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/dependencies%2Fserver-min%2Fpom.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/dependencies%2Fserver-min%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/dependencies%2Fserver-min%2Fpom.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -131,7 +131,10 @@\n             <groupId>org.keycloak</groupId>\n             <artifactId>keycloak-export-import-single-file</artifactId>\n         </dependency>\n-\n+        <dependency>\n+            <groupId>org.keycloak</groupId>\n+            <artifactId>keycloak-connections-truststore</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.keycloak</groupId>\n             <artifactId>keycloak-connections-http-client</artifactId>"
        },
        {
            "sha": "a5b4d1b82778eb2dd503704b450c8c05c8352ebd",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/content/standalone/configuration/keycloak-server.json",
            "status": "modified",
            "additions": 1,
            "deletions": 3,
            "changes": 4,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fcontent%2Fstandalone%2Fconfiguration%2Fkeycloak-server.json",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fcontent%2Fstandalone%2Fconfiguration%2Fkeycloak-server.json",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fcontent%2Fstandalone%2Fconfiguration%2Fkeycloak-server.json?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -45,9 +45,7 @@\n     },\n \n     \"connectionsHttpClient\": {\n-        \"default\": {\n-            \"disable-trust-manager\": true\n-        }\n+        \"default\": {}\n     },\n \n     \"connectionsJpa\": {"
        },
        {
            "sha": "e7e18c26ba2ee257f9c90ea8dfd42226f576d999",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-broker-core/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -13,6 +13,7 @@\n         <module name=\"org.keycloak.keycloak-events-api\"/>\n         <module name=\"javax.ws.rs.api\"/>\n         <module name=\"org.jboss.logging\"/>\n+        <module name=\"javax.api\"/>\n     </dependencies>\n \n </module>"
        },
        {
            "sha": "d070fa9859a3b6200260642818d59b70bf6fa2bd",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-broker-oidc/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -13,6 +13,7 @@\n         <module name=\"org.keycloak.keycloak-events-api\"/>\n         <module name=\"org.keycloak.keycloak-broker-core\"/>\n         <module name=\"org.keycloak.keycloak-services\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\"/>\n         <module name=\"org.codehaus.jackson.jackson-core-asl\"/>\n         <module name=\"org.codehaus.jackson.jackson-mapper-asl\"/>\n         <module name=\"org.codehaus.jackson.jackson-xc\"/>"
        },
        {
            "sha": "5611eca9bf1c2e02bb86d3ca660147dcceaccd7d",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-connections-http-client/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -16,6 +16,7 @@\n         <module name=\"org.jboss.logging\"/>\n         <module name=\"javax.api\"/>\n         <module name=\"org.apache.httpcomponents\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\"/>\n     </dependencies>\n \n </module>"
        },
        {
            "sha": "8599425107ff5a2ff52ac9f053256c70cda62577",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-connections-truststore/main/module.xml",
            "status": "added",
            "additions": 17,
            "deletions": 0,
            "changes": 17,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+\n+\n+<module xmlns=\"urn:jboss:module:1.3\" name=\"org.keycloak.keycloak-connections-truststore\">\n+    <resources>\n+        <artifact name=\"${org.keycloak:keycloak-connections-truststore}\"/>\n+    </resources>\n+    <dependencies>\n+        <module name=\"org.keycloak.keycloak-core\"/>\n+        <module name=\"org.keycloak.keycloak-model-api\"/>\n+        <module name=\"org.jboss.logging\"/>\n+        <module name=\"javax.api\"/>\n+        <module name=\"org.apache.httpcomponents\"/>\n+    </dependencies>\n+\n+</module>\n\\ No newline at end of file"
        },
        {
            "sha": "0a67753f3f264f5a90d94f89897826ab1e1f0e77",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-server-subsystem/main/server-war/WEB-INF/jboss-deployment-structure.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -8,6 +8,7 @@\n             <module name=\"org.keycloak.keycloak-connections-jpa-liquibase\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-connections-mongo\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-connections-mongo-update\" services=\"import\"/>\n+            <module name=\"org.keycloak.keycloak-connections-truststore\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-common\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-core\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-email-api\" services=\"import\"/>"
        },
        {
            "sha": "12d9ebb728216286a48484cdf0ffb08f5741f90a",
            "filename": "distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/base/org/keycloak/keycloak-services/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Ffeature-packs%2Fserver-feature-pack%2Fsrc%2Fmain%2Fresources%2Fmodules%2Fsystem%2Flayers%2Fbase%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -18,6 +18,7 @@\n         <module name=\"org.keycloak.keycloak-connections-jpa-liquibase\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-connections-mongo\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-connections-mongo-update\" services=\"import\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-common\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-core\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-email-api\" services=\"import\"/>"
        },
        {
            "sha": "97cbb6f5de5cc801d544e9d4a10aa8efbd019566",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/build.xml",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fbuild.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fbuild.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fbuild.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -181,6 +181,10 @@\n             <maven-resource group=\"org.keycloak\" artifact=\"keycloak-connections-infinispan\"/>\n         </module-def>\n \n+        <module-def name=\"org.keycloak.keycloak-connections-truststore\">\n+            <maven-resource group=\"org.keycloak\" artifact=\"keycloak-connections-truststore\"/>\n+        </module-def>\n+\n         <module-def name=\"org.keycloak.keycloak-model-jpa\">\n             <maven-resource group=\"org.keycloak\" artifact=\"keycloak-model-jpa\"/>\n         </module-def>"
        },
        {
            "sha": "6cb957f5104f7bee2e48021af4d9673f65ecfb18",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-broker-core/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-core%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -13,6 +13,7 @@\n         <module name=\"org.keycloak.keycloak-events-api\"/>\n         <module name=\"javax.ws.rs.api\"/>\n         <module name=\"org.jboss.logging\"/>\n+        <module name=\"javax.api\"/>\n     </dependencies>\n \n </module>"
        },
        {
            "sha": "b8724689fdf0eed3994fffed677aea69b6f0525a",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-broker-oidc/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-broker-oidc%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -13,6 +13,7 @@\n         <module name=\"org.keycloak.keycloak-events-api\"/>\n         <module name=\"org.keycloak.keycloak-broker-core\"/>\n         <module name=\"org.keycloak.keycloak-services\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\"/>\n         <module name=\"org.codehaus.jackson.jackson-core-asl\"/>\n         <module name=\"org.codehaus.jackson.jackson-mapper-asl\"/>\n         <module name=\"org.codehaus.jackson.jackson-xc\"/>"
        },
        {
            "sha": "a10b80f70a1c36698c9aca55f1cba4b3c2fc971d",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-connections-http-client/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-http-client%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -13,6 +13,7 @@\n         <module name=\"org.keycloak.keycloak-common\"/>\n         <module name=\"org.keycloak.keycloak-core\"/>\n         <module name=\"org.keycloak.keycloak-model-api\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\"/>\n         <module name=\"org.jboss.logging\"/>\n         <module name=\"javax.api\"/>\n         <module name=\"org.apache.httpcomponents\"/>"
        },
        {
            "sha": "5c449760f08b470b7cafd38166c5392972c24669",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-connections-truststore/main/module.xml",
            "status": "added",
            "additions": 17,
            "deletions": 0,
            "changes": 17,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-connections-truststore%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+\n+\n+<module xmlns=\"urn:jboss:module:1.1\" name=\"org.keycloak.keycloak-connections-truststore\">\n+    <resources>\n+        <!-- Insert resources here -->\n+    </resources>\n+    <dependencies>\n+        <module name=\"org.keycloak.keycloak-core\"/>\n+        <module name=\"org.keycloak.keycloak-model-api\"/>\n+        <module name=\"org.jboss.logging\"/>\n+        <module name=\"javax.api\"/>\n+        <module name=\"org.apache.httpcomponents\"/>\n+    </dependencies>\n+\n+</module>\n\\ No newline at end of file"
        },
        {
            "sha": "0a67753f3f264f5a90d94f89897826ab1e1f0e77",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-eap6-server-subsystem/main/server-war/WEB-INF/jboss-deployment-structure.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-eap6-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-eap6-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-eap6-server-subsystem%2Fmain%2Fserver-war%2FWEB-INF%2Fjboss-deployment-structure.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -8,6 +8,7 @@\n             <module name=\"org.keycloak.keycloak-connections-jpa-liquibase\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-connections-mongo\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-connections-mongo-update\" services=\"import\"/>\n+            <module name=\"org.keycloak.keycloak-connections-truststore\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-common\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-core\" services=\"import\"/>\n             <module name=\"org.keycloak.keycloak-email-api\" services=\"import\"/>"
        },
        {
            "sha": "893c5e2a7db3ae8dedc63a73ba0846df1aeae8b5",
            "filename": "distribution/server-overlay/eap6/eap6-server-modules/src/main/resources/modules/org/keycloak/keycloak-services/main/module.xml",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/distribution%2Fserver-overlay%2Feap6%2Feap6-server-modules%2Fsrc%2Fmain%2Fresources%2Fmodules%2Forg%2Fkeycloak%2Fkeycloak-services%2Fmain%2Fmodule.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -18,6 +18,7 @@\n         <module name=\"org.keycloak.keycloak-connections-jpa-liquibase\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-connections-mongo\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-connections-mongo-update\" services=\"import\"/>\n+        <module name=\"org.keycloak.keycloak-connections-truststore\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-common\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-core\" services=\"import\"/>\n         <module name=\"org.keycloak.keycloak-email-api\" services=\"import\"/>"
        },
        {
            "sha": "369d5f1b30ca32aca3f7ac8c2e17c15ba8a434f0",
            "filename": "docbook/auth-server-docs/reference/en/en-US/modules/server-installation.xml",
            "status": "modified",
            "additions": 96,
            "deletions": 47,
            "changes": 143,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/docbook%2Fauth-server-docs%2Freference%2Fen%2Fen-US%2Fmodules%2Fserver-installation.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/docbook%2Fauth-server-docs%2Freference%2Fen%2Fen-US%2Fmodules%2Fserver-installation.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/docbook%2Fauth-server-docs%2Freference%2Fen%2Fen-US%2Fmodules%2Fserver-installation.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -382,9 +382,7 @@ bin/add-user.[sh|bat] -r master -u <username> -p <password>\n                 By default the setting is like this:\n <programlisting><![CDATA[\n \"connectionsHttpClient\": {\n-    \"default\": {\n-        \"disable-trust-manager\": true\n-    }\n+    \"default\": {}\n },\n ]]></programlisting>\n                 Possible configuration options are:\n@@ -421,15 +419,6 @@ bin/add-user.[sh|bat] -r master -u <username> -p <password>\n                             </para>\n                         </listitem>\n                     </varlistentry>\n-                    <varlistentry>\n-                        <term>disable-trust-manager</term>\n-                        <listitem>\n-                            <para>\n-                                If true, HTTPS server certificates are not verified.  If you set this to false, you must\n-                                configure a truststore.\n-                            </para>\n-                        </listitem>\n-                    </varlistentry>\n                     <varlistentry>\n                         <term>disable-cookies</term>\n                         <listitem>\n@@ -440,89 +429,149 @@ bin/add-user.[sh|bat] -r master -u <username> -p <password>\n                         </listitem>\n                     </varlistentry>\n                     <varlistentry>\n-                        <term>hostname-verification-policy</term>\n+                        <term>client-keystore</term>\n                         <listitem>\n                             <para>\n-                                <literal>WILDCARD</literal> by default.  For HTTPS requests, this verifies the hostname\n-                                of the server's certificate.  <literal>ANY</literal> means that the hostname is not verified.\n-                                <literal>WILDCARD</literal> Allows wildcards in subdomain names i.e. *.foo.com.\n-                                <literal>STRICT</literal> CN must match hostname exactly.\n+                                This is the file path to a Java keystore file.\n+                                This keystore contains client certificate for two-way SSL.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n                     <varlistentry>\n-                        <term>truststore</term>\n+                        <term>client-keystore-password</term>\n                         <listitem>\n                             <para>\n-                                The value is the file path to a Java keystore file.  If\n-                                you prefix the path with <literal>classpath:</literal>, then the truststore will be obtained\n-                                from the deployment's classpath instead.\n-                                HTTPS\n-                                requests need a way to verify the host of the server they are talking to. This is\n-                                what the trustore does. The keystore contains one or more trusted\n-                                host certificates or certificate authorities.\n+                                Password for the client keystore.\n+                                This is\n+                                <emphasis>REQUIRED</emphasis>\n+                                if\n+                                <literal>client-keystore</literal>\n+                                is set.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n                     <varlistentry>\n-                        <term>truststore-password</term>\n+                        <term>client-key-password</term>\n                         <listitem>\n                             <para>\n-                                Password for the truststore keystore.\n+                                <emphasis>Not supported yet, but we will support in future versions.</emphasis>\n+                                Password for the client's key.\n                                 This is\n                                 <emphasis>REQUIRED</emphasis>\n                                 if\n-                                <literal>truststore</literal>\n+                                <literal>client-keystore</literal>\n                                 is set.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n+                </variablelist>\n+            </para>\n+        </section>\n+        <section id=\"truststore\">\n+            <title>Securing Outgoing Server HTTP Requests</title>\n+            <para>\n+            When Keycloak connects out to remote HTTP endpoints over secure https connection, it has to validate the other\n+            server's certificate in order to ensure it is connecting to a trusted server. That is necessary in order to\n+            prevent man-in-the-middle attacks.\n+            </para>\n+            <para>\n+            How certificates are validated is configured in the <literal>standalone/configuration/keycloak-server.json</literal>.\n+            By default truststore provider is not configured, and any https connections fall back to standard java truststore\n+            configuration as described in <ulink url=\"https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html\">\n+            Java's JSSE Reference Guide</ulink> - using <literal>javax.net.ssl.trustStore system property</literal>,\n+            otherwise <literal>cacerts</literal> file that comes with java is used.\n+            </para>\n+            <para>\n+                Truststore is used when connecting securely to identity brokers, LDAP identity providers, when sending emails,\n+                and for backchannel communication with client applications.\n+\n+                Some of these facilities may - in case when no trusted certificate is found in your configured truststore -\n+                fallback to using the JSSE provided truststore.\n+\n+                The default JavaMail API implementation used to send out emails behaves in this way, for example.\n+            </para>\n+            <para>\n+            You can add your truststore configuration by using the following template:\n+\n+            <programlisting><![CDATA[\n+\"truststore\": {\n+    \"file\": {\n+        \"file\": \"path to your .jks file containing public certificates\",\n+        \"password\": \"password\",\n+        \"hostname-verification-policy\": \"WILDCARD\",\n+        \"disabled\": false\n+    }\n+}\n+]]></programlisting>\n+\n+            </para>\n+            <para>\n+            Possible configuration options are:\n+\n+                <variablelist>\n                     <varlistentry>\n-                        <term>client-keystore</term>\n+                        <term>file</term>\n                         <listitem>\n                             <para>\n-                                This is the file path to a Java keystore file.\n-                                This keystore contains client certificate for two-way SSL.\n+                                The value is the file path to a Java keystore file.\n+                                HTTPS requests need a way to verify the host of the server they are talking to. This is\n+                                what the trustore does. The keystore contains one or more trusted host certificates or\n+                                certificate authorities. Truststore file should only contain public certificates of your secured hosts.\n+\n+                                This is\n+                                <emphasis>REQUIRED</emphasis>\n+                                if <literal>disabled</literal> is not true.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n                     <varlistentry>\n-                        <term>client-keystore-password</term>\n+                        <term>password</term>\n                         <listitem>\n                             <para>\n-                                Password for the client keystore.\n+                                Password for the truststore.\n                                 This is\n                                 <emphasis>REQUIRED</emphasis>\n-                                if\n-                                <literal>client-keystore</literal>\n-                                is set.\n+                                if <literal>disabled</literal> is not true.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n                     <varlistentry>\n-                        <term>client-key-password</term>\n+                        <term>hostname-verification-policy</term>\n                         <listitem>\n                             <para>\n-                                <emphasis>Not supported yet, but we will support in future versions.</emphasis>\n-                                Password for the client's key.\n-                                This is\n-                                <emphasis>REQUIRED</emphasis>\n-                                if\n-                                <literal>client-keystore</literal>\n-                                is set.\n+                                <literal>WILDCARD</literal> by default.  For HTTPS requests, this verifies the hostname\n+                                of the server's certificate.  <literal>ANY</literal> means that the hostname is not verified.\n+                                <literal>WILDCARD</literal> Allows wildcards in subdomain names i.e. *.foo.com.\n+                                <literal>STRICT</literal> CN must match hostname exactly.\n+                            </para>\n+                        </listitem>\n+                    </varlistentry>\n+                    <varlistentry>\n+                        <term>disabled</term>\n+                        <listitem>\n+                            <para>\n+                                If true (default value), truststore configuration will be ignored, and certificate checking will\n+                                fall back to JSSE configuration as described. If set to false, you must\n+                                configure <literal>file</literal>, and <literal>password</literal> for the truststore.\n                             </para>\n                         </listitem>\n                     </varlistentry>\n                 </variablelist>\n             </para>\n+            <para>\n+            You can use <emphasis>keytool</emphasis> to create a new truststore file and add trusted host certificates to it:\n+\n+                <programlisting>\n+$ keytool -import -alias HOSTDOMAIN -keystore truststore.jks -file host-certificate.cer\n+                </programlisting>\n+            </para>\n         </section>\n         <section id=\"ssl_modes\">\n             <title>SSL/HTTPS Requirement/Modes</title>\n             <warning>\n                 <para>\n-                    Keycloak is not set up by default to handle SSL/HTTPS in either the\n-                    war distribution or appliance.  It is highly recommended that you either enable SSL on the Keycloak server\n-                    itself or on a reverse proxy in front of the Keycloak server.\n+                    Keycloak is not set up by default to handle SSL/HTTPS. It is highly recommended that you either enable SSL\n+                    on the Keycloak server itself or on a reverse proxy in front of the Keycloak server.\n                 </para>\n             </warning>\n             <para>"
        },
        {
            "sha": "612fd7343c297c3748035f4bfb6a9871fa5e0cb6",
            "filename": "federation/ldap/src/main/java/org/keycloak/federation/ldap/idm/store/ldap/LDAPOperationManager.java",
            "status": "modified",
            "additions": 3,
            "deletions": 0,
            "changes": 3,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/federation%2Fldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Ffederation%2Fldap%2Fidm%2Fstore%2Fldap%2FLDAPOperationManager.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/federation%2Fldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Ffederation%2Fldap%2Fidm%2Fstore%2Fldap%2FLDAPOperationManager.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/federation%2Fldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Ffederation%2Fldap%2Fidm%2Fstore%2Fldap%2FLDAPOperationManager.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -467,6 +467,9 @@ private Map<String, Object> createConnectionProperties() {\n \n         if (protocol != null) {\n             env.put(Context.SECURITY_PROTOCOL, protocol);\n+            if (\"ssl\".equals(protocol)) {\n+                env.put(\"java.naming.ldap.factory.socket\", \"org.keycloak.connections.truststore.SSLSocketFactory\");\n+            }\n         }\n \n         String bindDN = this.config.getBindDN();"
        },
        {
            "sha": "83ac183320bb5826f83f30b69be94fffcd83e2cf",
            "filename": "pom.xml",
            "status": "modified",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/pom.xml",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/pom.xml",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/pom.xml?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -640,6 +640,11 @@\n                 <artifactId>keycloak-connections-mongo-update</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.keycloak</groupId>\n+                <artifactId>keycloak-connections-truststore</artifactId>\n+                <version>${project.version}</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.keycloak</groupId>\n                 <artifactId>keycloak-common</artifactId>"
        },
        {
            "sha": "5f7f68bb9efac6bdcdb5af663b1e05467c44dac0",
            "filename": "services/src/main/java/org/keycloak/email/DefaultEmailSenderProvider.java",
            "status": "modified",
            "additions": 25,
            "deletions": 1,
            "changes": 26,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProvider.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProvider.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProvider.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -1,6 +1,9 @@\n package org.keycloak.email;\n \n import org.jboss.logging.Logger;\n+import org.keycloak.connections.truststore.HostnameVerificationPolicy;\n+import org.keycloak.connections.truststore.JSSETruststoreConfigurator;\n+import org.keycloak.models.KeycloakSession;\n import org.keycloak.models.RealmModel;\n import org.keycloak.models.UserModel;\n \n@@ -12,6 +15,8 @@\n import javax.mail.internet.MimeBodyPart;\n import javax.mail.internet.MimeMessage;\n import javax.mail.internet.MimeMultipart;\n+import java.security.KeyManagementException;\n+import java.security.NoSuchAlgorithmException;\n import java.util.Date;\n import java.util.Map;\n import java.util.Properties;\n@@ -23,6 +28,12 @@ public class DefaultEmailSenderProvider implements EmailSenderProvider {\n \n     private static final Logger log = Logger.getLogger(DefaultEmailSenderProvider.class);\n \n+    private final KeycloakSession session;\n+\n+    public DefaultEmailSenderProvider(KeycloakSession session) {\n+        this.session = session;\n+    }\n+\n     @Override\n     public void send(RealmModel realm, UserModel user, String subject, String textBody, String htmlBody) throws EmailException {\n         try {\n@@ -52,6 +63,10 @@ public void send(RealmModel realm, UserModel user, String subject, String textBo\n                 props.setProperty(\"mail.smtp.starttls.enable\", \"true\");\n             }\n \n+            if (ssl || starttls) {\n+                setupTruststore(props);\n+            }\n+\n             props.setProperty(\"mail.smtp.timeout\", \"10000\");\n             props.setProperty(\"mail.smtp.connectiontimeout\", \"10000\");\n \n@@ -94,9 +109,18 @@ public void send(RealmModel realm, UserModel user, String subject, String textBo\n         }\n     }\n \n+    private void setupTruststore(Properties props) throws NoSuchAlgorithmException, KeyManagementException {\n+\n+        JSSETruststoreConfigurator configurator = new JSSETruststoreConfigurator(session);\n+\n+        props.put(\"mail.smtp.ssl.socketFactory\", configurator.getSSLSocketFactory());\n+        if (configurator.getProvider().getPolicy() == HostnameVerificationPolicy.ANY) {\n+            props.setProperty(\"mail.smtp.ssl.trust\", \"*\");\n+        }\n+    }\n+\n     @Override\n     public void close() {\n \n     }\n-\n }"
        },
        {
            "sha": "de8dfd7d7c1b01a96bfa760865dae406d261447d",
            "filename": "services/src/main/java/org/keycloak/email/DefaultEmailSenderProviderFactory.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProviderFactory.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProviderFactory.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/services%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Femail%2FDefaultEmailSenderProviderFactory.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -11,7 +11,7 @@ public class DefaultEmailSenderProviderFactory implements EmailSenderProviderFac\n \n     @Override\n     public EmailSenderProvider create(KeycloakSession session) {\n-        return new DefaultEmailSenderProvider();\n+        return new DefaultEmailSenderProvider(session);\n     }\n \n     @Override"
        },
        {
            "sha": "09782319bca115739a0018dd50f7d2969bde3ca8",
            "filename": "testsuite/integration-arquillian/tests/base/src/test/resources/META-INF/keycloak-server.json",
            "status": "modified",
            "additions": 11,
            "deletions": 4,
            "changes": 15,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/testsuite%2Fintegration-arquillian%2Ftests%2Fbase%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/testsuite%2Fintegration-arquillian%2Ftests%2Fbase%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/testsuite%2Fintegration-arquillian%2Ftests%2Fbase%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -72,9 +72,7 @@\n     },\n \n     \"connectionsHttpClient\": {\n-        \"default\": {\n-            \"disable-trust-manager\": true\n-        }\n+        \"default\": {}\n     },\n \n \n@@ -99,5 +97,14 @@\n             \"databaseSchema\": \"${keycloak.connectionsMongo.databaseSchema:update}\",\n             \"connectionsPerHost\": \"${keycloak.connectionsMongo.connectionsPerHost:100}\"\n         }\n+    },\n+\n+    \"truststore\": {\n+        \"file\": {\n+            \"file\": \"${keycloak.truststore.file:src/main/keystore/keycloak.truststore}\",\n+            \"password\": \"${keycloak.truststore.password:secret}\",\n+            \"hostname-verification-policy\": \"${keycloak.truststore.policy:WILDCARD}\",\n+            \"disabled\": \"${keycloak.truststore.disabled:true}\"\n+        }\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
            "sha": "41c2cf5fa28354ffc8496954bf0caec93d13266f",
            "filename": "testsuite/integration/src/test/resources/META-INF/keycloak-server.json",
            "status": "modified",
            "additions": 1,
            "deletions": 3,
            "changes": 4,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/testsuite%2Fintegration%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/testsuite%2Fintegration%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/testsuite%2Fintegration%2Fsrc%2Ftest%2Fresources%2FMETA-INF%2Fkeycloak-server.json?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -51,9 +51,7 @@\n     },\n \n     \"connectionsHttpClient\": {\n-        \"default\": {\n-            \"disable-trust-manager\": true\n-        }\n+        \"default\": {}\n     },\n \n "
        },
        {
            "sha": "cdc919e9068caea3e69d3f9787b78e007693d784",
            "filename": "util/embedded-ldap/src/main/java/org/keycloak/util/ldap/LDAPEmbeddedServer.java",
            "status": "modified",
            "additions": 14,
            "deletions": 0,
            "changes": 14,
            "blob_url": "https://github.com/keycloak/keycloak/blob/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/util%2Fembedded-ldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Futil%2Fldap%2FLDAPEmbeddedServer.java",
            "raw_url": "https://github.com/keycloak/keycloak/raw/80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7/util%2Fembedded-ldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Futil%2Fldap%2FLDAPEmbeddedServer.java",
            "contents_url": "https://api.github.com/repos/keycloak/keycloak/contents/util%2Fembedded-ldap%2Fsrc%2Fmain%2Fjava%2Forg%2Fkeycloak%2Futil%2Fldap%2FLDAPEmbeddedServer.java?ref=80e2b8eb39af640eaf6cec8b9dcdd0eef7c48aa7",
            "patch": "@@ -43,6 +43,9 @@ public class LDAPEmbeddedServer {\n     private static final String DEFAULT_BIND_HOST = \"localhost\";\n     private static final String DEFAULT_BIND_PORT = \"10389\";\n     private static final String DEFAULT_LDIF_FILE = \"classpath:ldap/default-users.ldif\";\n+    private static final String PROPERTY_ENABLE_SSL = \"enableSSL\";\n+    private static final String PROPERTY_KEYSTORE_FILE = \"keystoreFile\";\n+    private static final String PROPERTY_CERTIFICATE_PASSWORD = \"certificatePassword\";\n \n     public static final String DSF_INMEMORY = \"mem\";\n     public static final String DSF_FILE = \"file\";\n@@ -56,6 +59,9 @@ public class LDAPEmbeddedServer {\n     protected String ldifFile;\n     protected String ldapSaslPrincipal;\n     protected String directoryServiceFactory;\n+    protected boolean enableSSL = false;\n+    protected String keystoreFile;\n+    protected String certPassword;\n \n     protected DirectoryService directoryService;\n     protected LdapServer ldapServer;\n@@ -97,6 +103,9 @@ public LDAPEmbeddedServer(Properties defaultProperties) {\n         this.ldifFile = readProperty(PROPERTY_LDIF_FILE, DEFAULT_LDIF_FILE);\n         this.ldapSaslPrincipal = readProperty(PROPERTY_SASL_PRINCIPAL, null);\n         this.directoryServiceFactory = readProperty(PROPERTY_DSF, DEFAULT_DSF);\n+        this.enableSSL = Boolean.valueOf(readProperty(PROPERTY_ENABLE_SSL, \"false\"));\n+        this.keystoreFile = readProperty(PROPERTY_KEYSTORE_FILE, null);\n+        this.certPassword = readProperty(PROPERTY_CERTIFICATE_PASSWORD, null);\n     }\n \n     protected String readProperty(String propertyName, String defaultValue) {\n@@ -194,6 +203,11 @@ protected LdapServer createLdapServer() {\n \n         // Read the transports\n         Transport ldap = new TcpTransport(this.bindHost, this.bindPort, 3, 50);\n+        if (enableSSL) {\n+            ldap.setEnableSSL(true);\n+            ldapServer.setKeystoreFile(keystoreFile);\n+            ldapServer.setCertificatePassword(certPassword);\n+        }\n         ldapServer.addTransports( ldap );\n \n         // Associate the DS to this LdapServer"
        }
    ]
}