{
    "sha": "8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDo4NDYwZDc3MTJkY2JiNzJlM2Q0ZjJmOGViYjlhMjZmYzRlOWRkY2Y5",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2016-06-08T14:52:58Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2016-06-08T14:52:58Z"
        },
        "message": "Fix a cause of multiple attempts to close the same socket.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1747404 13f79535-47bb-0310-9956-ffa450edef68",
        "tree": {
            "sha": "22da293e2c7cc55423599eaa44ea2d04f9b3270c",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/22da293e2c7cc55423599eaa44ea2d04f9b3270c"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
    "html_url": "https://github.com/apache/tomcat/commit/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "00f6ccccb2aaee7b227b4d75cd3bfa703ae37203",
            "url": "https://api.github.com/repos/apache/tomcat/commits/00f6ccccb2aaee7b227b4d75cd3bfa703ae37203",
            "html_url": "https://github.com/apache/tomcat/commit/00f6ccccb2aaee7b227b4d75cd3bfa703ae37203"
        }
    ],
    "stats": {
        "total": 39,
        "additions": 37,
        "deletions": 2
    },
    "files": [
        {
            "sha": "589e071df27bea06df576305b2d730249875bb1a",
            "filename": "java/org/apache/tomcat/util/net/AprEndpoint.java",
            "status": "modified",
            "additions": 8,
            "deletions": 0,
            "changes": 8,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FAprEndpoint.java",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FAprEndpoint.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FAprEndpoint.java?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -2436,6 +2436,14 @@ public void close() {\n         }\n \n \n+        @Override\n+        public boolean isClosed() {\n+            synchronized (closedLock) {\n+                return closed;\n+            }\n+        }\n+\n+\n         @Override\n         protected void doWrite(boolean block) throws IOException {\n             if (closed) {"
        },
        {
            "sha": "a4b32aa8735fc8c11cd977f3e85e51c048406fd1",
            "filename": "java/org/apache/tomcat/util/net/Nio2Endpoint.java",
            "status": "modified",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -895,6 +895,13 @@ public void close() throws IOException {\n             getSocket().close();\n         }\n \n+\n+        @Override\n+        public boolean isClosed() {\n+            return !getSocket().isOpen();\n+        }\n+\n+\n         @Override\n         public boolean hasAsyncIO() {\n             return false;"
        },
        {
            "sha": "52d0a8a3e61f549e55e93f3b5867b3e86cd19dea",
            "filename": "java/org/apache/tomcat/util/net/NioEndpoint.java",
            "status": "modified",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -1186,6 +1186,12 @@ public void close() throws IOException {\n         }\n \n \n+        @Override\n+        public boolean isClosed() {\n+            return !getSocket().isOpen();\n+        }\n+\n+\n         private int fillReadBuffer(boolean block) throws IOException {\n             int nRead;\n             NioChannel channel = getSocket();"
        },
        {
            "sha": "4948192fe9fcdc75f3e562ffbca9b91fb904f97b",
            "filename": "java/org/apache/tomcat/util/net/SocketProcessorBase.java",
            "status": "modified",
            "additions": 8,
            "deletions": 0,
            "changes": 8,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketProcessorBase.java",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketProcessorBase.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketProcessorBase.java?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -41,6 +41,14 @@ public void reset(SocketWrapperBase<S> socketWrapper, SocketEvent event) {\n     @Override\n     public final void run() {\n         synchronized (socketWrapper) {\n+            // It is possible that processing may be triggered for read and\n+            // write at the same time. The sync above makes sure that processing\n+            // does not occur in parallel. The test below ensures that if the\n+            // first event to be processed results in the socket being closed,\n+            // the subsequent events are not processed.\n+            if (socketWrapper.isClosed()) {\n+                return;\n+            }\n             doRun();\n         }\n     }"
        },
        {
            "sha": "dfe72e06374879406eb89084ed581f713f7e7042",
            "filename": "java/org/apache/tomcat/util/net/SocketWrapperBase.java",
            "status": "modified",
            "additions": 1,
            "deletions": 2,
            "changes": 3,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketWrapperBase.java",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketWrapperBase.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FSocketWrapperBase.java?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -297,7 +297,7 @@ public void unRead(ByteBuffer returnedInput) {\n \n \n     public abstract void close() throws IOException;\n-\n+    public abstract boolean isClosed();\n \n     /**\n      * Writes the provided data to the socket, buffering any remaining data if\n@@ -852,5 +852,4 @@ protected static void transfer(ByteBuffer from, ByteBuffer to) {\n         to.put(from);\n         from.limit(fromLimit);\n     }\n-\n }"
        },
        {
            "sha": "03f824856ed84b67b03f6d4ccde977143ceb9e37",
            "filename": "webapps/docs/changelog.xml",
            "status": "modified",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/apache/tomcat/blob/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/webapps%2Fdocs%2Fchangelog.xml",
            "raw_url": "https://github.com/apache/tomcat/raw/8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9/webapps%2Fdocs%2Fchangelog.xml",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/webapps%2Fdocs%2Fchangelog.xml?ref=8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9",
            "patch": "@@ -45,6 +45,13 @@\n   issues do not \"pop up\" wrt. others).\n -->\n <section name=\"Tomcat 9.0.0.M9\" rtext=\"in development\">\n+  <subsection name=\"Coyote\">\n+    <changelog>\n+      <fix>\n+        Fix a cause of multiple attempts to close the same socket. (markt)\n+      </fix>\n+    </changelog>\n+  </subsection>\n   <subsection name=\"Other\">\n     <changelog>\n       <fix>"
        }
    ]
}