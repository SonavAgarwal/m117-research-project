{
    "sha": "176f6fc0b83eefc4e196370e9d12775c99b711ea",
    "node_id": "MDY6Q29tbWl0NDgxMjk4MjQ6MTc2ZjZmYzBiODNlZWZjNGUxOTYzNzBlOWQxMjc3NWM5OWI3MTFlYQ==",
    "commit": {
        "author": {
            "name": "w78",
            "email": "w7849516230@gmail.com",
            "date": "2017-03-27T09:58:06Z"
        },
        "committer": {
            "name": "James Sutton",
            "email": "jpwsutton@gmail.com",
            "date": "2017-03-27T09:58:06Z"
        },
        "message": "add setSSLHostnameVerifier method for fixing issue 38 (#303)\n\nBug:https://github.com/eclipse/paho.mqtt.java/issues/38\r\n\r\nSigned-off-by: shawn <w7849516230@gmail.com>",
        "tree": {
            "sha": "3b1376de8f6fb51f1f6ea31b26caa424d2fabef7",
            "url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/git/trees/3b1376de8f6fb51f1f6ea31b26caa424d2fabef7"
        },
        "url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/git/commits/176f6fc0b83eefc4e196370e9d12775c99b711ea",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/commits/176f6fc0b83eefc4e196370e9d12775c99b711ea",
    "html_url": "https://github.com/eclipse-paho/paho.mqtt.java/commit/176f6fc0b83eefc4e196370e9d12775c99b711ea",
    "comments_url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/commits/176f6fc0b83eefc4e196370e9d12775c99b711ea/comments",
    "author": {
        "login": "w7849516230",
        "id": 4648739,
        "node_id": "MDQ6VXNlcjQ2NDg3Mzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4648739?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w7849516230",
        "html_url": "https://github.com/w7849516230",
        "followers_url": "https://api.github.com/users/w7849516230/followers",
        "following_url": "https://api.github.com/users/w7849516230/following{/other_user}",
        "gists_url": "https://api.github.com/users/w7849516230/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/w7849516230/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/w7849516230/subscriptions",
        "organizations_url": "https://api.github.com/users/w7849516230/orgs",
        "repos_url": "https://api.github.com/users/w7849516230/repos",
        "events_url": "https://api.github.com/users/w7849516230/events{/privacy}",
        "received_events_url": "https://api.github.com/users/w7849516230/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "jpwsutton",
        "id": 1068763,
        "node_id": "MDQ6VXNlcjEwNjg3NjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1068763?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jpwsutton",
        "html_url": "https://github.com/jpwsutton",
        "followers_url": "https://api.github.com/users/jpwsutton/followers",
        "following_url": "https://api.github.com/users/jpwsutton/following{/other_user}",
        "gists_url": "https://api.github.com/users/jpwsutton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jpwsutton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jpwsutton/subscriptions",
        "organizations_url": "https://api.github.com/users/jpwsutton/orgs",
        "repos_url": "https://api.github.com/users/jpwsutton/repos",
        "events_url": "https://api.github.com/users/jpwsutton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jpwsutton/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "039a3d26ac428c27bf6ee9877d7e25564db5b131",
            "url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/commits/039a3d26ac428c27bf6ee9877d7e25564db5b131",
            "html_url": "https://github.com/eclipse-paho/paho.mqtt.java/commit/039a3d26ac428c27bf6ee9877d7e25564db5b131"
        }
    ],
    "stats": {
        "total": 38,
        "additions": 38,
        "deletions": 0
    },
    "files": [
        {
            "sha": "bb756be13a6a135a6ce1bd8ae2b91cd976637761",
            "filename": "org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/MqttAsyncClient.java",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/eclipse-paho/paho.mqtt.java/blob/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttAsyncClient.java",
            "raw_url": "https://github.com/eclipse-paho/paho.mqtt.java/raw/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttAsyncClient.java",
            "contents_url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/contents/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttAsyncClient.java?ref=176f6fc0b83eefc4e196370e9d12775c99b711ea",
            "patch": "@@ -507,6 +507,7 @@ else if ((factory instanceof SSLSocketFactory) == false) {\n \t\t\t// Create the network module...\n \t\t\tnetModule = new SSLNetworkModule((SSLSocketFactory) factory, host, port, clientId);\n \t\t\t((SSLNetworkModule)netModule).setSSLhandshakeTimeout(options.getConnectionTimeout());\n+\t\t\t((SSLNetworkModule)netModule).setSSLHostnameVerifier(options.getSSLHostnameVerifier());\n \t\t\t// Ciphers suites need to be set, if they are available\n \t\t\tif (factoryFactory != null) {\n \t\t\t\tString[] enabledCiphers = factoryFactory.getEnabledCipherSuites(null);"
        },
        {
            "sha": "c33079ecbd79e91d70c052d2a768f70ed4ad3504",
            "filename": "org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/MqttConnectOptions.java",
            "status": "modified",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/eclipse-paho/paho.mqtt.java/blob/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttConnectOptions.java",
            "raw_url": "https://github.com/eclipse-paho/paho.mqtt.java/raw/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttConnectOptions.java",
            "contents_url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/contents/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2FMqttConnectOptions.java?ref=176f6fc0b83eefc4e196370e9d12775c99b711ea",
            "patch": "@@ -20,6 +20,7 @@\n import java.util.Properties;\n \n import javax.net.SocketFactory;\n+import javax.net.ssl.HostnameVerifier;\n \n import org.eclipse.paho.client.mqttv3.util.Debug;\n \n@@ -73,6 +74,7 @@ public class MqttConnectOptions {\n \tprivate char[] password;\n \tprivate SocketFactory socketFactory;\n \tprivate Properties sslClientProps = null;\n+\tprivate HostnameVerifier sslHostnameVerifier = null;\n \tprivate boolean cleanSession = CLEAN_SESSION_DEFAULT;\n \tprivate int connectionTimeout = CONNECTION_TIMEOUT_DEFAULT;\n \tprivate String[] serverURIs = null;\n@@ -408,6 +410,26 @@ public void setSSLProperties(Properties props) {\n \t\tthis.sslClientProps = props;\n \t}\n \n+\t/**\n+     * Returns the HostnameVerifier for the SSL connection.\n+     * @return the HostnameVerifier for the SSL connection\n+     */\n+\tpublic HostnameVerifier getSSLHostnameVerifier() {\n+\t    return sslHostnameVerifier;\n+\t}\n+\n+    /**\n+     * Sets the HostnameVerifier for the SSL connection. Note that it will be\n+     * used after handshake on a connection and you should do actions by\n+     * yourserlf when hostname is verified error.\n+     * <p>\n+     * There is no default HostnameVerifier\n+     * </p>\n+     */\n+\tpublic void setSSLHostnameVerifier(HostnameVerifier hostnameVerifier) {\n+\t    this.sslHostnameVerifier = hostnameVerifier;\n+\t}\n+\n \t/**\n \t * Returns whether the client and server should remember state for the client across reconnects.\n \t * @return the clean session flag"
        },
        {
            "sha": "a20f3c6b3787853d176ac2d8e4ffac3c6dcc739f",
            "filename": "org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/internal/SSLNetworkModule.java",
            "status": "modified",
            "additions": 15,
            "deletions": 0,
            "changes": 15,
            "blob_url": "https://github.com/eclipse-paho/paho.mqtt.java/blob/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2Finternal%2FSSLNetworkModule.java",
            "raw_url": "https://github.com/eclipse-paho/paho.mqtt.java/raw/176f6fc0b83eefc4e196370e9d12775c99b711ea/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2Finternal%2FSSLNetworkModule.java",
            "contents_url": "https://api.github.com/repos/eclipse-paho/paho.mqtt.java/contents/org.eclipse.paho.client.mqttv3%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fpaho%2Fclient%2Fmqttv3%2Finternal%2FSSLNetworkModule.java?ref=176f6fc0b83eefc4e196370e9d12775c99b711ea",
            "patch": "@@ -17,6 +17,8 @@\n \n import java.io.IOException;\n \n+import javax.net.ssl.HostnameVerifier;\n+import javax.net.ssl.SSLSession;\n import javax.net.ssl.SSLSocket;\n import javax.net.ssl.SSLSocketFactory;\n \n@@ -33,6 +35,7 @@ public class SSLNetworkModule extends TCPNetworkModule {\n \n \tprivate String[] enabledCiphers;\n \tprivate int handshakeTimeoutSecs;\n+\tprivate HostnameVerifier hostnameVerifier;\n \t\n \tprivate String host;\n \tprivate int port;\n@@ -88,13 +91,25 @@ public void setSSLhandshakeTimeout(int timeout) {\n \t\tthis.handshakeTimeoutSecs = timeout;\n \t}\n \t\n+\tpublic HostnameVerifier getSSLHostnameVerifier() {\n+\t    return hostnameVerifier;\n+\t}\n+\n+\tpublic void setSSLHostnameVerifier(HostnameVerifier hostnameVerifier) {\n+\t    this.hostnameVerifier = hostnameVerifier;\n+\t}\n+\n \tpublic void start() throws IOException, MqttException {\n \t\tsuper.start();\n \t\tsetEnabledCiphers(enabledCiphers);\n \t\tint soTimeout = socket.getSoTimeout();\n \t\t// RTC 765: Set a timeout to avoid the SSL handshake being blocked indefinitely\n \t\tsocket.setSoTimeout(this.handshakeTimeoutSecs*1000);\n \t\t((SSLSocket)socket).startHandshake();\n+\t\tif (hostnameVerifier != null) {\n+\t\t    SSLSession session = ((SSLSocket)socket).getSession();\n+\t\t    hostnameVerifier.verify(host, session);\n+\t\t}\n \t\t// reset timeout to default value\n \t\tsocket.setSoTimeout(soTimeout);   \n \t}"
        }
    ]
}