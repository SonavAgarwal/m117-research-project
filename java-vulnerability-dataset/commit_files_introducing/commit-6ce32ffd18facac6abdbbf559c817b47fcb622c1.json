{
    "sha": "6ce32ffd18facac6abdbbf559c817b47fcb622c1",
    "node_id": "MDY6Q29tbWl0MzAzODkzNzo2Y2UzMmZmZDE4ZmFjYWM2YWJkYmJmNTU5YzgxN2I0N2ZjYjYyMmMx",
    "commit": {
        "author": {
            "name": "Tatu Saloranta",
            "email": "tatu.saloranta@iki.fi",
            "date": "2017-04-13T22:08:10Z"
        },
        "committer": {
            "name": "Tatu Saloranta",
            "email": "tatu.saloranta@iki.fi",
            "date": "2017-04-13T22:08:10Z"
        },
        "message": "Fix #1599 for 2.7(.10)",
        "tree": {
            "sha": "58a0fabd5b6427b4c4dfd65ad93067b07c89ed6f",
            "url": "https://api.github.com/repos/FasterXML/jackson-databind/git/trees/58a0fabd5b6427b4c4dfd65ad93067b07c89ed6f"
        },
        "url": "https://api.github.com/repos/FasterXML/jackson-databind/git/commits/6ce32ffd18facac6abdbbf559c817b47fcb622c1",
        "comment_count": 4,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/FasterXML/jackson-databind/commits/6ce32ffd18facac6abdbbf559c817b47fcb622c1",
    "html_url": "https://github.com/FasterXML/jackson-databind/commit/6ce32ffd18facac6abdbbf559c817b47fcb622c1",
    "comments_url": "https://api.github.com/repos/FasterXML/jackson-databind/commits/6ce32ffd18facac6abdbbf559c817b47fcb622c1/comments",
    "author": {
        "login": "cowtowncoder",
        "id": 55065,
        "node_id": "MDQ6VXNlcjU1MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/55065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cowtowncoder",
        "html_url": "https://github.com/cowtowncoder",
        "followers_url": "https://api.github.com/users/cowtowncoder/followers",
        "following_url": "https://api.github.com/users/cowtowncoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/cowtowncoder/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cowtowncoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cowtowncoder/subscriptions",
        "organizations_url": "https://api.github.com/users/cowtowncoder/orgs",
        "repos_url": "https://api.github.com/users/cowtowncoder/repos",
        "events_url": "https://api.github.com/users/cowtowncoder/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cowtowncoder/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "cowtowncoder",
        "id": 55065,
        "node_id": "MDQ6VXNlcjU1MDY1",
        "avatar_url": "https://avatars.githubusercontent.com/u/55065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cowtowncoder",
        "html_url": "https://github.com/cowtowncoder",
        "followers_url": "https://api.github.com/users/cowtowncoder/followers",
        "following_url": "https://api.github.com/users/cowtowncoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/cowtowncoder/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cowtowncoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cowtowncoder/subscriptions",
        "organizations_url": "https://api.github.com/users/cowtowncoder/orgs",
        "repos_url": "https://api.github.com/users/cowtowncoder/repos",
        "events_url": "https://api.github.com/users/cowtowncoder/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cowtowncoder/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "28ec8a47d381311818f805ae76bf84da30f516f9",
            "url": "https://api.github.com/repos/FasterXML/jackson-databind/commits/28ec8a47d381311818f805ae76bf84da30f516f9",
            "html_url": "https://github.com/FasterXML/jackson-databind/commit/28ec8a47d381311818f805ae76bf84da30f516f9"
        }
    ],
    "stats": {
        "total": 65,
        "additions": 65,
        "deletions": 0
    },
    "files": [
        {
            "sha": "62f74650dbbb220439bc7ac20f33fbd9a0e547fd",
            "filename": "release-notes/VERSION",
            "status": "modified",
            "additions": 2,
            "deletions": 0,
            "changes": 2,
            "blob_url": "https://github.com/FasterXML/jackson-databind/blob/6ce32ffd18facac6abdbbf559c817b47fcb622c1/release-notes%2FVERSION",
            "raw_url": "https://github.com/FasterXML/jackson-databind/raw/6ce32ffd18facac6abdbbf559c817b47fcb622c1/release-notes%2FVERSION",
            "contents_url": "https://api.github.com/repos/FasterXML/jackson-databind/contents/release-notes%2FVERSION?ref=6ce32ffd18facac6abdbbf559c817b47fcb622c1",
            "patch": "@@ -6,6 +6,8 @@ Project: jackson-databind\n \n 2.7.10 (not yet released)\n \n+#1599: Jackson Deserializer security vulnerability\n+ (reported by ayound@github)\n - Minor robustification of method resolution in `AnnotatedClass`\n \n 2.7.9 (04-Feb-2017)"
        },
        {
            "sha": "ad37dd170067fbc6420a4dc9ef5d32f3755662c9",
            "filename": "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
            "status": "modified",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https://github.com/FasterXML/jackson-databind/blob/6ce32ffd18facac6abdbbf559c817b47fcb622c1/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fdeser%2FBeanDeserializerFactory.java",
            "raw_url": "https://github.com/FasterXML/jackson-databind/raw/6ce32ffd18facac6abdbbf559c817b47fcb622c1/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fdeser%2FBeanDeserializerFactory.java",
            "contents_url": "https://api.github.com/repos/FasterXML/jackson-databind/contents/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fdeser%2FBeanDeserializerFactory.java?ref=6ce32ffd18facac6abdbbf559c817b47fcb622c1",
            "patch": "@@ -139,6 +139,8 @@ public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ct\n         if (!isPotentialBeanType(type.getRawClass())) {\n             return null;\n         }\n+        // For checks like [databind#1599]\n+        checkIllegalTypes(ctxt, type, beanDesc);\n         // Use generic bean introspection to build deserializer\n         return buildBeanDeserializer(ctxt, type, beanDesc);\n     }\n@@ -834,4 +836,25 @@ protected boolean isIgnorableType(DeserializationConfig config, BeanDescription\n         // We default to 'false', i.e. not ignorable\n         return (status == null) ? false : status.booleanValue(); \n     }\n+\n+    /**\n+     * @since 2.8.9\n+     */\n+    protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n+            BeanDescription beanDesc)\n+        throws JsonMappingException\n+    {\n+        // There are certain nasty classes that could cause problems, mostly\n+        // via default typing -- catch them here.\n+        Class<?> raw = type.getRawClass();\n+        String name = raw.getSimpleName();\n+\n+        if (\"TemplatesImpl\".equals(name)) { // [databind#1599] \n+            if (raw.getName().startsWith(\"com.sun.org.apache.xalan\")) {\n+                throw JsonMappingException.from(ctxt,\n+                        String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\",\n+                                name));\n+            }\n+        }\n+    }\n }"
        },
        {
            "sha": "1906eadb6a0a263eba9c363e581111cd1ffc3562",
            "filename": "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https://github.com/FasterXML/jackson-databind/blob/6ce32ffd18facac6abdbbf559c817b47fcb622c1/src%2Ftest%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Finterop%2FIllegalTypesCheckTest.java",
            "raw_url": "https://github.com/FasterXML/jackson-databind/raw/6ce32ffd18facac6abdbbf559c817b47fcb622c1/src%2Ftest%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Finterop%2FIllegalTypesCheckTest.java",
            "contents_url": "https://api.github.com/repos/FasterXML/jackson-databind/contents/src%2Ftest%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Finterop%2FIllegalTypesCheckTest.java?ref=6ce32ffd18facac6abdbbf559c817b47fcb622c1",
            "patch": "@@ -0,0 +1,40 @@\n+package com.fasterxml.jackson.databind.interop;\n+\n+import com.fasterxml.jackson.databind.*;\n+\n+/**\n+ * Test case(s) to guard against handling of types that are illegal to handle\n+ * due to security constraints.\n+ */\n+public class IllegalTypesCheckTest extends BaseMapTest\n+{\n+    static class Bean1599 {\n+        public int id;\n+        public Object obj;\n+    }\n+    \n+    public void testIssue1599() throws Exception\n+    {\n+        final String JSON = aposToQuotes(\n+ \"{'id': 124,\\n\"\n++\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"\n++\"  {\\n\"\n++\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"\n++\"    'transletName' : 'a.b',\\n\"\n++\"    'outputProperties' : { }\\n\"\n++\"  }\\n\"\n++\" ]\\n\"\n++\"}\"\n+        );\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.enableDefaultTyping();\n+        try {\n+            mapper.readValue(JSON, Bean1599.class);\n+            fail(\"Should not pass\");\n+        } catch (JsonMappingException e) {\n+            verifyException(e, \"Illegal type\");\n+            verifyException(e, \"to deserialize\");\n+            verifyException(e, \"prevented for security reasons\");\n+        }\n+    }\n+}"
        }
    ]
}