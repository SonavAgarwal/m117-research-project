{
    "sha": "6a0d7d56e4ffb420316ce7849fde881344fbf881",
    "node_id": "MDY6Q29tbWl0NjIyMDY0NDo2YTBkN2Q1NmU0ZmZiNDIwMzE2Y2U3ODQ5ZmRlODgxMzQ0ZmJmODgx",
    "commit": {
        "author": {
            "name": "Antonin Delpeuch",
            "email": "antonin@delpeuch.eu",
            "date": "2018-12-31T15:02:34Z"
        },
        "committer": {
            "name": "Antonin Delpeuch",
            "email": "antonin@delpeuch.eu",
            "date": "2018-12-31T15:02:34Z"
        },
        "message": "Disable DTDs in XML importer. Closes #1907.",
        "tree": {
            "sha": "e20955b09b779bf0caf00fa551cf4e937153ec68",
            "url": "https://api.github.com/repos/OpenRefine/OpenRefine/git/trees/e20955b09b779bf0caf00fa551cf4e937153ec68"
        },
        "url": "https://api.github.com/repos/OpenRefine/OpenRefine/git/commits/6a0d7d56e4ffb420316ce7849fde881344fbf881",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/OpenRefine/OpenRefine/commits/6a0d7d56e4ffb420316ce7849fde881344fbf881",
    "html_url": "https://github.com/OpenRefine/OpenRefine/commit/6a0d7d56e4ffb420316ce7849fde881344fbf881",
    "comments_url": "https://api.github.com/repos/OpenRefine/OpenRefine/commits/6a0d7d56e4ffb420316ce7849fde881344fbf881/comments",
    "author": {
        "login": "wetneb",
        "id": 309908,
        "node_id": "MDQ6VXNlcjMwOTkwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/309908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wetneb",
        "html_url": "https://github.com/wetneb",
        "followers_url": "https://api.github.com/users/wetneb/followers",
        "following_url": "https://api.github.com/users/wetneb/following{/other_user}",
        "gists_url": "https://api.github.com/users/wetneb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wetneb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wetneb/subscriptions",
        "organizations_url": "https://api.github.com/users/wetneb/orgs",
        "repos_url": "https://api.github.com/users/wetneb/repos",
        "events_url": "https://api.github.com/users/wetneb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wetneb/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "wetneb",
        "id": 309908,
        "node_id": "MDQ6VXNlcjMwOTkwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/309908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wetneb",
        "html_url": "https://github.com/wetneb",
        "followers_url": "https://api.github.com/users/wetneb/followers",
        "following_url": "https://api.github.com/users/wetneb/following{/other_user}",
        "gists_url": "https://api.github.com/users/wetneb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wetneb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wetneb/subscriptions",
        "organizations_url": "https://api.github.com/users/wetneb/orgs",
        "repos_url": "https://api.github.com/users/wetneb/repos",
        "events_url": "https://api.github.com/users/wetneb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wetneb/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "ddd9bf9aa80a43c68bf6d8fb4dc9d0b8bb29dcd5",
            "url": "https://api.github.com/repos/OpenRefine/OpenRefine/commits/ddd9bf9aa80a43c68bf6d8fb4dc9d0b8bb29dcd5",
            "html_url": "https://github.com/OpenRefine/OpenRefine/commit/ddd9bf9aa80a43c68bf6d8fb4dc9d0b8bb29dcd5"
        }
    ],
    "stats": {
        "total": 27,
        "additions": 27,
        "deletions": 0
    },
    "files": [
        {
            "sha": "6b31cb856f93347630a594b23527152dacec6ff1",
            "filename": "main/src/com/google/refine/importers/XmlImporter.java",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/OpenRefine/OpenRefine/blob/6a0d7d56e4ffb420316ce7849fde881344fbf881/main%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Fimporters%2FXmlImporter.java",
            "raw_url": "https://github.com/OpenRefine/OpenRefine/raw/6a0d7d56e4ffb420316ce7849fde881344fbf881/main%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Fimporters%2FXmlImporter.java",
            "contents_url": "https://api.github.com/repos/OpenRefine/OpenRefine/contents/main%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Fimporters%2FXmlImporter.java?ref=6a0d7d56e4ffb420316ce7849fde881344fbf881",
            "patch": "@@ -321,6 +321,7 @@ final static private XMLStreamReader createXMLStreamReader(InputStream inputStre\n         XMLInputFactory factory = XMLInputFactory.newInstance();\n         factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n         factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n+        factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n         \n         return factory.createXMLStreamReader(wrapPrefixRemovingInputStream(inputStream));\n     }"
        },
        {
            "sha": "d31717054a6d3dd0ede6921d03d7df2e1c888db0",
            "filename": "main/tests/server/src/com/google/refine/tests/importers/XmlImporterTests.java",
            "status": "modified",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/OpenRefine/OpenRefine/blob/6a0d7d56e4ffb420316ce7849fde881344fbf881/main%2Ftests%2Fserver%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Ftests%2Fimporters%2FXmlImporterTests.java",
            "raw_url": "https://github.com/OpenRefine/OpenRefine/raw/6a0d7d56e4ffb420316ce7849fde881344fbf881/main%2Ftests%2Fserver%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Ftests%2Fimporters%2FXmlImporterTests.java",
            "contents_url": "https://api.github.com/repos/OpenRefine/OpenRefine/contents/main%2Ftests%2Fserver%2Fsrc%2Fcom%2Fgoogle%2Frefine%2Ftests%2Fimporters%2FXmlImporterTests.java?ref=6a0d7d56e4ffb420316ce7849fde881344fbf881",
            "patch": "@@ -130,6 +130,17 @@ public void canParseSampleWithMixedElement(){\n         Assert.assertNotNull(row.getCell(1));\n         Assert.assertEquals(row.getCell(1).value, \"Author 1, The\");\n     }\n+    \n+    @Test\n+    public void ignoresDtds() {\n+    \tRunTest(getSampleWithDtd());\n+    \t\n+    \tassertProjectCreated(project, 4, 6);\n+    \tRow row = project.rows.get(0);\n+        Assert.assertNotNull(row);\n+        Assert.assertNotNull(row.getCell(1));\n+        Assert.assertEquals(row.getCell(1).value, \"Author 1, The\");\n+    }\n \n     @Test\n     public void canParseSampleWithDuplicateNestedElements(){\n@@ -224,6 +235,21 @@ public static String getSample(){\n         return sb.toString();\n     }\n     \n+    public static String getSampleWithDtd(){\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"<?xml version=\\\"1.0\\\"?>\");\n+        sb.append(\"<!DOCTYPE library [\\n\" + \n+    \t\t\t\"<!ENTITY % asd SYSTEM \\\"http://domain.does.not.exist:4444/ext.dtd\\\">\\n\" + \n+    \t\t\t\"%asd;\\n\" + \n+    \t\t\t\"%c;\\n\" + \n+    \t\t\t\"]><library>\");\n+        for(int i = 1; i < 7; i++){\n+            sb.append(getTypicalElement(i));\n+        }\n+        sb.append(\"</library>\");\n+        return sb.toString();\n+    }\n+\n     public static ObjectNode getOptions(ImportingJob job, TreeImportingParserBase parser) {\n         ObjectNode options = parser.createParserUIInitializationData(\n                 job, new LinkedList<>(), \"text/json\");"
        }
    ]
}