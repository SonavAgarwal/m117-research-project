{
    "sha": "796716d44183bd315dd20184a66b39ae533eb747",
    "node_id": "MDY6Q29tbWl0MTg2MjcxMjY6Nzk2NzE2ZDQ0MTgzYmQzMTVkZDIwMTg0YTY2YjM5YWU1MzNlYjc0Nw==",
    "commit": {
        "author": {
            "name": "Martin Stockhammer",
            "email": "martin_s@apache.org",
            "date": "2019-04-13T09:59:29Z"
        },
        "committer": {
            "name": "Martin Stockhammer",
            "email": "martin_s@apache.org",
            "date": "2019-04-13T09:59:29Z"
        },
        "message": "Improving URL check for organisation info",
        "tree": {
            "sha": "9ec8847e92b99be9951623a3b067e816f88ab147",
            "url": "https://api.github.com/repos/apache/archiva/git/trees/9ec8847e92b99be9951623a3b067e816f88ab147"
        },
        "url": "https://api.github.com/repos/apache/archiva/git/commits/796716d44183bd315dd20184a66b39ae533eb747",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/archiva/commits/796716d44183bd315dd20184a66b39ae533eb747",
    "html_url": "https://github.com/apache/archiva/commit/796716d44183bd315dd20184a66b39ae533eb747",
    "comments_url": "https://api.github.com/repos/apache/archiva/commits/796716d44183bd315dd20184a66b39ae533eb747/comments",
    "author": {
        "login": "effrafax",
        "id": 870744,
        "node_id": "MDQ6VXNlcjg3MDc0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/870744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/effrafax",
        "html_url": "https://github.com/effrafax",
        "followers_url": "https://api.github.com/users/effrafax/followers",
        "following_url": "https://api.github.com/users/effrafax/following{/other_user}",
        "gists_url": "https://api.github.com/users/effrafax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/effrafax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/effrafax/subscriptions",
        "organizations_url": "https://api.github.com/users/effrafax/orgs",
        "repos_url": "https://api.github.com/users/effrafax/repos",
        "events_url": "https://api.github.com/users/effrafax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/effrafax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "effrafax",
        "id": 870744,
        "node_id": "MDQ6VXNlcjg3MDc0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/870744?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/effrafax",
        "html_url": "https://github.com/effrafax",
        "followers_url": "https://api.github.com/users/effrafax/followers",
        "following_url": "https://api.github.com/users/effrafax/following{/other_user}",
        "gists_url": "https://api.github.com/users/effrafax/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/effrafax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/effrafax/subscriptions",
        "organizations_url": "https://api.github.com/users/effrafax/orgs",
        "repos_url": "https://api.github.com/users/effrafax/repos",
        "events_url": "https://api.github.com/users/effrafax/events{/privacy}",
        "received_events_url": "https://api.github.com/users/effrafax/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "0dea2b64c36272c3aab754c17257e52c4092bf30",
            "url": "https://api.github.com/repos/apache/archiva/commits/0dea2b64c36272c3aab754c17257e52c4092bf30",
            "html_url": "https://github.com/apache/archiva/commit/0dea2b64c36272c3aab754c17257e52c4092bf30"
        }
    ],
    "stats": {
        "total": 96,
        "additions": 74,
        "deletions": 22
    },
    "files": [
        {
            "sha": "3be9f58ddc8f734cdd0083e3dabee14349391c40",
            "filename": "archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultArchivaAdministration.java",
            "status": "modified",
            "additions": 14,
            "deletions": 14,
            "changes": 28,
            "blob_url": "https://github.com/apache/archiva/blob/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java",
            "raw_url": "https://github.com/apache/archiva/raw/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FDefaultArchivaAdministration.java?ref=796716d44183bd315dd20184a66b39ae533eb747",
            "patch": "@@ -21,31 +21,23 @@\n import org.apache.archiva.admin.model.AuditInformation;\n import org.apache.archiva.admin.model.RepositoryAdminException;\n import org.apache.archiva.admin.model.admin.ArchivaAdministration;\n-import org.apache.archiva.admin.model.beans.FileType;\n-import org.apache.archiva.admin.model.beans.LegacyArtifactPath;\n-import org.apache.archiva.admin.model.beans.NetworkConfiguration;\n-import org.apache.archiva.admin.model.beans.OrganisationInformation;\n-import org.apache.archiva.admin.model.beans.UiConfiguration;\n+import org.apache.archiva.admin.model.beans.*;\n import org.apache.archiva.admin.repository.AbstractRepositoryAdmin;\n import org.apache.archiva.configuration.Configuration;\n import org.apache.archiva.configuration.UserInterfaceOptions;\n import org.apache.archiva.configuration.WebappConfiguration;\n import org.apache.archiva.metadata.model.facets.AuditEvent;\n-import org.apache.commons.codec.net.URLCodec;\n import org.apache.commons.lang.StringEscapeUtils;\n import org.apache.commons.lang.StringUtils;\n-import org.apache.http.impl.conn.PoolingClientConnectionManager;\n import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\n import org.apache.maven.wagon.providers.http.HttpWagon;\n import org.springframework.stereotype.Service;\n import org.springframework.util.ResourceUtils;\n \n import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n-import java.io.UnsupportedEncodingException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.net.URLEncoder;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -328,14 +320,21 @@ public OrganisationInformation getOrganisationInformation()\n         return getModelMapper().map( organisationInformation, OrganisationInformation.class );\n     }\n \n-    private void checkUrl(String url, String propertyName)  throws RepositoryAdminException {\n+    private String fixUrl(String url, String propertyName)  throws RepositoryAdminException {\n         if ( StringUtils.isNotEmpty( url ) )\n         {\n             if ( !ResourceUtils.isUrl( url ) )\n             {\n                 throw new RepositoryAdminException( \"Bad URL in \" + propertyName + \": \" + url );\n             }\n+            try {\n+                URI urlToCheck = new URI(url);\n+                return urlToCheck.toString();\n+            } catch (URISyntaxException e) {\n+                throw new RepositoryAdminException( \"Bad URL in \" + propertyName + \": \" + url );\n+            }\n         }\n+        return url;\n \n     }\n \n@@ -347,8 +346,9 @@ private String convertName(String name) {\n     public void setOrganisationInformation( OrganisationInformation organisationInformation )\n         throws RepositoryAdminException\n     {\n-        checkUrl(organisationInformation.getUrl(), \"url\");\n-        checkUrl( organisationInformation.getLogoLocation(), \"logoLocation\" );\n+\n+        organisationInformation.setUrl(fixUrl(organisationInformation.getUrl(), \"url\"));\n+        organisationInformation.setLogoLocation(fixUrl( organisationInformation.getLogoLocation(), \"logoLocation\" ));\n         Configuration configuration = getArchivaConfiguration( ).getConfiguration( );\n         if ( organisationInformation != null )\n         {"
        },
        {
            "sha": "e597de438f9fe3f81be3e2f5d3482c407169cadb",
            "filename": "archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/apache/archiva/blob/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java",
            "raw_url": "https://github.com/apache/archiva/raw/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-base%2Farchiva-repository-admin%2Farchiva-repository-admin-default%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Fadmin%2Frepository%2Fadmin%2FArchivaAdministrationTest.java?ref=796716d44183bd315dd20184a66b39ae533eb747",
            "patch": "@@ -222,7 +222,7 @@ public void badOrganisationInfoLogoLocation( )\n         try\n         {\n             OrganisationInformation newOrganisationInformation = new OrganisationInformation( );\n-            newOrganisationInformation.setLogoLocation( \"'/><svg/onload=alert(/logoLocation_xss/)>\" );\n+            newOrganisationInformation.setLogoLocation( \"http://www.foo.com'/><svg/onload=alert(/logoLocation_xss/)>\" );\n             newOrganisationInformation.setName( \"foo org\" );\n             newOrganisationInformation.setUrl( \"http://foo.com\" );\n             archivaAdministration.setOrganisationInformation( newOrganisationInformation );\n@@ -240,7 +240,7 @@ public void badOrganisationInfoUrl( )\n         try\n         {\n             OrganisationInformation newOrganisationInformation = new OrganisationInformation( );\n-            newOrganisationInformation.setUrl( \"'/><svg/onload=alert(/url_xss/)>\" );\n+            newOrganisationInformation.setUrl( \"http://foo.com'/><svg/onload=alert(/url_xss/)>\" );\n             newOrganisationInformation.setName( \"foo org\" );\n             newOrganisationInformation.setLogoLocation( \"http://foo.com/bar.png\" );\n             archivaAdministration.setOrganisationInformation( newOrganisationInformation );"
        },
        {
            "sha": "51144e87a90845502da00cf5fada9410e1b0fae9",
            "filename": "archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultArchivaAdministrationService.java",
            "status": "modified",
            "additions": 2,
            "deletions": 6,
            "changes": 8,
            "blob_url": "https://github.com/apache/archiva/blob/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FDefaultArchivaAdministrationService.java",
            "raw_url": "https://github.com/apache/archiva/raw/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FDefaultArchivaAdministrationService.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FDefaultArchivaAdministrationService.java?ref=796716d44183bd315dd20184a66b39ae533eb747",
            "patch": "@@ -20,11 +20,7 @@\n \n import org.apache.archiva.admin.model.RepositoryAdminException;\n import org.apache.archiva.admin.model.admin.ArchivaAdministration;\n-import org.apache.archiva.admin.model.beans.FileType;\n-import org.apache.archiva.admin.model.beans.LegacyArtifactPath;\n-import org.apache.archiva.admin.model.beans.NetworkConfiguration;\n-import org.apache.archiva.admin.model.beans.OrganisationInformation;\n-import org.apache.archiva.admin.model.beans.UiConfiguration;\n+import org.apache.archiva.admin.model.beans.*;\n import org.apache.archiva.repository.scanner.RepositoryContentConsumers;\n import org.apache.archiva.rest.api.model.AdminRepositoryConsumer;\n import org.apache.archiva.rest.api.services.ArchivaAdministrationService;\n@@ -319,7 +315,7 @@ public void setOrganisationInformation( OrganisationInformation organisationInfo\n         }\n         catch ( RepositoryAdminException e )\n         {\n-            throw new ArchivaRestServiceException( e.getMessage(), e );\n+            throw new ArchivaRestServiceException( e.getMessage(), 400, e );\n         }\n     }\n "
        },
        {
            "sha": "e6a87b00395d045c528ac12d5116f4ec6b0bcfce",
            "filename": "archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArchivaAdministrationServiceTest.java",
            "status": "modified",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/apache/archiva/blob/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FArchivaAdministrationServiceTest.java",
            "raw_url": "https://github.com/apache/archiva/raw/796716d44183bd315dd20184a66b39ae533eb747/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FArchivaAdministrationServiceTest.java",
            "contents_url": "https://api.github.com/repos/apache/archiva/contents/archiva-modules%2Farchiva-web%2Farchiva-rest%2Farchiva-rest-services%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Farchiva%2Frest%2Fservices%2FArchivaAdministrationServiceTest.java?ref=796716d44183bd315dd20184a66b39ae533eb747",
            "patch": "@@ -23,9 +23,11 @@\n import org.apache.archiva.admin.model.beans.OrganisationInformation;\n import org.apache.archiva.admin.model.beans.UiConfiguration;\n import org.apache.archiva.rest.api.model.AdminRepositoryConsumer;\n+import org.apache.archiva.rest.api.services.ArchivaRestServiceException;\n import org.apache.commons.lang.StringUtils;\n import org.junit.Test;\n \n+import javax.ws.rs.BadRequestException;\n import java.util.Arrays;\n import java.util.List;\n \n@@ -92,6 +94,60 @@ public void organisationInformationUpdate()\n         assertEquals( \"http://foo.com\", organisationInformation.getUrl() );\n     }\n \n+    @Test\n+    public void badOrganizationLogoLocation()\n+            throws Exception\n+    {\n+        OrganisationInformation organisationInformation =\n+                getArchivaAdministrationService().getOrganisationInformation();\n+\n+        // rest return an empty bean\n+        assertNotNull( organisationInformation );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getLogoLocation() ) );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getName() ) );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getUrl() ) );\n+\n+        organisationInformation = new OrganisationInformation();\n+        organisationInformation.setLogoLocation( \"http://foo.com'/><svg/onload=alert(/logoLocation_xss/)>\" );\n+        organisationInformation.setName( \"foo org\" );\n+        organisationInformation.setUrl( \"http://foo.com\" );\n+\n+        try {\n+            getArchivaAdministrationService().setOrganisationInformation(organisationInformation);\n+            fail(\"RepositoryAdminException expected. Bad URL content should not be allowed for logo location.\");\n+        } catch (BadRequestException e) {\n+            // OK\n+        }\n+\n+    }\n+\n+    @Test\n+    public void  badOrganizationUrl()\n+            throws Exception\n+    {\n+        OrganisationInformation organisationInformation =\n+                getArchivaAdministrationService().getOrganisationInformation();\n+\n+        // rest return an empty bean\n+        assertNotNull( organisationInformation );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getLogoLocation() ) );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getName() ) );\n+        assertTrue( StringUtils.isBlank( organisationInformation.getUrl() ) );\n+\n+        organisationInformation = new OrganisationInformation();\n+        organisationInformation.setLogoLocation( \"http://foo.com/logo.jpg\" );\n+        organisationInformation.setName( \"foo org\" );\n+        organisationInformation.setUrl( \"http://foo.com'/><svg/onload=alert(/url_xss/)>\" );\n+\n+        try {\n+            getArchivaAdministrationService().setOrganisationInformation(organisationInformation);\n+            fail(\"RepositoryAdminException expected. Bad URL content should not be allowed for logo location.\");\n+        } catch (BadRequestException e) {\n+            // OK\n+        }\n+\n+    }\n+\n     @Test\n     public void uiConfigurationReadUpdate()\n         throws Exception"
        }
    ]
}