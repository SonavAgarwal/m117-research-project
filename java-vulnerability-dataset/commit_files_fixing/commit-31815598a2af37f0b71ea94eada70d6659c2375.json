{
    "sha": "31815598a2af37f0b71ea94eada70d6659c23752",
    "node_id": "MDY6Q29tbWl0MTA2NDU2MzozMTgxNTU5OGEyYWYzN2YwYjcxZWE5NGVhZGE3MGQ2NjU5YzIzNzUy",
    "commit": {
        "author": {
            "name": "James Roper",
            "email": "james@jazzy.id.au",
            "date": "2015-05-08T12:54:48Z"
        },
        "committer": {
            "name": "Norman Maurer",
            "email": "norman_maurer@apple.com",
            "date": "2015-05-08T14:48:50Z"
        },
        "message": "Fix binary compatibility\n\nChange type of Cookie.maxAge back to int to maintain binary\ncompatibility for drop in fixes.",
        "tree": {
            "sha": "966f59d578241405a65d5e6491dc2b11ae79e0f2",
            "url": "https://api.github.com/repos/netty/netty/git/trees/966f59d578241405a65d5e6491dc2b11ae79e0f2"
        },
        "url": "https://api.github.com/repos/netty/netty/git/commits/31815598a2af37f0b71ea94eada70d6659c23752",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/netty/netty/commits/31815598a2af37f0b71ea94eada70d6659c23752",
    "html_url": "https://github.com/netty/netty/commit/31815598a2af37f0b71ea94eada70d6659c23752",
    "comments_url": "https://api.github.com/repos/netty/netty/commits/31815598a2af37f0b71ea94eada70d6659c23752/comments",
    "author": {
        "login": "jroper",
        "id": 105833,
        "node_id": "MDQ6VXNlcjEwNTgzMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/105833?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jroper",
        "html_url": "https://github.com/jroper",
        "followers_url": "https://api.github.com/users/jroper/followers",
        "following_url": "https://api.github.com/users/jroper/following{/other_user}",
        "gists_url": "https://api.github.com/users/jroper/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jroper/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jroper/subscriptions",
        "organizations_url": "https://api.github.com/users/jroper/orgs",
        "repos_url": "https://api.github.com/users/jroper/repos",
        "events_url": "https://api.github.com/users/jroper/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jroper/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "normanmaurer",
        "id": 439362,
        "node_id": "MDQ6VXNlcjQzOTM2Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/439362?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/normanmaurer",
        "html_url": "https://github.com/normanmaurer",
        "followers_url": "https://api.github.com/users/normanmaurer/followers",
        "following_url": "https://api.github.com/users/normanmaurer/following{/other_user}",
        "gists_url": "https://api.github.com/users/normanmaurer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/normanmaurer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/normanmaurer/subscriptions",
        "organizations_url": "https://api.github.com/users/normanmaurer/orgs",
        "repos_url": "https://api.github.com/users/normanmaurer/repos",
        "events_url": "https://api.github.com/users/normanmaurer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/normanmaurer/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "ef3a31d6ab77c8ba1c7dbe3a3da02572dae45112",
            "url": "https://api.github.com/repos/netty/netty/commits/ef3a31d6ab77c8ba1c7dbe3a3da02572dae45112",
            "html_url": "https://github.com/netty/netty/commit/ef3a31d6ab77c8ba1c7dbe3a3da02572dae45112"
        }
    ],
    "stats": {
        "total": 62,
        "additions": 31,
        "deletions": 31
    },
    "files": [
        {
            "sha": "4e1fa4c3e111e0baa581fad8a442bc6ec3afc40b",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/Cookie.java",
            "status": "modified",
            "additions": 6,
            "deletions": 6,
            "changes": 12,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookie.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookie.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookie.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -20,7 +20,7 @@\n /**\n  * An interface defining an\n  * <a href=\"http://en.wikipedia.org/wiki/HTTP_cookie\">HTTP cookie</a>.\n- * @deprecated Use {@link io.netty.handler.codec.http.cookie.Cookie} instead.\n+ * @deprecated Use {@link org.jboss.netty.handler.codec.http.cookie.Cookie} instead.\n  */\n @Deprecated\n public interface Cookie extends org.jboss.netty.handler.codec.http.cookie.Cookie {\n@@ -79,31 +79,31 @@ public interface Cookie extends org.jboss.netty.handler.codec.http.cookie.Cookie\n      * @deprecated Use {@link #maxAge()} instead.\n      */\n     @Deprecated\n-    long getMaxAge();\n+    int getMaxAge();\n \n     /**\n-     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified\n+     * Returns the maximum age of this {@link Cookie} in seconds or {@link Integer#MIN_VALUE} if unspecified\n      *\n      * @return The maximum age of this {@link Cookie}\n      *\n      * @deprecated Not part of RFC6265\n      */\n     @Deprecated\n-    long maxAge();\n+    int maxAge();\n \n     /**\n      * Sets the maximum age of this {@link Cookie} in seconds.\n      * If an age of {@code 0} is specified, this {@link Cookie} will be\n      * automatically removed by browser because it will expire immediately.\n-     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the\n+     * If {@link Integer#MIN_VALUE} is specified, this {@link Cookie} will be removed when the\n      * browser is closed.\n      *\n      * @param maxAge The maximum age of this {@link Cookie} in seconds\n      *\n      * @deprecated Not part of RFC6265\n      */\n     @Deprecated\n-    void setMaxAge(long maxAge);\n+    void setMaxAge(int maxAge);\n \n     /**\n      * @deprecated Use {@link #version()} instead."
        },
        {
            "sha": "9e2dac991cd085fd1d4835e9ab5ac3a283969360",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/CookieDecoder.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoder.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoder.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoder.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -138,7 +138,7 @@ public Set<Cookie> decode(String header) {\n             String commentURL = null;\n             String domain = null;\n             String path = null;\n-            long maxAge = Long.MIN_VALUE;\n+            int maxAge = Integer.MIN_VALUE;\n             List<Integer> ports = new ArrayList<Integer>(2);\n \n             for (int j = i + 1; j < names.size(); j++, i++) {\n@@ -165,7 +165,7 @@ public Set<Cookie> decode(String header) {\n                             HttpHeaderDateFormat.get().parse(value).getTime() -\n                             System.currentTimeMillis();\n \n-                        maxAge = maxAgeMillis / 1000 + (maxAgeMillis % 1000 != 0? 1 : 0);\n+                        maxAge = (int) (maxAgeMillis / 1000 + (maxAgeMillis % 1000 != 0? 1 : 0));\n                     } catch (ParseException e) {\n                         // Ignore.\n                     }"
        },
        {
            "sha": "9460af0121cadc07cda854a34f38ae396af9b346",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/DefaultCookie.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FDefaultCookie.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FDefaultCookie.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FDefaultCookie.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -154,7 +154,7 @@ public void setPorts(Iterable<Integer> ports) {\n     }\n \n     @Deprecated\n-    public long getMaxAge() {\n+    public int getMaxAge() {\n         return maxAge();\n     }\n "
        },
        {
            "sha": "b36ff378dd70081917a6f45771ac7f3535939052",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/cookie/ClientCookieDecoder.java",
            "status": "modified",
            "additions": 6,
            "deletions": 6,
            "changes": 12,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoder.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoder.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoder.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -154,7 +154,7 @@ private static class CookieBuilder {\n         private final DefaultCookie cookie;\n         private String domain;\n         private String path;\n-        private long maxAge = Long.MIN_VALUE;\n+        private int maxAge = Integer.MIN_VALUE;\n         private String expires;\n         private boolean secure;\n         private boolean httpOnly;\n@@ -163,18 +163,18 @@ public CookieBuilder(DefaultCookie cookie) {\n             this.cookie = cookie;\n         }\n \n-        private long mergeMaxAgeAndExpire(long maxAge, String expires) {\n+        private int mergeMaxAgeAndExpire(int maxAge, String expires) {\n             // max age has precedence over expires\n-            if (maxAge != Long.MIN_VALUE) {\n+            if (maxAge != Integer.MIN_VALUE) {\n                 return maxAge;\n             } else if (expires != null) {\n                 Date expiresDate = HttpHeaderDateFormat.get().parse(expires, new ParsePosition(0));\n                 if (expiresDate != null) {\n                     long maxAgeMillis = expiresDate.getTime() - System.currentTimeMillis();\n-                    return maxAgeMillis / 1000 + (maxAgeMillis % 1000 != 0 ? 1 : 0);\n+                    return (int) (maxAgeMillis / 1000 + (maxAgeMillis % 1000 != 0 ? 1 : 0));\n                 }\n             }\n-            return Long.MIN_VALUE;\n+            return Integer.MIN_VALUE;\n         }\n \n         public Cookie cookie() {\n@@ -239,7 +239,7 @@ private void setExpire(String value) {\n \n         private void setMaxAge(String value) {\n             try {\n-                maxAge = Math.max(Long.valueOf(value), 0L);\n+                maxAge = Math.max(Integer.valueOf(value), 0);\n             } catch (NumberFormatException e1) {\n                 // ignore failure to parse -> treat as session cookie\n             }"
        },
        {
            "sha": "4f3d3dcfa5e81b07711a59cb352ec8949991e339",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/cookie/Cookie.java",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FCookie.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FCookie.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FCookie.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -87,22 +87,22 @@ public interface Cookie extends Comparable<Cookie> {\n     void setPath(String path);\n \n     /**\n-     * Returns the maximum age of this {@link Cookie} in seconds or {@link Long#MIN_VALUE} if unspecified\n+     * Returns the maximum age of this {@link Cookie} in seconds or {@link Integer#MIN_VALUE} if unspecified\n      *\n      * @return The maximum age of this {@link Cookie}\n      */\n-    long maxAge();\n+    int maxAge();\n \n     /**\n      * Sets the maximum age of this {@link Cookie} in seconds.\n      * If an age of {@code 0} is specified, this {@link Cookie} will be\n      * automatically removed by browser because it will expire immediately.\n-     * If {@link Long#MIN_VALUE} is specified, this {@link Cookie} will be removed when the\n+     * If {@link Integer#MIN_VALUE} is specified, this {@link Cookie} will be removed when the\n      * browser is closed.\n      *\n      * @param maxAge The maximum age of this {@link Cookie} in seconds\n      */\n-    void setMaxAge(long maxAge);\n+    void setMaxAge(int maxAge);\n \n     /**\n      * Checks to see if this {@link Cookie} is secure"
        },
        {
            "sha": "e335cc1922d0dccbc992971d639483d43e2ee2dc",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/cookie/DefaultCookie.java",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FDefaultCookie.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FDefaultCookie.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FDefaultCookie.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -25,7 +25,7 @@ public class DefaultCookie implements Cookie {\n     private boolean wrap;\n     private String domain;\n     private String path;\n-    private long maxAge = Long.MIN_VALUE;\n+    private int maxAge = Integer.MIN_VALUE;\n     private boolean secure;\n     private boolean httpOnly;\n \n@@ -105,11 +105,11 @@ public void setPath(String path) {\n         this.path = validateValue(\"path\", path);\n     }\n \n-    public long maxAge() {\n+    public int maxAge() {\n         return maxAge;\n     }\n \n-    public void setMaxAge(long maxAge) {\n+    public void setMaxAge(int maxAge) {\n         this.maxAge = maxAge;\n     }\n "
        },
        {
            "sha": "08015dae18f0f7ae2d98bff4f27a48f2c4981f80",
            "filename": "src/main/java/org/jboss/netty/handler/codec/http/cookie/ServerCookieEncoder.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FServerCookieEncoder.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FServerCookieEncoder.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FServerCookieEncoder.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -93,7 +93,7 @@ public String encode(Cookie cookie) {\n             add(buf, name, value);\n         }\n \n-        if (cookie.maxAge() != Long.MIN_VALUE) {\n+        if (cookie.maxAge() != Integer.MIN_VALUE) {\n             add(buf, CookieHeaderNames.MAX_AGE, cookie.maxAge());\n             Date expires = new Date(cookie.maxAge() * 1000 + System.currentTimeMillis());\n             add(buf, CookieHeaderNames.EXPIRES, HttpHeaderDateFormat.get().format(expires));"
        },
        {
            "sha": "e811b31ec5c57036c098e7f2eb151f0ad163088c",
            "filename": "src/test/java/org/jboss/netty/handler/codec/http/CookieDecoderTest.java",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoderTest.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoderTest.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2FCookieDecoderTest.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -207,7 +207,7 @@ public void testDecodingClientSideCookies() {\n         assertNull(c.getCommentUrl());\n         assertNull(c.getDomain());\n         assertTrue(c.getPorts().isEmpty());\n-        assertEquals(Long.MIN_VALUE, c.getMaxAge());\n+        assertEquals(Integer.MIN_VALUE, c.getMaxAge());\n \n         c = it.next();\n         assertEquals(1, c.getVersion());\n@@ -218,7 +218,7 @@ public void testDecodingClientSideCookies() {\n         assertNull(c.getCommentUrl());\n         assertNull(c.getDomain());\n         assertTrue(c.getPorts().isEmpty());\n-        assertEquals(Long.MIN_VALUE, c.getMaxAge());\n+        assertEquals(Integer.MIN_VALUE, c.getMaxAge());\n \n         assertFalse(it.hasNext());\n     }\n@@ -243,7 +243,7 @@ public void testDecodingCommaSeparatedClientSideCookies() {\n         assertNull(c.getCommentUrl());\n         assertNull(c.getDomain());\n         assertTrue(c.getPorts().isEmpty());\n-        assertEquals(Long.MIN_VALUE, c.getMaxAge());\n+        assertEquals(Integer.MIN_VALUE, c.getMaxAge());\n \n         assertTrue(it.hasNext());\n         c = it.next();\n@@ -255,7 +255,7 @@ public void testDecodingCommaSeparatedClientSideCookies() {\n         assertNull(c.getComment());\n         assertNull(c.getCommentUrl());\n         assertTrue(c.getPorts().isEmpty());\n-        assertEquals(Long.MIN_VALUE, c.getMaxAge());\n+        assertEquals(Integer.MIN_VALUE, c.getMaxAge());\n \n         assertFalse(it.hasNext());\n     }"
        },
        {
            "sha": "680664d84de011dc996a73ffba806cd03f9eb540",
            "filename": "src/test/java/org/jboss/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https://github.com/netty/netty/blob/31815598a2af37f0b71ea94eada70d6659c23752/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoderTest.java",
            "raw_url": "https://github.com/netty/netty/raw/31815598a2af37f0b71ea94eada70d6659c23752/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoderTest.java",
            "contents_url": "https://api.github.com/repos/netty/netty/contents/src%2Ftest%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fcodec%2Fhttp%2Fcookie%2FClientCookieDecoderTest.java?ref=31815598a2af37f0b71ea94eada70d6659c23752",
            "patch": "@@ -172,11 +172,11 @@ public void testDecodingGoogleAnalyticsCookie() {\n     @Test\n     public void testDecodingLongDates() {\n         Calendar cookieDate = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n-        cookieDate.set(9999, Calendar.DECEMBER, 31, 23, 59, 59);\n-        long expectedMaxAge = (cookieDate.getTimeInMillis() - System\n-                .currentTimeMillis()) / 1000;\n+        cookieDate.set(2080, Calendar.DECEMBER, 31, 23, 59, 59);\n+        int expectedMaxAge = (int)((cookieDate.getTimeInMillis() - System\n+                .currentTimeMillis()) / 1000);\n \n-        String source = \"Format=EU; expires=Fri, 31-Dec-9999 23:59:59 GMT; path=/\";\n+        String source = \"Format=EU; expires=Fri, 31-Dec-2080 23:59:59 GMT; path=/\";\n \n         Cookie cookie = ClientCookieDecoder.STRICT.decode(source);\n "
        }
    ]
}