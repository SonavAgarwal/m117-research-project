{
    "sha": "ed4b9d791f9470e4c3de691dd0153a9ce431701b",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDplZDRiOWQ3OTFmOTQ3MGU0YzNkZTY5MWRkMDE1M2E5Y2U0MzE3MDFi",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2018-06-20T11:27:53Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2018-06-20T11:27:53Z"
        },
        "message": "Improve tracking of connection closure.\n\ngit-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1833906 13f79535-47bb-0310-9956-ffa450edef68",
        "tree": {
            "sha": "bb9c599a52761053e6f1a4761d6382627fca8294",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/bb9c599a52761053e6f1a4761d6382627fca8294"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/ed4b9d791f9470e4c3de691dd0153a9ce431701b",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/ed4b9d791f9470e4c3de691dd0153a9ce431701b",
    "html_url": "https://github.com/apache/tomcat/commit/ed4b9d791f9470e4c3de691dd0153a9ce431701b",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/ed4b9d791f9470e4c3de691dd0153a9ce431701b/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "332877b4a6bc1d6fff287bc380111db28cea3030",
            "url": "https://api.github.com/repos/apache/tomcat/commits/332877b4a6bc1d6fff287bc380111db28cea3030",
            "html_url": "https://github.com/apache/tomcat/commit/332877b4a6bc1d6fff287bc380111db28cea3030"
        }
    ],
    "stats": {
        "total": 9,
        "additions": 6,
        "deletions": 3
    },
    "files": [
        {
            "sha": "49d7f4980cf0cfd093a749e72aec4898dab422a2",
            "filename": "java/org/apache/tomcat/util/net/Nio2Endpoint.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/apache/tomcat/blob/ed4b9d791f9470e4c3de691dd0153a9ce431701b/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java",
            "raw_url": "https://github.com/apache/tomcat/raw/ed4b9d791f9470e4c3de691dd0153a9ce431701b/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNio2Endpoint.java?ref=ed4b9d791f9470e4c3de691dd0153a9ce431701b",
            "patch": "@@ -410,7 +410,7 @@ protected AtomicInteger initialValue() {\n         private final Semaphore writePending = new Semaphore(1);\n         private boolean writeInterest = false; // Guarded by writeCompletionHandler\n         private boolean writeNotify = false;\n-        private boolean closed = false;\n+        private volatile boolean closed = false;\n \n         private CompletionHandler<Integer, SocketWrapperBase<Nio2Channel>> awaitBytesHandler\n                 = new CompletionHandler<Integer, SocketWrapperBase<Nio2Channel>>() {\n@@ -842,7 +842,7 @@ public void close() throws IOException {\n \n         @Override\n         public boolean isClosed() {\n-            return !getSocket().isOpen();\n+            return closed || !getSocket().isOpen();\n         }\n \n "
        },
        {
            "sha": "4ba1c1652218b984803c9a690a7a4e368d81772f",
            "filename": "java/org/apache/tomcat/util/net/NioEndpoint.java",
            "status": "modified",
            "additions": 4,
            "deletions": 1,
            "changes": 5,
            "blob_url": "https://github.com/apache/tomcat/blob/ed4b9d791f9470e4c3de691dd0153a9ce431701b/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java",
            "raw_url": "https://github.com/apache/tomcat/raw/ed4b9d791f9470e4c3de691dd0153a9ce431701b/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Futil%2Fnet%2FNioEndpoint.java?ref=ed4b9d791f9470e4c3de691dd0153a9ce431701b",
            "patch": "@@ -501,6 +501,7 @@ public void run() {\n                         // since it won't have been counted down when the socket\n                         // closed.\n                         socket.socketWrapper.getEndpoint().countDownConnection();\n+                        ((NioSocketWrapper) socket.socketWrapper).closed = true;\n                     } else {\n                         final NioSocketWrapper socketWrapper = (NioSocketWrapper) key.attachment();\n                         if (socketWrapper != null) {\n@@ -682,6 +683,7 @@ public NioSocketWrapper cancelledKey(SelectionKey key) {\n                 }\n                 if (ka != null) {\n                     countDownConnection();\n+                    ka.closed = true;\n                 }\n             } catch (Throwable e) {\n                 ExceptionUtils.handleThrowable(e);\n@@ -997,6 +999,7 @@ public static class NioSocketWrapper extends SocketWrapperBase<NioChannel> {\n         private volatile SendfileData sendfileData = null;\n         private volatile long lastRead = System.currentTimeMillis();\n         private volatile long lastWrite = lastRead;\n+        private volatile boolean closed = false;\n \n         public NioSocketWrapper(NioChannel channel, NioEndpoint endpoint) {\n             super(channel, endpoint);\n@@ -1138,7 +1141,7 @@ public void close() throws IOException {\n \n         @Override\n         public boolean isClosed() {\n-            return !getSocket().isOpen();\n+            return closed || !getSocket().isOpen();\n         }\n \n "
        }
    ]
}