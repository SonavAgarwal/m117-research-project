{
    "sha": "46de5d01ae2741ffe04c36270fc62c6d490f65c9",
    "node_id": "MDY6Q29tbWl0NjY1MDUzOTo0NmRlNWQwMWFlMjc0MWZmZTA0YzM2MjcwZmM2MmM2ZDQ5MGY2NWM5",
    "commit": {
        "author": {
            "name": "Olivia Ytterbrink",
            "email": "olivia.ytterbrink@neotechnology.com",
            "date": "2018-10-08T18:46:41Z"
        },
        "committer": {
            "name": "Olivia Ytterbrink",
            "email": "olivia@ytterbrink.com",
            "date": "2018-10-09T13:27:12Z"
        },
        "message": "Fix authentication verification for starttls\n\nThis fixes a bug that was introduced that makes it so password isn't\nchecked when authenticating if server is configured to use starttls\n\nAlso adds tests for this case.",
        "tree": {
            "sha": "25ce414be1291bf388941977f350b4147ede3511",
            "url": "https://api.github.com/repos/neo4j/neo4j/git/trees/25ce414be1291bf388941977f350b4147ede3511"
        },
        "url": "https://api.github.com/repos/neo4j/neo4j/git/commits/46de5d01ae2741ffe04c36270fc62c6d490f65c9",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/neo4j/neo4j/commits/46de5d01ae2741ffe04c36270fc62c6d490f65c9",
    "html_url": "https://github.com/neo4j/neo4j/commit/46de5d01ae2741ffe04c36270fc62c6d490f65c9",
    "comments_url": "https://api.github.com/repos/neo4j/neo4j/commits/46de5d01ae2741ffe04c36270fc62c6d490f65c9/comments",
    "author": {
        "login": "OliviaYtterbrink",
        "id": 979036,
        "node_id": "MDQ6VXNlcjk3OTAzNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/979036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OliviaYtterbrink",
        "html_url": "https://github.com/OliviaYtterbrink",
        "followers_url": "https://api.github.com/users/OliviaYtterbrink/followers",
        "following_url": "https://api.github.com/users/OliviaYtterbrink/following{/other_user}",
        "gists_url": "https://api.github.com/users/OliviaYtterbrink/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/OliviaYtterbrink/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/OliviaYtterbrink/subscriptions",
        "organizations_url": "https://api.github.com/users/OliviaYtterbrink/orgs",
        "repos_url": "https://api.github.com/users/OliviaYtterbrink/repos",
        "events_url": "https://api.github.com/users/OliviaYtterbrink/events{/privacy}",
        "received_events_url": "https://api.github.com/users/OliviaYtterbrink/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "OliviaYtterbrink",
        "id": 979036,
        "node_id": "MDQ6VXNlcjk3OTAzNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/979036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OliviaYtterbrink",
        "html_url": "https://github.com/OliviaYtterbrink",
        "followers_url": "https://api.github.com/users/OliviaYtterbrink/followers",
        "following_url": "https://api.github.com/users/OliviaYtterbrink/following{/other_user}",
        "gists_url": "https://api.github.com/users/OliviaYtterbrink/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/OliviaYtterbrink/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/OliviaYtterbrink/subscriptions",
        "organizations_url": "https://api.github.com/users/OliviaYtterbrink/orgs",
        "repos_url": "https://api.github.com/users/OliviaYtterbrink/repos",
        "events_url": "https://api.github.com/users/OliviaYtterbrink/events{/privacy}",
        "received_events_url": "https://api.github.com/users/OliviaYtterbrink/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "7c427b08211400cb3900ae7d6846d66cbd76be9a",
            "url": "https://api.github.com/repos/neo4j/neo4j/commits/7c427b08211400cb3900ae7d6846d66cbd76be9a",
            "html_url": "https://github.com/neo4j/neo4j/commit/7c427b08211400cb3900ae7d6846d66cbd76be9a"
        }
    ],
    "stats": {
        "total": 42,
        "additions": 42,
        "deletions": 0
    },
    "files": [
        {
            "sha": "708b9e6bc35b3becf6646eec30df4dbf03e26a04",
            "filename": "enterprise/security/src/main/java/org/neo4j/server/security/enterprise/auth/LdapRealm.java",
            "status": "modified",
            "additions": 3,
            "deletions": 0,
            "changes": 3,
            "blob_url": "https://github.com/neo4j/neo4j/blob/46de5d01ae2741ffe04c36270fc62c6d490f65c9/enterprise%2Fsecurity%2Fsrc%2Fmain%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2FLdapRealm.java",
            "raw_url": "https://github.com/neo4j/neo4j/raw/46de5d01ae2741ffe04c36270fc62c6d490f65c9/enterprise%2Fsecurity%2Fsrc%2Fmain%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2FLdapRealm.java",
            "contents_url": "https://api.github.com/repos/neo4j/neo4j/contents/enterprise%2Fsecurity%2Fsrc%2Fmain%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2FLdapRealm.java?ref=46de5d01ae2741ffe04c36270fc62c6d490f65c9",
            "patch": "@@ -232,6 +232,9 @@ private LdapContext getLdapContextUsingStartTls( LdapContextFactory ldapContextF\n             ctx.addToEnvironment( Context.SECURITY_PRINCIPAL, principal );\n             ctx.addToEnvironment( Context.SECURITY_CREDENTIALS, credentials );\n \n+            // do a lookup of the user to trigger authentication\n+            ctx.lookup( principal.toString() );\n+\n             return ctx;\n         }\n         catch ( IOException e )"
        },
        {
            "sha": "d78596a0aba93bdba5806776df6a33c3ac1d68d5",
            "filename": "enterprise/security/src/test/java/org/neo4j/server/security/enterprise/auth/integration/bolt/LdapAuthIT.java",
            "status": "modified",
            "additions": 39,
            "deletions": 0,
            "changes": 39,
            "blob_url": "https://github.com/neo4j/neo4j/blob/46de5d01ae2741ffe04c36270fc62c6d490f65c9/enterprise%2Fsecurity%2Fsrc%2Ftest%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2Fintegration%2Fbolt%2FLdapAuthIT.java",
            "raw_url": "https://github.com/neo4j/neo4j/raw/46de5d01ae2741ffe04c36270fc62c6d490f65c9/enterprise%2Fsecurity%2Fsrc%2Ftest%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2Fintegration%2Fbolt%2FLdapAuthIT.java",
            "contents_url": "https://api.github.com/repos/neo4j/neo4j/contents/enterprise%2Fsecurity%2Fsrc%2Ftest%2Fjava%2Forg%2Fneo4j%2Fserver%2Fsecurity%2Fenterprise%2Fauth%2Fintegration%2Fbolt%2FLdapAuthIT.java?ref=46de5d01ae2741ffe04c36270fc62c6d490f65c9",
            "patch": "@@ -717,6 +717,25 @@ public void shouldBeAbleToLoginAndAuthorizeReaderWithLdapOnlyUsingStartTls() thr\n         }\n     }\n \n+    @Test\n+    public void shouldFailLoginWrongPasswordWithLdapOnlyUsingStartTls() throws Throwable\n+    {\n+        getLdapServer().setConfidentialityRequired( true );\n+\n+        try ( EmbeddedTestCertificates ignore = new EmbeddedTestCertificates() )\n+        {\n+            // When\n+            restartNeo4jServerWithOverriddenSettings( ldapOnlyAuthSettings.andThen( settings ->\n+            {\n+                settings.put( SecuritySettings.ldap_server, \"localhost:10389\" );\n+                settings.put( SecuritySettings.ldap_use_starttls, \"true\" );\n+            } ) );\n+\n+            // Then\n+            assertAuthFail( \"neo\", \"wrong\" );\n+        }\n+    }\n+\n     @Test\n     public void shouldBeAbleToLoginAndAuthorizeReaderWithLdapUserContextUsingStartTls() throws Throwable\n     {\n@@ -737,6 +756,26 @@ public void shouldBeAbleToLoginAndAuthorizeReaderWithLdapUserContextUsingStartTl\n         }\n     }\n \n+    @Test\n+    public void shouldFailLoginWrongPasswordWithLdapUserContextUsingStartTls() throws Throwable\n+    {\n+        getLdapServer().setConfidentialityRequired( true );\n+\n+        try ( EmbeddedTestCertificates ignore = new EmbeddedTestCertificates() )\n+        {\n+            // When\n+            restartNeo4jServerWithOverriddenSettings( ldapOnlyAuthSettings.andThen( settings ->\n+            {\n+                settings.put( SecuritySettings.ldap_authorization_use_system_account, \"false\" );\n+                settings.put( SecuritySettings.ldap_server, \"localhost:10389\" );\n+                settings.put( SecuritySettings.ldap_use_starttls, \"true\" );\n+            } ) );\n+\n+            // Then\n+            assertAuthFail( \"neo\", \"wrong\" );\n+        }\n+    }\n+\n     //------------------------------------------------------------------\n     // Active Directory tests on EC2\n     // NOTE: These rely on an external server and are not executed by automated testing"
        }
    ]
}