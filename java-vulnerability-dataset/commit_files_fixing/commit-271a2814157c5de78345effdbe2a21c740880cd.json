{
    "sha": "271a2814157c5de78345effdbe2a21c740880cdb",
    "node_id": "MDY6Q29tbWl0MTA3Mjg0NToyNzFhMjgxNDE1N2M1ZGU3ODM0NWVmZmRiZTJhMjFjNzQwODgwY2Ri",
    "commit": {
        "author": {
            "name": "Oliver Drotbohm",
            "email": "ogierke@pivotal.io",
            "date": "2019-03-29T13:22:48Z"
        },
        "committer": {
            "name": "Oliver Drotbohm",
            "email": "ogierke@pivotal.io",
            "date": "2019-04-01T09:45:40Z"
        },
        "message": "DATAJPA-1519 - Final polishing.\n\nIntroduced dedicated JPA SpEL root  object to be able to explicitly control the function names exposed.",
        "tree": {
            "sha": "4944ca1f0d0d5c6999396aa5b115e52c5c5efcac",
            "url": "https://api.github.com/repos/spring-projects/spring-data-jpa/git/trees/4944ca1f0d0d5c6999396aa5b115e52c5c5efcac"
        },
        "url": "https://api.github.com/repos/spring-projects/spring-data-jpa/git/commits/271a2814157c5de78345effdbe2a21c740880cdb",
        "comment_count": 0,
        "verification": {
            "verified": true,
            "reason": "valid",
            "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3SOwfGzOVQk6tElQbkK1eHVD9pAFAlyh3cQACgkQbkK1eHVD\n9pC5/hAArcx7RfvdG9G+eZPi9SmB3gCI111aDAddBRpaToUOO2JOD6lh+b5VwkdJ\n3ADkiqCMHtyHqSXnQk4rZ8VOSEMxlpw1K+/uvIuGfNWG4PtvBy9OvDc1A3XXhIfX\naah4tEfCSc27Ee21iorZHkaIDPI+XvpWRbpNruDRIWrRx18sowyGkTfT87Nak1hF\n+ru8q3I5sciNU+EVcZgSxil9odrHr5W9tiCW+OuYxFYcqXXvVYj6Fhzp5bqVEsoX\nsvHnNz42lDF6AVOoa2cbKurWdANZ8HpQtnapt7cwNVsKRdffsLyWvgicEOUtw0hH\n/tIiNJ9Xf7Z4XfkyvQz8k9xGdrytC3GS9Rf8yxRWPuJGqw1WgRUPtsGolfy635M1\nzpzzszseb10wCT+jtWJqfpTQ77LsLiT1lyDOeYvuTwszhf5YyRj2N1jiLR0YBOWd\nXjjOxEYIPIGZdkoxkU4NwQHeXzHe9EEEHmTjgANxY5717oV1pFhL+9BlnORs4WTM\nrGqXVQElx6Br5Yl7PBD671x/70DvBAWINeSPNN9jnDeGjlgNKHtYf8GX3SwbNknl\nZ4+Vfb29zSCqRd7Bsx5cvuBow+E5clkEIb/aTRQ1IwMEyLw787qBOI3UuBeqYb5i\nqEDXbftxjFuOdCFhIPDiMuQAxj9YMR9RgK9XVQqnWnacvd1hGuo=\n=QbUm\n-----END PGP SIGNATURE-----",
            "payload": "tree 4944ca1f0d0d5c6999396aa5b115e52c5c5efcac\nparent 89b18d573394c84012c58c892e9a3844fb8c7b40\nauthor Oliver Drotbohm <ogierke@pivotal.io> 1553865768 +0100\ncommitter Oliver Drotbohm <ogierke@pivotal.io> 1554111940 +0200\n\nDATAJPA-1519 - Final polishing.\n\nIntroduced dedicated JPA SpEL root  object to be able to explicitly control the function names exposed.\n",
            "verified_at": "2024-12-02T09:04:14Z"
        }
    },
    "url": "https://api.github.com/repos/spring-projects/spring-data-jpa/commits/271a2814157c5de78345effdbe2a21c740880cdb",
    "html_url": "https://github.com/spring-projects/spring-data-jpa/commit/271a2814157c5de78345effdbe2a21c740880cdb",
    "comments_url": "https://api.github.com/repos/spring-projects/spring-data-jpa/commits/271a2814157c5de78345effdbe2a21c740880cdb/comments",
    "author": {
        "login": "odrotbohm",
        "id": 128577,
        "node_id": "MDQ6VXNlcjEyODU3Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/128577?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/odrotbohm",
        "html_url": "https://github.com/odrotbohm",
        "followers_url": "https://api.github.com/users/odrotbohm/followers",
        "following_url": "https://api.github.com/users/odrotbohm/following{/other_user}",
        "gists_url": "https://api.github.com/users/odrotbohm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/odrotbohm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/odrotbohm/subscriptions",
        "organizations_url": "https://api.github.com/users/odrotbohm/orgs",
        "repos_url": "https://api.github.com/users/odrotbohm/repos",
        "events_url": "https://api.github.com/users/odrotbohm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/odrotbohm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "odrotbohm",
        "id": 128577,
        "node_id": "MDQ6VXNlcjEyODU3Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/128577?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/odrotbohm",
        "html_url": "https://github.com/odrotbohm",
        "followers_url": "https://api.github.com/users/odrotbohm/followers",
        "following_url": "https://api.github.com/users/odrotbohm/following{/other_user}",
        "gists_url": "https://api.github.com/users/odrotbohm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/odrotbohm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/odrotbohm/subscriptions",
        "organizations_url": "https://api.github.com/users/odrotbohm/orgs",
        "repos_url": "https://api.github.com/users/odrotbohm/repos",
        "events_url": "https://api.github.com/users/odrotbohm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/odrotbohm/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "89b18d573394c84012c58c892e9a3844fb8c7b40",
            "url": "https://api.github.com/repos/spring-projects/spring-data-jpa/commits/89b18d573394c84012c58c892e9a3844fb8c7b40",
            "html_url": "https://github.com/spring-projects/spring-data-jpa/commit/89b18d573394c84012c58c892e9a3844fb8c7b40"
        }
    ],
    "stats": {
        "total": 53,
        "additions": 36,
        "deletions": 17
    },
    "files": [
        {
            "sha": "cf7d294457ea169361f268c455d4413edf7d4b37",
            "filename": "src/main/java/org/springframework/data/jpa/repository/query/EscapeCharacter.java",
            "status": "modified",
            "additions": 3,
            "deletions": 12,
            "changes": 15,
            "blob_url": "https://github.com/spring-projects/spring-data-jpa/blob/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FEscapeCharacter.java",
            "raw_url": "https://github.com/spring-projects/spring-data-jpa/raw/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FEscapeCharacter.java",
            "contents_url": "https://api.github.com/repos/spring-projects/spring-data-jpa/contents/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FEscapeCharacter.java?ref=271a2814157c5de78345effdbe2a21c740880cdb",
            "patch": "@@ -32,12 +32,12 @@ public class EscapeCharacter {\n \n \tprivate static final List<String> TO_REPLACE = Arrays.asList(\"_\", \"%\");\n \n-\tchar value;\n+\tchar escapeCharacter;\n \n \t/**\n \t * Escapes all special like characters ({@code _}, {@code %}) using the configured escape character.\n \t *\n-\t * @param value May be {@literal null}.\n+\t * @param value may be {@literal null}.\n \t * @return\n \t */\n \tpublic String escape(String value) {\n@@ -49,18 +49,9 @@ public String escape(String value) {\n \t\tString result = value;\n \n \t\tfor (String toReplace : TO_REPLACE) {\n-\t\t\tresult = result.replace(toReplace, value + toReplace);\n+\t\t\tresult = result.replace(toReplace, escapeCharacter + toReplace);\n \t\t}\n \n \t\treturn result;\n \t}\n-\n-\t/**\n-\t * Makes the underlying character available.\n-\t *\n-\t * @return the value\n-\t */\n-\tpublic char escapeCharacter() {\n-\t\treturn value;\n-\t}\n }"
        },
        {
            "sha": "4dd73a7d9cdec4b29cac7ccebe55292227ffeb37",
            "filename": "src/main/java/org/springframework/data/jpa/repository/query/JpaQueryCreator.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/spring-projects/spring-data-jpa/blob/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FJpaQueryCreator.java",
            "raw_url": "https://github.com/spring-projects/spring-data-jpa/raw/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FJpaQueryCreator.java",
            "contents_url": "https://api.github.com/repos/spring-projects/spring-data-jpa/contents/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fquery%2FJpaQueryCreator.java?ref=271a2814157c5de78345effdbe2a21c740880cdb",
            "patch": "@@ -291,7 +291,7 @@ public Predicate build() {\n \t\t\t\t\tExpression<String> stringPath = getTypedPath(root, part);\n \t\t\t\t\tExpression<String> propertyExpression = upperIfIgnoreCase(stringPath);\n \t\t\t\t\tExpression<String> parameterExpression = upperIfIgnoreCase(provider.next(part, String.class).getExpression());\n-\t\t\t\t\tPredicate like = builder.like(propertyExpression, parameterExpression, escape.getValue());\n+\t\t\t\t\tPredicate like = builder.like(propertyExpression, parameterExpression, escape.getEscapeCharacter());\n \t\t\t\t\treturn type.equals(NOT_LIKE) || type.equals(NOT_CONTAINING) ? like.not() : like;\n \t\t\t\tcase TRUE:\n \t\t\t\t\tExpression<Boolean> truePath = getTypedPath(root, part);"
        },
        {
            "sha": "55baa05553721bcc35e0811f7ed8635fa610c3b1",
            "filename": "src/main/java/org/springframework/data/jpa/repository/support/JpaEvaluationContextExtension.java",
            "status": "modified",
            "additions": 31,
            "deletions": 3,
            "changes": 34,
            "blob_url": "https://github.com/spring-projects/spring-data-jpa/blob/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaEvaluationContextExtension.java",
            "raw_url": "https://github.com/spring-projects/spring-data-jpa/raw/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaEvaluationContextExtension.java",
            "contents_url": "https://api.github.com/repos/spring-projects/spring-data-jpa/contents/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaEvaluationContextExtension.java?ref=271a2814157c5de78345effdbe2a21c740880cdb",
            "patch": "@@ -15,6 +15,8 @@\n  */\n package org.springframework.data.jpa.repository.support;\n \n+import lombok.RequiredArgsConstructor;\n+\n import org.springframework.data.jpa.repository.query.EscapeCharacter;\n import org.springframework.data.repository.query.spi.EvaluationContextExtension;\n import org.springframework.data.repository.query.spi.EvaluationContextExtensionSupport;\n@@ -27,15 +29,15 @@\n  */\n public class JpaEvaluationContextExtension extends EvaluationContextExtensionSupport {\n \n-\tprivate final EscapeCharacter character;\n+\tprivate final JpaRootObject root;\n \n \t/**\n \t * Creates a new {@link JpaEvaluationContextExtension} for the given escape character.\n \t *\n \t * @param escapeCharacter the character to be used to escape parameters for LIKE expression.\n \t */\n \tpublic JpaEvaluationContextExtension(char escapeCharacter) {\n-\t\tthis.character = EscapeCharacter.of(escapeCharacter);\n+\t\tthis.root = JpaRootObject.of(EscapeCharacter.of(escapeCharacter));\n \t}\n \n \t/*\n@@ -53,6 +55,32 @@ public String getExtensionId() {\n \t */\n \t@Override\n \tpublic Object getRootObject() {\n-\t\treturn character;\n+\t\treturn root;\n+\t}\n+\n+\t@RequiredArgsConstructor(staticName = \"of\")\n+\tpublic static class JpaRootObject {\n+\n+\t\tprivate final EscapeCharacter character;\n+\n+\t\t/**\n+\t\t * Escapes the given source {@link String} for LIKE expressions.\n+\t\t *\n+\t\t * @param source can be {@literal null}.\n+\t\t * @return\n+\t\t * @see EscapeCharacter#escape(String)\n+\t\t */\n+\t\tpublic String escape(String source) {\n+\t\t\treturn character.escape(source);\n+\t\t}\n+\n+\t\t/**\n+\t\t * Returns the escape character being used to escape special characters for LIKE expressions.\n+\t\t *\n+\t\t * @return\n+\t\t */\n+\t\tpublic char escapeCharacter() {\n+\t\t\treturn character.getEscapeCharacter();\n+\t\t}\n \t}\n }"
        },
        {
            "sha": "9f4872f42397acedc1ad1e552e9df69c960ec958",
            "filename": "src/main/java/org/springframework/data/jpa/repository/support/JpaRepositoryFactoryBean.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/spring-projects/spring-data-jpa/blob/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaRepositoryFactoryBean.java",
            "raw_url": "https://github.com/spring-projects/spring-data-jpa/raw/271a2814157c5de78345effdbe2a21c740880cdb/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaRepositoryFactoryBean.java",
            "contents_url": "https://api.github.com/repos/spring-projects/spring-data-jpa/contents/src%2Fmain%2Fjava%2Forg%2Fspringframework%2Fdata%2Fjpa%2Frepository%2Fsupport%2FJpaRepositoryFactoryBean.java?ref=271a2814157c5de78345effdbe2a21c740880cdb",
            "patch": "@@ -51,7 +51,7 @@ public JpaRepositoryFactoryBean(Class<? extends T> repositoryInterface) {\n \t}\n \n \t/**\n-\t * Configures the escape character to be used to escape reserved characters for LIKE expressions.\n+\t * Configures the escape character to be used to escape reserved characters in LIKE expressions.\n \t *\n \t * @param escapeCharacter\n \t */"
        }
    ]
}