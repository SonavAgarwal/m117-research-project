{
    "sha": "5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
    "node_id": "MDY6Q29tbWl0MzIyMTk2MjQ6NWI1Y2Q2ZDgxMzdmNjQ1YzVkNTdiNjQ4YWZiMWEzMDU5NjdhYTdmNA==",
    "commit": {
        "author": {
            "name": "joehni",
            "email": "joerg.schaible@gmx.de",
            "date": "2015-10-06T17:37:18Z"
        },
        "committer": {
            "name": "joehni",
            "email": "joerg.schaible@gmx.de",
            "date": "2015-10-06T17:37:18Z"
        },
        "message": "Fix XXE vulnerability for Dom4JDriver.",
        "tree": {
            "sha": "9f4d2b9d297158839ca12d5bdb68018faabbfa6e",
            "url": "https://api.github.com/repos/x-stream/xstream/git/trees/9f4d2b9d297158839ca12d5bdb68018faabbfa6e"
        },
        "url": "https://api.github.com/repos/x-stream/xstream/git/commits/5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/x-stream/xstream/commits/5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
    "html_url": "https://github.com/x-stream/xstream/commit/5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
    "comments_url": "https://api.github.com/repos/x-stream/xstream/commits/5b5cd6d8137f645c5d57b648afb1a305967aa7f4/comments",
    "author": {
        "login": "joehni",
        "id": 795149,
        "node_id": "MDQ6VXNlcjc5NTE0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/795149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joehni",
        "html_url": "https://github.com/joehni",
        "followers_url": "https://api.github.com/users/joehni/followers",
        "following_url": "https://api.github.com/users/joehni/following{/other_user}",
        "gists_url": "https://api.github.com/users/joehni/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joehni/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joehni/subscriptions",
        "organizations_url": "https://api.github.com/users/joehni/orgs",
        "repos_url": "https://api.github.com/users/joehni/repos",
        "events_url": "https://api.github.com/users/joehni/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joehni/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "joehni",
        "id": 795149,
        "node_id": "MDQ6VXNlcjc5NTE0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/795149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joehni",
        "html_url": "https://github.com/joehni",
        "followers_url": "https://api.github.com/users/joehni/followers",
        "following_url": "https://api.github.com/users/joehni/following{/other_user}",
        "gists_url": "https://api.github.com/users/joehni/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joehni/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joehni/subscriptions",
        "organizations_url": "https://api.github.com/users/joehni/orgs",
        "repos_url": "https://api.github.com/users/joehni/repos",
        "events_url": "https://api.github.com/users/joehni/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joehni/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "url": "https://api.github.com/repos/x-stream/xstream/commits/696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "html_url": "https://github.com/x-stream/xstream/commit/696ec886a23dae880cf12e34e1fe09c5df8fe946"
        }
    ],
    "stats": {
        "total": 34,
        "additions": 24,
        "deletions": 10
    },
    "files": [
        {
            "sha": "ea35a76e542fb670f4d3c79d75866e0d6448b85e",
            "filename": "xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java",
            "status": "modified",
            "additions": 23,
            "deletions": 9,
            "changes": 32,
            "blob_url": "https://github.com/x-stream/xstream/blob/5b5cd6d8137f645c5d57b648afb1a305967aa7f4/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JDriver.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/5b5cd6d8137f645c5d57b648afb1a305967aa7f4/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JDriver.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JDriver.java?ref=5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
            "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (C) 2004, 2005, 2006 Joe Walnes.\n- * Copyright (C) 2006, 2007, 2009, 2011 XStream Committers.\n+ * Copyright (C) 2006, 2007, 2009, 2011, 2014, 2015 XStream Committers.\n  * All rights reserved.\n  *\n  * The software in this package is published under the terms of the BSD\n@@ -26,6 +26,7 @@\n import org.dom4j.io.OutputFormat;\n import org.dom4j.io.SAXReader;\n import org.dom4j.io.XMLWriter;\n+import org.xml.sax.SAXException;\n \n import com.thoughtworks.xstream.io.HierarchicalStreamReader;\n import com.thoughtworks.xstream.io.HierarchicalStreamWriter;\n@@ -89,8 +90,7 @@ public void setOutputFormat(OutputFormat outputFormat) {\n \n     public HierarchicalStreamReader createReader(Reader text) {\n         try {\n-            SAXReader reader = new SAXReader();\n-            Document document = reader.read(text);\n+            final Document document = createReader().read(text);\n             return new Dom4JReader(document, getNameCoder());\n         } catch (DocumentException e) {\n             throw new StreamException(e);\n@@ -99,8 +99,7 @@ public HierarchicalStreamReader createReader(Reader text) {\n \n     public HierarchicalStreamReader createReader(InputStream in) {\n         try {\n-            SAXReader reader = new SAXReader();\n-            Document document = reader.read(in);\n+            final Document document = createReader().read(in);\n             return new Dom4JReader(document, getNameCoder());\n         } catch (DocumentException e) {\n             throw new StreamException(e);\n@@ -112,8 +111,7 @@ public HierarchicalStreamReader createReader(InputStream in) {\n      */\n     public HierarchicalStreamReader createReader(URL in) {\n         try {\n-            SAXReader reader = new SAXReader();\n-            Document document = reader.read(in);\n+            final Document document = createReader().read(in);\n             return new Dom4JReader(document, getNameCoder());\n         } catch (DocumentException e) {\n             throw new StreamException(e);\n@@ -125,8 +123,7 @@ public HierarchicalStreamReader createReader(URL in) {\n      */\n     public HierarchicalStreamReader createReader(File in) {\n         try {\n-            SAXReader reader = new SAXReader();\n-            Document document = reader.read(in);\n+            final Document document = createReader().read(in);\n             return new Dom4JReader(document, getNameCoder());\n         } catch (DocumentException e) {\n             throw new StreamException(e);\n@@ -148,4 +145,21 @@ public HierarchicalStreamWriter createWriter(final OutputStream out) {\n         final Writer writer = new OutputStreamWriter(out);\n         return createWriter(writer);\n     }\n+\n+    /**\n+     * Create and initialize the SAX reader.\n+     * \n+     * @return the SAX reader instance.\n+     * @throws DocumentException if DOCTYPE processing cannot be disabled\n+     * @since upcoming\n+     */\n+    protected SAXReader createReader() throws DocumentException {\n+        final SAXReader reader = new SAXReader();\n+        try {\n+            reader.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+        } catch (SAXException e) {\n+            throw new DocumentException(\"Cannot disable DOCTYPE processing\", e);\n+        }\n+        return reader;\n+    }\n }"
        },
        {
            "sha": "350af5a7e5af31ca52360725ca8ee37b5db29d6e",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/x-stream/xstream/blob/5b5cd6d8137f645c5d57b648afb1a305967aa7f4/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/5b5cd6d8137f645c5d57b648afb1a305967aa7f4/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDom4JReaderTest.java?ref=5b5cd6d8137f645c5d57b648afb1a305967aa7f4",
            "patch": "@@ -52,7 +52,7 @@ public void testIsXXEVulnerable() throws Exception {\n             fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n         } catch (final XStreamException e) {\n             final String message = e.getMessage();\n-            if (message.contains(\"Package\")) {\n+            if (!message.contains(\"DOCTYPE\")) {\n                 throw e;\n             }\n         }"
        }
    ]
}