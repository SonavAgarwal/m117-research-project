{
    "sha": "696ec886a23dae880cf12e34e1fe09c5df8fe946",
    "node_id": "MDY6Q29tbWl0MzIyMTk2MjQ6Njk2ZWM4ODZhMjNkYWU4ODBjZjEyZTM0ZTFmZTA5YzVkZjhmZTk0Ng==",
    "commit": {
        "author": {
            "name": "joehni",
            "email": "joerg.schaible@gmx.de",
            "date": "2015-10-06T17:35:55Z"
        },
        "committer": {
            "name": "joehni",
            "email": "joerg.schaible@gmx.de",
            "date": "2015-10-06T17:35:55Z"
        },
        "message": "Fix XXE vulnerability for JDom parsers.",
        "tree": {
            "sha": "f12d5648ccd151fcf5aade1fc8a8960f1da3ce39",
            "url": "https://api.github.com/repos/x-stream/xstream/git/trees/f12d5648ccd151fcf5aade1fc8a8960f1da3ce39"
        },
        "url": "https://api.github.com/repos/x-stream/xstream/git/commits/696ec886a23dae880cf12e34e1fe09c5df8fe946",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/x-stream/xstream/commits/696ec886a23dae880cf12e34e1fe09c5df8fe946",
    "html_url": "https://github.com/x-stream/xstream/commit/696ec886a23dae880cf12e34e1fe09c5df8fe946",
    "comments_url": "https://api.github.com/repos/x-stream/xstream/commits/696ec886a23dae880cf12e34e1fe09c5df8fe946/comments",
    "author": {
        "login": "joehni",
        "id": 795149,
        "node_id": "MDQ6VXNlcjc5NTE0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/795149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joehni",
        "html_url": "https://github.com/joehni",
        "followers_url": "https://api.github.com/users/joehni/followers",
        "following_url": "https://api.github.com/users/joehni/following{/other_user}",
        "gists_url": "https://api.github.com/users/joehni/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joehni/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joehni/subscriptions",
        "organizations_url": "https://api.github.com/users/joehni/orgs",
        "repos_url": "https://api.github.com/users/joehni/repos",
        "events_url": "https://api.github.com/users/joehni/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joehni/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "joehni",
        "id": 795149,
        "node_id": "MDQ6VXNlcjc5NTE0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/795149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joehni",
        "html_url": "https://github.com/joehni",
        "followers_url": "https://api.github.com/users/joehni/followers",
        "following_url": "https://api.github.com/users/joehni/following{/other_user}",
        "gists_url": "https://api.github.com/users/joehni/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joehni/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joehni/subscriptions",
        "organizations_url": "https://api.github.com/users/joehni/orgs",
        "repos_url": "https://api.github.com/users/joehni/repos",
        "events_url": "https://api.github.com/users/joehni/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joehni/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "e4f1457e681e015be83c6b0b84947676980e29d3",
            "url": "https://api.github.com/repos/x-stream/xstream/commits/e4f1457e681e015be83c6b0b84947676980e29d3",
            "html_url": "https://github.com/x-stream/xstream/commit/e4f1457e681e015be83c6b0b84947676980e29d3"
        }
    ],
    "stats": {
        "total": 105,
        "additions": 53,
        "deletions": 52
    },
    "files": [
        {
            "sha": "0c672dc1587cf503ddb2f2b2209ed10b66ab046b",
            "filename": "xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomDriver.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomDriver.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomDriver.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -64,7 +64,7 @@ public DomDriver(String encoding, NameCoder nameCoder) {\n         this.encoding = encoding;\n         documentBuilderFactory = DocumentBuilderFactory.newInstance();\n         try {\n-            documentBuilderFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", false);\n+            documentBuilderFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n         } catch (final ParserConfigurationException e) {\n             throw new StreamException(e);\n         }"
        },
        {
            "sha": "f45e00ed4ca39a34915916a0aad6b1807b6f2b72",
            "filename": "xstream/src/java/com/thoughtworks/xstream/io/xml/JDom2Driver.java",
            "status": "modified",
            "additions": 20,
            "deletions": 8,
            "changes": 28,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2Driver.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2Driver.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2Driver.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -47,8 +47,8 @@ public JDom2Driver(NameCoder nameCoder) {\n \n     public HierarchicalStreamReader createReader(Reader reader) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(reader);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(reader);\n             return new JDom2Reader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -59,8 +59,8 @@ public HierarchicalStreamReader createReader(Reader reader) {\n \n     public HierarchicalStreamReader createReader(InputStream in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDom2Reader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -71,8 +71,8 @@ public HierarchicalStreamReader createReader(InputStream in) {\n \n     public HierarchicalStreamReader createReader(URL in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDom2Reader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -83,8 +83,8 @@ public HierarchicalStreamReader createReader(URL in) {\n \n     public HierarchicalStreamReader createReader(File in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDom2Reader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -100,5 +100,17 @@ public HierarchicalStreamWriter createWriter(Writer out) {\n     public HierarchicalStreamWriter createWriter(OutputStream out) {\n         return new PrettyPrintWriter(new OutputStreamWriter(out));\n     }\n+\n+    /**\n+     * Create and initialize the SAX builder.\n+     * \n+     * @return the SAX builder instance.\n+     * @since upcoming\n+     */\n+    protected SAXBuilder createBuilder() {\n+        final SAXBuilder builder = new SAXBuilder();\n+        builder.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+        return builder;\n+    }\n }\n "
        },
        {
            "sha": "25d927dca630102046c132c419e2e12f8e4064b8",
            "filename": "xstream/src/java/com/thoughtworks/xstream/io/xml/JDomDriver.java",
            "status": "modified",
            "additions": 20,
            "deletions": 8,
            "changes": 28,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomDriver.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomDriver.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Fjava%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomDriver.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -55,8 +55,8 @@ public JDomDriver(XmlFriendlyReplacer replacer) {\n \n     public HierarchicalStreamReader createReader(Reader reader) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(reader);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(reader);\n             return new JDomReader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -67,8 +67,8 @@ public HierarchicalStreamReader createReader(Reader reader) {\n \n     public HierarchicalStreamReader createReader(InputStream in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDomReader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -79,8 +79,8 @@ public HierarchicalStreamReader createReader(InputStream in) {\n \n     public HierarchicalStreamReader createReader(URL in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDomReader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -91,8 +91,8 @@ public HierarchicalStreamReader createReader(URL in) {\n \n     public HierarchicalStreamReader createReader(File in) {\n         try {\n-            SAXBuilder builder = new SAXBuilder();\n-            Document document = builder.build(in);\n+            final SAXBuilder builder = createBuilder();\n+            final Document document = builder.build(in);\n             return new JDomReader(document, getNameCoder());\n         } catch (IOException e) {\n             throw new StreamException(e);\n@@ -109,5 +109,17 @@ public HierarchicalStreamWriter createWriter(OutputStream out) {\n         return new PrettyPrintWriter(new OutputStreamWriter(out));\n     }\n \n+    /**\n+     * Create and initialize the SAX builder.\n+     * \n+     * @return the SAX builder instance.\n+     * @since upcoming\n+     */\n+    protected SAXBuilder createBuilder() {\n+        final SAXBuilder builder = new SAXBuilder();\n+        builder.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+        return builder;\n+    }\n+\n }\n "
        },
        {
            "sha": "f9d1e1948717b02b782361d5c1dda35ea93fcc27",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/BEAStaxReaderTest.java",
            "status": "modified",
            "additions": 0,
            "deletions": 1,
            "changes": 1,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FBEAStaxReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FBEAStaxReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FBEAStaxReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -29,7 +29,6 @@ protected HierarchicalStreamReader createReader(String xml) throws Exception {\n     @Override\n     public void testIsXXEVulnerable() throws Exception {\n         // Implementation ignores XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES\n-        todoIsXXEVulnerable();\n     }\n \n     public void todoIsXXEVulnerable() throws Exception {"
        },
        {
            "sha": "f03c8e4c4a222ca7b2b8cfa18ccc752f5dd5205a",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FDomReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (C) 2004, 2005 Joe Walnes.\n- * Copyright (C) 2006, 2007 XStream Committers.\n+ * Copyright (C) 2006, 2007, 2015 XStream Committers.\n  * All rights reserved.\n  *\n  * The software in this package is published under the terms of the BSD\n@@ -90,8 +90,8 @@ public void testIsXXEVulnerable() throws Exception {\n             super.testIsXXEVulnerable();\n             fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n         } catch (final XStreamException e) {\n-            final String message = e.getMessage().toLowerCase();\n-            if (message.contains(\"Package\")) {\n+            final String message = e.getMessage();\n+            if (!message.contains(\"DOCTYPE\")) {\n                 throw e;\n             }\n         }"
        },
        {
            "sha": "1ad7812b524da0ac1a6700206686eef4a390c7e6",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java",
            "status": "modified",
            "additions": 3,
            "deletions": 4,
            "changes": 7,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2ReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2ReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDom2ReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -15,7 +15,6 @@\n \n import org.jdom2.Document;\n import org.jdom2.Element;\n-import org.jdom2.input.JDOMParseException;\n import org.jdom2.input.SAXBuilder;\n \n import java.io.StringReader;\n@@ -49,10 +48,10 @@ public void testCanReadFromElementOfLargerDocument() throws Exception {\n     public void testIsXXEVulnerable() throws Exception {\n         try {\n             super.testIsXXEVulnerable();\n-            fail(\"Thrown \" + JDOMParseException.class.getName() + \" expected\");\n-        } catch (final JDOMParseException e) {\n+            fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n+        } catch (final XStreamException e) {\n             final String message = e.getMessage();\n-            if (message.contains(\"Package\")) {\n+            if (!message.contains(\"DOCTYPE\")) {\n                 throw e;\n             }\n         }"
        },
        {
            "sha": "c8e4cff97cf7571ae403998165676497c1e695b6",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java",
            "status": "modified",
            "additions": 3,
            "deletions": 4,
            "changes": 7,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FJDomReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -16,7 +16,6 @@\n \n import org.jdom.Document;\n import org.jdom.Element;\n-import org.jdom.input.JDOMParseException;\n import org.jdom.input.SAXBuilder;\n \n import java.io.StringReader;\n@@ -50,10 +49,10 @@ public void testCanReadFromElementOfLargerDocument() throws Exception {\n     public void testIsXXEVulnerable() throws Exception {\n         try {\n             super.testIsXXEVulnerable();\n-            fail(\"Thrown \" + JDOMParseException.class.getName() + \" expected\");\n-        } catch (final JDOMParseException e) {\n+            fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n+        } catch (final XStreamException e) {\n             final String message = e.getMessage();\n-            if (message.contains(\"Package\")) {\n+            if (!message.contains(\"DOCTYPE\")) {\n                 throw e;\n             }\n         }"
        },
        {
            "sha": "2ba70c79ad75a6cdd4cd9a1b677000a3fbc578e4",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/SjsxpReaderTest.java",
            "status": "modified",
            "additions": 0,
            "deletions": 12,
            "changes": 12,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FSjsxpReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FSjsxpReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FSjsxpReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -48,17 +48,5 @@ protected HierarchicalStreamReader createReader(String xml) throws Exception {\n         return driver.createReader(new StringReader(xml));\n     }\n \n-    @Override\n-    public void testIsXXEVulnerable() throws Exception {\n-        try {\n-            super.testIsXXEVulnerable();\n-        } catch (final XStreamException e) {\n-            final String message = e.getMessage();\n-            if (message.contains(\"ParseError\") && message.contains(\"[1,1]\")) {\n-                throw e;\n-            }\n-        }\n-    }\n-\n     // inherits tests from superclass\n }"
        },
        {
            "sha": "bda0e66d188928bf03f5b0f146fbc96b3210674d",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/StandardStaxReaderTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 9,
            "changes": 10,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStandardStaxReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStandardStaxReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStandardStaxReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -10,7 +10,6 @@\n  */\n package com.thoughtworks.xstream.io.xml;\n \n-import com.thoughtworks.xstream.XStreamException;\n import com.thoughtworks.xstream.io.HierarchicalStreamDriver;\n import com.thoughtworks.xstream.io.HierarchicalStreamReader;\n \n@@ -27,14 +26,7 @@ protected HierarchicalStreamReader createReader(String xml) throws Exception {\n \n     @Override\n     public void testIsXXEVulnerable() throws Exception {\n-        try {\n-            super.testIsXXEVulnerable();\n-        } catch (final XStreamException e) {\n-            final String message = e.getMessage();\n-            if (message.contains(\"ParseError\") && message.contains(\"[1,1]\")) {\n-                throw e;\n-            }\n-        }\n+        super.testIsXXEVulnerable();\n     }\n \n     // inherits tests from superclass"
        },
        {
            "sha": "1d9c09d96ba30d629007ba515fd17b9e38ad17ee",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStaxReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStaxReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FStaxReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -31,7 +31,7 @@ public void testIsXXEVulnerable() throws Exception {\n             fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n         } catch (final XStreamException e) {\n             final String message = e.getMessage();\n-            if (message.contains(\"Package\")) {\n+            if (!message.contains(\"external entity\")) {\n                 throw e;\n             }\n         }"
        },
        {
            "sha": "26193941e1dd24219e7e71028012d4f97fe5268d",
            "filename": "xstream/src/test/com/thoughtworks/xstream/io/xml/WstxReaderTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/x-stream/xstream/blob/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FWstxReaderTest.java",
            "raw_url": "https://github.com/x-stream/xstream/raw/696ec886a23dae880cf12e34e1fe09c5df8fe946/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FWstxReaderTest.java",
            "contents_url": "https://api.github.com/repos/x-stream/xstream/contents/xstream%2Fsrc%2Ftest%2Fcom%2Fthoughtworks%2Fxstream%2Fio%2Fxml%2FWstxReaderTest.java?ref=696ec886a23dae880cf12e34e1fe09c5df8fe946",
            "patch": "@@ -32,7 +32,7 @@ public void testIsXXEVulnerable() throws Exception {\n             fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n         } catch (final XStreamException e) {\n             final String message = e.getMessage();\n-            if (message.contains(\"Package\")) {\n+            if (!message.contains(\"external entity\")) {\n                 throw e;\n             }\n         }"
        }
    ]
}