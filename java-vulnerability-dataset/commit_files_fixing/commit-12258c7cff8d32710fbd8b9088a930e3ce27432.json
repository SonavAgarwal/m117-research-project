{
    "sha": "12258c7cff8d32710fbd8b9088a930e3ce27432e",
    "node_id": "MDY6Q29tbWl0MjM0MTg1MTc6MTIyNThjN2NmZjhkMzI3MTBmYmQ4YjkwODhhOTMwZTNjZTI3NDMyZQ==",
    "commit": {
        "author": {
            "name": "Akira Ajisaka",
            "email": "aajisaka@apache.org",
            "date": "2018-05-23T08:20:20Z"
        },
        "committer": {
            "name": "Akira Ajisaka",
            "email": "aajisaka@apache.org",
            "date": "2018-05-23T08:21:15Z"
        },
        "message": "Additional check when unpacking archives. Contributed by Jason Lowe and Akira Ajisaka.\n\n(cherry picked from commit cedc28d4ab2a27ba47e15ab2711218d96ec88d23)",
        "tree": {
            "sha": "c12305ce65b96ec2d416bbdb571f830d59d105b8",
            "url": "https://api.github.com/repos/apache/hadoop/git/trees/c12305ce65b96ec2d416bbdb571f830d59d105b8"
        },
        "url": "https://api.github.com/repos/apache/hadoop/git/commits/12258c7cff8d32710fbd8b9088a930e3ce27432e",
        "comment_count": 0,
        "verification": {
            "verified": true,
            "reason": "valid",
            "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJIBAABCgAyFiEE8F32UAoCGSJ7VmmQwe27nKQA/VAFAlsFJHsUHGFhamlzYWth\nQGFwYWNoZS5vcmcACgkQwe27nKQA/VDpYQ//aVa/zuDf32s990y08o4AVn+pag6A\njg/nvRHi1j9FxhhxfSOVhEsDRv722o5n7bNpOfVgqD3VBLdeGLL9fqK/2GdHEfrt\nzam7xJMkbXY1Gl6oMtDd2f9vRA3TBTyLfhWoh1FwWwWdlnuHw13qGmR0H6YjS1Gj\n1quevg59uiwfn9/Ut6ajOQ8gRdIPoWWqoPv/Gmx8sKdJeHkkUvrHU8VloVEc+O1J\nCXQpRPhzjeZT7EVhaxSrZecEaOn/bLdZQnr1qaDagv2lMtpqPhm71wVv4Qzpxnt5\nNSROxLnVklI5PnJ5dHj7McuLTOCcCIN6kEuVG8nkNSXb8Tcbffxud1NwwUP7wYKu\nDzF0yGE3ADOYM/HECp+jJQNDKpmx+ianDYL3CpXCt7aw68HfVXttdtVUHt1/SMSe\nSHvdF5czVHW6NgXvfyfCAAuDA9RWOjf/eYB1ZK0UHY6bCTMVD4Qlv4TQuonTT6KM\ny9rPQT24+gYLPX8sIdCbe1gqRdnGjI7dTBcp8zOJw7FxQVWqJcfEb6GMBurABj3Z\n2m0jS8tcPNODjLgHxXnvExQE4NdA95hHz+5DaqPq75ZEX/aINg2lzpZExql+mU9W\n0o8GL6gxYLaLzZ5Kn7P7OeKp0yZpXM9vet/h0vIbNSoJsdVRME+tkCivW4573iGo\nqc+rx67Cay7w8Pw=\n=SjeW\n-----END PGP SIGNATURE-----",
            "payload": "tree c12305ce65b96ec2d416bbdb571f830d59d105b8\nparent 1c407d327a655576d2d0d12fd408db5ba0e85de8\nauthor Akira Ajisaka <aajisaka@apache.org> 1527063620 +0900\ncommitter Akira Ajisaka <aajisaka@apache.org> 1527063675 +0900\n\nAdditional check when unpacking archives. Contributed by Jason Lowe and Akira Ajisaka.\n\n(cherry picked from commit cedc28d4ab2a27ba47e15ab2711218d96ec88d23)\n",
            "verified_at": "2024-11-08T07:44:00Z"
        }
    },
    "url": "https://api.github.com/repos/apache/hadoop/commits/12258c7cff8d32710fbd8b9088a930e3ce27432e",
    "html_url": "https://github.com/apache/hadoop/commit/12258c7cff8d32710fbd8b9088a930e3ce27432e",
    "comments_url": "https://api.github.com/repos/apache/hadoop/commits/12258c7cff8d32710fbd8b9088a930e3ce27432e/comments",
    "author": {
        "login": "aajisaka",
        "id": 3403122,
        "node_id": "MDQ6VXNlcjM0MDMxMjI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3403122?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aajisaka",
        "html_url": "https://github.com/aajisaka",
        "followers_url": "https://api.github.com/users/aajisaka/followers",
        "following_url": "https://api.github.com/users/aajisaka/following{/other_user}",
        "gists_url": "https://api.github.com/users/aajisaka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aajisaka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aajisaka/subscriptions",
        "organizations_url": "https://api.github.com/users/aajisaka/orgs",
        "repos_url": "https://api.github.com/users/aajisaka/repos",
        "events_url": "https://api.github.com/users/aajisaka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aajisaka/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "aajisaka",
        "id": 3403122,
        "node_id": "MDQ6VXNlcjM0MDMxMjI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3403122?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aajisaka",
        "html_url": "https://github.com/aajisaka",
        "followers_url": "https://api.github.com/users/aajisaka/followers",
        "following_url": "https://api.github.com/users/aajisaka/following{/other_user}",
        "gists_url": "https://api.github.com/users/aajisaka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aajisaka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aajisaka/subscriptions",
        "organizations_url": "https://api.github.com/users/aajisaka/orgs",
        "repos_url": "https://api.github.com/users/aajisaka/repos",
        "events_url": "https://api.github.com/users/aajisaka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aajisaka/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "1c407d327a655576d2d0d12fd408db5ba0e85de8",
            "url": "https://api.github.com/repos/apache/hadoop/commits/1c407d327a655576d2d0d12fd408db5ba0e85de8",
            "html_url": "https://github.com/apache/hadoop/commit/1c407d327a655576d2d0d12fd408db5ba0e85de8"
        }
    ],
    "stats": {
        "total": 56,
        "additions": 47,
        "deletions": 9
    },
    "files": [
        {
            "sha": "20c44d2ab81fa4e98a9d6b44da953596df3b1fea",
            "filename": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
            "status": "modified",
            "additions": 14,
            "deletions": 3,
            "changes": 17,
            "blob_url": "https://github.com/apache/hadoop/blob/12258c7cff8d32710fbd8b9088a930e3ce27432e/hadoop-common-project%2Fhadoop-common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FFileUtil.java",
            "raw_url": "https://github.com/apache/hadoop/raw/12258c7cff8d32710fbd8b9088a930e3ce27432e/hadoop-common-project%2Fhadoop-common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FFileUtil.java",
            "contents_url": "https://api.github.com/repos/apache/hadoop/contents/hadoop-common-project%2Fhadoop-common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FFileUtil.java?ref=12258c7cff8d32710fbd8b9088a930e3ce27432e",
            "patch": "@@ -591,16 +591,21 @@ public static long getDU(File dir) {\n   public static void unZip(File inFile, File unzipDir) throws IOException {\n     Enumeration<? extends ZipEntry> entries;\n     ZipFile zipFile = new ZipFile(inFile);\n+    String targetDirPath = unzipDir.getCanonicalPath() + File.separator;\n \n     try {\n       entries = zipFile.entries();\n       while (entries.hasMoreElements()) {\n         ZipEntry entry = entries.nextElement();\n         if (!entry.isDirectory()) {\n+          File file = new File(unzipDir, entry.getName());\n+          if (!file.getCanonicalPath().startsWith(targetDirPath)) {\n+            throw new IOException(\"expanding \" + entry.getName()\n+                + \" would create file outside of \" + unzipDir);\n+          }\n           InputStream in = zipFile.getInputStream(entry);\n           try {\n-            File file = new File(unzipDir, entry.getName());\n-            if (!file.getParentFile().mkdirs()) {           \n+            if (!file.getParentFile().mkdirs()) {\n               if (!file.getParentFile().isDirectory()) {\n                 throw new IOException(\"Mkdirs failed to create \" + \n                                       file.getParentFile().toString());\n@@ -709,6 +714,13 @@ private static void unTarUsingJava(File inFile, File untarDir,\n   \n   private static void unpackEntries(TarArchiveInputStream tis,\n       TarArchiveEntry entry, File outputDir) throws IOException {\n+    String targetDirPath = outputDir.getCanonicalPath() + File.separator;\n+    File outputFile = new File(outputDir, entry.getName());\n+    if (!outputFile.getCanonicalPath().startsWith(targetDirPath)) {\n+      throw new IOException(\"expanding \" + entry.getName()\n+          + \" would create entry outside of \" + outputDir);\n+    }\n+\n     if (entry.isDirectory()) {\n       File subDir = new File(outputDir, entry.getName());\n       if (!subDir.mkdirs() && !subDir.isDirectory()) {\n@@ -723,7 +735,6 @@ private static void unpackEntries(TarArchiveInputStream tis,\n       return;\n     }\n \n-    File outputFile = new File(outputDir, entry.getName());\n     if (!outputFile.getParentFile().exists()) {\n       if (!outputFile.getParentFile().mkdirs()) {\n         throw new IOException(\"Mkdirs failed to create tar internal dir \""
        },
        {
            "sha": "366bd4d91f3b6a3973ecbfc9489e8fbe53d57425",
            "filename": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java",
            "status": "modified",
            "additions": 33,
            "deletions": 6,
            "changes": 39,
            "blob_url": "https://github.com/apache/hadoop/blob/12258c7cff8d32710fbd8b9088a930e3ce27432e/hadoop-common-project%2Fhadoop-common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FTestFileUtil.java",
            "raw_url": "https://github.com/apache/hadoop/raw/12258c7cff8d32710fbd8b9088a930e3ce27432e/hadoop-common-project%2Fhadoop-common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FTestFileUtil.java",
            "contents_url": "https://api.github.com/repos/apache/hadoop/contents/hadoop-common-project%2Fhadoop-common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fhadoop%2Ffs%2FTestFileUtil.java?ref=12258c7cff8d32710fbd8b9088a930e3ce27432e",
            "patch": "@@ -32,6 +32,7 @@\n import java.io.PrintWriter;\n import java.net.URISyntaxException;\n import java.net.UnknownHostException;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -734,10 +735,8 @@ public void testCreateLocalTempFile() throws IOException {\n   \n   @Test (timeout = 30000)\n   public void testUnZip() throws IOException {\n-    // make sa simple zip\n     setupDirs();\n-    \n-    // make a simple tar:\n+    // make a simple zip\n     final File simpleZip = new File(del, FILE);\n     OutputStream os = new FileOutputStream(simpleZip); \n     ZipOutputStream tos = new ZipOutputStream(os);\n@@ -754,7 +753,7 @@ public void testUnZip() throws IOException {\n       tos.close();\n     }\n     \n-    // successfully untar it into an existing dir:\n+    // successfully unzip it into an existing dir:\n     FileUtil.unZip(simpleZip, tmp);\n     // check result:\n     assertTrue(new File(tmp, \"foo\").exists());\n@@ -769,8 +768,36 @@ public void testUnZip() throws IOException {\n     } catch (IOException ioe) {\n       // okay\n     }\n-  }  \n-  \n+  }\n+\n+  @Test (timeout = 30000)\n+  public void testUnZip2() throws IOException {\n+    setupDirs();\n+    // make a simple zip\n+    final File simpleZip = new File(del, FILE);\n+    OutputStream os = new FileOutputStream(simpleZip);\n+    try (ZipOutputStream tos = new ZipOutputStream(os)) {\n+      // Add an entry that contains invalid filename\n+      ZipEntry ze = new ZipEntry(\"../foo\");\n+      byte[] data = \"some-content\".getBytes(StandardCharsets.UTF_8);\n+      ze.setSize(data.length);\n+      tos.putNextEntry(ze);\n+      tos.write(data);\n+      tos.closeEntry();\n+      tos.flush();\n+      tos.finish();\n+    }\n+\n+    // Unzip it into an existing dir\n+    try {\n+      FileUtil.unZip(simpleZip, tmp);\n+      Assert.fail(\"unZip should throw IOException.\");\n+    } catch (IOException e) {\n+      GenericTestUtils.assertExceptionContains(\n+          \"would create file outside of\", e);\n+    }\n+  }\n+\n   @Test (timeout = 30000)\n   /*\n    * Test method copy(FileSystem srcFS, Path src, File dst, boolean deleteSource, Configuration conf)"
        }
    ]
}