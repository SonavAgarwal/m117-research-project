{
    "sha": "c8acd2ab7371e39aeca7c306f3b5380f00afe552",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDpjOGFjZDJhYjczNzFlMzlhZWNhN2MzMDZmM2I1MzgwZjAwYWZlNTUy",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2020-05-22T10:27:49Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2020-05-22T10:41:14Z"
        },
        "message": "Fix BZ 64467. Improve performance of closing idle streams",
        "tree": {
            "sha": "79870904d8074689f573ca8257dc8c6145cc4410",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/79870904d8074689f573ca8257dc8c6145cc4410"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/c8acd2ab7371e39aeca7c306f3b5380f00afe552",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/c8acd2ab7371e39aeca7c306f3b5380f00afe552",
    "html_url": "https://github.com/apache/tomcat/commit/c8acd2ab7371e39aeca7c306f3b5380f00afe552",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/c8acd2ab7371e39aeca7c306f3b5380f00afe552/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "f936bbf8e3c605e6d73c39b944e66400b7ac9dd2",
            "url": "https://api.github.com/repos/apache/tomcat/commits/f936bbf8e3c605e6d73c39b944e66400b7ac9dd2",
            "html_url": "https://github.com/apache/tomcat/commit/f936bbf8e3c605e6d73c39b944e66400b7ac9dd2"
        }
    ],
    "stats": {
        "total": 45,
        "additions": 36,
        "deletions": 9
    },
    "files": [
        {
            "sha": "bf05d4e29b5d83b72314700a6b3fd0ac68dec444",
            "filename": "java/org/apache/coyote/http2/Http2UpgradeHandler.java",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https://github.com/apache/tomcat/blob/c8acd2ab7371e39aeca7c306f3b5380f00afe552/java%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FHttp2UpgradeHandler.java",
            "raw_url": "https://github.com/apache/tomcat/raw/c8acd2ab7371e39aeca7c306f3b5380f00afe552/java%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FHttp2UpgradeHandler.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FHttp2UpgradeHandler.java?ref=c8acd2ab7371e39aeca7c306f3b5380f00afe552",
            "patch": "@@ -1582,11 +1582,11 @@ public HeaderEmitter headersStart(int streamId, boolean headersEndStream)\n     }\n \n \n-    private void closeIdleStreams(int newMaxActiveRemoteStreamId) throws Http2Exception {\n-        for (int i = maxActiveRemoteStreamId + 2; i < newMaxActiveRemoteStreamId; i += 2) {\n-            Stream stream = getStream(i, false);\n-            if (stream != null) {\n-                stream.closeIfIdle();\n+    private void closeIdleStreams(int newMaxActiveRemoteStreamId) {\n+        for (Entry<Integer,Stream> entry : streams.entrySet()) {\n+            if (entry.getKey().intValue() > maxActiveRemoteStreamId &&\n+                    entry.getKey().intValue() < newMaxActiveRemoteStreamId) {\n+                entry.getValue().closeIfIdle();\n             }\n         }\n         maxActiveRemoteStreamId = newMaxActiveRemoteStreamId;"
        },
        {
            "sha": "e9433b7a9ffb80a1eb7cacdd30093c8b194d281d",
            "filename": "test/org/apache/coyote/http2/TestHttp2Section_5_1.java",
            "status": "modified",
            "additions": 27,
            "deletions": 4,
            "changes": 31,
            "blob_url": "https://github.com/apache/tomcat/blob/c8acd2ab7371e39aeca7c306f3b5380f00afe552/test%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FTestHttp2Section_5_1.java",
            "raw_url": "https://github.com/apache/tomcat/raw/c8acd2ab7371e39aeca7c306f3b5380f00afe552/test%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FTestHttp2Section_5_1.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/test%2Forg%2Fapache%2Fcoyote%2Fhttp2%2FTestHttp2Section_5_1.java?ref=c8acd2ab7371e39aeca7c306f3b5380f00afe552",
            "patch": "@@ -152,21 +152,44 @@ public void testClientSendOldStream() throws Exception {\n \n     @Test\n     public void testImplicitClose() throws Exception {\n+        doTestImplicitClose(5);\n+    }\n+\n+\n+    // https://bz.apache.org/bugzilla/show_bug.cgi?id=64467\n+    @Test\n+    public void testImplicitCloseLargeId() throws Exception {\n+        doTestImplicitClose(Integer.MAX_VALUE - 8);\n+    }\n+\n+\n+    private void doTestImplicitClose(int lastStreamId) throws Exception {\n+\n+        long startFirst = System.nanoTime();\n         http2Connect();\n+        long durationFirst = System.nanoTime() - startFirst;\n \n         sendPriority(3, 0, 16);\n-        sendPriority(5, 0, 16);\n+        sendPriority(lastStreamId, 0, 16);\n \n-        sendSimpleGetRequest(5);\n+        long startSecond = System.nanoTime();\n+        sendSimpleGetRequest(lastStreamId);\n         readSimpleGetResponse();\n-        Assert.assertEquals(getSimpleResponseTrace(5), output.getTrace());\n+        long durationSecond = System.nanoTime() - startSecond;\n+\n+        Assert.assertEquals(getSimpleResponseTrace(lastStreamId), output.getTrace());\n         output.clearTrace();\n \n+        // Allow second request to take up to 5 times first request or up to 1 second - whichever is the larger - mainly\n+        // to allow for CI systems under load that can exhibit significant timing variation.\n+        Assert.assertTrue(\"First request took [\" + durationFirst/1000000 + \"ms], second request took [\" +\n+                durationSecond/1000000 + \"ms]\", durationSecond < 1000000000 || durationSecond < durationFirst * 3);\n+\n         // Should trigger an error since stream 3 should have been implicitly\n         // closed.\n         sendSimpleGetRequest(3);\n \n-        handleGoAwayResponse(5);\n+        handleGoAwayResponse(lastStreamId);\n     }\n \n "
        },
        {
            "sha": "f16ad875a6a31881c613762344dd7f4ccc946afa",
            "filename": "webapps/docs/changelog.xml",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https://github.com/apache/tomcat/blob/c8acd2ab7371e39aeca7c306f3b5380f00afe552/webapps%2Fdocs%2Fchangelog.xml",
            "raw_url": "https://github.com/apache/tomcat/raw/c8acd2ab7371e39aeca7c306f3b5380f00afe552/webapps%2Fdocs%2Fchangelog.xml",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/webapps%2Fdocs%2Fchangelog.xml?ref=c8acd2ab7371e39aeca7c306f3b5380f00afe552",
            "patch": "@@ -63,6 +63,10 @@\n       <update>\n         Add support for ALPN on recent OpenJDK 8 releases. (remm)\n       </update>\n+      <fix>\n+        <bug>64467</bug>: Improve performance of closing idle HTTP/2 streams.\n+        (markt)\n+      </fix>\n     </changelog>\n   </subsection>\n   <subsection name=\"WebSocket\">"
        }
    ]
}