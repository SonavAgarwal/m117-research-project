{
    "sha": "acaac81f96fec91ab45bd0412beaf9c3acd8defa",
    "node_id": "MDY6Q29tbWl0MTA0MTY2NDg6YWNhYWM4MWY5NmZlYzkxYWI0NWJkMDQxMmJlYWY5YzNhY2Q4ZGVmYQ==",
    "commit": {
        "author": {
            "name": "David Hook",
            "email": "dgh@cryptoworkshop.com",
            "date": "2016-10-15T02:44:15Z"
        },
        "committer": {
            "name": "David Hook",
            "email": "dgh@cryptoworkshop.com",
            "date": "2016-10-15T02:44:15Z"
        },
        "message": "added randomizer to DSA signature generation",
        "tree": {
            "sha": "eca2b23e35fc9b973e7a71d0823e8ecb02d4ca76",
            "url": "https://api.github.com/repos/bcgit/bc-java/git/trees/eca2b23e35fc9b973e7a71d0823e8ecb02d4ca76"
        },
        "url": "https://api.github.com/repos/bcgit/bc-java/git/commits/acaac81f96fec91ab45bd0412beaf9c3acd8defa",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/bcgit/bc-java/commits/acaac81f96fec91ab45bd0412beaf9c3acd8defa",
    "html_url": "https://github.com/bcgit/bc-java/commit/acaac81f96fec91ab45bd0412beaf9c3acd8defa",
    "comments_url": "https://api.github.com/repos/bcgit/bc-java/commits/acaac81f96fec91ab45bd0412beaf9c3acd8defa/comments",
    "author": {
        "login": "dghgit",
        "id": 10509846,
        "node_id": "MDQ6VXNlcjEwNTA5ODQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/10509846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dghgit",
        "html_url": "https://github.com/dghgit",
        "followers_url": "https://api.github.com/users/dghgit/followers",
        "following_url": "https://api.github.com/users/dghgit/following{/other_user}",
        "gists_url": "https://api.github.com/users/dghgit/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dghgit/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dghgit/subscriptions",
        "organizations_url": "https://api.github.com/users/dghgit/orgs",
        "repos_url": "https://api.github.com/users/dghgit/repos",
        "events_url": "https://api.github.com/users/dghgit/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dghgit/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "dghgit",
        "id": 10509846,
        "node_id": "MDQ6VXNlcjEwNTA5ODQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/10509846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dghgit",
        "html_url": "https://github.com/dghgit",
        "followers_url": "https://api.github.com/users/dghgit/followers",
        "following_url": "https://api.github.com/users/dghgit/following{/other_user}",
        "gists_url": "https://api.github.com/users/dghgit/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dghgit/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dghgit/subscriptions",
        "organizations_url": "https://api.github.com/users/dghgit/orgs",
        "repos_url": "https://api.github.com/users/dghgit/repos",
        "events_url": "https://api.github.com/users/dghgit/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dghgit/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "bf5cc6146f0d8e7cc1f5dded319f300c27f7c179",
            "url": "https://api.github.com/repos/bcgit/bc-java/commits/bf5cc6146f0d8e7cc1f5dded319f300c27f7c179",
            "html_url": "https://github.com/bcgit/bc-java/commit/bf5cc6146f0d8e7cc1f5dded319f300c27f7c179"
        }
    ],
    "stats": {
        "total": 45,
        "additions": 37,
        "deletions": 8
    },
    "files": [
        {
            "sha": "920611bcbbcc4effb82914a91c5581016184b46a",
            "filename": "core/src/main/java/org/bouncycastle/crypto/signers/DSASigner.java",
            "status": "modified",
            "additions": 10,
            "deletions": 1,
            "changes": 11,
            "blob_url": "https://github.com/bcgit/bc-java/blob/acaac81f96fec91ab45bd0412beaf9c3acd8defa/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java",
            "raw_url": "https://github.com/bcgit/bc-java/raw/acaac81f96fec91ab45bd0412beaf9c3acd8defa/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java",
            "contents_url": "https://api.github.com/repos/bcgit/bc-java/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fsigners%2FDSASigner.java?ref=acaac81f96fec91ab45bd0412beaf9c3acd8defa",
            "patch": "@@ -95,7 +95,8 @@ public BigInteger[] generateSignature(\n \n         BigInteger  k = kCalculator.nextK();\n \n-        BigInteger  r = params.getG().modPow(k, params.getP()).mod(q);\n+        // the randomizer is to conceal timing information related to k and x.\n+        BigInteger  r = params.getG().modPow(k.add(getRandomizer(q, random)), params.getP()).mod(q);\n \n         k = k.modInverse(q).multiply(m.add(x.multiply(r)));\n \n@@ -163,4 +164,12 @@ protected SecureRandom initSecureRandom(boolean needed, SecureRandom provided)\n     {\n         return !needed ? null : (provided != null) ? provided : new SecureRandom();\n     }\n+\n+    private BigInteger getRandomizer(BigInteger q, SecureRandom provided)\n+    {\n+        // Calculate a random multiple of q to add to k. Note that g^q = 1 (mod p), so adding multiple of q to k does not change r.\n+        int randomBits = 7;\n+\n+        return new BigInteger(randomBits, provided != null ? provided : new SecureRandom()).add(BigInteger.valueOf(128)).multiply(q);\n+    }\n }"
        },
        {
            "sha": "5f1a1f867efd56b0cc04886f935fd9d3065b9680",
            "filename": "core/src/test/java/org/bouncycastle/crypto/test/DSATest.java",
            "status": "modified",
            "additions": 24,
            "deletions": 6,
            "changes": 30,
            "blob_url": "https://github.com/bcgit/bc-java/blob/acaac81f96fec91ab45bd0412beaf9c3acd8defa/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Ftest%2FDSATest.java",
            "raw_url": "https://github.com/bcgit/bc-java/raw/acaac81f96fec91ab45bd0412beaf9c3acd8defa/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Ftest%2FDSATest.java",
            "contents_url": "https://api.github.com/repos/bcgit/bc-java/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Ftest%2FDSATest.java?ref=acaac81f96fec91ab45bd0412beaf9c3acd8defa",
            "patch": "@@ -44,7 +44,7 @@ public class DSATest\n     byte[] keyData = Hex.decode(\"b5014e4b60ef2ba8b6211b4062ba3224e0427dd3\");\n     \n     SecureRandom    keyRandom = new FixedSecureRandom(\n-                      new FixedSecureRandom.Source[] { new FixedSecureRandom.Data(keyData), new FixedSecureRandom.Data(keyData) });\n+                      new FixedSecureRandom.Source[] { new FixedSecureRandom.Data(keyData), new FixedSecureRandom.Data(keyData), new FixedSecureRandom.Data(Hex.decode(\"01020304\"))});\n \n     BigInteger  pValue = new BigInteger(\"8df2a494492276aa3d25759bb06869cbeac0d83afb8d0cf7cbb8324f0d7882e5d0762fc5b7210eafc2e9adac32ab7aac49693dfbf83724c2ec0736ee31c80291\", 16);\n     BigInteger  qValue = new BigInteger(\"c773218c737ec8ee993b4f2ded30f48edace915f\", 16);\n@@ -165,7 +165,11 @@ private void testDSAsha3(int size, BigInteger s)\n                     \"A5613957D7E5C7A6D5A5834B4CB069E0831753ECF65BA02B\", 16);\n \n         DSAPrivateKeyParameters priKey = new DSAPrivateKeyParameters(x, dsaParams);\n-        SecureRandom k = new TestRandomBigInteger(\"72546832179840998877302529996971396893172522460793442785601695562409154906335\");\n+        SecureRandom k = new FixedSecureRandom(\n+            new FixedSecureRandom.Source[] {\n+                new FixedSecureRandom.BigInteger(BigIntegers.asUnsignedByteArray(new BigInteger(\"72546832179840998877302529996971396893172522460793442785601695562409154906335\"))),\n+                new FixedSecureRandom.Data(Hex.decode(\"01020304\"))\n+            });\n \n         byte[] M = Hex.decode(\"1BD4ED430B0F384B4E8D458EFF1A8A553286D7AC21CB2F6806172EF5F94A06AD\");\n \n@@ -287,7 +291,10 @@ private void dsa2Test1()\n \n         DSASigner signer = new DSASigner();\n \n-        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new TestRandomBigInteger(\"349C55648DCF992F3F33E8026CFAC87C1D2BA075\", 16)));\n+        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new FixedSecureRandom(\n+            new FixedSecureRandom.Source[] {\n+                new FixedSecureRandom.BigInteger(\"349C55648DCF992F3F33E8026CFAC87C1D2BA075\"),\n+                new FixedSecureRandom.Data(Hex.decode(\"01020304\")) })));\n \n         byte[] msg = Hex.decode(\"A9993E364706816ABA3E25717850C26C9CD0D89D\");\n \n@@ -404,7 +411,11 @@ private void dsa2Test2()\n \n             DSASigner signer = new DSASigner();\n \n-            signer.init(true, new ParametersWithRandom(kp.getPrivate(), new TestRandomData(Hex.decode(\"735959CC4463B8B440E407EECA8A473BF6A6D1FE657546F67D401F05\"))));\n+            signer.init(true, new ParametersWithRandom(kp.getPrivate(), new FixedSecureRandom(\n+                new FixedSecureRandom.Source[] {\n+                    new FixedSecureRandom.BigInteger(Hex.decode(\"735959CC4463B8B440E407EECA8A473BF6A6D1FE657546F67D401F05\")),\n+                    new FixedSecureRandom.Data(Hex.decode(\"01020304\"))\n+                })));\n \n             byte[] msg = Hex.decode(\"23097D223405D8228642A477BDA255B32AADBCE4BDA0B3F7E36C9DA7\");\n \n@@ -520,7 +531,11 @@ private void dsa2Test3()\n \n         DSASigner signer = new DSASigner();\n \n-        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new TestRandomData(Hex.decode(\"0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C\"))));\n+        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new FixedSecureRandom(\n+            new FixedSecureRandom.Source[] {\n+                new FixedSecureRandom.BigInteger(Hex.decode(\"0CAF2EF547EC49C4F3A6FE6DF4223A174D01F2C115D49A6F73437C29A2A8458C\")),\n+                new FixedSecureRandom.Data(Hex.decode(\"01020304\"))\n+            })));\n \n         byte[] msg = Hex.decode(\"BA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD\");\n \n@@ -651,7 +666,10 @@ private void dsa2Test4()\n \n         DSASigner signer = new DSASigner();\n \n-        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new TestRandomData(Hex.decode(\"A6902C1E6E3943C5628061588A8B007BCCEA91DBF12915483F04B24AB0678BEE\"))));\n+        signer.init(true, new ParametersWithRandom(kp.getPrivate(), new FixedSecureRandom(\n+            new FixedSecureRandom.Source[]\n+                { new FixedSecureRandom.BigInteger(\"A6902C1E6E3943C5628061588A8B007BCCEA91DBF12915483F04B24AB0678BEE\"),\n+                  new FixedSecureRandom.Data(Hex.decode(\"01020304\")) })));\n \n         byte[] msg = Hex.decode(\"BA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD\");\n "
        },
        {
            "sha": "a388c0e1b209c5d4aefad2d25e7fa3da688a7cf3",
            "filename": "prov/src/test/java/org/bouncycastle/jce/provider/test/DSATest.java",
            "status": "modified",
            "additions": 3,
            "deletions": 1,
            "changes": 4,
            "blob_url": "https://github.com/bcgit/bc-java/blob/acaac81f96fec91ab45bd0412beaf9c3acd8defa/prov%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fjce%2Fprovider%2Ftest%2FDSATest.java",
            "raw_url": "https://github.com/bcgit/bc-java/raw/acaac81f96fec91ab45bd0412beaf9c3acd8defa/prov%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fjce%2Fprovider%2Ftest%2FDSATest.java",
            "contents_url": "https://api.github.com/repos/bcgit/bc-java/contents/prov%2Fsrc%2Ftest%2Fjava%2Forg%2Fbouncycastle%2Fjce%2Fprovider%2Ftest%2FDSATest.java?ref=acaac81f96fec91ab45bd0412beaf9c3acd8defa",
            "patch": "@@ -686,7 +686,9 @@ private void testDSAsha3(ASN1ObjectIdentifier sigOid, int size, BigInteger s)\n     private void doDsaTest(String sigName, BigInteger s, KeyFactory ecKeyFact, DSAPublicKeySpec pubKey, DSAPrivateKeySpec priKey)\n         throws NoSuchAlgorithmException, NoSuchProviderException, InvalidKeyException, InvalidKeySpecException, SignatureException\n     {\n-        SecureRandom k = new TestRandomBigInteger(BigIntegers.asUnsignedByteArray(new BigInteger(\"72546832179840998877302529996971396893172522460793442785601695562409154906335\")));\n+        SecureRandom k = new FixedSecureRandom(\n+            new FixedSecureRandom.Source[] { new FixedSecureRandom.BigInteger(BigIntegers.asUnsignedByteArray(new BigInteger(\"72546832179840998877302529996971396893172522460793442785601695562409154906335\"))),\n+                new FixedSecureRandom.Data(Hex.decode(\"01020304\")) });\n \n         byte[] M = Hex.decode(\"1BD4ED430B0F384B4E8D458EFF1A8A553286D7AC21CB2F6806172EF5F94A06AD\");\n "
        }
    ]
}