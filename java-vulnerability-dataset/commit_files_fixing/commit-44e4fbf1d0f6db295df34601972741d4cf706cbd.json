{
    "sha": "44e4fbf1d0f6db295df34601972741d4cf706cbd",
    "node_id": "MDY6Q29tbWl0Mzk4NjcyNjc6NDRlNGZiZjFkMGY2ZGIyOTVkZjM0NjAxOTcyNzQxZDRjZjcwNmNiZA==",
    "commit": {
        "author": {
            "name": "Paul LeBeau",
            "email": "paul.lebeau@gmail.com",
            "date": "2018-01-31T11:11:38Z"
        },
        "committer": {
            "name": "Paul LeBeau",
            "email": "paul.lebeau@gmail.com",
            "date": "2018-01-31T11:11:38Z"
        },
        "message": "Issue #122: Changed parser so that it starts out using the XmlPullParser, but switches to the SAXParser if entity declarations are found.",
        "tree": {
            "sha": "c22520a81b35ef7d10d644a493ff54dcb69cf28d",
            "url": "https://api.github.com/repos/BigBadaboom/androidsvg/git/trees/c22520a81b35ef7d10d644a493ff54dcb69cf28d"
        },
        "url": "https://api.github.com/repos/BigBadaboom/androidsvg/git/commits/44e4fbf1d0f6db295df34601972741d4cf706cbd",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/BigBadaboom/androidsvg/commits/44e4fbf1d0f6db295df34601972741d4cf706cbd",
    "html_url": "https://github.com/BigBadaboom/androidsvg/commit/44e4fbf1d0f6db295df34601972741d4cf706cbd",
    "comments_url": "https://api.github.com/repos/BigBadaboom/androidsvg/commits/44e4fbf1d0f6db295df34601972741d4cf706cbd/comments",
    "author": {
        "login": "BigBadaboom",
        "id": 840288,
        "node_id": "MDQ6VXNlcjg0MDI4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/840288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BigBadaboom",
        "html_url": "https://github.com/BigBadaboom",
        "followers_url": "https://api.github.com/users/BigBadaboom/followers",
        "following_url": "https://api.github.com/users/BigBadaboom/following{/other_user}",
        "gists_url": "https://api.github.com/users/BigBadaboom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BigBadaboom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BigBadaboom/subscriptions",
        "organizations_url": "https://api.github.com/users/BigBadaboom/orgs",
        "repos_url": "https://api.github.com/users/BigBadaboom/repos",
        "events_url": "https://api.github.com/users/BigBadaboom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BigBadaboom/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "BigBadaboom",
        "id": 840288,
        "node_id": "MDQ6VXNlcjg0MDI4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/840288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BigBadaboom",
        "html_url": "https://github.com/BigBadaboom",
        "followers_url": "https://api.github.com/users/BigBadaboom/followers",
        "following_url": "https://api.github.com/users/BigBadaboom/following{/other_user}",
        "gists_url": "https://api.github.com/users/BigBadaboom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BigBadaboom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BigBadaboom/subscriptions",
        "organizations_url": "https://api.github.com/users/BigBadaboom/orgs",
        "repos_url": "https://api.github.com/users/BigBadaboom/repos",
        "events_url": "https://api.github.com/users/BigBadaboom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BigBadaboom/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "1c9dcb152130b0b8de59f9df4256fa349c695f25",
            "url": "https://api.github.com/repos/BigBadaboom/androidsvg/commits/1c9dcb152130b0b8de59f9df4256fa349c695f25",
            "html_url": "https://github.com/BigBadaboom/androidsvg/commit/1c9dcb152130b0b8de59f9df4256fa349c695f25"
        }
    ],
    "stats": {
        "total": 183,
        "additions": 106,
        "deletions": 77
    },
    "files": [
        {
            "sha": "a61ea5c2fd9f0e584a916112196ef34a6033cadb",
            "filename": "androidsvg/src/main/java/com/caverock/androidsvg/SVGParser.java",
            "status": "modified",
            "additions": 106,
            "deletions": 77,
            "changes": 183,
            "blob_url": "https://github.com/BigBadaboom/androidsvg/blob/44e4fbf1d0f6db295df34601972741d4cf706cbd/androidsvg%2Fsrc%2Fmain%2Fjava%2Fcom%2Fcaverock%2Fandroidsvg%2FSVGParser.java",
            "raw_url": "https://github.com/BigBadaboom/androidsvg/raw/44e4fbf1d0f6db295df34601972741d4cf706cbd/androidsvg%2Fsrc%2Fmain%2Fjava%2Fcom%2Fcaverock%2Fandroidsvg%2FSVGParser.java",
            "contents_url": "https://api.github.com/repos/BigBadaboom/androidsvg/contents/androidsvg%2Fsrc%2Fmain%2Fjava%2Fcom%2Fcaverock%2Fandroidsvg%2FSVGParser.java?ref=44e4fbf1d0f6db295df34601972741d4cf706cbd",
            "patch": "@@ -80,6 +80,11 @@ class SVGParser\n    private static final String  XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\r\n    private static final String  FEATURE_STRING_PREFIX = \"http://www.w3.org/TR/SVG11/feature#\";\r\n \r\n+   // Used by the automatic XML parser switching code.\r\n+   // This value defines how much of the SVG file preamble will we keep in order to check for\r\n+   // a doctype definition that has internal entities defined.\r\n+   public static final int  ENTITY_WATCH_BUFFER_SIZE = 4096;\r\n+\r\n    // SVG parser\r\n    private SVG               svgDocument = null;\r\n    private SVG.SvgContainer  currentElement = null;\r\n@@ -589,7 +594,7 @@ SVG  parse(InputStream is, boolean enableInternalEntities) throws SVGParseExcept\n          is.reset();\r\n          if (firstTwoBytes == GZIPInputStream.GZIP_MAGIC) {\r\n             // Looks like a zipped file.\r\n-            is = new GZIPInputStream(is);\r\n+            is = new BufferedInputStream( new GZIPInputStream(is) );\r\n          }\r\n       }\r\n       catch (IOException ioe)\r\n@@ -599,35 +604,14 @@ SVG  parse(InputStream is, boolean enableInternalEntities) throws SVGParseExcept\n \r\n       try\r\n       {\r\n-         if (enableInternalEntities)\r\n-         {\r\n-            // Use the SAXParser, which supports entities, but is slower and\r\n-            // is vulnerable to the \"Billion laughs\" entity expansion problem.\r\n-            parseUsingSAX(is);\r\n-         }\r\n-         else\r\n-         {\r\n-            // Use XmlPullParser, which is faster, but doesn't support entity expansion.\r\n-            parseUsingXmlPullParser(is);\r\n-         }\r\n+         // Mark the start in case we need to restart the parsing due to switching XML parser\r\n+         // 4096 chars is hopefully enough to capture most doctype declarations that have entities.\r\n+         is.mark(ENTITY_WATCH_BUFFER_SIZE);\r\n \r\n-      }\r\n-      catch (XmlPullParserException e)\r\n-      {\r\n-         throw new SVGParseException(\"XML parser problem\", e);\r\n-      }\r\n-      catch (IOException e)\r\n-      {\r\n-         throw new SVGParseException(\"Stream error\", e);\r\n-      }\r\n-      // Thrown by SAX parser\r\n-      catch (ParserConfigurationException e)\r\n-      {\r\n-         throw new SVGParseException(\"XML parser problem\", e);\r\n-      }\r\n-      catch (SAXException e)\r\n-      {\r\n-         throw new SVGParseException(\"SVG parse error: \"+e.getMessage(), e);\r\n+         // Use XmlPullParser by default, which is faster, but doesn't support entity expansion.\r\n+         // In this parser we watch for capture doctype declarations, and then switch to the SAX\r\n+         // parser if any entities are defined in the doctype.\r\n+         parseUsingXmlPullParser(is, enableInternalEntities);\r\n       }\r\n       finally\r\n       {\r\n@@ -641,7 +625,6 @@ SVG  parse(InputStream is, boolean enableInternalEntities) throws SVGParseExcept\n    }\r\n \r\n \r\n-\r\n    //=========================================================================\r\n    // XmlPullParser parsing\r\n    //=========================================================================\r\n@@ -710,46 +693,77 @@ public String getValue(int index)\n    };\r\n \r\n \r\n-   private void parseUsingXmlPullParser(InputStream is) throws XmlPullParserException, IOException, SVGParseException\r\n+   private void parseUsingXmlPullParser(InputStream is, boolean enableInternalEntities) throws SVGParseException\r\n    {\r\n-      XmlPullParser         parser = Xml.newPullParser();\r\n-      XPPAttributesWrapper  attributes = new XPPAttributesWrapper(parser);\r\n+      try\r\n+      {\r\n+         XmlPullParser         parser = Xml.newPullParser();\r\n+         XPPAttributesWrapper  attributes = new XPPAttributesWrapper(parser);\r\n \r\n-      parser.setFeature(XmlPullParser.FEATURE_PROCESS_DOCDECL, false);\r\n-      parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);\r\n-      parser.setInput(is, null);\r\n \r\n-      int  eventType = parser.getEventType();\r\n-      while (eventType != XmlPullParser.END_DOCUMENT)\r\n-      {\r\n-         switch(eventType) {\r\n-            case XmlPullParser.START_DOCUMENT:\r\n-               startDocument();\r\n-               break;\r\n-            case XmlPullParser.START_TAG:\r\n-               String qName = parser.getName();\r\n-               if (parser.getPrefix() != null)\r\n-                  qName = parser.getPrefix() + ':' + qName;\r\n-               startElement(parser.getNamespace(), parser.getName(), qName, attributes);\r\n-               break;\r\n-            case XmlPullParser.END_TAG:\r\n-               qName = parser.getName();\r\n-               if (parser.getPrefix() != null)\r\n-                  qName = parser.getPrefix() + ':' + qName;\r\n-               endElement(parser.getNamespace(), parser.getName(), qName);\r\n-               break;\r\n-            case XmlPullParser.TEXT:\r\n-               int[] startAndLength = new int[2];\r\n-               char[] text = parser.getTextCharacters(startAndLength);\r\n-               text(text, startAndLength[0], startAndLength[1]);\r\n-               break;\r\n-            //case XmlPullParser.COMMENT:\r\n-            //   text(parser.getText());\r\n-            //   break;\r\n+         parser.setFeature(XmlPullParser.FEATURE_PROCESS_DOCDECL, false);\r\n+         parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);\r\n+         parser.setInput(is, null);\r\n+\r\n+         int  eventType = parser.getEventType();\r\n+         while (eventType != XmlPullParser.END_DOCUMENT)\r\n+         {\r\n+            switch(eventType) {\r\n+               case XmlPullParser.START_DOCUMENT:\r\n+                  startDocument();\r\n+                  break;\r\n+               case XmlPullParser.START_TAG:\r\n+                  String qName = parser.getName();\r\n+                  if (parser.getPrefix() != null)\r\n+                     qName = parser.getPrefix() + ':' + qName;\r\n+                  startElement(parser.getNamespace(), parser.getName(), qName, attributes);\r\n+                  break;\r\n+               case XmlPullParser.END_TAG:\r\n+                  qName = parser.getName();\r\n+                  if (parser.getPrefix() != null)\r\n+                     qName = parser.getPrefix() + ':' + qName;\r\n+                  endElement(parser.getNamespace(), parser.getName(), qName);\r\n+                  break;\r\n+               case XmlPullParser.TEXT:\r\n+                  int[] startAndLength = new int[2];\r\n+                  char[] text = parser.getTextCharacters(startAndLength);\r\n+                  text(text, startAndLength[0], startAndLength[1]);\r\n+                  break;\r\n+               //case XmlPullParser.COMMENT:\r\n+               //   text(parser.getText());\r\n+               //   break;\r\n+\r\n+               case XmlPullParser.DOCDECL:\r\n+                  if (enableInternalEntities &&                  // entities are enabled\r\n+                      svgDocument.getRootElement() == null &&    // and we haven't already parsed the root element\r\n+                      parser.getText().contains(\"<!ENTITY \")) {  // and doctype seems to contain an entity definition\r\n+                     // File uses internal entities. Switch to the SAX parser.\r\n+                     try {\r\n+                        Log.d(TAG,\"Switching to SAX parser to process entities\");\r\n+                        is.reset();\r\n+                        parseUsingSAX(is);\r\n+                     } catch (IOException e) {\r\n+                        // reset() failed\r\n+                        Log.w(TAG, \"Detected internal entity definitions, but could not parse them.\");\r\n+                        // All we can do is just continue using the XmlPullParser.\r\n+                        // Entities will not be parsed properly :(\r\n+                     }\r\n+                     return;\r\n+                  }\r\n+            }\r\n+            eventType = parser.nextToken();\r\n          }\r\n-         eventType = parser.next();\r\n+         endDocument();\r\n+\r\n+      }\r\n+      catch (XmlPullParserException e)\r\n+      {\r\n+         throw new SVGParseException(\"XML parser problem\", e);\r\n+      }\r\n+      catch (IOException e)\r\n+      {\r\n+         throw new SVGParseException(\"Stream error\", e);\r\n       }\r\n-      endDocument();\r\n    }\r\n \r\n \r\n@@ -758,23 +772,38 @@ private void parseUsingXmlPullParser(InputStream is) throws XmlPullParserExcepti\n    //=========================================================================\r\n \r\n \r\n-   private void parseUsingSAX(InputStream is) throws IOException, ParserConfigurationException, SAXException, SAXNotRecognizedException, SAXNotSupportedException\r\n+   private void parseUsingSAX(InputStream is) throws SVGParseException\r\n    {\r\n-      // Invoke the SAX XML parser on the input.\r\n-      SAXParserFactory  spf = SAXParserFactory.newInstance();\r\n+      try\r\n+      {\r\n+         // Invoke the SAX XML parser on the input.\r\n+         SAXParserFactory  spf = SAXParserFactory.newInstance();\r\n \r\n-      // Disable external entity resolving\r\n-      spf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\r\n-      spf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\r\n+         // Disable external entity resolving\r\n+         spf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\r\n+         spf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\r\n \r\n-      SAXParser sp = spf.newSAXParser();\r\n-      XMLReader xr = sp.getXMLReader();\r\n+         SAXParser sp = spf.newSAXParser();\r\n+         XMLReader xr = sp.getXMLReader();\r\n \r\n-      SAXHandler  handler = new SAXHandler();\r\n-      xr.setContentHandler(handler);\r\n-      xr.setProperty(\"http://xml.org/sax/properties/lexical-handler\", handler);\r\n+         SAXHandler  handler = new SAXHandler();\r\n+         xr.setContentHandler(handler);\r\n+         xr.setProperty(\"http://xml.org/sax/properties/lexical-handler\", handler);\r\n \r\n-      xr.parse(new InputSource(is));\r\n+         xr.parse(new InputSource(is));\r\n+      }\r\n+      catch (ParserConfigurationException e)\r\n+      {\r\n+         throw new SVGParseException(\"XML parser problem\", e);\r\n+      }\r\n+      catch (SAXException e)\r\n+      {\r\n+         throw new SVGParseException(\"SVG parse error\", e);\r\n+      }\r\n+      catch (IOException e)\r\n+      {\r\n+         throw new SVGParseException(\"Stream error\", e);\r\n+      }\r\n    }\r\n \r\n \r"
        }
    ]
}