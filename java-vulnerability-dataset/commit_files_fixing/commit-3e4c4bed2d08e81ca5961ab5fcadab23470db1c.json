{
    "sha": "3e4c4bed2d08e81ca5961ab5fcadab23470db1c9",
    "node_id": "MDY6Q29tbWl0ODMyNjc2OjNlNGM0YmVkMmQwOGU4MWNhNTk2MWFiNWZjYWRhYjIzNDcwZGIxYzk=",
    "commit": {
        "author": {
            "name": "Colm O hEigeartaigh",
            "email": "coheigea@apache.org",
            "date": "2020-06-03T16:37:44Z"
        },
        "committer": {
            "name": "Colm O hEigeartaigh",
            "email": "coheigea@apache.org",
            "date": "2020-06-03T16:37:44Z"
        },
        "message": "Disallow calling getMBeansFromURL",
        "tree": {
            "sha": "71726de1d40cac7e45fafeeefce00500de6bd601",
            "url": "https://api.github.com/repos/apache/karaf/git/trees/71726de1d40cac7e45fafeeefce00500de6bd601"
        },
        "url": "https://api.github.com/repos/apache/karaf/git/commits/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/karaf/commits/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9",
    "html_url": "https://github.com/apache/karaf/commit/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9",
    "comments_url": "https://api.github.com/repos/apache/karaf/commits/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9/comments",
    "author": {
        "login": "coheigea",
        "id": 472162,
        "node_id": "MDQ6VXNlcjQ3MjE2Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/472162?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coheigea",
        "html_url": "https://github.com/coheigea",
        "followers_url": "https://api.github.com/users/coheigea/followers",
        "following_url": "https://api.github.com/users/coheigea/following{/other_user}",
        "gists_url": "https://api.github.com/users/coheigea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coheigea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coheigea/subscriptions",
        "organizations_url": "https://api.github.com/users/coheigea/orgs",
        "repos_url": "https://api.github.com/users/coheigea/repos",
        "events_url": "https://api.github.com/users/coheigea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coheigea/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "coheigea",
        "id": 472162,
        "node_id": "MDQ6VXNlcjQ3MjE2Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/472162?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coheigea",
        "html_url": "https://github.com/coheigea",
        "followers_url": "https://api.github.com/users/coheigea/followers",
        "following_url": "https://api.github.com/users/coheigea/following{/other_user}",
        "gists_url": "https://api.github.com/users/coheigea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coheigea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coheigea/subscriptions",
        "organizations_url": "https://api.github.com/users/coheigea/orgs",
        "repos_url": "https://api.github.com/users/coheigea/repos",
        "events_url": "https://api.github.com/users/coheigea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coheigea/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "9440ca60e8b82793b92e660decba8adb63ab08fa",
            "url": "https://api.github.com/repos/apache/karaf/commits/9440ca60e8b82793b92e660decba8adb63ab08fa",
            "html_url": "https://github.com/apache/karaf/commit/9440ca60e8b82793b92e660decba8adb63ab08fa"
        }
    ],
    "stats": {
        "total": 17,
        "additions": 13,
        "deletions": 4
    },
    "files": [
        {
            "sha": "43c258e5f2b07b06595b952a1a407c7f030742a8",
            "filename": "management/server/src/main/java/org/apache/karaf/management/KarafMBeanServerGuard.java",
            "status": "modified",
            "additions": 13,
            "deletions": 4,
            "changes": 17,
            "blob_url": "https://github.com/apache/karaf/blob/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9/management%2Fserver%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fkaraf%2Fmanagement%2FKarafMBeanServerGuard.java",
            "raw_url": "https://github.com/apache/karaf/raw/3e4c4bed2d08e81ca5961ab5fcadab23470db1c9/management%2Fserver%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fkaraf%2Fmanagement%2FKarafMBeanServerGuard.java",
            "contents_url": "https://api.github.com/repos/apache/karaf/contents/management%2Fserver%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fkaraf%2Fmanagement%2FKarafMBeanServerGuard.java?ref=3e4c4bed2d08e81ca5961ab5fcadab23470db1c9",
            "patch": "@@ -106,7 +106,7 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n         } else if (\"setAttributes\".equals(method.getName())) {\n             handleSetAttributes(mbs, objectName, (AttributeList) args[1]);\n         } else if (\"invoke\".equals(method.getName())) {\n-            handleInvoke(objectName, (String) args[1], (Object[]) args[2], (String[]) args[3]);\n+            handleInvoke(mbs, objectName, (String) args[1], (Object[]) args[2], (String[]) args[3]);\n         }\n \n         return null;\n@@ -345,11 +345,20 @@ private boolean canBypassRBAC(BulkRequestContext context, ObjectName objectName,\n         return false;\n     }\n \n-    void handleInvoke(ObjectName objectName, String operationName, Object[] params, String[] signature) throws IOException {\n-        handleInvoke(null, objectName, operationName, params, signature);\n+    void handleInvoke(MBeanServer mbs, ObjectName objectName, String operationName, Object[] params, String[] signature) throws IOException, InstanceNotFoundException {\n+        handleInvoke(mbs, null, objectName, operationName, params, signature);\n     }\n \n-    void handleInvoke(BulkRequestContext context, ObjectName objectName, String operationName, Object[] params, String[] signature) throws IOException {\n+    void handleInvoke(MBeanServer mbs, BulkRequestContext context, ObjectName objectName, String operationName, Object[] params, String[] signature) throws IOException, InstanceNotFoundException {\n+        if (mbs != null && mbs.isInstanceOf(objectName, \"javax.management.loading.MLet\")\n+            && (\"addUrl\".equals(operationName) || \"getMBeansFromURL\".equals(operationName))) {\n+            SecurityException se = new SecurityException(operationName + \" is not allowed to be invoked\");\n+            if (logger != null) {\n+                logger.log(INVOKE, INVOKE_SIG, null, se, objectName, operationName, signature, params);\n+            }\n+            throw se;\n+        }\n+\n         if (context == null) {\n             context = BulkRequestContext.newContext(configAdmin);\n         }"
        }
    ]
}