{
    "sha": "1c1c77b0efb667cea80b532440b44cea1dc427c3",
    "node_id": "MDY6Q29tbWl0MjQ5MzkwNDoxYzFjNzdiMGVmYjY2N2NlYTgwYjUzMjQ0MGI0NGNlYTFkYzQyN2Mz",
    "commit": {
        "author": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2020-06-29T13:02:59Z"
        },
        "committer": {
            "name": "Mark Thomas",
            "email": "markt@apache.org",
            "date": "2020-06-30T13:02:11Z"
        },
        "message": "Fix BZ 64563 - additional payload length validation\n\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=64563",
        "tree": {
            "sha": "73628beb0d4606512076a81eb5aa818924da585d",
            "url": "https://api.github.com/repos/apache/tomcat/git/trees/73628beb0d4606512076a81eb5aa818924da585d"
        },
        "url": "https://api.github.com/repos/apache/tomcat/git/commits/1c1c77b0efb667cea80b532440b44cea1dc427c3",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tomcat/commits/1c1c77b0efb667cea80b532440b44cea1dc427c3",
    "html_url": "https://github.com/apache/tomcat/commit/1c1c77b0efb667cea80b532440b44cea1dc427c3",
    "comments_url": "https://api.github.com/repos/apache/tomcat/commits/1c1c77b0efb667cea80b532440b44cea1dc427c3/comments",
    "author": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markt-asf",
        "id": 4690029,
        "node_id": "MDQ6VXNlcjQ2OTAwMjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4690029?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markt-asf",
        "html_url": "https://github.com/markt-asf",
        "followers_url": "https://api.github.com/users/markt-asf/followers",
        "following_url": "https://api.github.com/users/markt-asf/following{/other_user}",
        "gists_url": "https://api.github.com/users/markt-asf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markt-asf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markt-asf/subscriptions",
        "organizations_url": "https://api.github.com/users/markt-asf/orgs",
        "repos_url": "https://api.github.com/users/markt-asf/repos",
        "events_url": "https://api.github.com/users/markt-asf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markt-asf/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "f0d96103734495d458d7412306dcbd6058413fd8",
            "url": "https://api.github.com/repos/apache/tomcat/commits/f0d96103734495d458d7412306dcbd6058413fd8",
            "html_url": "https://github.com/apache/tomcat/commit/f0d96103734495d458d7412306dcbd6058413fd8"
        }
    ],
    "stats": {
        "total": 16,
        "additions": 16,
        "deletions": 0
    },
    "files": [
        {
            "sha": "929822d94c8e088da103ecbfa8dc60bf4dfe69bf",
            "filename": "java/org/apache/tomcat/websocket/LocalStrings.properties",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/apache/tomcat/blob/1c1c77b0efb667cea80b532440b44cea1dc427c3/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FLocalStrings.properties",
            "raw_url": "https://github.com/apache/tomcat/raw/1c1c77b0efb667cea80b532440b44cea1dc427c3/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FLocalStrings.properties",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FLocalStrings.properties?ref=1c1c77b0efb667cea80b532440b44cea1dc427c3",
            "patch": "@@ -71,6 +71,7 @@ wsFrame.noContinuation=A new message was started when a continuation frame was e\n wsFrame.notMasked=The client frame was not masked but all client frames must be masked\n wsFrame.oneByteCloseCode=The client sent a close frame with a single byte payload which is not valid\n wsFrame.partialHeaderComplete=WebSocket frame received. fin [{0}], rsv [{1}], OpCode [{2}], payload length [{3}]\n+wsFrame.payloadMsbInvalid=An invalid WebSocket frame was received - the most significant bit of a 64-bit payload was illegally set\n wsFrame.sessionClosed=The client data cannot be processed because the session has already been closed\n wsFrame.suspendRequested=Suspend of the message receiving has already been requested.\n wsFrame.textMessageTooBig=The decoded text message was too big for the output buffer and the endpoint does not support partial messages"
        },
        {
            "sha": "ba5813bc278c2295159e64b0365e3419192efeaa",
            "filename": "java/org/apache/tomcat/websocket/WsFrameBase.java",
            "status": "modified",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/apache/tomcat/blob/1c1c77b0efb667cea80b532440b44cea1dc427c3/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FWsFrameBase.java",
            "raw_url": "https://github.com/apache/tomcat/raw/1c1c77b0efb667cea80b532440b44cea1dc427c3/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FWsFrameBase.java",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/java%2Forg%2Fapache%2Ftomcat%2Fwebsocket%2FWsFrameBase.java?ref=1c1c77b0efb667cea80b532440b44cea1dc427c3",
            "patch": "@@ -261,6 +261,13 @@ private boolean processRemainingHeader() throws IOException {\n         } else if (payloadLength == 127) {\n             payloadLength = byteArrayToLong(inputBuffer.array(),\n                     inputBuffer.arrayOffset() + inputBuffer.position(), 8);\n+            // The most significant bit of those 8 bytes is required to be zero\n+            // (see RFC 6455, section 5.2). If the most significant bit is set,\n+            // the resulting payload length will be negative so test for that.\n+            if (payloadLength < 0) {\n+                throw new WsIOException(\n+                        new CloseReason(CloseCodes.PROTOCOL_ERROR, sm.getString(\"wsFrame.payloadMsbInvalid\")));\n+            }\n             inputBuffer.position(inputBuffer.position() + 8);\n         }\n         if (Util.isControl(opCode)) {"
        },
        {
            "sha": "4bc218159abf78d3796c137fd5558c7ae9146649",
            "filename": "webapps/docs/changelog.xml",
            "status": "modified",
            "additions": 8,
            "deletions": 0,
            "changes": 8,
            "blob_url": "https://github.com/apache/tomcat/blob/1c1c77b0efb667cea80b532440b44cea1dc427c3/webapps%2Fdocs%2Fchangelog.xml",
            "raw_url": "https://github.com/apache/tomcat/raw/1c1c77b0efb667cea80b532440b44cea1dc427c3/webapps%2Fdocs%2Fchangelog.xml",
            "contents_url": "https://api.github.com/repos/apache/tomcat/contents/webapps%2Fdocs%2Fchangelog.xml?ref=1c1c77b0efb667cea80b532440b44cea1dc427c3",
            "patch": "@@ -138,6 +138,14 @@\n       </fix>\n     </changelog>\n   </subsection>\n+  <subsection name=\"WebSocket\">\n+    <changelog>\n+      <fix>\n+        <bug>64563</bug>: Add additional validation of payload length for\n+        WebSocket messages. (markt)\n+      </fix>\n+    </changelog>\n+  </subsection>\n   <subsection name=\"Web Applications\">\n     <changelog>\n       <update>"
        }
    ]
}