{
    "sha": "18e86b6f8bea7326934109aa9ffa705ebf4bde90",
    "node_id": "MDY6Q29tbWl0NjIxMTE3ODc6MThlODZiNmY4YmVhNzMyNjkzNDEwOWFhOWZmYTcwNWViZjRiZGU5MA==",
    "commit": {
        "author": {
            "name": "Rhys Weatherley",
            "email": "rhys.weatherley@gmail.com",
            "date": "2020-08-28T21:59:27Z"
        },
        "committer": {
            "name": "Rhys Weatherley",
            "email": "rhys.weatherley@gmail.com",
            "date": "2020-08-28T21:59:27Z"
        },
        "message": "Improve array bounds checks in CipherState implementations\n\nThanks to Pietro Oliva for identifying these issues.",
        "tree": {
            "sha": "41767c88fa4ee5f436f3ada3f687f2d7dea20858",
            "url": "https://api.github.com/repos/rweather/noise-java/git/trees/41767c88fa4ee5f436f3ada3f687f2d7dea20858"
        },
        "url": "https://api.github.com/repos/rweather/noise-java/git/commits/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
        "comment_count": 1,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/rweather/noise-java/commits/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
    "html_url": "https://github.com/rweather/noise-java/commit/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
    "comments_url": "https://api.github.com/repos/rweather/noise-java/commits/18e86b6f8bea7326934109aa9ffa705ebf4bde90/comments",
    "author": {
        "login": "rweather",
        "id": 719949,
        "node_id": "MDQ6VXNlcjcxOTk0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/719949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rweather",
        "html_url": "https://github.com/rweather",
        "followers_url": "https://api.github.com/users/rweather/followers",
        "following_url": "https://api.github.com/users/rweather/following{/other_user}",
        "gists_url": "https://api.github.com/users/rweather/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rweather/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rweather/subscriptions",
        "organizations_url": "https://api.github.com/users/rweather/orgs",
        "repos_url": "https://api.github.com/users/rweather/repos",
        "events_url": "https://api.github.com/users/rweather/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rweather/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "rweather",
        "id": 719949,
        "node_id": "MDQ6VXNlcjcxOTk0OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/719949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rweather",
        "html_url": "https://github.com/rweather",
        "followers_url": "https://api.github.com/users/rweather/followers",
        "following_url": "https://api.github.com/users/rweather/following{/other_user}",
        "gists_url": "https://api.github.com/users/rweather/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rweather/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rweather/subscriptions",
        "organizations_url": "https://api.github.com/users/rweather/orgs",
        "repos_url": "https://api.github.com/users/rweather/repos",
        "events_url": "https://api.github.com/users/rweather/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rweather/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "a8dce061f60259e05b002918462fc4f876100a65",
            "url": "https://api.github.com/repos/rweather/noise-java/commits/a8dce061f60259e05b002918462fc4f876100a65",
            "html_url": "https://github.com/rweather/noise-java/commit/a8dce061f60259e05b002918462fc4f876100a65"
        }
    ],
    "stats": {
        "total": 65,
        "additions": 35,
        "deletions": 30
    },
    "files": [
        {
            "sha": "9081256a3b4801bddc7bd9633ca0207f70921dde",
            "filename": ".gitignore",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/rweather/noise-java/blob/18e86b6f8bea7326934109aa9ffa705ebf4bde90/.gitignore",
            "raw_url": "https://github.com/rweather/noise-java/raw/18e86b6f8bea7326934109aa9ffa705ebf4bde90/.gitignore",
            "contents_url": "https://api.github.com/repos/rweather/noise-java/contents/.gitignore?ref=18e86b6f8bea7326934109aa9ffa705ebf4bde90",
            "patch": "@@ -3,3 +3,4 @@ target\n .metadata\n .project\n doc\n+*.class"
        },
        {
            "sha": "f627be39c36b149ef9198675b2889354901ae20b",
            "filename": "src/main/java/com/southernstorm/noise/protocol/AESGCMFallbackCipherState.java",
            "status": "modified",
            "additions": 10,
            "deletions": 10,
            "changes": 20,
            "blob_url": "https://github.com/rweather/noise-java/blob/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMFallbackCipherState.java",
            "raw_url": "https://github.com/rweather/noise-java/raw/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMFallbackCipherState.java",
            "contents_url": "https://api.github.com/repos/rweather/noise-java/contents/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMFallbackCipherState.java?ref=18e86b6f8bea7326934109aa9ffa705ebf4bde90",
            "patch": "@@ -185,10 +185,11 @@ public int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length)\n \t\t\tthrows ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -214,16 +215,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
            "sha": "df40945d541da38e065ca8c3b6e867c2f546d337",
            "filename": "src/main/java/com/southernstorm/noise/protocol/AESGCMOnCtrCipherState.java",
            "status": "modified",
            "additions": 10,
            "deletions": 10,
            "changes": 20,
            "blob_url": "https://github.com/rweather/noise-java/blob/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMOnCtrCipherState.java",
            "raw_url": "https://github.com/rweather/noise-java/raw/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMOnCtrCipherState.java",
            "contents_url": "https://api.github.com/repos/rweather/noise-java/contents/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FAESGCMOnCtrCipherState.java?ref=18e86b6f8bea7326934109aa9ffa705ebf4bde90",
            "patch": "@@ -218,10 +218,11 @@ public int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length)\n \t\t\tthrows ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (keySpec == null) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -262,16 +263,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (keySpec == null) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
            "sha": "40ce2bcc5950b6ee9af56a71a478491d4847fd66",
            "filename": "src/main/java/com/southernstorm/noise/protocol/ChaChaPolyCipherState.java",
            "status": "modified",
            "additions": 10,
            "deletions": 10,
            "changes": 20,
            "blob_url": "https://github.com/rweather/noise-java/blob/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FChaChaPolyCipherState.java",
            "raw_url": "https://github.com/rweather/noise-java/raw/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FChaChaPolyCipherState.java",
            "contents_url": "https://api.github.com/repos/rweather/noise-java/contents/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FChaChaPolyCipherState.java?ref=18e86b6f8bea7326934109aa9ffa705ebf4bde90",
            "patch": "@@ -214,10 +214,11 @@ private void encrypt(byte[] plaintext, int plaintextOffset,\n \tpublic int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length) throws ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -241,16 +242,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
            "sha": "74f808b2ed405ff6d276f9b61bf4edd450de12da",
            "filename": "src/main/java/com/southernstorm/noise/protocol/CipherState.java",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https://github.com/rweather/noise-java/blob/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FCipherState.java",
            "raw_url": "https://github.com/rweather/noise-java/raw/18e86b6f8bea7326934109aa9ffa705ebf4bde90/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FCipherState.java",
            "contents_url": "https://api.github.com/repos/rweather/noise-java/contents/src%2Fmain%2Fjava%2Fcom%2Fsouthernstorm%2Fnoise%2Fprotocol%2FCipherState.java?ref=18e86b6f8bea7326934109aa9ffa705ebf4bde90",
            "patch": "@@ -100,6 +100,8 @@ public interface CipherState extends Destroyable {\n \t * \n \t * @throws IllegalStateException The nonce has wrapped around.\n \t * \n+\t * @throws IllegalArgumentException One of the parameters is out of range.\n+\t *\n \t * The plaintext and ciphertext buffers can be the same for in-place\n \t * encryption.  In that case, plaintextOffset must be identical to\n \t * ciphertextOffset.\n@@ -130,6 +132,8 @@ public interface CipherState extends Destroyable {\n \t * \n \t * @throws IllegalStateException The nonce has wrapped around.\n \t * \n+\t * @throws IllegalArgumentException One of the parameters is out of range.\n+\t *\n \t * The plaintext and ciphertext buffers can be the same for in-place\n \t * decryption.  In that case, ciphertextOffset must be identical to\n \t * plaintextOffset."
        }
    ]
}