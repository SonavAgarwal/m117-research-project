{
    "sha": "a97766d62f067845869c44b39604851c7ca91d02",
    "node_id": "MDY6Q29tbWl0Mjc5MTEwODg6YTk3NzY2ZDYyZjA2Nzg0NTg2OWM0NGIzOTYwNDg1MWM3Y2E5MWQwMg==",
    "commit": {
        "author": {
            "name": "Matt Gilman",
            "email": "matt.c.gilman@gmail.com",
            "date": "2019-05-16T14:02:01Z"
        },
        "committer": {
            "name": "Mark Payne",
            "email": "markap14@hotmail.com",
            "date": "2019-05-22T18:12:50Z"
        },
        "message": "NIFI-6302:\n- Ensuring Process Group contents are pruned when appropriate.\n\nThis closes #3477.\n\nSigned-off-by: Mark Payne <markap14@hotmail.com>",
        "tree": {
            "sha": "de41ff2d64466c09e778ff331134307c8ccc80e4",
            "url": "https://api.github.com/repos/apache/nifi/git/trees/de41ff2d64466c09e778ff331134307c8ccc80e4"
        },
        "url": "https://api.github.com/repos/apache/nifi/git/commits/a97766d62f067845869c44b39604851c7ca91d02",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/nifi/commits/a97766d62f067845869c44b39604851c7ca91d02",
    "html_url": "https://github.com/apache/nifi/commit/a97766d62f067845869c44b39604851c7ca91d02",
    "comments_url": "https://api.github.com/repos/apache/nifi/commits/a97766d62f067845869c44b39604851c7ca91d02/comments",
    "author": {
        "login": "mcgilman",
        "id": 123395,
        "node_id": "MDQ6VXNlcjEyMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/123395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mcgilman",
        "html_url": "https://github.com/mcgilman",
        "followers_url": "https://api.github.com/users/mcgilman/followers",
        "following_url": "https://api.github.com/users/mcgilman/following{/other_user}",
        "gists_url": "https://api.github.com/users/mcgilman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mcgilman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mcgilman/subscriptions",
        "organizations_url": "https://api.github.com/users/mcgilman/orgs",
        "repos_url": "https://api.github.com/users/mcgilman/repos",
        "events_url": "https://api.github.com/users/mcgilman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mcgilman/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "markap14",
        "id": 184268,
        "node_id": "MDQ6VXNlcjE4NDI2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/184268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markap14",
        "html_url": "https://github.com/markap14",
        "followers_url": "https://api.github.com/users/markap14/followers",
        "following_url": "https://api.github.com/users/markap14/following{/other_user}",
        "gists_url": "https://api.github.com/users/markap14/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markap14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markap14/subscriptions",
        "organizations_url": "https://api.github.com/users/markap14/orgs",
        "repos_url": "https://api.github.com/users/markap14/repos",
        "events_url": "https://api.github.com/users/markap14/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markap14/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "c470608daf7e5d3267a73fc4b718cd738f17108a",
            "url": "https://api.github.com/repos/apache/nifi/commits/c470608daf7e5d3267a73fc4b718cd738f17108a",
            "html_url": "https://github.com/apache/nifi/commit/c470608daf7e5d3267a73fc4b718cd738f17108a"
        }
    ],
    "stats": {
        "total": 10,
        "additions": 10,
        "deletions": 0
    },
    "files": [
        {
            "sha": "f76f6747d1b5c34a6ae16e5c75885d108018875f",
            "filename": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
            "status": "modified",
            "additions": 10,
            "deletions": 0,
            "changes": 10,
            "blob_url": "https://github.com/apache/nifi/blob/a97766d62f067845869c44b39604851c7ca91d02/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-web-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fapi%2FProcessGroupResource.java",
            "raw_url": "https://github.com/apache/nifi/raw/a97766d62f067845869c44b39604851c7ca91d02/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-web-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fapi%2FProcessGroupResource.java",
            "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-web-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fapi%2FProcessGroupResource.java?ref=a97766d62f067845869c44b39604851c7ca91d02",
            "patch": "@@ -475,6 +475,11 @@ public Response updateProcessGroup(\n                     final ProcessGroupEntity entity = serviceFacade.updateProcessGroup(revision, processGroupEntity.getComponent());\n                     populateRemainingProcessGroupEntityContent(entity);\n \n+                    // prune response as necessary\n+                    if (entity.getComponent() != null) {\n+                        entity.getComponent().setContents(null);\n+                    }\n+\n                     return generateOkResponse(entity).build();\n                 }\n         );\n@@ -1597,6 +1602,11 @@ public Response removeProcessGroup(\n                     // delete the process group\n                     final ProcessGroupEntity entity = serviceFacade.deleteProcessGroup(revision, processGroupEntity.getId());\n \n+                    // prune response as necessary\n+                    if (entity.getComponent() != null) {\n+                        entity.getComponent().setContents(null);\n+                    }\n+\n                     // create the response\n                     return generateOkResponse(entity).build();\n                 }"
        }
    ]
}