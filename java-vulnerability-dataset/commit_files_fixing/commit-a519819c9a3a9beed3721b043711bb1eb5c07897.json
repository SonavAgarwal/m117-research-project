{
    "sha": "a519819c9a3a9beed3721b043711bb1eb5c07897",
    "node_id": "MDY6Q29tbWl0MzE5OTk0NTU6YTUxOTgxOWM5YTNhOWJlZWQzNzIxYjA0MzcxMWJiMWViNWMwNzg5Nw==",
    "commit": {
        "author": {
            "name": "iloshini",
            "email": "iloshini@wso2.com",
            "date": "2019-11-26T05:51:46Z"
        },
        "committer": {
            "name": "iloshini",
            "email": "iloshini@wso2.com",
            "date": "2019-11-26T05:51:46Z"
        },
        "message": "Fix issue occurs when updating EventPublishers",
        "tree": {
            "sha": "3f1f00eb6b526f83e6dd15b0ba616656a971d086",
            "url": "https://api.github.com/repos/wso2/carbon-analytics-common/git/trees/3f1f00eb6b526f83e6dd15b0ba616656a971d086"
        },
        "url": "https://api.github.com/repos/wso2/carbon-analytics-common/git/commits/a519819c9a3a9beed3721b043711bb1eb5c07897",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/a519819c9a3a9beed3721b043711bb1eb5c07897",
    "html_url": "https://github.com/wso2/carbon-analytics-common/commit/a519819c9a3a9beed3721b043711bb1eb5c07897",
    "comments_url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/a519819c9a3a9beed3721b043711bb1eb5c07897/comments",
    "author": {
        "login": "iloshinik",
        "id": 23550101,
        "node_id": "MDQ6VXNlcjIzNTUwMTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23550101?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/iloshinik",
        "html_url": "https://github.com/iloshinik",
        "followers_url": "https://api.github.com/users/iloshinik/followers",
        "following_url": "https://api.github.com/users/iloshinik/following{/other_user}",
        "gists_url": "https://api.github.com/users/iloshinik/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/iloshinik/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iloshinik/subscriptions",
        "organizations_url": "https://api.github.com/users/iloshinik/orgs",
        "repos_url": "https://api.github.com/users/iloshinik/repos",
        "events_url": "https://api.github.com/users/iloshinik/events{/privacy}",
        "received_events_url": "https://api.github.com/users/iloshinik/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "iloshinik",
        "id": 23550101,
        "node_id": "MDQ6VXNlcjIzNTUwMTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/23550101?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/iloshinik",
        "html_url": "https://github.com/iloshinik",
        "followers_url": "https://api.github.com/users/iloshinik/followers",
        "following_url": "https://api.github.com/users/iloshinik/following{/other_user}",
        "gists_url": "https://api.github.com/users/iloshinik/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/iloshinik/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iloshinik/subscriptions",
        "organizations_url": "https://api.github.com/users/iloshinik/orgs",
        "repos_url": "https://api.github.com/users/iloshinik/repos",
        "events_url": "https://api.github.com/users/iloshinik/events{/privacy}",
        "received_events_url": "https://api.github.com/users/iloshinik/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "5618b8751f2ee9ca9a13d22ead9ee11a015d245d",
            "url": "https://api.github.com/repos/wso2/carbon-analytics-common/commits/5618b8751f2ee9ca9a13d22ead9ee11a015d245d",
            "html_url": "https://github.com/wso2/carbon-analytics-common/commit/5618b8751f2ee9ca9a13d22ead9ee11a015d245d"
        }
    ],
    "stats": {
        "total": 50,
        "additions": 46,
        "deletions": 4
    },
    "files": [
        {
            "sha": "1679d04b595d010cfc134de10f2528b93f968197",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/CarbonEventPublisherService.java",
            "status": "modified",
            "additions": 14,
            "deletions": 4,
            "changes": 18,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/a519819c9a3a9beed3721b043711bb1eb5c07897/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/a519819c9a3a9beed3721b043711bb1eb5c07897/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2FCarbonEventPublisherService.java?ref=a519819c9a3a9beed3721b043711bb1eb5c07897",
            "patch": "@@ -17,8 +17,10 @@\n \n import org.apache.axiom.om.OMElement;\n import org.apache.axiom.om.util.AXIOMUtil;\n+import org.apache.axis2.util.XMLUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.w3c.dom.Document;\n import org.wso2.carbon.context.PrivilegedCarbonContext;\n import org.wso2.carbon.databridge.commons.StreamDefinition;\n import org.wso2.carbon.event.output.adapter.core.OutputEventAdapterSchema;\n@@ -41,16 +43,19 @@\n import org.wso2.carbon.registry.core.exceptions.RegistryException;\n import org.wso2.carbon.registry.core.service.RegistryService;\n import org.wso2.carbon.registry.core.utils.RegistryUtils;\n+import org.xml.sax.InputSource;\n \n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.stream.XMLStreamException;\n import java.io.File;\n+import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n-import javax.xml.stream.XMLStreamException;\n-\n public class CarbonEventPublisherService implements EventPublisherService {\n \n     private static final Log log = LogFactory.getLog(CarbonEventPublisherService.class);\n@@ -562,8 +567,13 @@ private void editEventPublisherConfiguration(String filename,\n             throws EventPublisherConfigurationException {\n         int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n         try {\n-            OMElement omElement = AXIOMUtil.stringToOM(eventPublisherConfigurationXml);\n+            DocumentBuilderFactory dbf = EventPublisherUtil.getSecuredDocumentBuilder();\n+            DocumentBuilder builder = dbf.newDocumentBuilder();\n+            Document document = builder.parse(new InputSource(new StringReader(eventPublisherConfigurationXml)));\n+\n+            OMElement omElement = XMLUtils.toOM((document).getDocumentElement());\n             omElement.build();\n+\n             EventPublisherConfigurationHelper.validateEventPublisherConfiguration(omElement);\n             String mappingType = EventPublisherConfigurationHelper.getOutputMappingType(omElement);\n             if (mappingType != null) {\n@@ -582,7 +592,7 @@ private void editEventPublisherConfiguration(String filename,\n             } else {\n                 throw new EventPublisherConfigurationException(\"Mapping type of the Event Publisher \" + originalEventPublisherName + \" cannot be null\");\n             }\n-        } catch (XMLStreamException e) {\n+        } catch (Exception e) {\n             throw new EventPublisherConfigurationException(\"Error while building XML configuration :\" + e.getMessage(), e);\n         }\n     }"
        },
        {
            "sha": "c95ea071b29cb62a9f5e62517122c9dd1e0898c6",
            "filename": "components/event-publisher/org.wso2.carbon.event.publisher.core/src/main/java/org/wso2/carbon/event/publisher/core/internal/util/EventPublisherUtil.java",
            "status": "modified",
            "additions": 32,
            "deletions": 0,
            "changes": 32,
            "blob_url": "https://github.com/wso2/carbon-analytics-common/blob/a519819c9a3a9beed3721b043711bb1eb5c07897/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java",
            "raw_url": "https://github.com/wso2/carbon-analytics-common/raw/a519819c9a3a9beed3721b043711bb1eb5c07897/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java",
            "contents_url": "https://api.github.com/repos/wso2/carbon-analytics-common/contents/components%2Fevent-publisher%2Forg.wso2.carbon.event.publisher.core%2Fsrc%2Fmain%2Fjava%2Forg%2Fwso2%2Fcarbon%2Fevent%2Fpublisher%2Fcore%2Finternal%2Futil%2FEventPublisherUtil.java?ref=a519819c9a3a9beed3721b043711bb1eb5c07897",
            "patch": "@@ -15,6 +15,10 @@\n package org.wso2.carbon.event.publisher.core.internal.util;\n \n import org.apache.axis2.engine.AxisConfiguration;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.xerces.impl.Constants;\n+import org.apache.xerces.util.SecurityManager;\n import org.wso2.carbon.context.CarbonContext;\n import org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils;\n import org.wso2.carbon.event.publisher.core.config.EventPublisherConfiguration;\n@@ -25,6 +29,8 @@\n import org.wso2.carbon.utils.multitenancy.MultitenantConstants;\n import org.wso2.siddhi.core.event.Event;\n \n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n import java.io.File;\n import java.io.UnsupportedEncodingException;\n import java.util.ArrayList;\n@@ -35,6 +41,8 @@ public class EventPublisherUtil {\n \n     private static final String JVM_BIT_ARCH_SYSTEM_PROPERTY = \"sun.arch.data.model\";\n     private static int referenceSize;\n+    private static final int ENTITY_EXPANSION_LIMIT = 0;\n+    private static final Log log = LogFactory.getLog(EventPublisherUtil.class);\n \n     static {\n         String arch = System.getProperty(JVM_BIT_ARCH_SYSTEM_PROPERTY);\n@@ -231,4 +239,28 @@ public static void validateFilePath(String fileName) throws EventPublisherConfig\n             throw new EventPublisherConfigurationException(\"File name contains restricted path elements. \" + fileName);\n         }\n     }\n+\n+    public static DocumentBuilderFactory getSecuredDocumentBuilder() {\n+\n+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+        dbf.setNamespaceAware(true);\n+        dbf.setXIncludeAware(false);\n+        dbf.setExpandEntityReferences(false);\n+\n+        try {\n+            dbf.setFeature(Constants.SAX_FEATURE_PREFIX + Constants.EXTERNAL_GENERAL_ENTITIES_FEATURE, false);\n+            dbf.setFeature(Constants.SAX_FEATURE_PREFIX + Constants.EXTERNAL_PARAMETER_ENTITIES_FEATURE, false);\n+            dbf.setFeature(Constants.XERCES_FEATURE_PREFIX + Constants.LOAD_EXTERNAL_DTD_FEATURE, false);\n+        } catch (ParserConfigurationException e) {\n+            log.error(\n+                    \"Failed to load XML Processor Feature \" + Constants.EXTERNAL_GENERAL_ENTITIES_FEATURE + \" or \" +\n+                            Constants.EXTERNAL_PARAMETER_ENTITIES_FEATURE + \" or \" + Constants.LOAD_EXTERNAL_DTD_FEATURE);\n+        }\n+\n+        SecurityManager securityManager = new SecurityManager();\n+        securityManager.setEntityExpansionLimit(ENTITY_EXPANSION_LIMIT);\n+        dbf.setAttribute(Constants.XERCES_PROPERTY_PREFIX + Constants.SECURITY_MANAGER_PROPERTY, securityManager);\n+\n+        return dbf;\n+    }\n }"
        }
    ]
}