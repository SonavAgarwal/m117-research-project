{
    "sha": "dbf259508c2b8e176d8cb837177aaadbf44f0670",
    "node_id": "MDY6Q29tbWl0Mjc5MTEwODg6ZGJmMjU5NTA4YzJiOGUxNzZkOGNiODM3MTc3YWFhZGJmNDRmMDY3MA==",
    "commit": {
        "author": {
            "name": "thenatog",
            "email": "thenatog@gmail.com",
            "date": "2018-06-13T21:05:57Z"
        },
        "committer": {
            "name": "Andy LoPresto",
            "email": "alopresto@apache.org",
            "date": "2018-06-13T23:13:53Z"
        },
        "message": "NIFI-5258 - Changed addHeader to setHeader which stops X-Frame-Options being added twice to responses. Added unit test.\n\nThis closes #2791.\n\nSigned-off-by: Andy LoPresto <alopresto@apache.org>",
        "tree": {
            "sha": "61dfd4890f012b75fd2c9447de3cbc9fd4ea961c",
            "url": "https://api.github.com/repos/apache/nifi/git/trees/61dfd4890f012b75fd2c9447de3cbc9fd4ea961c"
        },
        "url": "https://api.github.com/repos/apache/nifi/git/commits/dbf259508c2b8e176d8cb837177aaadbf44f0670",
        "comment_count": 0,
        "verification": {
            "verified": true,
            "reason": "valid",
            "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvVQK7AeseI9WE+8dbsKTFS2Qth0FAlshpT8ACgkQbsKTFS2Q\nth3LPQ/9GmnwCkyzttKbubclro/0NzTcPOU6A1Dtq98qcNvegjrgXuBeIpq+QYjU\n4LTsB0xpjjyza5zJptYVAZNMBOVpy0YiHZ+/FxzzudaZeg0XlrEoAmgEEltdbRGL\n5VpneJ7xPMoiDmBatr6NJaIima+PfXtUYyD1qPDJGMFWTb7ZeNjVQEvE1YQnlk+o\nWVSU3VGNmd+W+cFfKb8k6T+Tzci4dh2tFIN2PCQacyxgYeMSC0zIjY3RNQrGKYKV\nPRMLmNAPZiE8u53UvV5Eo2qMW9Ddif0dcAc0IshChSb+7hbOHwf08gcMB/h4+Jyo\nD6xrHv/iNFMUnp3HrmkyktsnfCEVaP8NL8wFp8hckHg3qsnPpRTiBek5ysctHWN4\noM+1tPqm+ysCAkSEOzcQFmTEblB6hPZpwVE0KSl5g99O8YJYLf7JIG9d3zXDOVFJ\nHgBU0G4Tx0klUq8xlXtMTNoS4RHla5sxeA7UGzWhEkIJkfMBoma4Vmar6t4KNXF+\nOROcwfrfsfj2GkjX8Q9yWDkkoz/27p/Z6X7aGKKJGE5HgoVNkIVA5yNX+1QX+4FV\nSYHio1igrFAinfyQA8A/ee2ZzDc2VLtFjP/6mTvm5KSdN1Ncf5bf3Xck9dsJitQR\nO1I5tEbm3HRoQupuRza+i1r4YW6qejosyV7MM3t6+h2MVN28Kd4=\n=/eCr\n-----END PGP SIGNATURE-----",
            "payload": "tree 61dfd4890f012b75fd2c9447de3cbc9fd4ea961c\nparent 275b8cbf231f2c41aa2d79d69d8abf6dbaabd278\nauthor thenatog <thenatog@gmail.com> 1528923957 -0400\ncommitter Andy LoPresto <alopresto@apache.org> 1528931633 -0700\n\nNIFI-5258 - Changed addHeader to setHeader which stops X-Frame-Options being added twice to responses. Added unit test.\n\nThis closes #2791.\n\nSigned-off-by: Andy LoPresto <alopresto@apache.org>\n",
            "verified_at": "2024-11-08T07:57:14Z"
        }
    },
    "url": "https://api.github.com/repos/apache/nifi/commits/dbf259508c2b8e176d8cb837177aaadbf44f0670",
    "html_url": "https://github.com/apache/nifi/commit/dbf259508c2b8e176d8cb837177aaadbf44f0670",
    "comments_url": "https://api.github.com/repos/apache/nifi/commits/dbf259508c2b8e176d8cb837177aaadbf44f0670/comments",
    "author": {
        "login": "thenatog",
        "id": 38888042,
        "node_id": "MDQ6VXNlcjM4ODg4MDQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/38888042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thenatog",
        "html_url": "https://github.com/thenatog",
        "followers_url": "https://api.github.com/users/thenatog/followers",
        "following_url": "https://api.github.com/users/thenatog/following{/other_user}",
        "gists_url": "https://api.github.com/users/thenatog/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thenatog/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thenatog/subscriptions",
        "organizations_url": "https://api.github.com/users/thenatog/orgs",
        "repos_url": "https://api.github.com/users/thenatog/repos",
        "events_url": "https://api.github.com/users/thenatog/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thenatog/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "alopresto",
        "id": 798465,
        "node_id": "MDQ6VXNlcjc5ODQ2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/798465?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alopresto",
        "html_url": "https://github.com/alopresto",
        "followers_url": "https://api.github.com/users/alopresto/followers",
        "following_url": "https://api.github.com/users/alopresto/following{/other_user}",
        "gists_url": "https://api.github.com/users/alopresto/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alopresto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alopresto/subscriptions",
        "organizations_url": "https://api.github.com/users/alopresto/orgs",
        "repos_url": "https://api.github.com/users/alopresto/repos",
        "events_url": "https://api.github.com/users/alopresto/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alopresto/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "275b8cbf231f2c41aa2d79d69d8abf6dbaabd278",
            "url": "https://api.github.com/repos/apache/nifi/commits/275b8cbf231f2c41aa2d79d69d8abf6dbaabd278",
            "html_url": "https://github.com/apache/nifi/commit/275b8cbf231f2c41aa2d79d69d8abf6dbaabd278"
        }
    ],
    "stats": {
        "total": 124,
        "additions": 84,
        "deletions": 40
    },
    "files": [
        {
            "sha": "b9a46b6ee803648a344d26807f3f403d3eb6fb84",
            "filename": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-jetty/pom.xml",
            "status": "modified",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https://github.com/apache/nifi/blob/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fpom.xml",
            "raw_url": "https://github.com/apache/nifi/raw/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fpom.xml",
            "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fpom.xml?ref=dbf259508c2b8e176d8cb837177aaadbf44f0670",
            "patch": "@@ -194,6 +194,12 @@\n             <version>1.16.0</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-test</artifactId>\n+            <version>5.0.6.RELEASE</version>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n </project>\n "
        },
        {
            "sha": "bcada3514870303161f6b938e72e0a9a37a09221",
            "filename": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-jetty/src/main/java/org/apache/nifi/web/server/JettyServer.java",
            "status": "modified",
            "additions": 36,
            "deletions": 35,
            "changes": 71,
            "blob_url": "https://github.com/apache/nifi/blob/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java",
            "raw_url": "https://github.com/apache/nifi/raw/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java",
            "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServer.java?ref=dbf259508c2b8e176d8cb837177aaadbf44f0670",
            "patch": "@@ -18,40 +18,6 @@\n \n import com.google.common.base.Strings;\n import com.google.common.collect.Lists;\n-import java.io.BufferedReader;\n-import java.io.File;\n-import java.io.FileFilter;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n-import java.net.InetAddress;\n-import java.net.NetworkInterface;\n-import java.net.SocketException;\n-import java.nio.file.Paths;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.EnumSet;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Set;\n-import java.util.concurrent.TimeUnit;\n-import java.util.jar.JarEntry;\n-import java.util.jar.JarFile;\n-import java.util.stream.Collectors;\n-import javax.servlet.DispatcherType;\n-import javax.servlet.Filter;\n-import javax.servlet.FilterChain;\n-import javax.servlet.FilterConfig;\n-import javax.servlet.ServletContext;\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n-import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.nifi.NiFiServer;\n@@ -105,6 +71,41 @@\n import org.springframework.web.context.WebApplicationContext;\n import org.springframework.web.context.support.WebApplicationContextUtils;\n \n+import javax.servlet.DispatcherType;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileFilter;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.InetAddress;\n+import java.net.NetworkInterface;\n+import java.net.SocketException;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarFile;\n+import java.util.stream.Collectors;\n+\n /**\n  * Encapsulates the Jetty instance.\n  */\n@@ -1033,7 +1034,7 @@ public void doFilter(final ServletRequest req, final ServletResponse resp, final\n \n             // set frame options accordingly\n             final HttpServletResponse response = (HttpServletResponse) resp;\n-            response.addHeader(FRAME_OPTIONS, SAME_ORIGIN);\n+            response.setHeader(FRAME_OPTIONS, SAME_ORIGIN);\n \n             filterChain.doFilter(req, resp);\n         }"
        },
        {
            "sha": "618b2d7f684145817ff67d6e814af738c12279de",
            "filename": "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-jetty/src/test/java/org/apache/nifi/web/server/JettyServerTest.java",
            "status": "modified",
            "additions": 42,
            "deletions": 5,
            "changes": 47,
            "blob_url": "https://github.com/apache/nifi/blob/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServerTest.java",
            "raw_url": "https://github.com/apache/nifi/raw/dbf259508c2b8e176d8cb837177aaadbf44f0670/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServerTest.java",
            "contents_url": "https://api.github.com/repos/apache/nifi/contents/nifi-nar-bundles%2Fnifi-framework-bundle%2Fnifi-framework%2Fnifi-web%2Fnifi-jetty%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fnifi%2Fweb%2Fserver%2FJettyServerTest.java?ref=dbf259508c2b8e176d8cb837177aaadbf44f0670",
            "patch": "@@ -17,20 +17,32 @@\n \n package org.apache.nifi.web.server;\n \n-import java.lang.reflect.InvocationTargetException;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n import org.apache.nifi.security.util.KeystoreType;\n+import org.apache.nifi.util.NiFiProperties;\n import org.bouncycastle.jce.provider.BouncyCastleProvider;\n import org.eclipse.jetty.util.ssl.SslContextFactory;\n-import org.apache.nifi.util.NiFiProperties;\n import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.HashMap;\n+import java.util.Map;\n \n+import static org.junit.Assert.assertEquals;\n import static org.mockito.Matchers.anyString;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.never;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n public class JettyServerTest {\n     @Test\n@@ -142,4 +154,29 @@ public void testConfigureSslContextFactoryWithPkcsTrustStore() {\n         verify(contextFactory).setTrustStoreType(trustStoreType);\n         verify(contextFactory).setTrustStoreProvider(BouncyCastleProvider.PROVIDER_NAME);\n     }\n+\n+    @Test\n+    public void testNoDuplicateXFrameOptions() throws NoSuchFieldException, IllegalAccessException, ServletException, IOException {\n+        Field xOptionsFilter = JettyServer.class.getDeclaredField(\"FRAME_OPTIONS_FILTER\");\n+        xOptionsFilter.setAccessible(true);\n+        Filter filter = (Filter) xOptionsFilter.get(xOptionsFilter);\n+\n+        HttpServletRequest mockRequest = Mockito.mock(HttpServletRequest.class);\n+        Mockito.when(mockRequest.getRequestURI()).thenReturn(\"/\");\n+\n+        MockHttpServletResponse mockResponse = new MockHttpServletResponse();\n+        FilterChain mockFilterChain = Mockito.mock(FilterChain.class);\n+        ServletContext mockContext = Mockito.mock(ServletContext.class);\n+        FilterConfig mockFilterConfig = Mockito.mock(FilterConfig.class);\n+\n+        when(mockFilterConfig.getServletContext()).thenReturn(mockContext);\n+\n+        filter.init(mockFilterConfig);\n+\n+        // Call doFilter twice, then check the header only appears once.\n+        filter.doFilter(mockRequest, mockResponse, mockFilterChain);\n+        filter.doFilter(mockRequest, mockResponse, mockFilterChain);\n+\n+        assertEquals(1, mockResponse.getHeaders(\"X-Frame-Options\").size());\n+    }\n }"
        }
    ]
}