{
    "sha": "426be73b9e7500fa3d441231fa4e473de34743f6",
    "node_id": "MDY6Q29tbWl0MjA2NDI3OjQyNmJlNzNiOWU3NTAwZmEzZDQ0MTIzMWZhNGU0NzNkZTM0NzQzZjY=",
    "commit": {
        "author": {
            "name": "TALLISON",
            "email": "tallison@apache.org",
            "date": "2019-06-25T14:46:15Z"
        },
        "committer": {
            "name": "TALLISON",
            "email": "tallison@apache.org",
            "date": "2019-06-25T14:46:15Z"
        },
        "message": "trivial improvements to RPW",
        "tree": {
            "sha": "55b38be63ba25c3de75466d825029cb391f1947a",
            "url": "https://api.github.com/repos/apache/tika/git/trees/55b38be63ba25c3de75466d825029cb391f1947a"
        },
        "url": "https://api.github.com/repos/apache/tika/git/commits/426be73b9e7500fa3d441231fa4e473de34743f6",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null,
            "verified_at": null
        }
    },
    "url": "https://api.github.com/repos/apache/tika/commits/426be73b9e7500fa3d441231fa4e473de34743f6",
    "html_url": "https://github.com/apache/tika/commit/426be73b9e7500fa3d441231fa4e473de34743f6",
    "comments_url": "https://api.github.com/repos/apache/tika/commits/426be73b9e7500fa3d441231fa4e473de34743f6/comments",
    "author": {
        "login": "tballison",
        "id": 6739646,
        "node_id": "MDQ6VXNlcjY3Mzk2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6739646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tballison",
        "html_url": "https://github.com/tballison",
        "followers_url": "https://api.github.com/users/tballison/followers",
        "following_url": "https://api.github.com/users/tballison/following{/other_user}",
        "gists_url": "https://api.github.com/users/tballison/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tballison/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tballison/subscriptions",
        "organizations_url": "https://api.github.com/users/tballison/orgs",
        "repos_url": "https://api.github.com/users/tballison/repos",
        "events_url": "https://api.github.com/users/tballison/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tballison/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "committer": {
        "login": "tballison",
        "id": 6739646,
        "node_id": "MDQ6VXNlcjY3Mzk2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6739646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tballison",
        "html_url": "https://github.com/tballison",
        "followers_url": "https://api.github.com/users/tballison/followers",
        "following_url": "https://api.github.com/users/tballison/following{/other_user}",
        "gists_url": "https://api.github.com/users/tballison/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tballison/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tballison/subscriptions",
        "organizations_url": "https://api.github.com/users/tballison/orgs",
        "repos_url": "https://api.github.com/users/tballison/repos",
        "events_url": "https://api.github.com/users/tballison/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tballison/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "c3685d0767837a02cda93cfe49d81c31e352191d",
            "url": "https://api.github.com/repos/apache/tika/commits/c3685d0767837a02cda93cfe49d81c31e352191d",
            "html_url": "https://github.com/apache/tika/commit/c3685d0767837a02cda93cfe49d81c31e352191d"
        }
    ],
    "stats": {
        "total": 59,
        "additions": 57,
        "deletions": 2
    },
    "files": [
        {
            "sha": "4e05d74f4e69540a0be2ebc0aeccc79dec70b41a",
            "filename": "tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java",
            "status": "modified",
            "additions": 57,
            "deletions": 2,
            "changes": 59,
            "blob_url": "https://github.com/apache/tika/blob/426be73b9e7500fa3d441231fa4e473de34743f6/tika-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Ftika%2Fparser%2FRecursiveParserWrapper.java",
            "raw_url": "https://github.com/apache/tika/raw/426be73b9e7500fa3d441231fa4e473de34743f6/tika-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Ftika%2Fparser%2FRecursiveParserWrapper.java",
            "contents_url": "https://api.github.com/repos/apache/tika/contents/tika-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Ftika%2Fparser%2FRecursiveParserWrapper.java?ref=426be73b9e7500fa3d441231fa4e473de34743f6",
            "patch": "@@ -20,15 +20,19 @@\n import org.apache.tika.exception.CorruptedFileException;\n import org.apache.tika.exception.TikaException;\n import org.apache.tika.io.FilenameUtils;\n+import org.apache.tika.io.TikaInputStream;\n import org.apache.tika.metadata.Metadata;\n import org.apache.tika.metadata.Property;\n import org.apache.tika.metadata.TikaCoreProperties;\n import org.apache.tika.mime.MediaType;\n import org.apache.tika.sax.AbstractRecursiveParserWrapperHandler;\n+import org.apache.tika.sax.ContentHandlerDecorator;\n import org.apache.tika.sax.ContentHandlerFactory;\n import org.apache.tika.sax.RecursiveParserWrapperHandler;\n+import org.apache.tika.sax.SecureContentHandler;\n import org.apache.tika.utils.ExceptionUtils;\n import org.apache.tika.utils.ParserUtils;\n+import org.xml.sax.Attributes;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n \n@@ -221,7 +225,12 @@ public void parse(InputStream stream, ContentHandler recursiveParserWrapperHandl\n         long started = System.currentTimeMillis();\n         parserState.recursiveParserWrapperHandler.startDocument();\n         try {\n-            getWrappedParser().parse(stream, localHandler, metadata, context);\n+            try (TikaInputStream tis = TikaInputStream.get(stream)) {\n+                RecursivelySecureContentHandler secureContentHandler =\n+                        new RecursivelySecureContentHandler(localHandler, tis);\n+                context.set(RecursivelySecureContentHandler.class, secureContentHandler);\n+                getWrappedParser().parse(tis, secureContentHandler, metadata, context);\n+            }\n         } catch (SAXException e) {\n             boolean wlr = isWriteLimitReached(e);\n             if (wlr == false) {\n@@ -366,8 +375,14 @@ public void parse(InputStream stream, ContentHandler ignore,\n             Parser preContextParser = context.get(Parser.class);\n             context.set(Parser.class, new EmbeddedParserDecorator(getWrappedParser(), objectLocation, parserState));\n             long started = System.currentTimeMillis();\n+            RecursivelySecureContentHandler secureContentHandler =\n+                    context.get(RecursivelySecureContentHandler.class);\n+            //store the handler that was used before this parse\n+            //so that you can return it back to its state at the end of this parse\n+            ContentHandler preContextHandler = secureContentHandler.handler;\n+            secureContentHandler.updateContentHandler(localHandler);\n             try {\n-                super.parse(stream, localHandler, metadata, context);\n+                super.parse(stream, secureContentHandler, metadata, context);\n             } catch (SAXException e) {\n                 boolean wlr = isWriteLimitReached(e);\n                 if (wlr == true) {\n@@ -389,6 +404,7 @@ public void parse(InputStream stream, ContentHandler ignore,\n                 }\n             } finally {\n                 context.set(Parser.class, preContextParser);\n+                secureContentHandler.updateContentHandler(preContextHandler);\n                 long elapsedMillis = System.currentTimeMillis() - started;\n                 metadata.set(RecursiveParserWrapperHandler.PARSE_TIME_MILLIS, Long.toString(elapsedMillis));\n                 parserState.recursiveParserWrapperHandler.endEmbeddedDocument(localHandler, metadata);\n@@ -406,7 +422,46 @@ private class ParserState {\n         private ParserState(AbstractRecursiveParserWrapperHandler handler) {\n             this.recursiveParserWrapperHandler = handler;\n         }\n+    }\n+\n+    private class RecursivelySecureContentHandler\n+            extends SecureContentHandler {\n+        private ContentHandler handler;\n+        public RecursivelySecureContentHandler(ContentHandler handler, TikaInputStream stream) {\n+            super(handler, stream);\n+            this.handler = handler;\n+        }\n+\n+        public void updateContentHandler(ContentHandler handler) {\n+            setContentHandler(handler);\n+            this.handler = handler;\n+        }\n \n+        /**\n+         *  Bypass the SecureContentHandler...\n+         *\n+         *  This handler only looks at zip bomb via zip expansion.\n+         *  Users should be protected within entries against nested\n+         *  nested xml entities.  We don't want to carry\n+         *  those stats _across_ entries.\n+         *\n+         * @param uri\n+         * @param localName\n+         * @param name\n+         * @param atts\n+         * @throws SAXException\n+         */\n+        @Override\n+        public void startElement(\n+                String uri, String localName, String name, Attributes atts)\n+                throws SAXException {\n+            this.handler.startElement(uri, localName, name, atts);\n+        }\n \n+        @Override\n+        public void endElement(\n+                String uri, String localName, String name) throws SAXException {\n+            this.handler.endElement(uri, localName, name);\n+        }\n     }\n }"
        }
    ]
}