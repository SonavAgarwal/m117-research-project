commit a94b85bea3f04d8c1f4e2e6f648a9a15bc6ce58f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 12:17:39 2024 +0300

    Add NEWS for 5.6.3

commit be4bf94446b6286a5dffdde85fc1d21448f4edff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 14:49:41 2024 +0300

    cmake/tuklib_large_file_support.cmake: Add a missing include
    
    v5.2 didn't build with CMake. Other branches had
    include(CMakePushCheckState) in top-level CMakeLists.txt
    which made the build work.
    
    Fixes: 597f49b61475438a43a417236989b2acc968a686

commit 1ebbe915d4e0d877154261b5f8103719a6722975
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 12:10:23 2024 +0300

    Update THANKS

commit 74702ee00ecfd080d8ab11118cd25dbe6c437ec0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 12:10:23 2024 +0300

    Tests/Windows: Add the application manifest to the test programs
    
    This ensures that the test programs get executed the same way as
    the binaries that are installed.

commit 7ddf2273e0e4654582ee65db19d44431bfdb5791
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 12:10:23 2024 +0300

    license-check.sh: Add an exception for w32_application.manifest
    
    The file gets embedded as is into executables, thus it cannot
    hold a license identifier.

commit 46ee0061629fb075d61d83839e14dd193337af59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 1 12:10:23 2024 +0300

    Windows: Embed an application manifest in the EXE files
    
    IMPORTANT: This includes a security fix to command line tool
               argument handling.
    
    Some toolchains embed an application manifest by default to declare
    UAC-compliance. Some also declare compatibility with Vista/8/8.1/10/11
    to let the app access features newer than those of Vista.
    
    We want all the above but also two more things:
    
      - Declare that the app is long path aware to support paths longer
        than 259 characters (this may also require a registry change).
    
      - Force the code page to UTF-8. This allows the command line tools
        to access files whose names contain characters that don't exist
        in the current legacy code page (except unpaired surrogates).
        The UTF-8 code page also fixes security issues in command line
        argument handling which can be exploited with malicious filenames.
        See the new file w32_application.manifest.comments.txt.
    
    Thanks to Orange Tsai and splitline from DEVCORE Research Team
    for discovering this issue.
    
    Thanks to Vijay Sarvepalli for reporting the issue to me.
    
    Thanks to Kelvin Lee for testing with MSVC and helping with
    the required build system fixes.

commit dad153091552b52a41b95ec4981c6951f1cae487
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 29 14:46:52 2024 +0300

    Windows: Set DLL name accurately in StringFileInfo on Cygwin and MSYS2
    
    Now the information in the "Details" tab in the file properties
    dialog matches the naming convention of Cygwin and MSYS2. This
    is only a cosmetic change.

commit 8940ecb96fe9f0f2a9cfb8b66fe9ed31ffbea904
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 25 15:47:55 2024 +0300

    common_w32res.rc: White space edits
    
    LANGUAGE and VS_VERSION_INFO begin new statements so put an empty line
    between them.

commit c3b9dad07d3fd9319f88386b7095019bcea45ce1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 28 20:09:50 2024 +0300

    CMake: Add the resource files to the Cygwin and MSYS2 builds
    
    Autotools-based build has always done this so this is for consistency.
    
    However, the CMake build won't create the DEF file when building
    for Cygwin or MSYS2 because in that context it should be useless.
    (If Cygwin or MSYS2 is used to host building of normal Windows
    binaries then the DEF file is still created.)

commit da4f275bd1c18b897e5c2dd0043546de3accce0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 28 15:19:14 2024 +0300

    CMake: Fix Windows resource file dependencies
    
    If common_w32res.rc is modified, the resource files need to be rebuilt.
    In contrast, the liblzma*.map files truly are link dependencies.

commit 1c673c0aac7f7dee8dda2c1140351c8417a71e47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 29 01:20:03 2024 +0300

    CMake: Checking for CYGWIN covers MSYS2 too
    
    On MSYS2, both CYGWIN and MSYS are set.

commit 6aaa0173b839e28429d43a8b62d257ad2f3b4521
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 28 09:37:30 2024 +0300

    Translations: Add the SPDX license identifier to pt_BR.po

commit dc7b9f24b737e4e55bcbbdde6754883f991c2cfb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 25 16:41:37 2024 +0300

    Windows/CMake: Use the correct resource file for lzmadec.exe
    
    CMakeLists.txt was using xzdec_w32res.rc for both xzdec and lzmadec.
    
    Fixes: 998d0b29536094a89cf385a3b894e157db1ccefe

commit b834ae5f80911a3819d6cdb484f61b257174c544
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 25 21:29:59 2024 +0300

    Translations: Update the Brazilian Portuguese translation

commit eceb023d4c129fd63ee881a2d8696eaf52ad1532
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 17 01:21:15 2024 +0300

    Update THANKS

commit e5758db7bd75587a2499e0771907521a4aa86908
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 10 13:54:47 2024 +0300

    Update THANKS

commit 68c54e45d042add64a4cb44bfc87ca74d29b87e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 2 20:08:40 2024 +0300

    Translations: Update Chinese (simplified) translation
    
    Differences to the zh_CN.po file from the Translation Project:
    
      - Two uses of \v were fixed.
    
      - Missing "OPTS" translation in --riscv[=OPTS] was copied from
        previous lines.
    
      - "make update-po" was run to remove line numbers from comments.

commit 2230692aa1bcebb586100183831e3daf1714d60a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 2 19:40:50 2024 +0300

    Translations: Update the Catalan translation
    
    Differences to the ca.po file from the Translation Project:
    
      - An overlong line translating --filters-help was wrapped.
    
      - "make update-po" was used to remove line numbers from the comments
        to match the changes in fccebe2b4fd513488fc920e4dac32562ed3c7637
        and 093490b58271e9424ce38a7b1b38bcf61b9c86c6. xz.pot in the TP
        is older than these commits.

commit 3e7723ce26f74c71919984a6180504b4548cbb7e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 22 14:06:16 2024 +0300

    Update THANKS

commit d3e0e679b2b8b428598bb8ba56a17715190814db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 22 14:06:16 2024 +0300

    CMake: Don't install lzmadec.1 symlinks if XZ_TOOL_LZMADEC=OFF
    
    Thanks-to: 榆柳松 (ZhengSen Wang) <wzhengsen@gmail.com>
    Fixes: fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
    Closes: https://github.com/tukaani-project/xz/pull/134

commit acdf21033abe347d9a279e9fe757f90ed16c1dbb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 22 14:06:16 2024 +0300

    CMake: Fix the build when XZ_TOOL_LZMADEC=OFF
    
    Co-developed-by: 榆柳松 (ZhengSen Wang) <wzhengsen@gmail.com>
    Fixes: fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
    Fixes: https://github.com/tukaani-project/xz/pull/134

commit 5e375987509fab484b7bef0b90be92f241c58c91
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 22 11:01:07 2024 +0300

    Update THANKS

commit bf901dee5d4c46609645e50311c0cb2dfdcf9738
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 19 20:02:43 2024 +0300

    Build: Comment that elf_aux_info(3) will be available on OpenBSD >= 7.6

commit f7103c2c2a8fa51d1f308ba7387beeff20a0d4dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 19 19:42:26 2024 +0300

    Revert "liblzma: Add ARM64 CRC32 instruction support detection on OpenBSD"
    
    This reverts commit dc03f6290f5b9bd3d50c7e12e58dee870889d599.
    
    OpenBSD 7.6 will support elf_aux_info(3), and the detection code used
    on FreeBSD will work on OpenBSD 7.6 too. Keep things simpler and drop
    the OpenBSD-specific sysctl() method.
    
    Thanks to Christian Weisgerber.

commit 7c292dd0bf23cefcdf4b1509f3666322e08a7ede
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 13 22:10:37 2024 +0300

    liblzma: Tweak a comment

commit 6408edac5529d6ec0abf52794074f229c8362303
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 11 22:17:56 2024 +0300

    CMake: Bump maximum policy version to 3.30

commit 9231c39ffb518196d6664a86e5325e744621a21b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 6 15:13:19 2024 +0300

    CMake: Require CMake 3.20 or later
    
    This allows a few cleanups.

commit 028185dd4889e3d6235ff13560160ebca6985021
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 9 14:27:51 2024 +0300

    Update THANKS

commit baecfa142644eb5f5c6dd6f8e2f531c362fa3747
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 6 14:04:48 2024 +0300

    xz: Remove the TODO comment about --recursive
    
    It won't be implemented. find + xargs is more flexible, for example,
    it allows compressing small files in parallel. An example for that
    has been included in the xz man page since 2010.

commit f691d58fae82bd815c5f86ffad10fe9b6b59dad8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 6 14:04:16 2024 +0300

    Document --disable-loongarch-crc32 in INSTALL

commit b3e53122f42796aaebd767bab920cf7bedf69966
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 3 20:45:48 2024 +0300

    CMake: Link xz against Threads::Threads if using pthreads
    
    The liblzma target was recently changed to link against Threads::Threads
    with the PRIVATE keyword. I had forgotten that xz itself depends on
    pthreads too due to pthread_sigmask(). Thus, the build broke when
    building shared liblzma and pthread_sigmask() wasn't in libc.
    
    Thanks to Peter Seiderer for the bug report.
    
    Fixes: ac05f1b0d7cda1e7ae79775a8dfecc54601d7f1c
    Fixes: https://github.com/tukaani-project/xz/issues/129#issuecomment-2204522994

commit 5742ec1fc7f2cf1c82cfe3477bb90594a4658374
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 22:49:33 2024 +0300

    Update THANKS

commit 2d13d10357ecad243d7e4ff1de0e6b437c38a47a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 20:23:35 2024 +0300

    CMake: Improve NLS error messages

commit 628d8d2c4fdf9e6a91c7bba7a743f400a94c2909
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 20:19:47 2024 +0300

    CMake: Update the comment at the top of CMakeLists.txt
    
    While po/*.gmo files won't be used from the release tarball,
    the generated translated man pages will be used still. Those
    are text files and po4a has slightly more dependencies than
    gettext tools so installing po4a might be a bit more challenging
    in some situations.

commit b4b23c94fd4429abc663ced28d5cdc9cf7eb7507
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 20:12:40 2024 +0300

    CMake: Drop support for pre-generated po/*.gmo files
    
    When a release tarball is created using Autotools, the tarball includes
    po/*.gmo files which are binary files generated from po/*.po. Other
    tarball creation methods don't and won't create the .gmo files.
    
    It feels clearer if CMake will never install pre-generated binary files
    from the source package. If people are able to install CMake, they
    likely are able to install gettext tools as well (assuming they want
    translations).

commit fb99f8e8c50171b898cb79fe1dc703d5f91e4f0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 19:14:50 2024 +0300

    CMake: Make XZ_NLS handling more robust
    
    If a user set XZ_NLS=ON but find_package(Intl) failed or CMake version
    wasn't at least 3.20, the configuration would fail in a cryptic way.
    
    If XZ_NLS is enabled, require that CMake is new enough and that either
    gettext tools or pre-generated .gmo files are available. Otherwise fail
    the configuration. Previously missing gettext tools and .gmo files would
    only result in a warning.
    
    Missing man page translations are still only a warning.
    
    Thanks to Peter Seiderer for the bug report.
    
    Fixes: https://github.com/tukaani-project/xz/issues/129
    Closes: https://github.com/tukaani-project/xz/pull/130

commit ec6157570ea8a8e38158894e530d35416ff6a0f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 19:39:05 2024 +0300

    CI: Add gettext as a dependency to CMake builds

commit 24f0f7e399de03bb2ff675d97b723d14f17ed6ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 18:43:56 2024 +0300

    CMake: Fix ENABLE_NLS comment too
    
    Fixes: 29f77c7b707f2458fb047e77497354b195e05b14

commit a0df0676130bc565af0ec911e68a1d0fbc3ed0fb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 2 18:02:50 2024 +0300

    CMake: The compile definition is ENABLE_NLS, not XZ_NLS
    
    The CMake variables were renamed and accidentally also
    the compile definition was renamed. As a result, translation
    support wasn't actually enabled in the executables.
    
    Fixes: 29f77c7b707f2458fb047e77497354b195e05b14

commit 45d08abc33ccc52d2f050dcec458badc2ce59d0b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 1 17:33:20 2024 +0300

    Update AUTHORS and THANKS

commit 0ed893668554fb0758003289f8a6af9bd08b89d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 14:20:49 2024 +0300

    liblzma: ARM64 CRC32: Align the buffer faster
    
    Instead of doing it byte by byte, use the 1/2/4-byte CRC32 instructions.

commit 2402e8a1ae92676fa0d4cb1b761d7f62f005c098
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 16:00:22 2024 +0300

    Build: Prepend, not append, PTHREAD_CFLAGS to LIBS
    
    It shouldn't make any difference because LIBS should be empty
    at that point in configure. But prepending is the correct way
    because in general the libraries being added might require other
    libraries that come later on the command line.

commit 7bb46f2b7b3989c1b589a247a251470f65e91cda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 14:24:29 2024 +0300

    Build: Use AC_LINK_IFELSE to handle implicit function declarations
    
    It's more robust in case the compiler allows pre-C99 implicit function
    declarations. If an x86 intrinsic is missing and gets treated as
    implicit function, the linking step will very probably fail. This
    isn't the only way to workaround implicit function declarations but
    it might be the simplest and cleanest.
    
    The problem hasn't been observed in the wild.
    
    There are a couple more AC_COMPILE_IFELSE uses in configure.ac.
    Of these, Landlock check calls prctl() and in theory could have
    the same problem. In practice it doesn't as the check program
    looks for several other things too. However, it was changed to
    AC_LINK_IFELSE still to look more correct.
    
    Similarly, m4/tuklib_cpucores.m4 and m4/tuklib_physmem.m4 were
    updated although they haven't given any trouble either. They
    have worked all these years because those check programs rely
    on specific headers and types: if headers or types are missing,
    compilation will fail. Using the linker makes these checks more
    similar to the ones in cmake/tuklib_*.cmake which always link.

commit 35eb57355ad1c415a838d26192d5af84abb7cf39
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 23:35:59 2024 +0300

    Build: Use AC_LINK_IFELSE instead of -Werror
    
    AC_COMPILE_IFELSE needed -Werror because Clang <= 14 would merely
    warn about the unsupported attribute and implicit function declaration.
    Changing to AC_LINK_IFELSE handles the implicit declaration because
    the symbol __crc32d is unlikely to exist in libc.
    
    Note that the other part of the check is that #include <arm_acle.h>
    must work. If the header is missing, most compilers give an error
    and the linking step won't be attempted.
    
    Avoiding -Werror makes the check more robust in case CFLAGS contains
    warning flags that break -Werror anyway (but this isn't the only check
    in configure.ac that has this problem). Using AC_LINK_IFELSE also makes
    the check more similar to how it is done in CMakeLists.txt.

commit 5a728813c378cc3c4c9c95793762452418d08f1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 23:34:34 2024 +0300

    Build: Sync the compile check changes from CMakeLists.txt
    
    It's nice to keep these in sync. The use of main() will later allow
    AC_LINK_IFELSE usage too which may avoid the more fragile -Werror.

commit 5279828635a95abdef82e691fc4979d362780e63
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 20:14:43 2024 +0300

    CMake: Not experimental anymore
    
    While the CMake support has gotten a lot less testing than
    the Autotools-based build, the supported features should now
    be equal. The output may differ slightly, for example,
    liblzma.pc may have
    
        Libs.private: -pthread -lpthread
    
    with Autotools on GNU/Linux. CMake doesn't put any options
    in Libs.private because on modern glibc the pthread functions
    are in libc. The options options aren't required to link static
    liblzma into an application.
    
    Autotools-based build doesn't generate or install
    lib/cmake/liblzma-*.cmake files. This means that on most
    platforms one cannot rely on
    
        find_package(liblzma 5.2.5 REQUIRED CONFIG)
    
    or such finding those files.

commit de215a0517645d16343f3a5336d3df884a4f665f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 16:11:13 2024 +0300

    CMake: Use configure_file() to copy a file
    
    I had missed this simpler method before. It does create a dependency
    so that if .in.h changes the copying is done again.

commit e620f35097c0ad20cd76d8258750aa706758ced9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 15:51:48 2024 +0300

    CMake: Always add pthread flags into CMAKE_REQUIRED_LIBRARIES
    
    It was weird to add CMAKE_THREAD_LIBS_INIT in CMAKE_REQUIRED_LIBRARIES
    only if CLOCK_MONOTONIC is available. Alternative would be to remove
    the thread libs from CMAKE_REQUIRED_LIBRARIES after the check for
    pthread_condattr_setclock() but keeping the libs should be fine too.
    Then it's ready in case more pthread functions were wanted some day.

commit 3c95c93bca593bdd54ac5cc01526b12c82c78faa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 22:42:01 2024 +0300

    CMake: Edit white space for consistency

commit 114cba69dbb96003e676c8c87a2e9943b12d065f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 22:41:10 2024 +0300

    CMake: Fix three checks if building with -flto
    
    In CMake, check_c_source_compiles() always links too. With
    link-time optimization, unused functions may get omitted if
    main() doesn't depend on them. Consider the following which
    tries to check if somefunction() is available when <someheader.h>
    has been included:
    
        #include <someheader.h>
        int foo(void) { return somefunction(); }
        int main(void) { return 0; }
    
    LTO may omit foo() completely because the program as a whole doesn't
    need it and then the program will link even if the symbol somefunction
    isn't available in libc or other library being linked in, and then
    the test may pass when it shouldn't.
    
    What happens if <someheader.h> doesn't declare somefunction()?
    Shouldn't the test fail in the compilation phase already? It should
    but many compilers don't follow the C99 and later standards that
    prohibit implicit function declarations. Instead such compilers
    assume that somefunction() exists, compilation succeeds (with a
    warning), and then linker with LTO omits the call to somefunction().
    
    Change the tests so that they are part of main(). If compiler accepts
    implicitly declared functions, LTO cannot omit them because it has to
    assume that they might have side effects and thus linking will fail.
    On the other hand, if the functions/intrinsics being used are supported,
    they might get optimized away but in that case it's fine because they
    really are supported.
    
    It is fine to use __attribute__((target(...))) for main(). At least
    it works with GCC 4.9 to 14.1 on x86-64.
    
    Reported-by: Sam James <sam@gentoo.org>

commit 78e882205e1f1e91df2af2cb7da00fe205dede99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 21:19:14 2024 +0300

    CMake: Use MATCHES instead of multiple STREQUAL

commit d3f20382fc1bd865eb70a65455d5022ed05caac8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 21:06:18 2024 +0300

    CMake: Improve the comment about LIBS

commit 33ec377729a3889e58d98934b2777b2754a3e045
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 20:01:25 2024 +0300

    CMake: Fix a typo in a message
    
    It was spotted with codespell.

commit 2a47be823cd6c717bc91fa29c7710c9b1ae0331f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 19:58:54 2024 +0300

    Document CMake options in INSTALL

commit 3faf4e8079a46bd46e05cd1234365724a6a33802
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 17:18:44 2024 +0300

    CI: Don't omit crc32 from the list with CMake anymore
    
    XZ_CHECKS accepts it but works without too.

commit 1bf83cded2955282fe1a868f08c83d4e5d6dca4a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 17:39:54 2024 +0300

    CI: Workaround buggy config.guess on Ubuntu 22.04LTS and 24.04LTS
    
    Check for the wrong triplet from config.guess and override it with
    the --build option on the configure command line. Then i386 assembly
    autodetection will work.
    
    These Ubuntu versions (and as of writing, also Debian unstable)
    ship config.guess version 2022-01-09 which contains a bug that
    was fixed in version 2022-05-08. It results in a wrong configure
    triplet when using CC="gcc -m32" to build i386 binaries.
    
    Upstream fix:
    https://git.savannah.gnu.org/cgit/config.git/commit/?id=f56a7140386d08a531bcfd444d632b28c61a6329
    
    More information:
    https://mail.gnu.org/archive/html/config-patches/2022-05/msg00003.html

commit dbcdabf68fee9ed694b68c3a82e6adbeff20b679
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 15:24:52 2024 +0300

    CI: Use CC="gcc -m32" to get i386 compiler on x86-64
    
    The old method put it in CFLAGS which is a wrong place because
    config.guess doesn't read CFLAGS.

commit 0c1e6d900bac127464fb30a854776e1810ab5f16
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 14:54:17 2024 +0300

    CI: Let CMake use the CC environment variable
    
    CC from environment is used to initialize CMAKE_C_COMPILER so
    setting CMAKE_C_COMPILER explicitly isn't needed.
    
    The syntax in ci_build.bash was broken in case one wished to put
    spaces in CC.

commit a3d6eb797c1bd9b0425ef6754e475e43e62bf075
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 23:25:42 2024 +0300

    CMake: Add autodetection for 32-bit x86 CRC assembly usage

commit dbc14f213e5cf866f1f42b7c6381a91e1189908c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 23:00:59 2024 +0300

    CMake: Move option(XZ_ASM_I386) downwards a few lines

commit e5c2b07b489b155c1bebd5cb5e5b94325c2fef1a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 18:45:41 2024 +0300

    DOS: Update Makefile and config.h for the CRC changes

commit fe77c4e130d62dc3f9c1de40a18c0c6caa5a4d88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 15:35:35 2024 +0300

    liblzma: Tidy up crc_common.h
    
    Prefix ARM64_RUNTIME_DETECTION with CRC_ and reorder it to be with
    the other ARM64-specific lines. That macro isn't used outside this
    file.
    
    ARM64 CLMUL implementation doesn't exist yet and thus CRC64_ARM64_CLMUL
    isn't used anywhere yet.
    
    It's not ideal that the single-letter CRC utility macros are here
    as they pollute the namespace of the LZ encoder files. Those could
    be moved their own crc_macros.h like they were in 5.2.x but in practice
    this is fine enough already.

commit 7484d375384f551d475ff44a93590a225e0cb8f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 14:22:08 2024 +0300

    liblzma: Move lzma_crcXX_table[][] declarations to crc_common.h
    
    LZ encoder needs lzma_crc32_table[0] but otherwise those tables
    are private to the CRC code. In contrast, the other things in
    check.h are needed in several places.

commit 85b081f5d4598342b8c155a2c08697fb2adc372c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 19 18:38:22 2024 +0300

    liblzma: Make 32-bit x86 CRC assembly co-exist with CLMUL
    
    Now runtime detection of CLMUL support can pick between the CLMUL and
    the generic assembly implementations. Whatever overhead this has for
    builds that omit CLMUL completely isn't important because builds for
    any non-ancient system is likely to include the CLMUL code too.
    
    Handle the CRC tables in crcXX_fast.c files because now these files
    are built even when assembly code is used.
    
    If 32-bit x86 assembly is enabled then it will always be built even
    if compiler flags were such that CLMUL would be allowed unconditionally.
    That is, runtime detection will be used anyway. This keeps the build
    rules simpler.
    
    In LZ encoder, build and use lzma_lz_hash_table[256] if CLMUL CRC
    is used without runtime detection. Previously this wasn't needed
    because crc32_table.c included the lzma_crc32_table[][] in the build
    unless encoder support had been disabled. Including an 8 KiB table
    was silly when only 1 KiB is actually used. So now liblzma is 7 KiB
    smaller if CLMUL is enabled without runtime detection.

commit 6667d503b5dc9826654e3d9ad505e1883ff6c388
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 19 17:44:41 2024 +0300

    liblzma: CRC: Rename crcXX_generic to lzma_crcXX_generic
    
    This prepares for the possibility that lzma_crc32_generic and
    lzma_crc64_generic are extern functions.

commit 1dca581ff20aa1cde61e9e5267d3aeb0af9b6845
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 22:55:22 2024 +0300

    CMake: Define HAVE_CRC_X86_ASM when 32-bit x86 CRC assembly is used

commit f76837acb65676e541d8ee79cd62dbbf27280a62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 10 16:00:26 2024 +0300

    Build: Define HAVE_CRC_X86_ASM when 32-bit x86 CRC assembly is used
    
    This makes it easier to determine when the CRC tables are needed.

commit 9ce0866b070850da4dc837741ff055faa218bdd6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 21 00:46:09 2024 +0300

    CI: Update to the new renamed options in CMakeLists.txt

commit 0232e66d5bc5b01a25a447c657e51747626488ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 18:12:22 2024 +0300

    CMake: Add XZ_EXTERNAL_SHA256

commit 4535b80caead82a7ddf7feb988b8fbc773152522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 18:12:21 2024 +0300

    CMake: Move threading detection a few lines up
    
    It feels clearer this way, and when support for external SHA-256
    is added, this will keep the order of the library detection the
    same as in configure.ac (check for pthreads before libmd) although
    it shouldn't matter in practice.

commit 94d062dbac34d366eb26625034200cc3457e6645
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 18:12:21 2024 +0300

    CMake: Move the sandbox code out of the liblzma section
    
    Sandboxing is for the command line tools, not liblzma.
    No functional changes.

commit 75ce4797d49621710e6da95d8cb91541028c6d68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 18:12:21 2024 +0300

    CMake: Keep existing options in LIBS when adding -lrt
    
    This makes no difference yet because -lrt is currently the only option
    that might be added to LIBS.

commit 47aaa92516fd9609821d04e5e94ca6558e56d62b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Don't install scripts if the xz tool isn't built
    
    The scripts need the xz tool.

commit fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_TOOL_XZDEC and XZ_TOOL_LZMADEC

commit def767f7d18ccbd81cd5e5b46c8b6031f3a1de34
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_TOOL_LZMAINFO

commit 5600e370fb7e11eafabc6c3ef5bf6510e859f4f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_TOOL_XZ

commit 6a3c4aaa43a90da441e1156c5ffd2e6098f5521f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    Windows: Drop Visual Studio 2013 support
    
    This simplifies things a little. Building liblzma with VS2013 probably
    still worked but building the command line tools was not supported.
    
    Microsoft ended support for VS2013 on 2024-04.

commit 5d5c92b26246936461a635dda1f95740d7de2058
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_TOOL_SCRIPTS

commit d274a2bc00d235f07e96aaf82c149794cfe82b12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_DOC

commit 188143a50ade67253ed256608f50f78aa1380403
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 21:53:03 2024 +0300

    CMake: Refactor XZ_SYMBOL_VERSIONING to match configure.ac
    
    Make the available options and their behavior match
    --enable-symbol-versions in configure.ac.
    
    Don't enable symbol versions on Linux if not using glibc. Previously
    the generic variant was selected on Microblaze or if using NVHPC
    without checking that libc is glibc.
    
    Leave the cache variable to "auto" or "yes" if that was specified
    instead of setting it to the autodetected value by default. A downside
    is that one cannot easily see which variant the autodetection code
    has selected. The same applies to XZ_SANDBOX and XZ_THREADS though.

commit cc52ef8ed3b75a581262c587f6c06c213a550f86
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Use the same option list for XZ_THREADS as in configure.ac
    
    Also clarify that "yes" will fail if no threading support is found.
    If no threading is wanted, it has to be disabled manually.
    
    configure.ac doesn't behave this way at the moment. Instead it
    assumes pthreads to be present if not targeting Windows. If pthreads
    actually are missing, the build fails later.

commit 37f7af3452bab0a34ce320c2ad532835f18752d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Use the same option list for XZ_SANDBOX as in configure.ac
    
    It's simpler to document this way.

commit c715dec8e800b65145918cfb0ee9bbc90faa8aad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Fix indentation

commit ea379f2f180befabd2039342db8eaeb757fdd2b7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add warning options for GCC and Clang
    
    The list was copied from configure.ac and should be kept in sync.
    (Pretend that the deleted comment in CMakeLists.txt didn't exist.)
    
    There is no need to add equivalent of --enable-werror as CMake >= 3.24
    supports -DCMAKE_COMPILE_WARNING_AS_ERROR=ON.

commit 74223338197b7dfcd69f56df78b6502805a75f23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Use \040 instead of \x20 for a space
    
    This is for consistency with 4c81c9611f8b2e1ad65eb7fa166afc570c58607e
    where \040 has to be used because \0x20F gets interpret at three hex
    digits. Octals escapes are never longer than three digits.

commit e8854b6bdc956c46dc4232bd07c17163034a00f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Add XZ_ASSUME_RAM

commit e1127e75cb82e0385f02c995771d6fe1420f43c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename liblzma_INSTALL_CMAKEDIR to XZ_INSTALL_CMAKEDIR

commit 96abfe98c15e431a50a6a31015c5bb05540ab2ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Refactor ADDITIONAL_CHECK_TYPES to XZ_CHECKS
    
    Now "crc32" is in the list too for completeness but it doesn't
    actually have any effect. The description of the cache variable
    says that "crc32 is always built" so it should be clear enough.

commit 679500ffe00ecb4f02292129e7529ab7392f3943
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename the cache variable POSIX_SHELL to XZ_POSIX_SHELL
    
    We still need the variable POSIX_SHELL for configure_file()
    but it doesn't need to be a cache variable.

commit e5c0eb2e50e5522a0a55e7ba83fe49b04c8a6eef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENCODERS and DECODERS to use XZ_ prefix

commit e7785e2061f95d44aa6c0856b09cc0fbad7d6154
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename MATCH_FINDERS to XZ_MATCH_FINDERS

commit 63294806b488a27a28a0960f6a257695dd2b569a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename SYMBOL_VERSIONING to XZ_SYMBOL_VERSIONING

commit ad245b133675d285bca5d48123062e9d1e3f747e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_THREADS to XZ_THREADS

commit 4250d4de32e66e558cc2ebe73b05255633c933ed
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_SANDBOX to XZ_SANDBOX

commit 0fdcd0c582f1a38542cd647dde449d9447d5888d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_X86_ASM to XZ_ASM_I386

commit e017d5526e316003fdb2a3f76acbb83443f14ddf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename CREATE_XZ_SYMLINKS to XZ_TOOL_SYMLINKS
    
    This only affects the names unxz and xzcat. The xz-prefixed script
    symlinks (xzfgrep and such) are always created if scripts are enabled.

commit 04cac14fcb9fb302c24e90b04ca4b77d3717b50c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename CREATE_LZMA_SYMLINKS to XZ_TOOL_LZMA_SYMLINKS
    
    Update the description too.
    
    It affects creation of not only the legacy lzma, unlzma, lzcat symlinks
    but also lzgrep and other legacy names for the scripts. The last
    LZMA Utils release was made in 2008 but these names are still used
    in some places to handle .lzma files.

commit 612ccebf884eb1a9b6848e230c24f97a03fe917a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ALLOW_ARM64_CRC32 to XZ_ARM64_CRC32
    
    Update description too.

commit 3dcc12290d6dffbe7f10f501c141d325bad65901
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ALLOW_CLMUL_CRC to XZ_CLMUL_CRC
    
    Update description too.

commit 4b8faa72442da9aa1a356f5848aae798d8588a7d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_DOXYGEN to XZ_DOXYGEN

commit b56273ae575bac350e50b0c689269dcab04b04b3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename LZIP_DECODER to XZ_LZIP_DECODER

commit 2343992fcbe8b436da6df888be37713cccaff0ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename MICROLZMA_ENCODER/DECODER to XZ_MICROLZMA_ENCODER/DECODER

commit 96f0a6632cc0598a26d93255b0c444df18dc7891
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_SMALL to XZ_SMALL

commit 29f77c7b707f2458fb047e77497354b195e05b14
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 18:07:04 2024 +0300

    CMake: Rename ENABLE_NLS to XZ_NLS
    
    Also update the description to mention that this affects installation
    of translated man pages too.
    
    Prefixing the cache variables with the project name helps if
    the package is used as a subproject in another package.
    It also makes the package-specific options group more nicely
    in ccmake and cmake-gui.

commit ac05f1b0d7cda1e7ae79775a8dfecc54601d7f1c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 15 23:34:29 2024 +0300

    CMake: Link Threads::Threads as PRIVATE to liblzma
    
    This way pthread options aren't passed to the linker when linking
    against shared liblzma but they are still passed when linking against
    static liblzma. (Also, one never needs the include path of the
    threading library to use liblzma since liblzma's API headers
    don't #include <pthread.h>. But <pthread.h> tends to be in the
    default include path so here this change makes no difference.)
    
    One cannot mix target_link_libraries() calls that use the scope
    (PRIVATE, PUBLIC, or INTERFACE) keyword and calls that don't use it.
    The calls without the keyword are like PUBLIC except perhaps when
    they aren't, or something like that... It seems best to always
    specify a scope keyword as the meanings of those three keywords
    at least are clear.

commit 82986d8c691a294c78b48d8391303e5c428b5437
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 19:39:32 2024 +0300

    CMake: Add empty lines

commit 2aecffe0f0e14f3ef635e8cd7b405420f2385de2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 19:37:36 2024 +0300

    CMake: Use CMAKE_THREAD_LIBS_INIT in liblzma.pc only with pthreads
    
    This shouldn't make much difference in practice as on Windows
    no flags are needed anyway and unitialized variable (when threading
    is disabled) expands to empty. But it's clearer this way.

commit 664918bd3635ea8e773f06022286ecb0c485166c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 17 18:20:14 2024 +0300

    Update THANKS

commit 5ca96a93488d0f5a530c78b274cac317453807ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 19:25:07 2024 +0300

    CMake: Use native newlines in liblzma.pc
    
    vcpkg doesn't specify the newline type so it should be fine to
    use native newlines in liblzma.pc on Windows.

commit ebd155c3a1b87411edae06d3bdaa9659ec057522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 19:18:56 2024 +0300

    CMake: Use relative paths in liblzma.pc if possible
    
    Now liblzma.pc can be relocatable only if using CMake >= 3.20
    but that should be OK as now we shouldn't get broken liblzma.pc
    if CMAKE_INSTALL_LIBDIR or CMAKE_INSTALL_INCLUDEDIR contain an
    absolute path.
    
    Thanks to Eli Schwartz.

commit 7a366d93cfd74ce10201db400be8836199944e36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 18:33:08 2024 +0300

    Revert "CMake: Set only "prefix" as an absolute path in liblzma.pc"
    
    This reverts commit 5d1c649ba9eb7a5b9371252ebfbc2911dc774e69.
    
    While CMAKE_INSTALL_<dir> tend to be relative paths, they don't need
    to be. Thus the commit was broken. A fancier method is required.
    
    Thanks to Eli Schwartz for the bug report and explanation.

commit 30a2d5d51006301a3ddab5ef1f5ff0a9d74dce6f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 13:39:37 2024 +0300

    liblzma: CRC CLMUL: Omit is_arch_extension_supported() when not needed
    
    On E2K the function compiles only due to compiler emulation but the
    function is never used. It's cleaner to omit the function when it's
    not needed even though it's a "static inline" function.
    
    Thanks to Ilya Kurdyukov.

commit 54eaea5ea49bb8bca4286d4412f19ac73187489e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 16 13:21:34 2024 +0300

    liblzma: x86 CLMUL CRC: Rewrite
    
    It's faster with both tiny and large buffers and doesn't require
    disabling any sanitizers. With large buffers the extra speed is
    from folding four 16-byte chunks in parallel.
    
    The 32-bit x86 with MSVC reportedly still needs a workaround.
    Now the simpler "__asm mov ebx, ebx" trick is enough but it
    needs to be in lzma_crc64() instead of crc64_arch_optimized().
    Thanks to Iouri Kharon for testing and the fix.
    
    Thanks to Ilya Kurdyukov for testing the speed with aligned and
    unaligned buffers on a few x86 processors and on E2K v6.
    
    Thanks to Sam James for general feedback.
    
    Fixes: https://github.com/tukaani-project/xz/issues/112
    Fixes: https://github.com/tukaani-project/xz/issues/122

commit c0e7eaae8d6eef1e313c9d0da20ccf126ec61f38
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 14:44:04 2024 +0300

    sysdefs.h: Add alignas

commit 20014c261451381d5e2f58e63e7b1fbefd4df4bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 11 12:47:59 2024 +0300

    liblzma: Use a single macro to select CLMUL CRC to build
    
    This way it's clearer that two things cannot be selected
    at the same time.

commit d8fb0986171bd6a3066b236fc9a6b3d573c8e441
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 10 15:31:01 2024 +0300

    liblzma: CRC32 CLMUL: Refactor the constants and simplify
    
    By using modulus scaled constants, the final reduction can
    be simplified.

commit ef652ac391ff7e8cda656238dc5b5f83bc1554c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 10 15:12:48 2024 +0300

    liblzma: CRC64 CLMUL: Refactor the constants
    
    Now it refers to crc_clmul_consts_gen.c. vfold8 was renamed to mu_p
    and the p no longer has the lowest bit set (it makes no difference
    as the output bits it affects are ignored).

commit 9f5fc17e32bf5c7c6cfadf40c29a1dedb4cc03ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 10 14:45:44 2024 +0300

    liblzma: Add crc_clmul_consts_gen.c
    
    It's a standalone program that prints the required constants.
    It's won't be a part of the normal build of the package.

commit 71b147aab7fe4a60ed57b697d5bb490f099894be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 9 21:44:03 2024 +0300

    liblzma: Remove CRC_USE_GENERIC_FOR_SMALL_INPUTS
    
    It was already commented out.

commit f99a7be40645f86959a5b180dfae948dd165e07c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 9 21:03:39 2024 +0300

    liblzma: Remove crc_attr_no_sanitize_address
    
    It's not enough to silence the address sanitizer. Also memory and
    thread sanitizers would need to be silenced. They, at least currently,
    aren't smart enough to see that the extra bytes are discarded from
    the xmm registers by later instructions.
    
    Valgrind is smarter, possibly because this kind of code isn't weird
    to write in assembly. Agner Fog's optimizing_assembly.pdf even mentions
    this idea of doing an aligned read and then discarding the extra
    bytes. The sanitizers don't instrument assembly code but Valgrind
    checks all code.
    
    It's better to change the implementation to avoid the sanitization
    attributes which also look scary in the code. (Somehow they can look
    more scary than __asm__ which is implictly unsanitized.)
    
    See also:
    https://github.com/tukaani-project/xz/issues/112
    https://github.com/tukaani-project/xz/issues/122

commit ead4d151996f8a18bf9b07eb1e175c0a1590e562
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 10 15:37:49 2024 +0300

    Revert "Build: Temporarily disable CRC CLMUL to silence OSS Fuzz"
    
    This reverts commit 9f1a6d6f9a258886933a22239a5b81af34b28199.

commit 2178acf8a4d40a93e970cfcf9b807d5ef6c8da92
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 12 14:26:44 2024 +0300

    CMake: Prefer C11 with a fallback to C99
    
    There is no need to make a similar change in configure.ac.
    With Autoconf 2.72, the deprecated macro AC_PROG_CC_C99
    is an alias for AC_PROG_CC which prefers a C11 compiler.

commit c97e9c12fef4d1093ee2a75236742481361f50f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 12 14:20:21 2024 +0300

    Update THANKS

commit 89e9f12e03324b8a186e807b268f34f92d1b2f41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 11 11:15:49 2024 +0300

    Tests: Improve the CRC32 test
    
    A similar one was already there for CRC64 but nowadays also CRC32
    has a CLMUL implementation, so it's good to test it better too.

commit c7164b1927e3fe7cdba70ee4687e1a590a81043b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 11 22:42:26 2024 +0300

    xz: Fix white space

commit 0a32d2072c598de281058b26dc08920fbf0cd2a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 11 21:59:09 2024 +0300

    liblzma: Fix a typo in a comment
    
    Thanks to Sam James for spotting it.
    
    Fixes: f644473a211394447824ea00518d0a214ff3f7f2

commit afd9b4d282a10186808c3331dad4caf79c02d55f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 10 15:52:26 2024 +0300

    liblzma: Fix a comment indentation

commit 50e6bff274568c568930e15094da8217e7d47d28
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 9 22:09:12 2024 +0300

    liblzma: Fix white space

commit caea7844d3824755d053b4743c4913d73ac2db3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 14:25:29 2024 +0300

    tuklib: __STDC_VERSION__ in C23 is 202311

commit 04b23addf3733873667675df2439725f076c2f36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 7 15:47:20 2024 +0300

    tuklib_integer: Fix building on OpenBSD/sparc64 that uses GCC 4.2
    
    GCC 4.2 doesn't have __builtin_bswap16() and friends so tuklib_integer.h
    tries to use OS-specific byte swap methods instead. On OpenBSD those
    macros are swap16/32/64 instead of bswap16/32/64 like on other *BSDs
    and Darwin.
    
    An alternative to "#ifdef __OpenBSD__" could be "#ifdef swap16" as it
    is a macro. But since OpenBSD seems to be a special case under this
    special case of "*BSDs and Darwin", checking for __OpenBSD__ seems
    the more conservative choice now.
    
    Thanks to Christian Weisgerber and Brad Smith who both submitted
    the same patch a few hours apart.
    
    Co-authored-by: Christian Weisgerber <naddy@mips.inka.de>
    Co-authored-by: Brad Smith <brad@comstyle.com>
    Closes: https://github.com/tukaani-project/xz/pull/126

commit dc03f6290f5b9bd3d50c7e12e58dee870889d599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 7 15:06:59 2024 +0300

    liblzma: Add ARM64 CRC32 instruction support detection on OpenBSD
    
    The C code is from Christian Weisgerber, I merely reordered the OSes.
    Then I added the build system checks without testing them.
    
    Also thanks to Brad Smith who submitted a similar patch on GitHub
    a few hours after Christian had sent his via email.
    
    Co-authored-by: Christian Weisgerber <naddy@mips.inka.de>
    Closes: https://github.com/tukaani-project/xz/pull/125

commit f5c2ae58ec68c665e62c790b842657afcb31474c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 5 13:55:43 2024 +0300

    Update THANKS

commit e5491dfab9c54dc7078a8d3d07fabb91d6e06418
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 5 13:42:47 2024 +0300

    CMake: Include the "alpha" or "beta" suffix in PACKAGE_VERSION
    
    This way the version string gets into xzgrep and other scripts
    in full and also into liblzma.pc.
    
    For the project() command, a suffixless string is required though.

commit 1d3c61575fda0be6b2d50c9e32a343349d5cd5c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 5 13:30:28 2024 +0300

    CMake: Fix wrong version variable
    
    liblzma_VERSION has never existed in the repository. xz_VERSION from
    the project() command was used for liblzma SOVERSION so use xz_VERSION
    here too.
    
    The wrong variable did no harm in practice as PROJECT_VERSION
    was used as the fallback. It has the same value as xz_VERSION.
    
    Fixes: 7e3493d40eac0c3fa3d5124097745a70e15c41f6

commit 5d1c649ba9eb7a5b9371252ebfbc2911dc774e69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 5 12:59:59 2024 +0300

    CMake: Set only "prefix" as an absolute path in liblzma.pc
    
    CMake provides variables that are relative to CMAKE_INSTALL_PREFIX
    so use them instead of repeating the full path.

commit e0d6d05ce0d464e966c0669bbf869202a43cc2f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 4 23:59:29 2024 +0300

    CMake: Fix liblzma filename in Windows environments
    
    This is a mess because liblzma DLL outside Cygwin and MSYS2
    is liblzma.dll instead of lzma.dll to avoid a conflict with
    lzma.dll from LZMA SDK.
    
    On Cygwin the name was "liblzma-5.dll" while "cyglzma-5.dll"
    would have been correct (and match what Libtool produces).
    MSYS2 likely was broken too as it uses the "msys-" prefix.
    
    This change has no effect with MinGW-w64 because with that
    the "lib" prefix was correct already.
    
    With MSVC builds this is a small breaking change that requires developers
    to adjust the library name when linking against liblzma. The liblzma.dll
    name is kept as is but the import library and static library are now
    lzma.lib instead of liblzma.lib. This is helpful when using pkgconf
    because "pkgconf --msvc-syntax --libs liblzma" outputs "lzma.lib"
    (it's converted from "-llzma" in liblzma.pc). It would be easy to
    keep the liblzma.lib naming but the pkgconf compatibility seems worth
    it in the long run. The lzma.lib name is compatible with MinGW-w64
    too as -llzma will find also lzma.lib.
    
    vcpkg had been patching CMakeLists.txt this way since 2022 but I
    learned this only recently. The reasoning for the patch makes sense,
    and while this is a small breaking change with MSVC, it seems like
    a decent compromise as it keeps the DLL name the same.
    
    2022 patch in vcpkg: https://github.com/microsoft/vcpkg/blob/0707a17ecf1466d64cf1a3c1ee18c8ff02aadb2d/ports/liblzma/win_output_name.patch
    See the discussion: https://github.com/microsoft/vcpkg/pull/39024
    
    Thanks to Vincent Torri for confirming the naming issue on Cygwin.

commit e7a42cda7c827e016619e8cab15e2faf5d4181ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 16:55:03 2024 +0300

    Fix version.sh compatiblity with Solaris
    
    The ancient /bin/tr on Solaris doesn't support '\n'.
    With /usr/xpg4/bin/tr it works but it might not be in PATH.
    
    Another problem was that sed was given input that didn't have a newline
    at the end. Text files must end with a newline to be portable.
    
    Fix both problems:
    
      - Handle multiline input within sed itself to avoid one tr invocation.
        The default sed even on Solaris does understand \n.
    
      - Use octals in tr -d. \012 works for ASCII "line feed", it's even
        used as an example in the Solaris man page. But we must strip
        also ASCII "carriage return" \015 and EBCDIC "next line" \025.
        The EBCDIC case got handled with \n previously. Stripping \012
        and \015 on EBCDIC system won't matter as those control chars
        won't be present in the string in the first place.
    
    An awk-based solution could be an alternative but it might need
    special casing on Solaris to used nawk instead of awk. The changes
    in this commit are smaller and should have a smaller risk for
    regressions. It's also possible that version.sh will be dropped
    entirely at some point.

commit a61c9ab4751f2710dcd5459c7d74bbf20781f0f9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 17:07:11 2024 +0300

    CI: Don't require po4a on Solaris

commit 5229bdf5335ce18ed54beb7e646e39927663be86
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 15:08:15 2024 +0300

    CI: Use set -e on Solaris too

commit afa938e429c1ce07d26d02999352fb014b62ff3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 17:44:50 2024 +0300

    CMake: Install liblzma.pc even with MSVC
    
    I had misunderstood that it wouldn't be useful with MSVC.
    vcpkg had been installing liblzma.pc with custom rules since 2020,
    years before liblzma.pc support was added to CMakeLists.txt.
    
    See:
    https://github.com/microsoft/vcpkg/blob/eb895b95aac6fd7485373702f29f508c42a180a0/ports/liblzma/portfile.cmake
    https://github.com/microsoft/vcpkg/pull/39024#issuecomment-2145064670

commit bb90e1f66d9beb490c4c99763e79519045968710
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 11:44:28 2024 +0300

    license-check.sh: Fix reporting of unclear license info
    
    The main feature was broken because an old variable name hadn't
    been updated to match the rest of the script.

commit b8d134e61ede9f4a296226d97f5c20721fb4e8e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 31 21:36:26 2024 +0300

    Update THANKS

commit 162587d3fb3fcedc6eee61eda3ccaaf60c80f0de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 17:47:13 2024 +0300

    Translations: Run po4a/update-po
    
    Now the files are in the new formatting without source file
    line numbers. Future updates should keep the diffs much smaller.

commit 50cd8ed002473c5cd53980e70a53e5e6ad646ffe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 17:44:53 2024 +0300

    Translations: Run "make -C po update-po"
    
    In the past this wasn't done before releases; the Git repository
    just contained the files from the Translation Project. But this
    way it is clearer when comparing release tarballs against the
    Git repository. In future releases this might no longer be necessary
    within a stable branch as the .po files won't change so easily anymore
    when creating a tarball.

commit 16dbd865c8833462e1604a1e13f7effe55bb3fe6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 18:03:04 2024 +0300

    Add NEWS for 5.6.2

commit a0eeb5f9369c43508610dcf00140edb8e2be92a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 18:03:04 2024 +0300

    Add NEWS for 5.4.7

commit 9b476fb93a9672f2e70b56e3e9c7e9cfedd6c162
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 18:03:04 2024 +0300

    Add NEWS for 5.2.13

commit 9284f1aea31f0eb23e2ea72f7218b271e2234762
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 29 16:33:24 2024 +0300

    Build: Update po/*.po files only when needed
    
    When po/xz.pot doesn't exist, running "make" or "make dist" will
    create it. Then the .po files will be updated but only if they
    actually would change more than the POT-Creation-Date line.
    Then the .gmo files would be generated from the .po files.
    This is the case before and after this commit.
    
    However, "make dist" and thus "make mydist" did a forced update
    to the files, updating them even if the only change was the
    POT-Creation-Date line. This had pros and cons: It made it clear
    that the .po file really is in sync with the recent strings in
    the package. On the other hand, it added noise in form of changed
    files in the source tree and distribution tarballs. It can be
    ignored with something like "diff -I'^"POT-Creation-Date: '" but
    it's still a minor annoyance *if* there's not enough value in
    having the most recent timestamp.
    
    Setting DIST_DEPENDS_ON_UPDATE_PO = no means that such forced
    update won't happen in "make dist" anymore. However, the "mydist"
    target will use xz.pot-update target which is the same target that
    is run when xz.pot doesn't exist at all yet. Thus "mydist" will
    ensure that the translations are up to date, without noise from
    changes that would affect only the POT-Creation-Date line.
    
    Note that po4a always uses msgmerge with --update, so POT-Creation-Date
    in the man page translations is never the only change in .po files.
    In that sense this commit makes the message translations behave more
    similarly to the man page translations.
    
    Distribution tarballs will still have non-reproducible POT-Creation-Date
    in po/xz.pot and po4a/xz-man.pot but those are just two files. Even they
    could be made reproducible from a Git timestamp if desired.

commit 4beba1cd62d7f8f7a6f1e899b68292d94c53b599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 21:10:33 2024 +0300

    po4a/update-po: Disable wrapping in .pot and .po files
    
    The .po files from the Translation Project come with unwrapped
    strings so this matches it.
    
    This may reduce the noise in diffs too. When the beginning of
    a paragraph had changed, the rest of the lines got rewrapped
    in msgsid. Now it's just one very long line that changes when
    a paragraph has been edited.
    
    The --add-location=file option was removed as redundant. The line
    numbers don't exist in the .pot file due to --porefs file and thus
    they cannot get copied to the .po files either.

commit b14c130a58a649f9a73392eeb122cb252327c569
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 18:36:53 2024 +0300

    Update contact info in README

commit 75f5f2e014b0ee646963f36bc6a9c840fb272353
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 13:25:07 2024 +0300

    Translations: Use --package-name=xz-man with po4a
    
    This is to match reality. See the added comment.

commit eb217d016cfbbba1babc19a61095b3ea25898af6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 13:03:40 2024 +0300

    Translations: Omit --package-name from po/Makevars
    
    This is closer to the reality in the po/*.po files.

commit d28a4b2520adeeaa1b9e921bf42c7c1f36552c06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 27 17:45:51 2024 +0300

    license-check.sh: Use '--' with slightly untrusted filenames
    
    Names from git ls-files should be safe but if one runs it on
    a tree without the .git dir and there are extra files, it's
    safer to have the end of arguments marked with '--'.

commit fda0ec862a34094cf23fc25d0e0a95858c3a3ab5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 27 17:41:37 2024 +0300

    license-check.sh: Use xargs -0 instead of -d
    
    Neither are in POSIX but -0 is much more portable in practice.
    
    Despite the old comment, the grep usage should be portable already.

commit 9114267038deaecf4832a5cacb5acbe6591ac839
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 01:17:45 2024 +0300

    Translations: Omit man page line numbers from .pot and .po files

commit 093490b58271e9424ce38a7b1b38bcf61b9c86c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 01:06:30 2024 +0300

    Translations: Use the xgettext option --add-location=file

commit fccebe2b4fd513488fc920e4dac32562ed3c7637
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 28 00:43:53 2024 +0300

    Translations: Use the msgmerge option --add-location=file
    
    This way the PO file diffs are less noisy but the locations of the
    strings are still present at file level, just without line numbers.
    
    The option is available since gettext 0.19 (2014).
    configure.ac requires 0.19.6.

commit f361d9ae85707a87eb28db400eb7229cec103d58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 27 12:22:08 2024 +0300

    Build: Use $(SHELL) instead of sh to run scripts in Makefile.am

commit a26dece34793a09aac2476f954d162d03e9cf62b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 23 17:25:13 2024 +0300

    Translations: Change the home page URLs in man page translations
    
    Since the source strings have changed, these would get marked as
    fuzzy and the original string would be used instead. The original
    and translated strings are identical in this case so it wouldn't
    matter. But patching the translations helps still because then
    po4a will show the correct translation percentage.

commit 24387c234b4eed1ef9a7eaa107391740b4095568
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 23 15:15:18 2024 +0300

    CMake: Add manual support for 32-bit x86 assembly files
    
    One has to pass -DENABLE_X86_ASM=ON to cmake to enable the
    CRC assembly code. Autodetection isn't done. Looking at
    CMAKE_SYSTEM_PROCESSOR might not work as it comes from uname
    unless cross-compilation is done using a CMake toolchain file.
    
    On top of this, if the code is run on modern processors that support
    the CLMUL instruction, then the C code should be faster (but then
    one should also be using a x86-64 build if possible).

commit 0fb3c9c3f684f5a25bd425ed079a20a79f0c969d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 23 14:26:45 2024 +0300

    CMake: Rename USE_DOXYGEN to ENABLE_DOXYGEN
    
    It's more consistent with the other option() uses.

commit 6bbec3bda02bf87d24fa095074456e723589921f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 22 15:21:53 2024 +0300

    Mention license-check.sh in COPYING

commit 62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 22 15:21:53 2024 +0300

    Use more confident language in COPYING

commit a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 22 15:21:53 2024 +0300

    Build: Run license-check.sh in "mydist" and "dist-hook"
    
    In mydist the point is to check using the file list from the Git
    repository. In dist-hook it is to check that the TARBALL_IGNORE
    patterns work when the .git dir or the "git" command aren't available.
    
    Refuse to create a distribution tarball if license issues are found.

commit f3434ecfcb45154508752986f4fc670b8f0555dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 22 15:21:53 2024 +0300

    Add build-aux/license-check.sh
    
    This helps in spotting files that lack SPDX license identifier
    and which haven't been explicitly white listed either. The script
    requires the .git directory to be present as only the files that
    are in the Git repository are checked.
    
    XZ Utils isn't FSFE REUSE compliant for now.

commit 9ae2ebc1e504a1814b0788de95fb5c58c0328dde
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 29 17:16:38 2024 +0300

    Add SPDX license identifiers to files under tests/ossfuzz

commit 9000d70eb9815bd7f43ffddc1c3316c507aa0e05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 29 17:16:06 2024 +0300

    Add SPDX license identifier to .codespellrc

commit 903c16fcfa5bfad0cdb2a7383d941243bcb12e76
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 22 15:12:09 2024 +0300

    Move entries po4a/.gitignore to the top level .gitignore
    
    The po4a directory is in EXTRA_DIST and thus all files there
    are included in the package. .gitignore doesn't belong in the
    package so keep that file out of the po4a directory.

commit 56f1d5ed68e84ba5dfa328ea2291b8f46c995125
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    Tests: Make the config.h grep patterns Meson compatible
    
    Now the test scripts detect both
    
        #define HAVE_DECODER_ARM
        #define HAVE_DECODER_ARM 1
    
    as support for the ARM filter without confusing it with these:
    
        #define HAVE_DECODER_ARM64
        #define HAVE_DECODER_ARM64 1
    
    Previously only the ones ending with " 1" were accepted for
    the macros where this kind of confusion was possible.
    
    This should help with Meson support because Meson's built-in
    features produce config.h entries that are either
    
        #define FOO 1
        #define FOO 0
    
    or:
    
        #define FOO
        #undef FOO
    
    The former method has a benefit that one can use "#if FOO" and -Wundef
    will catch if a #define is missing (for example, it helps catching
    typos). But XZ Utils has to use the latter since it has been
    convenient with Autoconf's default behavior.[*] While it's easy to
    emulate the Autoconf style (#define FOO 1 vs. no #define at all)
    in Meson, it results in clumsy code. Thus it's better to change
    the few places in the tests where this difference matters.
    
    [*] While most checks in Autoconf default to the second style above,
        a few things use the first style (like AC_CHECK_DECLS). The mix
        of both styles is the most confusing as one has to remember which
        macro needs #ifdef and which #if. Currently HAVE_VISIBILITY is
        only such config.h entry that is 1 or 0. It comes unmodified
        from Gnulib's visibility.m4.

commit 9d997d6f9d4f042412e45c7b7a23a14ad2e4f9aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    CMake: Add comments

commit d35368b33e54bad2f566df99fac29ffea38e34de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    CMake: Remove the note that some tests aren't run
    
    They are now in the common build configurations.

commit dc232d584619b2819a9c52d6ad5d8b5d56b392ba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    CMake: Add support for test_files.sh

commit a7e9230af9d1f87f474fe38886eb977d4149dc9b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    Tests: Make test_files.sh more flexible
    
    Add a new optional argument to specify the directory of the xz and
    xzdec executables.
    
    If ../config.h doesn't exist, assume that all encoders and decoders
    are available.

commit b40e6efbb48d740b9b5b303e59e344801cbb5bd8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    CMake: Add support for test_compress.sh tests

commit ac3222d2cb1ff3a15eb6d58f9ea9bc78e8bc3bb2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    Tests: Make test_compress.sh more flexible
    
    Add a new optional second argument: directory of the xz and xzdec
    executables. This is need with the CMake build where the binaries
    end up in the top-level build directory.
    
    If ../config.h doesn't exist, assume that all encoders and decoders
    are available. This will make this script usable from CMake in the
    most common build configuration.
    
    NOTE: Since the existence of ../config.h is checked, the working
    directory of the test script must be a subdir in the build tree!
    Otherwise ../config.h would look outside the build tree.
    
    Use the default check type instead of forcing CRC32 or CRC64.
    Now the script doesn't need to check if CRC64 is available.

commit 006040b29c83104403621e950ada0c8956c56b3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    CMake: Prepare to support the test_*.sh tests
    
    This is a bit hacky since the scripts grep config.h to know which
    features were built but the CMake build doesn't create config.h.
    So instead those test scripts will be run only when all relevant
    features have been enabled.

commit 6167607a6ea72fb74eefb943c4566e3cab528cd2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 20 16:55:00 2024 +0300

    Tests: test_suffix.sh: Add a comment

commit 4e9023857d287f624562156b60dc23d2b64c0f10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 18 00:34:07 2024 +0300

    Fix typos
    
    Thanks to xx on #tukaani.

commit b14d08fbbc254485ace9ccfe7908674f608a62ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 18 00:23:52 2024 +0300

    liblzma: Fix white space
    
    Thanks to xx on #tukaani.

commit 9f1a6d6f9a258886933a22239a5b81af34b28199
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 15 23:14:17 2024 +0300

    Build: Temporarily disable CRC CLMUL to silence OSS Fuzz
    
    The code makes aligned 16-byte reads which may read up to 15 bytes
    before the beginning or past the end of the buffer if the buffer
    is misaligned. The unneeded bytes are then ignored. It cannot cross
    page boundaries and thus cannot cause access violations.
    
    This inherently trips address sanitizer which was already disabled
    with __attribute__((__no_sanitize_address__)). However, it also
    trips memory sanitizer if the extra bytes are uninitialized because
    memory sanitizer doesn't see that those bytes then get ignored by
    byte shuffling in the xmm registers.
    
    The plan is to change the code so that all sanitizers pass but it's
    not finished yet (performance shouldn't get worse) so as a temporary
    measure to keep OSS Fuzz happy, the CLMUL CRC is now disabled even
    though I think think the code is fine to use (and easy enough to review
    the memory accesses in it too).

commit 142e670a413a7bce1a2647f1cf1f33f8ee2dbe88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 17:15:04 2024 +0300

    xz: Document the static function get_chains_memusage()

commit 78e984399a64bfee5d11e7308e0bdbc1006db2ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 17:07:22 2024 +0300

    xz: Rename filters_memusage_max() to get_chains_memusage()

commit 54c3db0a83d3e67d89aba92a0957f2dce9b111a7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 17:04:05 2024 +0300

    xz: Rename filter_memusages to chains_memusages

commit d9e1ae79ec90d6a7eafeaceaf0ece4f0c83d4417
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 22:26:30 2024 +0300

    xz: Simplify the memory usage scaling code
    
    This is closer to what it was before the --filtersX support was added,
    just extended to support for scaling all filter chains. The method
    before this commit was an extended version of the original too but
    it was done in a more complex way for no clear reason. In case of
    an error, the complex version printed fewer informative messages
    (a good thing) but it's not a sigificant benefit.
    
    In the limit is too low even for single-threaded mode, the required
    amount of memory is now reported like in 5.4.x instead of like in
    5.5.1alpha - 5.6.1 which showed the original non-scaled usage. It
    had been a FIXME in the old code but it's not clear what message
    makes the most sense.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

commit 0ee56983d198b776878432703de664049b1be32e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 12:14:00 2024 +0300

    xz: Edit comments

commit ec82a49c3553f7206104582dbfb8b64fa433b491
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 12:03:51 2024 +0300

    xz: Rename chain_idx to chain_num

commit a731a6993c34bbbd55abaf9c166718682b1da24f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 22:29:11 2024 +0300

    xz: Edit coding style

commit 32eb176b89243fce3112347fe43a8ad14a9fd2be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 22:16:05 2024 +0300

    xz: Edit comments
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

commit b90339f4daa510d2b1b8c550f855a99667f1d004
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:57:49 2024 +0300

    xz: Fix grammar in a comment
    
    Fixes: cb3111e3ed84152912b5138d690c8d9f00c6ef02

commit 4c0bdaf13d651b22ba13bd93f8379724d6ccdc13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:46:56 2024 +0300

    xz: Rename filter_memusages to encoder_memusages

commit b54aa023e0ec291b06e976e5f094ab0549e7b09b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:42:05 2024 +0300

    xz: Edit coding style

commit 49f67d3d3f42b640a7dfc4ca04c8934f658e10ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:31:02 2024 +0300

    xz: Rename filters_index to chain_num
    
    The reason is the same as in bd0782c1f13e52cd0fd8415208e30e47004a4c68.

commit ff9e8b3d069ecfa52ec43dcdb198542d1692a492
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:22:43 2024 +0300

    xz: Replace a few uint32_t with "unsigned" to reduce the number of casts
    
    These hold only tiny values.

commit b5e6c1113b1ba02c282bd9163eccdb521c937a78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 21:10:45 2024 +0300

    xz: Rename filters_used_mask to chains_used_mask
    
    The reason is the same as in bd0782c1f13e52cd0fd8415208e30e47004a4c68.

commit 32500dfaadae2ea36fda2e17b49ae7d9ac1acf52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 17:14:43 2024 +0300

    xz: Move the setting of "check" in coder_set_compression_settings()
    
    It's more logical to do it in the beginning instead of in the middle
    of the filter chain handling.
    
    Fixes: d6af7f347077b22403133239592e478931307759

commit ad146b1f42bbb678175a503a45ce525e779f9b8b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 17:09:17 2024 +0300

    xz: Rename "filters" to "chains"
    
    The convention is that
    
        lzma_filter filters[LZMA_FILTERS_MAX + 1];
    
    contains the filters of a single filter chain.
    It was so here as well before the commit
    d6af7f347077b22403133239592e478931307759.
    It changes "filters" to a ten-element array of filter chains.
    It's clearer to call this array-of-arrays "chains".
    
    This also renames "filter_idx" to "chain_idx" which is used
    as an index as in chains[chain_idx].

commit 5a4ae4e4d0105404184e9a82ee08f94e1b7783e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 16:56:15 2024 +0300

    xz: Clean up a comment

commit 2de80494ed9a4dc7db395a32a5efb770ce769804
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 16:52:09 2024 +0300

    xz: Add clarifying assertions

commit 1eaad004bf7748976324672db028e34f42802e61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 10 20:23:33 2024 +0300

    xz: Add a clarifying assertion
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

commit 605094329b986244833c967c04963cacc41a868d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 16:47:17 2024 +0300

    xz: Clarify a comment

commit 8fac2577f2dbb9491afd8500f60d004c9071df3b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 16:28:25 2024 +0300

    xz: Use the info collected in parse_block_list()
    
    This is slightly simpler and it avoids looping through
    the opt_block_list array.

commit 81d350dab864b985b740742772f3b132d4c52914
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 15:48:45 2024 +0300

    xz: Remember the filter chains and the largest Block in parse_block_list()

commit 46ab56968f7dfdac187710a1223659d832fa1565
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 15:38:48 2024 +0300

    xz: Update a comment and initialization of filters_used_mask

commit e89293a0baeb8663707c6b4a74fbb310ec698a8f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 15:08:10 2024 +0300

    xz: parse_block_list: Edit integer type casting

commit 87011e40c168255cd2edea129ee68c901770603b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 12 14:51:37 2024 +0300

    xz: Make filter_memusages a local variable

commit 347b412a9374e0456bef9da0d7d79174c0b6f1a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 10 20:33:08 2024 +0300

    xz: Remove unused code and simplify
    
    opt_mode == MODE_COMPRESS isn't possible when HAVE_ENCODERS isn't
    defined. Thus, when *encoding*, the message about *decoder* memory
    usage is possible to show only when both encoder and decoder have
    been built.
    
    Since the message is shown only at V_DEBUG, skip the memusage
    calculation if verbosity level isn't high enough.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

commit 31358c057c9de9d6aba96bae112b2d17942de7cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 10 20:22:58 2024 +0300

    xz: Fix integer type from uint64_t to uint32_t
    
    lzma_options_lzma.dict_size is uint32_t so use it here too.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

commit 3f71e0f3a118e1012526f94fd640a626d30cb599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 8 21:40:07 2024 +0300

    debug/translation.bash: Remove an outdated test command
    
    Since 5.3.5beta, "xz --lzma2=mf=bt4,nice=2" works even though bt4 needs
    at least nice=4. It is rounded up internally by liblzma when needed.
    
    Fixes: 5cd9f0df78cc4f8a7807bf6104adea13034fbb45

commit b05a516830095a0e1937aeb31c937fb0400408b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 7 20:41:28 2024 +0300

    Fix the date of NEWS for 5.4.5

commit 6d336aeb97b69c496ddc626af403f6f21c753658
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 7 16:21:15 2024 +0300

    Build: Update visibility.m4 from Gnulib
    
    This fixes the syntax of the "serial" line and renames
    a temporary variable.

commit ab51e8ee610e2a893906859848f93d5cb0d5ba83
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 7 15:05:21 2024 +0300

    po4a/update-po: Delete the *.po.authors files
    
    These are temporary files that are needed only when running po4a.
    The top-level Makefile.am puts the whole po4a directory into
    distribution tarball (it's simpler) so deleting these temporary
    files is needed to prevent them from getting into tarballs.

commit e4780244a17420cc95d5498cd6e02ad10eac6e5f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 7 13:12:17 2024 +0300

    xz: Edit comments and coding style

commit fe4d8b0c80eaeca3381be302eeb89aba871a7e7c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 23:08:22 2024 +0300

    xz: Omit an incorrect comment
    
    It likely was a leftover from a development version of the code.
    
    Fixes: 183819bfd9efac8c184d9bf123325719b7eee30f

commit 9bef5b8d17dd5e009d6a6b2becc2dc535da53937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 23:04:31 2024 +0300

    xz: Add braces to a for-statement and to an if-statement
    
    No functional changes.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a
    Fixes: 479fd58d60622331fcbe48fddf756927b9f80d9a

commit de06b9f0c0a3f72569829ecadbc9c0a3ef099f57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 23:00:09 2024 +0300

    liblzma: Omit an unneeded array from the x86 filter
    
    Fixes: 6aa2a6deeba04808a0fe4461396e7fb70277f3d4

commit 7da488cb933fdf51cfc14cb5810beb0766224380
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 22:56:31 2024 +0300

    CMake: Add test_suffix.sh to the tests

commit a805594ed0b4cbf7b81aa28ff46a8ab3c83c6876
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 22:55:54 2024 +0300

    Test: Add CMake support to test_suffix.sh
    
    It needs to find the xz executable from a different directory
    and work without config.h.

commit 50e19489387774bab3c4a988397d0d9c7a142a46
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 6 20:45:34 2024 +0300

    Update INSTALL about MINIX 3
    
    The latest stable is 3.3.0 and it's from 2014.
    Don't mention the older versions in INSTALL.
    3.3.0 ships with Clang already.
    
    Testing with 3.4.0beta6 shows that tuklib_physmem
    works too so omit comments about that from INSTALL.
    Visibility warnigns weren't a problem either.
    
    Thus it's enough to mention the need for --disable-threads
    as configure doesn't autodetect the lack of pthreads.

commit 68d18aea1422a2b86b98b71d0b019233d84e01b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 2 23:00:16 2024 +0300

    Windows: Remove the "doc/api" line from README-Windows.txt
    
    Fixes: 252aa1d67bc015eeba462803ab72edeb7744d864

commit 8ede961374613aa302a13571d662cfaea1cf91f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 2 22:59:04 2024 +0300

    Build: Don't copy doc/api from source tree to distribution tarball
    
    It was copied if it existed. This was intentional when autogen.sh
    still built liblzma API docs with Doxygen.
    
    Fixes: d3a77ebc04bf1db8d52de2d9b0f07877bc4fd139

commit 905bfc74fe2670fd9c39014803017ab53d325401
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 30 14:37:11 2024 +0300

    Add .gitattributes to clean up git-archive output

commit 3334c71d3d4294a4f6569df3ba9bcf2443dfa501
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 12:11:09 2024 +0300

    xzdec: Support Landlock ABI version 4
    
    This was added to xz in 02e3505991233901575b7eabc06b2c6c62a96899
    but I forgot to do the same in xzdec.
    
    The Landlock sandbox in xzdec could be stricter as now it's
    active only for the last file being decompressed. In xz,
    read-only sandbox is used for multi-file case. On the other hand,
    xz doesn't go to the strictest mode when processing the last file
    when more than one file was specified; xzdec does.

commit 278563ef8f2b8d98d7f2c85e1a64ec1bc21d26d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 30 22:22:45 2024 +0300

    liblzma: Fix incorrect function type error from sanitizer
    
    Clang 17 with -fsanitize=address,undefined:
    
        src/liblzma/common/filter_common.c:366:8: runtime error:
            call to function encoder_find through pointer to incorrect
            function type 'const lzma_filter_coder *(*)(unsigned long)'
        src/liblzma/common/filter_encoder.c:187: note:
            encoder_find defined here
    
    Use a wrapper function to get the correct type neatly.
    This reduces the number of casts needed too.
    
    This issue could be a problem with control flow integrity (CFI)
    methods that check the function type on indirect function calls.
    
    Fixes: 3b34851de1eaf358cf9268922fa0eeed8278d680

commit 77c8f60547decefca8f2d0c905d9c708c38ee8ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 30 21:41:11 2024 +0300

    xz: Avoid arithmetic on a null pointer
    
    It's undefined behavior. The result wasn't ever used as it occurred
    in the last iteration of a loop.
    
    Clang 17 with -fsanitize=address,undefined:
    
        $ src/xz/xz --block-list=123
        src/xz/args.c:164:12: runtime error: applying non-zero offset 1
            to null pointer
    
    Fixes: 88ccf47205d7f3aa314d358c72ef214f10f68b43
    Co-authored-by: Sam James <sam@gentoo.org>

commit 64503cc2b76a388ced4ec5f68234a07f0dcddcd5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 20:42:00 2024 +0300

    CMake: Support building liblzma API docs using Doxygen
    
    This is disabled by default to match the default in Autotools.
    Use -DUSE_DOXYGEN=ON to enable Doxygen usage.
    
    This uses the update-doxygen script, thus this is under if(UNIX)
    although Doxygen itself can run on Windows too.

commit 0a7f5a80d8532a1d8cfa0a902c9d1ad7651eca37
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 20 23:36:39 2024 +0300

    CMake: List API headers in LIBLZMA_API_HEADERS variable
    
    This way the same list will be usable in more than one location.

commit 541406bee3f09e9813103c6406b10fc6ab2e0d30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 15:16:42 2024 +0300

    PACKAGERS: Document the optional Doxygen usage
    
    Also add a note that packagers should check the licensing
    of the Doxygen output.

commit e21efdf96f39378fe417479f89e97046680406f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 17:47:09 2024 +0300

    Build: Add --enable-doxygen to generate and install API docs
    
    It requires Doxygen. This option is disabled by default.

commit 0ece09a575d7e542bda8825808ddd6cf7de8cc4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 15:15:17 2024 +0300

    Doxygen: update-doxygen: Support out-of-tree builds
    
    Also, now $0 is used to refer to the script itself.

commit 2c519f641f266fd897edf680827d9c905f411440
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 28 21:08:00 2024 +0300

    Doxygen: Simplify Doxyfile and add SPDX license identifier
    
    This omits all comments and a few non-default options that weren't
    needed. Now it contains no copyrighted content from Doxygen itself.

commit bdba39a57530d11b88440df8024002be3d09e4a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 15:14:02 2024 +0300

    Doxygen: Don't strip JavaScript anymore
    
    The stripping method worked well with Doxygen 1.8 and 1.9 but
    it doesn't work with Doxygen 1.10 anymore. Since we won't ship
    pre-generated liblzma API docs anymore, the extra bloat and
    extra license info of the JavaScript files won't affect the
    upstream source package anymore.

commit d3a77ebc04bf1db8d52de2d9b0f07877bc4fd139
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 17:26:41 2024 +0300

    Build: Remove old Doxygen rules from top-level Makefile.am

commit fd7faa4c338a42a6a40e854b837d285ae2e8c609
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 15:10:06 2024 +0300

    Update COPYING to match the autogen.sh and mydist changes

commit b2bc55d8a0a9f2f59bfd4302067300e650f6baa3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 17:23:43 2024 +0300

    Build: Don't run update-doxygen as part of "make mydist"

commit e9be74f5b129fe8a5388d588e68b1b7f5168a310
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 15:09:48 2024 +0300

    autogen.sh: Don't generated Doxygen docs anymore

commit 252aa1d67bc015eeba462803ab72edeb7744d864
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 17:41:36 2024 +0300

    windows/build.bash: Omit Doxygen docs from the package
    
    They will be omitted from the source tarball and I don't want
    to make Doxygen a dependency of build.bash.

commit 634095364d87444d62d8ec54c134c0cd4705f5d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 14:14:47 2024 +0300

    README: Don't mention PDF man pages anymore

commit dc684bf76ea23574ee9d88382057381e04e6089a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 14:10:39 2024 +0300

    Build: Omit PDF man pages from the package
    
    pdf-local rule was added to create the PDFs still with "make pdf".
    The install rules are missing but that likely doesn't matter at all.

commit e3531ab4125cbd5c01ebd3200791350960547189
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 13:54:39 2024 +0300

    windows/build.bash: Don't copy PDF man pages to the package

commit 710a4573ef2cbd19c66318c3b2d1388e418e26c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 28 01:34:50 2024 +0300

    Tests: test_index: Fix failures when features are disabled
    
    Fixes: cd88423e76d54eb72aea037364f3ebb21f122503

commit aaff75c3486c4489ce88b0efb36b41cf138af7c3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 20 17:09:11 2024 +0300

    CMake: Keep the build working if the "tests" directory is missing
    
    This moves the tests section as is from CMakeLists.txt into
    tests/tests.cmake. CMakeLists.txt now includes tests/tests.cmake
    if the latter file exists.
    
    Now it's possible to delete the whole "tests" directory and
    building with CMake will still work normally, just without
    the tests. This way the tests are readily available for those
    who want them, and those who won't run the tests anyway have
    a straightforward way to ensure that nothing from the "tests"
    directory can affect the build process.

commit a5f2aa5618fe9183706c9c514c3067985f6c338b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 20 13:12:50 2024 +0300

    Tests: Remove x86 and SPARC BCJ tests
    
    These are very old but the exact test file isn't easy to reproduce
    as it was compiled from a short C program (bcj_test.c) long ago.
    These tests weren't very good anyway, just a little better than nothing.

commit d879686469c9c4bf2a7c0bb6420ebe4530fc8f07
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 18:30:40 2024 +0300

    Tests: test_index: Edit a misleading test

commit 612005bbdb0dea9dc09e9e2e9cc16a15c1480acd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 16:46:01 2024 +0300

    Tests: test_index: Use minimal values to test integer overflow

commit 4ad88b2544c2aaf8de8f38af54587098cbe66c1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 15:13:39 2024 +0300

    Tests: test_index: Test lzma_index_buffer_decode() more

commit 575b11b0d291e66c5fce31ce7a72f11436d57c83
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 15:08:29 2024 +0300

    Tests: test_index: Test that *i = NULL is done on LZMA_PROG_ERROR
    
    On LZMA_DATA_ERROR from lzma_index_buffer_decode(), *i = NULL was
    already done but this adds a test for that case too.

commit 2c970debdb285823f01f75e875561d893345ac2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 15:01:25 2024 +0300

    Tests: test_index: Test lzma_index_buffer_encode() with empty output buf

commit cd88423e76d54eb72aea037364f3ebb21f122503
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:59:55 2024 +0300

    Tests: test_index: Replace if-statements with tuktest assertions

commit 7f865577a6224fbbb5f5ca52574b62ea8ac9bf51
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:56:16 2024 +0300

    Tests: test_index: Make it clear that my_alloc() has no integer overflows
    
    liblzma guarantees that the product of the allocation size arguments
    will fit in size_t.
    
    Putting the pre-increment in the if-statement was clearly wrong
    although in practice it didn't matter here as the function is
    called only a couple of times.

commit 12313a3b6596cdcf012e180597f84d231f8730d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:51:52 2024 +0300

    Tests: test_index: Verify also iter.block.number_in_stream

commit ad2654010d9d641ce1601beeff00630027e6bcd4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:51:06 2024 +0300

    Tests: test_index: Check cases that aren't a multiple of 4 bytes

commit 2524fcf2b68b662035437cee8edbe80067c0c240
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:40:25 2024 +0300

    Tests: test_index: Edit comments and white space

commit 71eed2520e2eecae89bade9dceea16e56cfa2ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 14:33:38 2024 +0300

    liblzma: index_decoder: Fix missing initializations on LZMA_PROG_ERROR
    
    If the arguments to lzma_index_decoder() or lzma_index_buffer_decode()
    were such that LZMA_PROG_ERROR was returned, the lzma_index **i
    argument wasn't touched even though the API docs say that *i = NULL
    is done if an error occurs. This obviously won't be done even now
    if i == NULL but otherwise it is best to do it due to the wording
    in the API docs.
    
    In practice this matters very little: The problem can occur only
    if the functions are called with invalid arguments, that is,
    the calling application must already have a bug.

commit 0478473953f50716a2bc37b619b1c7dc2682b1ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 26 18:25:18 2024 +0300

    CMake: Bump maximum policy version to 3.29

commit 4ffc60f32397371769b7d6b5e3ed8626292d58df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 25 14:00:57 2024 +0300

    tuklib_integer: Rename bswapXX to byteswapXX
    
    The __builtin_bswapXX from GCC and Clang are preferred when
    they are available. This can allow compilers to emit the x86 MOVBE
    instruction instead of doing a load + byteswap as two instructions
    (which would happen if the byteswapping is done in inline asm).
    
    bswap16, bswap32, and bswap64 exist in system headers on *BSDs
    and Darwin. #defining bswap16 on NetBSD results in a warning about
    macro redefinition. It's safest to avoid this namespace conflict
    completely.
    
    No OS supported by tuklib_integer.h uses byteswapXX names and
    a web search doesn't immediately find any obvious danger of
    namespace conflicts. So let's try these still-pretty-short names
    for the macros.
    
    Thanks to Sam James for pointing out the compiler warning on
    NetBSD 10.0.

commit 08ab0966a75b501aa7c717622223f0c13a113c75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 24 01:20:26 2024 +0300

    liblzma: API doc cleanups

commit 3ac8a9bb4cccbee88350696dc9c645c48d77c989
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 23 16:35:33 2024 +0300

    Tests: test_filter_str: Add a few assertions

commit 26c69be80523b05c84dea86c47c4ddd9a10945d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 23 16:35:08 2024 +0300

    Tests: test_filter_str: Move one assertion and add a comment

commit 4f6af853bc99904efb8b6c28a0af7b81a8476c1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 23 16:26:06 2024 +0300

    Tests: test_filter_str: Tweak comments and white space

commit c92663aa1bd576e0615498a4189acf0df12e84b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 23 16:25:22 2024 +0300

    Tests: test_filter_str: Add missing RISC-V case
    
    Fixes: 89ea1a22f4ed3685b053b7260bc5acf6c75d1664

commit b0366df1d7ed26268101f9303a001c91c0806dfc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 22 22:23:32 2024 +0300

    Tests: test_filter_str: Test *error_pos more thoroughly

commit 70d12dd069bb9bb0d6bb1c8fafc4e6f77780263d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 22 21:54:39 2024 +0300

    liblzma: lzma_str_to_filters: Set *error_pos on all errors
    
    The API docs clearly say that if error_pos isn't NULL then *error
    is always set on any error. However, it wasn't touched if str == NULL
    or filters == NULL or unsupported flags were specified.
    
    Fixes: cedeeca2ea6ada5b0411b2ae10d7a859e837f203

commit ed8e552395701fbf046027cebc8be4a6755b263f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 22 20:31:25 2024 +0300

    liblzma: Clean up white space

commit 2f06920f20b1ad63b7953dc09569e1d424998849
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 22 18:35:19 2024 +0300

    Tests: test_filter_flags: Edit comments and style

commit b101e1d1dbc81577c0c9aa0cb89cf2e46a15eb82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 22 16:39:44 2024 +0300

    Tests: Fix C99/C11 compatibility when features are disabled
    
    The array could become empty and then the initializer would be
    simply {} which is allowed only in GNU-C and C23.

commit f8f3a220ac8afcb8cb2812917d3b77e00c2eab0d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 21 20:32:16 2024 +0300

    DOS: Omit useless defines from config.h

commit fc1921b04b8840caaa777c2bd5340d41b259da20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 21 20:27:50 2024 +0300

    Build: Omit useless checks for fcntl.h, limits.h, and sys/time.h

commit 6aa2a6deeba04808a0fe4461396e7fb70277f3d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 22:04:21 2024 +0300

    liblzma: Silence a warning from Coverity static analysis
    
    It is logical why it cannot know for sure that the value has
    to be at most 4 if it is less than 16.
    
    The x86 filter is based on a very old LZMA SDK version. Newer
    ones have quite a different implementation for the same filter.
    
    Thanks to Sam James.

commit e89d3e83b4496d0b5410870634970c0aa9721d59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 23:18:19 2024 +0300

    Update .gitignore

commit 86fc4ee859709da0ff9617a1490f13ddac0a109b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 20:53:24 2024 +0300

    Tests: test_lzip_decoder: Tweak coding style and comments

commit 38be573a279bd7b608ee7d8509ec10884e6fb0d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 20:51:36 2024 +0300

    Tests: test_lzip_decoder: Remove redundant initializations

commit d7e4bc53eacfab9f3de95d8252bdfdc9419079c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 19 20:47:24 2024 +0300

    Tests: test_lzip_decoder: Remove unneeded tuktest_malloc() calls

commit eeca8f7c5baf1ad69606bb734d5001763466d58f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 15 20:35:07 2024 +0300

    xz: Fix white space error.
    
    Thanks to xx on #tukaani.

commit fcbd0d199933a69713cb293cbd7409a757d854cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 13 22:19:40 2024 +0300

    Tests: test_microlzma: Add a "FIXME?" about LZMA_FINISH handling

commit 0fe2dfa68355d2b165544b2bc8babf77dcc2039e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 13 18:05:31 2024 +0300

    Tests: test_microlzma: Tweak comments, coding style, and minor details
    
    A few lines were reordered, a few ARRAY_SIZE were changed to sizeof,
    and a few uint32_t were changed to size_t. No real functional changes
    were intended.

commit 6286c1900c2d2ca33d9b1b397122c7bcdb9a4d59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 23:20:02 2024 +0300

    liblzma: CRC: Simplify table omission macros
    
    A macro is useful to prevent a single #if directive from
    getting too ugly but only one macro is needed for all archs.

commit 45da936c879acf4f053a3055665bf1b10ded4462
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 23:09:40 2024 +0300

    liblzma: ARM64 CRC: Fix omission of CRC32 table
    
    The macro name had an odd typo so the table wasn't omitted
    when it should have.
    
    Fixes: 1940f0ec28f08c0ac72c1413d9706fb82eabe6ad

commit 308a9af85400b0e2019f0f012c8354e831d06d65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 22:21:51 2024 +0300

    Build: If ARM64 feature detection func is found, stop looking for others
    
    This can speed up configure a tiny bit.
    
    Fixes: c5f6d79cc9515a7f22d7ea4860c6cc394b295732

commit fc43cecd32bf9d5f8caa599206b15c9569af1eb6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 22:04:27 2024 +0300

    liblzma: ARM64 CRC32: Change style of the macOS code to match FreeBSD
    
    I didn't test this but it shouldn't change any functionality.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

commit 1024cd4cd966b998fedec51e385e9ee9a49b3c57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 21:59:27 2024 +0300

    liblzma: ARM64 CRC32: Add error checking to FreeBSD-specific code
    
    Also add parenthesis to the return statement.
    
    I didn't test this.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

commit 2337f7021c860b026e3e849e60a9ae8d09ec0ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 21:56:33 2024 +0300

    liblzma: ARM64 CRC32: Use negation instead of subtracting from 8
    
    Subtracting from 0 is negation, this just keeps warnings away.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

commit d8fffd01aa1a3c18e437a222abd34699e23ff5e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 10 21:55:10 2024 +0300

    liblzma: ARM64 CRC32: Tweak coding style and comments

commit 780d2c236de0e4749655696c2e0c26fb7565afd3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 9 21:55:01 2024 +0300

    Update SECURITY.md.

commit 986865ea2f9d1f8dbef4a130926df106b0f6d41a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 9 17:47:01 2024 +0300

    CI: Remove ifunc support.

commit 689ae2427342a2ea1206eb5ca08301baf410e7e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 9 17:43:16 2024 +0300

    liblzma: Remove ifunc support.
    
    This is *NOT* done for security reasons even though the backdoor
    relied on the ifunc code. Instead, the reason is that in this
    project ifunc provides little benefits but it's quite a bit of
    extra code to support it. The only case where ifunc *might* matter
    for performance is if the CRC functions are used directly by an
    application. In normal compression use it's completely irrelevant.

commit 6b4c859059a7eb9b0547590c081668e14ecf8af6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 22:04:41 2024 +0300

    tests/files/README: Update the main heading.

commit 2a851e06b891ce894f918faff32a6cca6fdecee6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 22:02:45 2024 +0300

    tests/files/README: Explain how to recreate the ARM64 test files.

commit 3d09b721b94e18fe1f853a04799697f5de10b291
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 21:51:55 2024 +0300

    debug: Add generator for the ARM64 test file data.

commit 31ef676567c9d6fcc4ec9fc833c312f7a7c21c48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 21:19:38 2024 +0300

    xz man page: Use .ft CR instead of CW to silence warnings from groff.

commit 780cbf29d5a88db2b546e9b7b019c4c33ca72685
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 19:28:35 2024 +0300

    Fix NEWS for 5.6.0 and 5.6.1.

commit bfd0c7c478e93a1911b845459549ff94587b6ea2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 19:22:26 2024 +0300

    Remove the XZ logo.

commit 77a294d98a9d2d48f7e4ac273711518bf689f5c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 18:27:39 2024 +0300

    Update maintainer and author info.
    
    The other maintainer suddenly disappeared.

commit 8dd03d4484ccf80022722a16d0ed9b37f2b58072
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 18:05:32 2024 +0300

    Docs: Update .xz file format specification to 1.2.1.
    
    This only reverts the XZ URL changes.

commit 17aa2e1a796d3f758802df29afc89dcf335db567
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 17:33:56 2024 +0300

    Update website URLs back to tukaani.org.
    
    The XZ projects were moved back to their original URLs.

commit 2739db981023373a2ddabc7b456c7e658bb4f582
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 17:07:08 2024 +0300

    xzdec: Tweak coding style and comments.

commit 408b6adb2a07d07c6535f859571cca38837caaf3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 15:53:46 2024 +0300

    tests/ossfuzz: Tiny fix to a comment.

commit db4dd74a344580e0b81436598d9741a3454245b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 9 18:22:16 2024 +0300

    Update THANKS.

commit e93e13c8b3bec925c56e0c0b675d8000a0f7f754
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 8 15:32:58 2024 +0300

    Remove the backdoor found in 5.6.0 and 5.6.1 (CVE-2024-3094).
    
    While the backdoor was inactive (and thus harmless) without inserting
    a small trigger code into the build system when the source package was
    created, it's good to remove this anyway:
    
      - The executable payloads were embedded as binary blobs in
        the test files. This was a blatant violation of the
        Debian Free Software Guidelines.
    
      - On machines that see lots bots poking at the SSH port, the backdoor
        noticeably increased CPU load, resulting in degraded user experience
        and thus overwhelmingly negative user feedback.
    
      - The maintainer who added the backdoor has disappeared.
    
      - Backdoors are bad for security.
    
    This reverts the following without making any other changes:
    
    6e636819 Tests: Update two test files.
    a3a29bbd Tests: Test --single-stream can decompress bad-3-corrupt_lzma2.xz.
    0b4ccc91 Tests: Update RISC-V test files.
    8c9b8b20 liblzma: Fix typos in crc32_fast.c and crc64_fast.c.
    82ecc538 liblzma: Fix false Valgrind error report with GCC.
    cf44e4b7 Tests: Add a few test files.
    3060e107 Tests: Use smaller dictionary size in RISC-V test files.
    e2870db5 Tests: Add two RISC-V Filter test files.
    
    The RISC-V test files also have real content that tests the filter
    but the real content would fit into much smaller files. A generator
    program would need to be available as well.
    
    Thanks to Andres Freund for finding and reporting it and making
    it public quickly so others could act without a delay.
    See: https://www.openwall.com/lists/oss-security/2024/03/29/4

commit f9cf4c05edd14dedfe63833f8ccbe41b55823b00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 30 14:36:28 2024 +0200

    CMake: Fix sabotaged Landlock sandbox check.
    
    It never enabled it.

commit 0b99783d63f27606936bb79a16c52d0d70c0b56f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 22 17:46:30 2024 +0200

    liblzma: memcmplen.h: Add a comment why subtraction is used.

commit 8a25ba024d55610c448c6e4f1400a00bae51b493
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 15 17:43:39 2024 +0200

    INSTALL: Document arguments of --enable-symbol-versions.

commit 49324b711f9d42b3543bf2f3ae598eaa03360bd5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 15 17:15:50 2024 +0200

    Build: Use only the generic symbol versioning with NVIDIA HPC Compiler.
    
    This does the previous commit with CMake.
    
    AC_EGREP_CPP uses AC_REQUIRE so the outermost if-commands must
    be changed to AS_IF to ensure that things wont break some day.
    See 5a5bd7f871818029d5ccbe189f087f591258c294.

commit c273123ed0ebaebf49994057a7fe98aae7f42c40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 15 16:36:35 2024 +0200

    CMake: Use only the generic symbol versioning with NVIDIA HPC Compiler.
    
    It doesn't support the __symver__ attribute or __asm__(".symver ...").
    The generic symbol versioning can still be used since it only needs
    linker support.

commit df7f487648d18a3992386a59b8a061edca862d17
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 13 21:38:24 2024 +0200

    Update THANKS.

commit 3217b82b3ec023bf8338249134a076bea0ea30ec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 13 21:30:18 2024 +0200

    liblzma: Minor comment edits.

commit 2ad7fad67080e88fa7fc191f9d613d8b7add9c62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 13 21:17:10 2024 +0200

    CMake: Disable symbol versioning on non-glibc Linux.
    
    This better matches what configure.ac does. For example, musl has
    only basic symbol versioning support:
    
    https://wiki.musl-libc.org/functional-differences-from-glibc.html#Symbol_versioning
    
    configure.ac tries to enable symbol versioning only with glibc
    so now CMake does the same.

commit 82f0c0d39eb2c026b1d96ee706f70ace868d4ed4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 13 20:32:46 2024 +0200

    CMake: Make symbol versioning configurable.

commit 45d33bfc45e4295b8ad743bc2ae61cc724f98076
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 13 19:47:36 2024 +0200

    Build: Style tweaks to configure.ac.
    
    The AC_MSG_ERROR line is overlong anyway as are a few other
    AC_MSG_ERROR lines already.

commit 3007e74ef250f0ce95d97ffbdf2282284f93764d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 5 23:21:26 2024 +0200

    liblzma: Fix a typo in a comment in the RISC-V filter.

commit 7eeadd279a24c26ca7ff1292b7df802b89409eb7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 4 19:23:18 2024 +0200

    liblzma: Fix a comment in the RISC-V filter.

commit 5f3d0595296cc3035eae9e7bb6c3ffb1e1267333
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 29 16:35:52 2024 +0200

    CMake: Warn if translated man pages are missing.

commit 4cd1042ee752d61370c685d0d8b20c1e935672f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 29 16:35:52 2024 +0200

    CMake: Warn if gettext tools and pre-created .gmo files are missing.
    
    It's only done with CMake >= 3.20 and if library support
    for translation was already found.
    
    Sort of fixes: https://github.com/tukaani-project/xz/issues/82

commit a94b42362c8e807f92236d6d63373f04991e3a50
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 28 18:26:25 2024 +0200

    xz: Add comments.

commit 649f6447441510d593a88475ad6df4bcdf74ce48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 26 23:06:13 2024 +0200

    Fix sorting in THANKS.

commit 4c81c9611f8b2e1ad65eb7fa166afc570c58607e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 22 19:16:35 2024 +0200

    CMake: Add LOCALEDIR to the windres workaround.
    
    LOCALEDIR may contain spaces like in "C:\Program Files".

commit de4337fd89ca7db5feb97b5c40143404f6e22986
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 22 15:18:25 2024 +0200

    xz: Landlock: Fix error message if input file is a directory.
    
    If xz is given a directory, it should look like this:
    
        $ xz /usr/bin
        xz: /usr/bin: Is a directory, skipping
    
    The Landlock rules didn't allow opening directories for reading:
    
        $ xz /usr/bin
        xz: /usr/bin: Permission denied
    
    The simplest fix was to allow opening directories for reading.
    While it's a bit silly to allow it solely for the error message,
    it shouldn't make the sandbox significantly weaker.
    
    The single-file use case (like when called from GNU tar) is
    still as strict as possible: all Landlock restrictions are
    enabled before (de)compression starts.

commit 120da10ae139ea52ca4275452adf8eda02d07cc8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 22 14:41:29 2024 +0200

    liblzma: Disable branchless C version in range decoder.
    
    Thanks to Sebastian Andrzej Siewior and Sam James for
    benchmarking on various systems.

commit 00440f52be9ac2c7438c7b0cb1082f12399632c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 21 17:41:32 2024 +0200

    INSTALL: Clarify that --disable-assembler affects only 32-bit x86.

commit 11405be84ea294497e12d03d7219f607063f4a00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 19 18:41:37 2024 +0200

    Windows: build.bash: Include COPYING.0BSD in the package.

commit c27cf64e3e27f4968431d65be7098a12a3a80d30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 18 17:59:46 2024 +0200

    Windows: build.bash: include liblzma-crt-mixing.txt in the package.

commit 8d38941baed05de4ff7cc775de14833108f62184
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 18 17:17:43 2024 +0200

    Windows: Major update to Windows build instructions.

commit 4b5b0d352348ff510ffb50a3b5b71788857d37a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 18 15:15:04 2024 +0200

    Windows: Update windows/README-Windows.txt.
    
    It's for binary packages built with windows/build.bash.

commit 1ee716f74085223c8fbcae1d5a384e6bf53c0f6a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 18 15:15:04 2024 +0200

    Windows: Update windows/build.bash.
    
    Support for the old MinGW was dropped. Only MinGW-w64 with GCC
    is supported now.
    
    The script now supports also cross-compilation from GNU/Linux
    (tests are not run). MSYS2 and also the old MSYS 1.0.11 work
    for building on Windows. The i686 and x86_64 toolchains must
    be in PATH to build both 32-bit and 64-bit versions.
    
    Parallel builds are done if "nproc" from GNU coreutils is available.
    
    MinGW-w64 runtime copyright information file was renamed from
    COPYING-Windows.txt to COPYING.MinGW-w64-runtime.txt which
    is the filename used by MinGW-w64 itself. Its existence
    is now mandatory, it's checked at the beginning of the script.
    
    The file TODO is no longer copied to the package.

commit 00b06cd0af6ad2ee93d3006bf80417db060c2b04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 19 16:48:05 2024 +0200

    CMake: Fix building of lzmainfo when translations are enabled.

commit b0d1422b6037bfea6f6723683bd82a8e6d77026c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 19 13:38:42 2024 +0200

    CMake: Don't assume that -fvisibility=hidden is supported outside Windows.
    
    The original code was good enough for supporting GNU/Linux
    and a few others but it wasn't very portable.
    
    CMake doesn't support Solaris Studio's -xldscope=hidden.
    If it ever does, things should still work with this commit
    as Solaris Studio supports not only its own __global but also
    the GNU C __attribute__((visibility("default"))). Support for the
    attribute was added in 2007 to Sun Studio 12 compiler version 5.9.

commit 2ced9d34bef4dce52ecbbf84d0903ab0aae1442c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 19 12:20:59 2024 +0200

    CMake: Revise the component splitting.

commit 426bdc709c169d39b31dec410016779de117ef69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 21:45:07 2024 +0200

    CMake: Update the main comment and document CMAKE_BUILD_TYPE=Release.

commit 4430e075f7ccfc47972d6ca0aa1c3779fc265e10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 21:27:48 2024 +0200

    CMake: Use -O2 instead of -O3 in CMAKE_BUILD_TYPE=Release.
    
    -O3 doesn't seem useful for speed but it makes the code bigger.
    CMake makes is difficult for users to simply override the
    optimization level: CFLAGS / CMAKE_C_FLAGS aren't helpful because
    they go before CMAKE_C_FLAGS_RELEASE. Of course, users can override
    CMAKE_C_FLAGS_RELEASE directly but then they have to remember to
    add also -DNDEBUG to disable assertions.
    
    This commit changes -O3 to -O2 in CMAKE_C_FLAGS_RELEASE if and only if
    CMAKE_C_FLAGS_RELEASE cache variable doesn't already exist. So if
    a custom value is passed on the command line (or reconfiguring an
    already-configured build), the cache variable won't be modified.

commit 025eb6d7879e4c4e8cb29716b371e0f4c1aea660
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 18 14:59:52 2024 +0200

    CMake: Handle symbol versioning on MicroBlaze specially.
    
    This is to match configure.ac.

commit 2edd1a35b2507d1ce68b52dbaebe23c4850a74ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 22:18:12 2024 +0200

    CMake: Keep build working even if lib/*.[ch] are removed.

commit d753e2ce4715552884afadc4ed6fbf8ccca6efac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 18:10:40 2024 +0200

    CMake: Install documentation.

commit 7a0405bea9cb0df9318b70f779f82b2c473e98ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Bump maximum policy version to 3.28.
    
    CMP0154 doesn't affect us since we don't use FILE_SET.

commit c2264ffbe3892d28930b89b0123efc369cabc143
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Build lzmainfo.

commit 998d0b29536094a89cf385a3b894e157db1ccefe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Build lzmadec.

commit 74e8bc7417a0f37ca7ed5ee0127d33c69b3100b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Add test_scripts.sh to the tests.
    
    In contrast to Automake, skipping of this test when decoders
    are disabled is handled at CMake side instead of test_scripts.sh
    because CMake-build doesn't create config.h.

commit 4808f238a731befcd46c2117c62a1caaf4403989
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Install scripts.
    
    Compared to the Autotools-based build, this has simpler handling
    for the shell (@POSIX_SHELL@) and extra PATH entry for the scripts
    (configure has --enable-path-for-scripts=PREFIX). The simpler
    metho should be enough for non-ancient systems and Solaris.

commit 3462362ebd94d835c664e94ad8f414cfe7590ca7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    Scripts: Use @PACKAGE_VERSION@ instead of @VERSION@.
    
    PACKAGE_VERSION was already used in liblzma.pc.in.
    This way only one version @foo@ is used.

commit 67610c245ba6c68cf65991693bab9312b7dc987b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Simplify symlink creation and install translated man pages.
    
    It helps that cmake_install.cmake doesn't parallelize installation
    so symlinks can be created so that the target is always known to
    exist (a requirement on Windows in some cases).
    
    This bumps the minimum CMake version from 3.13 to 3.14 to use
    file(CREATE_LINK ...). It could be made to work on 3.13 by
    calling "cmake -E create_symlink" but it's uglier code and
    slower in "make install". 3.14 should be a reasonable version
    to require nowadays, especially since the Autotools build
    is still the primary build system for most OSes.

commit 50cc1d8a5a8154428bf240c7e4972e32b17d99bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:35:35 2024 +0200

    CMake: Add support for building and installing xz with translations.
    
    If gettext tools are available, the .po files listed in po/LINGUAS
    are converted using msgfmt. This allows building with translations
    directly from xz.git without Autotools.
    
    If gettext tools aren't available, the Autotools-created .gmo files
    in the "po" directory will be used. This allows CMake-based build
    to use translations from Autotools-generated tarball.
    
    If translation support is found (Intl_FOUND) but both the
    gettext tools and the pre-generated .gmo files are missing,
    then "make" will fail.

commit 746c471643009947f94a3494a1148f74c7381b56
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 19 11:58:33 2024 +0200

    liblzma: Remove commented-out code.

commit 4ce300ce0884c6e552de2af9ae8050b47b01f0e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Delete old commented-out code.

commit cae9a5e0bf422e6c5e64180805904f7ed02dc3aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Use stricter pledge(2) and Landlock sandbox.
    
    This makes these sandboxing methods stricter when no files are
    created or deleted. That is, it's a middle ground between the
    initial sandbox and the strictest single-file-to-stdout sandbox:
    this allows opening files for reading but output has to go to stdout.

commit 02e3505991233901575b7eabc06b2c6c62a96899
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Support Landlock ABI version 4.
    
    Linux 6.7 added support for ABI version 4 which restricts
    TCP connections which xz won't need and thus those can be
    forbidden now. Since the ABI version is handled at runtime,
    supporting version 4 won't cause any compatibility issues.
    
    Note that new enough kernel headers are required to get
    version 4 support enabled at build time.

commit 374868d81d473ab56556a1cfd6b1b36a1fab348b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Move sandboxing code to sandbox.c and improve Landlock sandbox.
    
    Landlock is now always used just like pledge(2) is: first in more
    permissive mode and later (under certain common conditions) in
    a strict mode that doesn't allow opening more files.
    
    I put pledge(2) first in sandbox.c because it's the simplest API
    to use and still somewhat fine-grained for basic applications.
    So it's the simplest thing to understand for anyone reading sandbox.c.

commit 7312dfbb02197c7f990c7a3cefd027a9387d1473
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Tweak comments.

commit c701a5909ad9882469fbab4fab5d2d5556d3ba78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 23:07:35 2024 +0200

    xz: Fix message_init() description.
    
    Also explicitly initialize progress_automatic to make it clear
    that it can be read before message_init() sets it. Static variable
    was initialized to false by default already so this is only for
    clarity.

commit 9466306719f3b76e92fac4e55fbfd89ec92295fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 19:35:47 2024 +0200

    Build: Makefile.am: Sort EXTRA_DIST.
    
    Dirs first, then files in case-sensitive ASCII order.

commit f3440e78c9517db75bfa52e1a378fad60b073bbe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 19:25:05 2024 +0200

    Build: Don't install TODO.

commit 56246607dff177b0410d140fcca4a42c865723dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 16:23:14 2024 +0200

    Build: Install translated lzmainfo man pages.
    
    All other translated man pages were being installed but
    lzmainfo had been forgotten.

commit f1d6b88aefcced538403c5c2606ba57065b16e70
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 16:01:32 2024 +0200

    liblzma: Avoid implementation-defined behavior in the RISC-V filter.
    
    GCC docs promise that it works and a few other compilers do
    too. Clang/LLVM is documented source code only but unsurprisingly
    it behaves the same as others on x86-64 at least. But the
    certainly-portable way is good enough here so use that.

commit 843ddc5f617b91ae132d6bab0f2f2d9c9fcd214a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 17 15:48:28 2024 +0200

    liblzma: Wrap a line exceeding 80 chars.

commit 711e22d5c5f3bac39ac904efb3ede874a66e2045
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 16 17:53:34 2024 +0200

    Translations: Use the same sentence in xz.pot-header that the TP uses.

commit 4c20781f4c8f04879b64d631a4f44b4909147bde
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 15 22:32:52 2024 +0200

    Translations: Omit the generic copyright line from man page headers.

commit 5394a1665b7a108a54cb8b4ef3ebe59d3dbcca3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 21:11:49 2024 +0200

    Tests: tuktest.h: Treat Clang separately from GCC.
    
    Don't assume that Clang defines __GNUC__ as the extensions
    are available in clang-cl as well (and possibly in some other
    Clang variants?).

commit cce7330b9f23485a0879422e0c3395a7065439ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 21:11:03 2024 +0200

    Tests: tuktest.h: Add a missing word to a comment.

commit 5dd8fc9452a3373cedc27379067ce638f992c741
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 21:10:10 2024 +0200

    Tests: tuktest.h: Fix the comment about STest.

commit 924fdeedf48113fb1e0646d86bd89a356d21a055
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:46:11 2024 +0200

    liblzma: Fix validate_map.sh.
    
    Adding the SPDX license identifier changed the line numbers.

commit 22140a2df6161b0110e6b4afa5ea0a07c5b60b01
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:38:34 2024 +0200

    Build: Start the generated ChangeLog from around 5.4.0 instead of 5.2.0.

commit 0b8cefa136c21d403a01b78517f4decb50172bdb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:27:46 2024 +0200

    Fixed NEWS for 5.5.2beta.

commit a4557bad96361d93ea171ed859ac5a696fca824f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:21:45 2024 +0200

    liblzma: Silence warnings in --enable-small build.

commit 38edf473236d00b3e100dc4c4f0bf43a4993fed2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:15:58 2024 +0200

    Build: Install COPYING.0BSD as part of docs.

commit b74e10bd839bcdc239afb5300ffaee195f34c217
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:14:05 2024 +0200

    Docs: List COPYING.0BSD in README.

commit dfdb60ffe933a1f1497d300dbb4513ed17ec6f0e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:11:48 2024 +0200

    Docs: Include doc/examples/11_file_info.c in tarballs.
    
    It was added in 2017 in c2e29f06a7d1e3ba242ac2fafc69f5d6e92f62cd
    but it never got into any release tarballs because it was
    forgotten to be added to Makefile.am.

commit 160b6862646d95dfdbd73ab7f1031ede0f54992d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 19:05:58 2024 +0200

    liblzma: Silence a warning.

commit eeedd4d0925ea417add04ceb42a6c0829244b50c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 18:32:27 2024 +0200

    Add NEWS for 5.5.2beta.

commit 8af7db854f903068d72a9a0d21103cb0c5027fa8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 14:32:47 2024 +0200

    xz: Mention lzmainfo if trying to use 'lzma --list'.
    
    This kind of fixes the problem reported here:
    https://bugs.launchpad.net/ubuntu/+source/xz-utils/+bug/1291020

commit 0668907ff736e4cd16738c10d39a2bc9e851aefb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 14 14:58:36 2024 +0200

    liblzma: Add comments.

commit 109f1913d4824c8214d5bbd38ebebf62c37572da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 17:00:17 2024 +0200

    Scripts: Add lz4 support to xzgrep and xzdiff.

commit de55485cb23af56c5adbe3239b935c957ff8ac4f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 14:05:13 2024 +0200

    liblzma: Choose the range decoder variants using a bitmask macro.

commit 0709c2b2d7c1d8f437b003f691880fd7810e5be5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 11:38:10 2024 +0200

    xz: Fix outdated threading related info on the man page.

commit 3182a330c1512cc1f5c87b5c5a272578e60a5158
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Range decoder: Add x86-64 inline assembly.
    
    It's compatible with GCC and Clang.

commit cba2edc991dffba7cd4891dbc1bd26cb950cf053
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Range decoder: Add branchless C code.
    
    It's used only for basic bittrees and fixed-size reverse bittree
    because those showed a clear benefit on x86-64 with GCC and Clang.
    The other methods were more mixed and thus are commented out but
    they should be tested on other archs.

commit e290a72d6dee71faf3a90c9678b2f730083666a7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Clarify a comment.

commit 5e04706b91ca90d6befd4da24a588a55e631d4a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: LZMA decoder: Optimize loop comparison.
    
    But now it needs one more local variable.

commit 88276f9f2cb4871c7eb86952d93d07c1cf6caa66
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Optimize literal_subcoder() macro slightly.

commit 5938f6de4d8ec9656776cd69e78ddfd6c3ad84e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: LZ decoder: Add unlikely().

commit 9c252e3ed086c6b72590b2531586c42596d4a9d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: LZ decoder: Remove a useless unlikely().

commit f3872a59475456c5d365cad9f1c5be514cfa54b5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Optimize LZ decoder slightly.
    
    Now extra buffer space is reserved so that repeating bytes for
    any single match will never need to copy from two places (both
    the beginning and the end of the buffer). This simplifies
    dict_repeat() and helps a little with speed.
    
    This seems to reduce .lzma decompression time about 2 %, so
    with .xz and CRC it could be slightly less. The small things
    add up still.

commit eb518446e578acf079abae5f1ce28db7b6e59bc1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: LZMA decoder: Get rid of next_state[].
    
    It's not completely obvious if this is better in the decoder.
    It should be good if compiler can avoid creating a branch
    (like using CMOV on x86).
    
    This also makes lzma_encoder.c use the new macros.

commit e0c0ee475c0800c08291ae45e0d66aa00d5ce604
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: LZMA decoder improvements.
    
    This adds macros for bittree decoding which prepares the code
    for alternative C versions and inline assembly.

commit 7f6d9ca329ff3e01d4b0be7366eb4f5c93da41b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    doxygen/footer.html: Add missing closing tags and don't open a new tab.
    
    The footer template from Doxygen has the closing </body> </html>
    as Doxygen doesn't add them otherwise.
    
    target="_blank" was omitted as it's not useful here but
    it can be slightly annoying as one cannot just go back
    in the browser history.
    
    Since the footer links to the license file in the same
    directory and not to CC website, the rel attributes
    can be omitted.

commit 26d1527d34d52b0f5d632d4fb636fb33d0867e92
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 13:19:10 2024 +0200

    Tweak the expressions in AUTHORS.

commit d231d56580175fa040fdd3c6207a58243ce6217b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 13 13:07:33 2024 +0200

    Translations: Add the man page translators into man page header comment.
    
    It looked odd to only have the original English authors listed
    in the header comments of the translated files.

commit 6d35fcb936474fca1acaebfd9502c097b6fde88e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Translations: Translate also messages of lzmainfo.
    
    lzmainfo has had translation support since 2009 at least but
    it was never added to po/POTFILES.in so the messages weren't
    translated. It's a very rarely needed tool so it's not too bad.
    
    This also adds src/xz/mytime.c to po/POTFILES.in although there
    are no translatable strings. It's simpler this way so that it
    won't be forgotten if strings were ever added to that file.

commit a9f369dd54b05f9ac4e00ead9d765d04fc259868
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Translations: Add custom .pot header with SPDX license identifier.
    
    The same is used for both po/xz.pot and po4a/xz-man.pot.

commit 469cd6653bb96e83c5cf1031c204d34566b15f44
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Translations: po4a/update-po: Add copyright notice to xz-man.pot.
    
    All man pages are under 0BSD now so this is simple now.

commit 28ce45e38fbed4b5f54f2013e38dab47d22bf699
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Update COPYING about the man pages of the scripts.

commit e48287bf51afd5184ea74de1dcade9e153f873f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    xzdiff, xzgrep, and xzmore: Rewrite the man pages.
    
    The main reason is a kind of silly one:
    
    xz-man.pot contains strings from all man pages in XZ Utils.
    The man pages of xzdiff, xzgrep, and xzmore were under GPLv2
    and the rest under 0BSD. Thus xz-man.pot contained strings
    under two licences. po4a creates the translated man pages
    from the combined 0BSD+GPLv2 xz-man.pot.
    
    I haven't liked this mixing in xz-man.pot but the
    Translation Project requires that all man pages must be
    in the same .pot file. So a separate xz-man-gpl.pot
    wasn't an option.
    
    Since these man pages are short, rewriting them was quick enough.
    Now xz-man.pot is entirely under 0BSD and marking the per-file
    licenses is simpler.
    
    As a bonus, some wording hopefully is now slightly better
    although it's perhaps a matter of taste.
    
    NOTE: In xzgrep.1, the EXIT STATUS section was written by me
    in the commit d796b6d7fdb8b7238b277056cf9146cce25db604 so that's
    why that section could be taken as is from the old xzgrep.1.

commit 3e551b111b8ae8150f1a1040364dbafc034f22be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    xzless: Update man page slightly.
    
    The xz tool can decompress three file formats and xzless
    has always supported uncompressed files too.

commit 40f36da2262d13d6e1ba8449caa855512ae626d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Translations: Change po/Makevars to add a copyright notice to po/xz.pot.

commit 24192854e2ea5c06997431a98bda3c36c5da1497
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Translations: Update po/Makevars to use the template from gettext 0.22.4.
    
    Also add SPDX license identifier now that there is a known license.

commit b94154957370116480b43bcabca25fc52deb9853
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Include the SPDX license identifier 0BSD to generated files.
    
    Perhaps the generated files aren't even copyrightable but
    using the same license for them as for the rest of the liblzma
    keeps things more consistent for tools that look for license info.

commit 8e4ec794836bc1701d8c9bd5e347b8ce8cc5bbb4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    liblzma: Fix compilation of price_tablegen.c.
    
    It is built and run only manually so this didn't matter
    unless one wanted to regenerate the price_table.c.

commit e99bff3ffbcdf2634fd5bd13887627ec7dbfecaf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Add SPDX license identifiers to GPL, LGPL, and FSFULLR files.

commit 22af94128b89a131f5e58ae69bee5e50227c15da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Add SPDX license identifier into 0BSD source code files.

commit 23de53421ea258cde6a3c33a038b1e9d08f771d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 23:25:54 2024 +0200

    liblzma: Sync the AUTHORS fix about SHA-256 to lzma.h.

commit 689e0228baeb95232430e90d628379db89583d71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 12 17:09:10 2024 +0200

    Change most public domain parts to 0BSD.
    
    Translations and doc/xz-file-format.txt and doc/lzma-file-format.txt
    were not touched.
    
    COPYING.0BSD was added.

commit 76946dc4336c831fe2cc26696a035d807dd3cf13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 9 17:20:31 2024 +0200

    Fix SHA-256 authors.
    
    The initial commit 5d018dc03549c1ee4958364712fb0c94e1bf2741
    in 2007 had a comment in sha256.c that the code is based on
    Crypto++ Library 5.5.1. In 2009 the Authors list in sha256.c
    and the AUTHORS file was updated with information that the
    code had come from Crypto++ but via 7-Zip. I know I had viewed
    7-Zip's SHA-256 code but back then the C code has been identical
    enough with Crypto++, so I don't why I thought the author info
    would need that extra step via 7-Zip for this single file.
    
    Another error is that I had mixed sha.* and shacal2.* files
    when checking for author info in Crypto++. The shacal2.* files
    aren't related to liblzma's sha256.c and thus Kevin Springle's
    code in Crypto++ isn't either.

commit 21d9cbae9eecca28ce373d3d9464defd2cf5d851
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 9 17:20:31 2024 +0200

    Remove macosx/build.sh.
    
    It was last updated in 2013.

commit eac2c3c67f9113a225fb6667df862edd30366931
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 9 17:20:31 2024 +0200

    Doc: Remove doc/examples_old.
    
    It was good to keep these around in parallel with the newer examples
    but I think it's OK to remove the old ones at this point.

commit 9860d418d296eb3c721e5384fb367c0499b579c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 9 23:21:01 2024 +0200

    xzless: Use ||- in LESSOPEN with with "less" 451 and newer.

commit fd0692b0525e6c26b496492be9e2c865cab734f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 9 23:00:05 2024 +0200

    xzless: Use --show-preproc-errors with "less" 632 and newer.
    
    This makes "less" show a warning if a decompression error occurred.

commit 93de7e751d17731315a899264f2a7239d7d2d316
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 24 20:00:57 2024 +0200

    Move doc/logo/xz-logo.png to "doc" and Doxygen footer to "doxygen".
    
    The footer isn't a complete HTML file so having it in the doxygen
    directory is a tiny bit clearer.

commit 6daa4d0ea46a8441f21f609149f3633158bf4704
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 23 18:29:28 2024 +0200

    xz: Use threaded mode by defaut (as if --threads=0 was used).
    
    This hopefully does more good than bad:
    
      + It's faster by default.
    
      + Only the threaded compressor creates files that
        can be decompressed in threaded mode.
    
      - Compression ratio is worse, usually not too much though.
        When it matters, -T1 must be used.
    
      - Memory usage increases.
    
      - Scripts that assume single-threaded mode but don't use -T1 will
        possibly use too much resources, for example, if they run
        multiple xz processes in parallel to compress multiple files.
    
      - Output from single-threaded and multi-threaded compressors
        differ but such changes could happen for other reasons too
        (they just haven't happened since 5.0.0).

commit 6133a3f30049d3beaf7d22535b1e5d38e109be4e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 23 16:11:54 2024 +0200

    xz: Man page: Add more examples of LZMA2 options with BCJ filters.

commit 50255feeaabcc7e7db22b858a6bd64a9b5b4f16d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 23 00:09:48 2024 +0200

    liblzma: RISC-V filter: Use byte-by-byte access.
    
    Not all RISC-V processors support fast unaligned access so
    it's better to read only one byte in the main loop. This can
    be faster even on x86-64 when compared to reading 32 bits at
    a time as half the time the address is only 16-bit aligned.
    
    The downside is larger code size on archs that do support
    fast unaligned access.

commit fbb3ce541ef79cad1710e88a27a5babb5f6f8e5b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 11 15:01:50 2024 +0200

    liblzma: CRC: Add a comment to crc_x86_clmul.h about BUILDING_ macros.

commit 4f518c1b6b7b7ce5dcefea81acd44d7a086a8882
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 11 15:22:36 2024 +0200

    liblzma: CRC: Remove crc_always_inline, use lzma_always_inline instead.
    
    Now crc_simd_body() in crc_x86_clmul.h is only called once
    in a translation unit, we no longer need to be so cautious
    about ensuring the always-inline behavior.

commit 35c03ec6bf66f1b159964c9721a2dce0e2859b20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 11 14:39:46 2024 +0200

    liblzma: CRC: Update CLMUL comments to more generic wording.

commit 66f080e8016129576536482ac377e2ecac7a2b90
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 10 18:23:31 2024 +0200

    liblzma: Rename arch-specific CRC functions and macros.
    
    CRC_CLMUL was split to CRC_ARCH_OPTIMIZED and CRC_X86_CLMUL.
    CRC_ARCH_OPTIMIZED is defined when an arch-optimized version is used.
    Currently the x86 CLMUL implementations are the only arch-optimized
    versions, and these also use the CRC_x86_CLMUL macro to tell when
    crc_x86_clmul.h needs to be included.
    
    is_clmul_supported() was renamed to is_arch_extension_supported().
    crc32_clmul() and crc64_clmul() were renamed to
    crc32_arch_optimized() and crc64_arch_optimized().
    This way the names make sense with arch-specific non-CLMUL
    implementations as well.

commit 3dbed75b0b9c7087c76fe687acb5cf582cd57b99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 10 18:19:21 2024 +0200

    liblzma: Fix a comment in crc_common.h.

commit 419f55f9dfc2df8792902b8953d50690121afeea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 20 23:35:10 2023 +0300

    liblzma: Avoid extern lzma_crc32_clmul() and lzma_crc64_clmul().
    
    A CLMUL-only build will have the crcxx_clmul() inlined into
    lzma_crcxx(). Previously a jump to the extern lzma_crcxx_clmul()
    was needed. Notes about shared liblzma on ELF platforms:
    
      - On platforms that support ifunc and -fvisibility=hidden, this
        was silly because CLMUL-only build would have that single extra
        jump instruction of extra overhead.
    
      - On platforms that support neither -fvisibility=hidden nor linker
        version script (liblzma*.map), jumping to lzma_crcxx_clmul()
        would go via PLT so a few more instructions of overhead (still
        not a big issue but silly nevertheless).
    
    There was a downside with static liblzma too: if an application only
    needs lzma_crc64(), static linking would make the linker include the
    CLMUL code for both CRC32 and CRC64 from crc_x86_clmul.o even though
    the CRC32 code wouldn't be needed, thus increasing code size of the
    executable (assuming that -ffunction-sections isn't used).
    
    Also, now compilers are likely to inline crc_simd_body()
    even if they don't support the always_inline attribute
    (or MSVC's __forceinline). Quite possibly all compilers
    that build the code do support such an attribute. But now
    it likely isn't a problem even if the attribute wasn't supported.
    
    Now all x86-specific stuff is in crc_x86_clmul.h. If other archs
    The other archs can then have their own headers with their own
    is_clmul_supported() and crcxx_clmul().
    
    Another bonus is that the build system doesn't need to care if
    crc_clmul.c is needed.
    
    is_clmul_supported() stays as inline function as it's not needed
    when doing a CLMUL-only build (avoids a warning about unused function).

commit e3833e297dfb5021a197bda34ba2a795e30aaf8a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 21 00:06:52 2023 +0300

    liblzma: crc_clmul.c: Add crc_attr_target macro.
    
    This reduces the number of the complex #if directives.

commit d164ac0e62904126f7920c25f9a2875c8cd28b97
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 20 22:49:48 2023 +0300

    liblzma: Simplify existing cases with lzma_attr_no_sanitize_address.

commit 9523c1300d22fa715765c181cf991d14d6112fb1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 20 21:53:35 2023 +0300

    liblzma: #define crc_attr_no_sanitize_address in crc_common.h.

commit 93d144f0930821590524247bd174afd38003d7f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 20 23:25:14 2023 +0300

    liblzma: CRC: Add empty lines.
    
    And remove one too.

commit 0c7e854ffd27f1cec2e9b0e61601d6f90bfa10ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 20 23:19:33 2023 +0300

    liblzma: crc_clmul.c: Tidy up the location of MSVC pragma.
    
    It makes no difference in practice.

commit 15cf3f04f270d707a5c91cc0208b23b6db42b774
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 20 21:16:24 2023 +0200

    Update THANKS.

commit cd64dd70d5665b6048829c45772d08606f44672e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 20 21:15:16 2023 +0200

    liblzma: Use 8-byte method in memcmplen.h on ARM64.
    
    It requires fast unaligned access to 64-bit integers
    and a fast instruction to count leading zeros in
    a 64-bit integer (__builtin_ctzll()). This perhaps
    should be enabled on some other archs too.
    
    Thanks to Chenxi Mao for the original patch:
    https://github.com/tukaani-project/xz/pull/75 (the first commit)
    According to the numbers there, this may improve encoding
    speed by about 3-5 %.
    
    This enables the 8-byte method on MSVC ARM64 too which
    should work but wasn't tested.

commit 12c90c00f05e19da3c0c91d8cd8e0d0d45965606
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 20 21:01:06 2023 +0200

    liblzma: Check also for __clang__ in memcmplen.h.
    
    This change hopefully makes no practical difference as Clang
    likely was detected via __GNUC__ or _MSC_VER already.

commit 12b89bcc9915090eb42ae638e565af44b6832a23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 23 17:39:10 2023 +0200

    xz: Tweak a comment.

commit 659aca0d695807c0762d4101765189e4e33d1e2c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 17 19:35:19 2023 +0200

    xz: Move the check for --suffix with --format=raw a few lines earlier.
    
    Now it reads from argv[] instead of args->arg_names.

commit 46007049cd42e606543dbe650feb17bdf4469c29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 31 21:41:09 2023 +0200

    liblzma: Fix compilation of fastpos_tablegen.c.
    
    The macro lzma_attr_visibility_hidden has to be defined to make
    fastpos.h usable. The visibility attribute is irrelevant to
    fastpos_tablegen.c so simply #define the macro to an empty value.
    
    fastpos_tablegen.c is never built by the included build systems
    and so the problem wasn't noticed earlier. It's just a standalone
    program for generating fastpos_table.c.
    
    Fixes: https://github.com/tukaani-project/xz/pull/69
    Thanks to GitHub user Jamaika1.

commit 8c36ab79cbf23104ce7a3d533d5ac98cd492e57c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 30 18:09:53 2023 +0200

    liblzma: Add a note why crc_always_inline exists for now.
    
    Solaris Studio is a possible example (not tested) which
    supports the always_inline attribute but might not get
    detected by the common.h #ifdefs.

commit e7a86b94cd247435ac96bc79ba528b690b9ca388
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 22 17:59:11 2023 +0300

    liblzma: Use lzma_always_inline in memcmplen.h.

commit dcfe5632992fb7f06f921da13fcdd84f83d0d285
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 30 17:43:03 2023 +0200

    liblzma: #define lzma_always_inline in common.h.

commit 41113fe30a47f6fd3e30cb4494dd538e86212edf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 22 17:15:32 2023 +0300

    liblzma: Use lzma_attr_visibility_hidden on private extern declarations.
    
    These variables are internal to liblzma and not exposed in the API.

commit a2f5ca706acc6f7715b8d260a8c6ed50d7717478
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 22 17:08:39 2023 +0300

    liblzma: #define lzma_attr_visibility_hidden in common.h.
    
    In ELF shared libs:
    
    -fvisibility=hidden affects definitions of symbols but not
    declarations.[*] This doesn't affect direct calls to functions
    inside liblzma as a linker can replace a call to lzma_foo@plt
    with a call directly to lzma_foo when -fvisibility=hidden is used.
    
    [*] It has to be like this because otherwise every installed
        header file would need to explictly set the symbol visibility
        to default.
    
    When accessing extern variables that aren't defined in the
    same translation unit, compiler assumes that the variable has
    the default visibility and thus indirection is needed. Unlike
    function calls, linker cannot optimize this.
    
    Using __attribute__((__visibility__("hidden"))) with the extern
    variable declarations tells the compiler that indirection isn't
    needed because the definition is in the same shared library.
    
    About 15+ years ago, someone told me that it would be good if
    the CRC tables would be defined in the same translation unit
    as the C code of the CRC functions. While I understood that it
    could help a tiny amount, I didn't want to change the code because
    a separate translation unit for the CRC tables was needed for the
    x86 assembly code anyway. But when visibility attributes are
    supported, simply marking the extern declaration with the
    hidden attribute will get identical result. When there are only
    a few affected variables, this is trivial to do. I wish I had
    understood this back then already.

commit 2c7ee92e44e1e66f0a427555233eb22c78f6c4f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 30 22:54:28 2023 +0300

    liblzma: Refer to MinGW-w64 instead of MinGW in the API headers.
    
    MinGW (formely a MinGW.org Project, later the MinGW.OSDN Project
    at <https://osdn.net/projects/mingw/>) has GCC 9.2.0 as the
    most recent GCC package (released 2021-02-02). The project might
    still be alive but majority of people have switched to MinGW-w64.
    Thus it seems clearer to refer to MinGW-w64 in our API headers too.
    Building with MinGW is likely to still work but I haven't tested it
    in the recent years.

commit 597f49b61475438a43a417236989b2acc968a686
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 27 00:58:17 2023 +0300

    CMake: Use -D_FILE_OFFSET_BITS=64 if (and only if) needed.
    
    A CMake option LARGE_FILE_SUPPORT is created if and only if
    -D_FILE_OFFSET_BITS=64 affects sizeof(off_t).
    
    This is needed on many 32-bit platforms and even with 64-bit builds
    with MinGW-w64 to get support for files larger than 2 GiB.

commit 1bc548b8210366e44ba35b0b11577a8e328c1228
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 30 02:14:25 2023 +0300

    CMake: Generate and install liblzma.pc if not using MSVC.
    
    Autotools based build uses -pthread and thus adds it to Libs.private
    in liblzma.pc. CMake doesn't use -pthread at all if pthread functions
    are available in libc so Libs.private doesn't get -pthread either.

commit 2add71966f891d315105d6245f724ed4f43a4eff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 30 01:13:13 2023 +0300

    CMake: Rearrange the PACKAGE_ variables.
    
    The windres workaround now replaces spaces with \x20 so
    the package name isn't repeated.
    
    These changes will help with creation of liblzma.pc.

commit a7d1b2825c49dc83f1910eeb8ba0f1dfbd886d91
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 29 20:46:11 2023 +0300

    liblzma: Add Cflags.private to liblzma.pc.in for MSYS2.
    
    It properly adds -DLZMA_API_STATIC when compiling code that
    will be linked against static liblzma. Having it there on
    systems other than Windows does no harm.
    
    See: https://www.msys2.org/docs/pkgconfig/

commit 80e0750e3996c1c659e972ce9cf789ca2e99f702
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 27 22:46:20 2023 +0300

    CMake: Create liblzma.def when building liblzma.dll with MinGW-w64.

commit 08d12595f486890cf601b87f36ee0ddbce57728e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 26 21:44:42 2023 +0300

    CMake: Change one CMAKE_CURRENT_SOURCE_DIR to CMAKE_CURRENT_LIST_DIR.
    
    In this case they have identical values.

commit e67aaf698de75c73443a5ec786781cbf2034461d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 1 19:10:57 2023 +0300

    CMake/Windows: Fix the import library filename.
    
    Both PREFIX and IMPORT_PERFIX have to be set to "" to get
    liblzma.dll and liblzma.dll.a.

commit 88588b1246d8c26ffbc138b3e5c413c5f14c3179
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 25 19:13:25 2023 +0300

    Build: Detect -fsanitize= in CFLAGS and incompatible build options.
    
    Now configure will fail if -fsanitize= is found in CFLAGS
    and sanitizer-incompatible ifunc or Landlock sandboxing
    would be used. These are incompatible with one or more sanitizers.
    It's simpler to reject all -fsanitize= uses instead of trying to
    pass those that might not cause problems.
    
    CMake-based build was updated similarly. It lets the configuration
    finish (SEND_ERROR instead of FATAL_ERROR) so that both error
    messages can be seen at once.

commit 91c435cf1c7a1e893706d4d716dfd361621ed824
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 11 19:47:44 2023 +0300

    CMake: Don't shadow the cache entry ENABLE_THREADS with a normal variable.
    
    Using set(ENABLE_THREADS "posix") is confusing because it sets
    a new normal variable and leaves the cache entry with the same
    name unchanged. The intent wasn't to change the cache entry so
    this switches to a different variable name.

commit fa1609eb9393ecd30decfed4891c907829f06710
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 22:28:49 2023 +0300

    Docs: Update INSTALL about sandboxing support.

commit 8276c7f41c671eee4aa3239490658b23dcfd3021
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 22:07:52 2023 +0300

    xz: Support basic sandboxing with Linux Landlock (ABI versions 1-3).
    
    It is enabled only when decompressing one file to stdout,
    similar to how Capsicum is used.
    
    Landlock was added in Linux 5.13.

commit 3a1e9fd031b9320d769d63b503ef4e82e1b6ea8c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 21:12:31 2023 +0300

    CMake: Edit threading related messages.
    
    It's mostly to change from "thread method" to "threading method".

commit bf011352528ae3539ea7b780b45b96736ee57a99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 20:59:24 2023 +0300

    CMake: Use FATAL_ERROR if user-supplied options aren't understood.
    
    This way typos are caught quickly and compounding error messages
    are avoided (a single typo could cause more than one error).
    
    This keeps using SEND_ERROR when the system is lacking a feature
    (like threading library or sandboxing method). This way the whole
    configuration log will be generated in case someone wishes to
    report a problem upstream.

commit 3f53870c249945d657ca3d75e0993e6267d71f75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 18:37:32 2023 +0300

    CMake: Add sandboxing support.

commit 2e2cd11535ad77364cf021297e0b3f162fa3a3d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 9 18:13:08 2023 +0300

    Simplify detection of Capsicum support.
    
    This removes support for FreeBSD 10.0 and 10.1 which used
    <sys/capability.h> instead of <sys/capsicum.h>. Support for
    FreeBSD 10.1 ended on 2016-12-31. So now FreeBSD >= 10.2 is
    required to enable Capsicum support.
    
    This also removes support for Capsicum on Linux (libcaprights)
    which seems to have been unmaintained since 2017 and Linux 4.11:
    https://github.com/google/capsicum-linux

commit c57858b60e186d020b2dbaf7aabd9b32c71da824
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 25 01:46:36 2023 +0300

    xz/Windows: Allow clock_gettime with POSIX threads.
    
    If winpthreads are used for threading, it's OK to use clock_gettime()
    from winpthreads too.

commit dd32f628bb5541ef4e8ce66966ef456a1934084c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 25 01:39:26 2023 +0300

    mythread.h: Make MYTHREAD_POSIX compatible with MinGW-w64's winpthreads.
    
    This might be almost useless but it doesn't need much extra code either.

commit 680e52cdd086e92691d8a0bca2c98815565f60ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 23 03:06:36 2023 +0300

    CMake: Check for clock_gettime() even on Windows.
    
    This mirrors configure.ac although currently MinGW-w64 builds
    don't use clock_gettime() even if it is found.

commit 1c1a8c3ee4dad0064dbe63b8dbc4ac4bc679f419
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 23 03:23:32 2023 +0300

    Build: Check for clock_gettime() even if not using POSIX threads.
    
    See the new comment in the code.
    
    This also makes the check for clock_gettime() run with MinGW-w64
    with which we don't want to use clock_gettime(). The previous
    commit already took care of this situation.

commit 46fd991cd2808ef62554853864c946232e7547f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 24 22:58:53 2023 +0300

    xz/Windows: Ensure that clock_gettime() isn't used with MinGW-w64.
    
    This commit alone doesn't change anything in the real-world:
    
      - configure.ac currently checks for clock_gettime() only
        when using pthreads.
    
      - CMakeLists.txt doesn't check for clock_gettime() on Windows.
    
    So clock_gettime() wasn't used with MinGW-w64 before either.
    
    clock_gettime() provides monotonic time and it's better than
    gettimeofday() in this sense. But clock_gettime() is defined
    in winpthreads, and liblzma or xz needs nothing else from
    winpthreads. By avoiding clock_gettime(), we avoid the dependency on
    libwinpthread-1.dll or the need to link against the static version.
    
    As a bonus, GetTickCount64() and MinGW-w64's gettimeofday() can be
    faster than clock_gettime(CLOCK_MONOTONIC, &tv). The resolution
    is more than good enough for the progress indicator in xz.

commit cdb4d91f2464b50c985ef7b9517314ea237ddda7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 24 00:21:22 2023 +0300

    xz/Windows: Use GetTickCount64() with MinGW-w64 if using Vista threads.

commit 9a78971261bc67622cbd7dae02f6966968ac1393
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 14 20:16:13 2023 +0300

    tuklib_integer: Update the CMake test for fast unaligned access.

commit 2f81ac852bc5aafc91c8e2adc66b5114761703c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 23 23:28:48 2023 +0300

    Build: Enabled unaligned access by default on PowerPC64LE and some RISC-V.
    
    PowerPC64LE wasn't tested but it seems like a safe change.
    POWER8 supports unaligned access in little endian mode. Testing
    on godbolt.org shows that GCC uses unaligned access by default.
    
    The RISC-V macro __riscv_misaligned_fast is very new and not
    in any stable compiler release yet.
    
    Documentation in INSTALL was updated to match.
    
    Documentation about an autodetection bug when using ARM64 GCC
    with -mstrict-align was added to INSTALL.
    
    CMake files weren't updated yet.

commit c8f715f1bca4c30db814fcf1fd2fe88b8992ede2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 14 17:56:59 2023 +0300

    tuklib_integer: Revise unaligned reads and writes on strict-align archs.
    
    In XZ Utils context this doesn't matter much because
    unaligned reads and writes aren't used in hot code
    when TUKLIB_FAST_UNALIGNED_ACCESS isn't #defined.

commit 6828242735cbf61b93d140383336e1e51a006f2d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 23 02:21:49 2023 +0300

    tuklib_integer: Add missing write64be and write64le fallback functions.

commit 5ce0f7a48bdf5c3b45430850a4487307afac6143
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 18 14:30:00 2023 +0300

    liblzma: CRC_USE_GENERIC_FOR_SMALL_INPUTS cannot be used with ifunc.

commit 27735380491bb5ce0d0f41d5244d89c1d0825f6b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 17 21:53:11 2023 +0300

    liblzma: Include common.h in crc_common.h.
    
    crc_common.h depends on common.h. The headers include common.h except
    when there is a reason to not do so.

commit 5c4bca521e6fb435898a0012b3276eee70a6dadf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 6 19:36:35 2023 +0300

    Update THANKS.

commit d91cb6e884c73d0b05d7e7d68ad4e6eb29f4b44b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 6 18:55:57 2023 +0300

    CMake/Windows: Fix when the windres workaround is applied.
    
    CMake doesn't set WIN32 on CYGWIN but the workaround is
    probably needed on Cygwin too. Same for MSYS and MSYS2.
    
    The workaround must not be used with Clang that is acting in
    MSVC mode. This fixes it by checking for the known environments
    that need the workaround instead of using "NOT MSVC".
    
    Thanks to Martin Storsjö.
    https://github.com/tukaani-project/xz/commit/0570308ddd9c0e39e85597ebc0e31d4fc81d436f#commitcomment-129098431

commit 0570308ddd9c0e39e85597ebc0e31d4fc81d436f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 27 19:54:35 2023 +0300

    CMake: Fix Windows build with Clang/LLVM 17.
    
    llvm-windres 17.0.0 has more accurate emulation of GNU windres, so
    the hack for GNU windres must now be used with llvm-windres too.
    
    LLVM 16.0.6 has the old behavior and there likely won't be more
    16.x releases. So we can simply check for >= 17.0.0.
    
    See also:
    https://github.com/llvm/llvm-project/commit/2bcc0fdc58a220cb9921b47ec8a32c85f2511a47

commit 5a9af95f85a7e5d4f9c10cb8cf737651a921f1d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 26 21:47:13 2023 +0300

    liblzma: Update a comment.
    
    The C standards don't allow an empty translation unit which can be
    avoided by declaring something, without exporting any symbols.
    
    When I committed f644473a211394447824ea00518d0a214ff3f7f2 I had
    a feeling that some specific toolchain somewhere didn't like
    empty object files (assembler or maybe "ar" complained) but
    I cannot find anything to confirm this now. Quite likely I
    remembered nonsense. I leave this here as a note to my future self. :-)

commit 092d21db2e5eea19fe079264ce48c178989c7606
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 26 17:24:15 2023 +0300

    Build: Update the comment about -Werror usage in checks.

commit a37a2763383e6c204fe878e1416dd35e7711d3a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 26 15:00:43 2023 +0300

    Build: Fix __attribute__((ifunc(...))) detection with clang -Wall.
    
    Now if user-supplied CFLAGS contains -Wall -Wextra -Wpedantic
    the two checks that need -Werror will still work.
    
    At CMake side there is add_compile_options(-Wall -Wextra)
    but it didn't affect the -Werror tests. So with both Autotools
    and CMake only user-supplied CFLAGS could make the checks fail
    when they shouldn't.
    
    This is not a full fix as things like -Wunused-macros in
    user-supplied CFLAGS will still cause problems with both
    GCC and Clang.

commit 9c42f936939b813f25d0ff4e99c3eb9c2d17a0d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 26 13:51:31 2023 +0300

    Build: Fix underquoted AC_LANG_SOURCE.
    
    It made no practical difference in this case.

commit 9f1444a8a5c0e724b2c7ef83424f642f07a95982
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 26 13:14:37 2023 +0300

    Build: Silence two Autoconf warnings.
    
    There were two uses of AC_COMPILE_IFELSE that didn't use
    AC_LANG_SOURCE and Autoconf warned about these. The omission
    had been intentional but it turned out that this didn't do
    what I thought it would.
    
    Autoconf 2.71 manual gives an impression that AC_LANG_SOURCE
    inserts all #defines that have been made with AC_DEFINE so
    far (confdefs.h). The idea was that omitting AC_LANG_SOURCE
    would mean that only the exact code included in the
    AC_COMPILE_IFELSE call would be compiled.
    
    With C programs this is not true: the #defines get added without
    AC_LANG_SOURCE too. There seems to be no neat way to avoid this.
    Thus, with the C language at least, adding AC_LANG_SOURCE makes
    no other difference than silencing a warning from Autoconf. The
    generated "configure" remains identical. (Docs of AC_LANG_CONFTEST
    say that the #defines have been inserted since Autoconf 2.63b and
    that AC_COMPILE_IFELSE uses AC_LANG_CONFTEST. So the behavior is
    documented if one also reads the docs of macros that one isn't
    calling directly.)
    
    Any extra code, including #defines, can cause problems for
    these two tests because these tests must use -Werror.
    CC=clang CFLAGS=-Weverything is the most extreme example.
    It enables -Wreserved-macro-identifier which warns about
    #define __EXTENSIONS__ 1 because it begins with two underscores.
    It's possible to write a test file that passes -Weverything but
    it becomes impossible when Autoconf inserts confdefs.h.
    
    So this commit adds AC_LANG_SOURCE to silence Autoconf warnings.
    A different solution is needed for -Werror tests.

commit 5b7a6f06e93d99d6635a740fd2e12fab66096c93
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 22 21:16:52 2023 +0300

    Windows: Update the version requirement comments from Win95 to W2k.

commit e582f8e0fee46e7cd967f42f465d6bb608b73bc1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 22 21:12:54 2023 +0300

    tuklib_physmem: Comment out support for Windows versions older than 2000.

commit 7d73d1f0e08f96c4ab7aac91b958e37a3dadf07a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 24 16:32:32 2023 +0300

    sysdefs.h: Update the comment about __USE_MINGW_ANSI_STDIO.

commit 2a9929af0ab7e6c0ab725565034afe3293e51d71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 22 02:33:29 2023 +0300

    xz: Windows: Don't (de)compress to special files like "con" or "nul".
    
    Before this commit, the following writes "foo" to the
    console and deletes the input file:
    
        echo foo | xz > con_xz
        xz --suffix=_xz --decompress con_xz
    
    It cannot happen without --suffix because names like con.xz
    are also special and so attempting to decompress con.xz
    (or compress con to con.xz) will already fail when opening
    the input file.
    
    Similar thing is possible when compressing. The following
    writes to "nul" and the input file "n" is deleted.
    
        echo foo | xz > n
        xz --suffix=ul n
    
    Now xz checks if the destination is a special file before
    continuing. DOS/DJGPP version had a check for this but
    Windows (and OS/2) didn't.

commit 01311b81f03cce1c0ce847a3d556f84dbd439343
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 21 20:42:52 2023 +0300

    CMake: Wrap two overlong lines that are possible to wrap.

commit 152d0771ddd0cffcac9042ad1a66f110d228eee2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 21 20:36:31 2023 +0300

    CMake: Add a comment about threads on Cygwin.

commit 6df988cceffaa3100b428ed816fad334935b27bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 23:53:25 2023 +0300

    MSVC: Remove Visual Studio project files and update INSTALL-MSVC.txt.
    
    CMake is now the preferred build file generator when building
    with MSVC.

commit edd563daf0da1d00018684614803c77ab62efcd6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 21 19:17:40 2023 +0300

    CMake: Require VS2015 or later for building xzdec.
    
    xzdec might build with VS2013 but it hasn't been tested.
    It was never supported before and VS2013 is old anyway
    so for simplicity only liblzma is supported with VS2013.

commit daea64d158a7151ca6c255a0e4554c6d521cd589
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 23:43:49 2023 +0300

    CMake: Allow building xz with Visual Studio 2015 and later.
    
    Building the command line tools xz and xzdec with the combination
    of CMake + Visual Studio 2015/2017/2019/2022 works now.
    
    VS2013 update 2 should still be able to build liblzma.
    VS2013 cannot build the xz command line tool because xz
    needs snprintf() that roughly conforms to C99.
    VS2013 is old and no extra code will be added to support it.
    
    Thanks to Kelvin Lee and Jia Tan for testing.

commit 8c2d197c940d246849b2ec48109bb22e54036927
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 23:34:31 2023 +0300

    MSVC: #define inline and restrict only when needed.
    
    This also drops the check for _WIN32 as that shouldn't be needed.

commit af66cd585902045e5689a0418103ec81f19f1d0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 22:16:56 2023 +0300

    CMake: Add support for replacement getopt_long (lib/getopt*).
    
    Thanks to Jia Tan for the initial work. I added the libgnu target
    and made a few related minor edits.

commit e3288fdb45c580cb849f6799cf419c4922004ae5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 21:12:34 2023 +0300

    CMake: Bump maximum policy version to 3.27.
    
    There are several new policies. CMP0149 may affect the Windows SDK
    version that CMake will choose by default. The new behavior is more
    predictable, always choosing the latest SDK version by default.
    
    The other new policies shouldn't affect this package.

commit aff1b479c7b168652bd20305ceed4317d5db6661
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 12 20:55:10 2023 +0300

    lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.
    
    The CMake-based build doesn't use config.h.
    
    Up-to-date getopt_long in Gnulib is LGPLv2 so at some
    point it could be included in XZ Utils too but for now
    this commit is enough to make CMake-based build possible.

commit aa0cd585d2ed1455d35732798e0d90e3520e8ba5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 8 19:08:57 2023 +0300

    Doxygen: Add more C macro names to PREDEFINED.

commit ee7709bae53637e1765ce142ef102914f1423cb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 11 18:47:26 2023 +0300

    liblzma: Move a few __attribute__ uses in function declarations.
    
    The API headers have many attributes but these were left
    as is for now.

commit 217958d88713b5dc73d366d24dd64b2b311b86fe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 11 19:03:35 2023 +0300

    xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.
    
    For compatibility with C23's [[noreturn]], tuklib_attr_noreturn
    must be at the beginning of declaration (before "extern" or
    "static", and even before any GNU C's __attribute__).
    
    This commit also moves all other function attributes to
    the beginning of function declarations. "extern" is kept
    at the beginning of a line so the attributes are listed on
    separate lines before "extern" or "static".

commit 18a66fbac031c98f9c2077fc88846e4d07849197
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 11 18:53:31 2023 +0300

    Remove incorrect uses of __attribute__((__malloc__)).
    
    xrealloc() is obviously incorrect, modern GCC docs even
    mention realloc() as an example where this attribute
    cannot be used.
    
    liblzma's lzma_alloc() and lzma_alloc_zero() would be
    correct uses most of the time but custom allocators
    may use a memory pool or otherwise hold the pointer
    so aliasing issues could happen in theory.
    
    The xstrdup() case likely was correct but I removed it anyway.
    Now there are no __malloc__ attributes left in the code.
    The allocations aren't in hot paths so this should make
    no practical difference.

commit 74b0e900c92d5b222b36f474f1efa431f8e262f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 8 18:41:25 2023 +0300

    Build: Omit -Wc99-c11-compat since it warns about _Noreturn.

commit 90c94dddfd57b7d744bfad64c54e10d15778144b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 8 18:19:26 2023 +0300

    tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.
    
    This makes no difference for GCC or Clang as they support
    GNU C's __attribute__((__noreturn__)) but this helps with MSVC:
    
      - VS 2019 version 16.7 and later support _Noreturn if the
        options /std:c11 or /std:c17 are used. This gets handled
        with the check for __STDC_VERSION__ >= 201112.
    
      - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.
    
    C23 will deprecate _Noreturn (and <stdnoreturn.h>)
    for [[noreturn]]. This commit anticipates that but
    the final __STDC_VERSION__ value isn't known yet.

commit 189f72581329ab281ad6af37f60135910cb1b146
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 11 17:22:44 2023 +0300

    Update THANKS.

commit 79334e7f20f2bf9e0de095835b48868f1238f584
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 5 22:42:10 2023 +0300

    MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.
    
    Thanks to Kelvin Lee for the original patches
    and testing the modifications I made.

commit c660b8d78b7bda43b12b285550d8c70e8ccec698
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 5 21:33:35 2023 +0300

    MSVC: xz: Use GetTickCount64() to implement mytime_now().
    
    It's available since Windows Vista.

commit adef92f23563a2cc088b31ddee9040ecc96bc996
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 19 14:03:45 2023 +0300

    Update THANKS.

commit f167e79bc98f3f56af2e767b83aa81c2d2b9ed77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 14 16:35:46 2023 +0300

    Update THANKS.

commit 4f44ef86758a41a8ec814096f4cb6ee6de04c82e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 14 16:34:07 2023 +0300

    liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).
    
    Thanks to Agostino Sarubbo.
    Fixes: https://github.com/tukaani-project/xz/issues/62

commit eccf12866527b8d24c7d7f92f755142be8ef9b11
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 31 19:50:05 2023 +0300

    xz: Refactor thousand separator detection and disable it on MSVC.
    
    Now the two variations of the format strings are created with
    a macro, and the whole detection code can be easily disabled
    on platforms where thousand separator formatting is known to
    not work (MSVC has no support, and on DJGPP 2.05 it can have
    problems in some cases).

commit f7093cd9d130477c234b40aeda613964171f8f21
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 31 18:14:43 2023 +0300

    xz: Fix a too relaxed assertion and remove uses of SSIZE_MAX.
    
    SSIZE_MAX isn't readily available on MSVC. Removing it means
    that there is one thing less to worry when porting to MSVC.

commit 16068f6c30b888cdb873f6285af941d00f95741d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Aug 2 17:15:12 2023 +0300

    xz: Omit an empty paragraph on the man page.

commit e8c2203b2c76466d8d3387c5212b46151de8e605
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Aug 2 15:19:43 2023 +0300

    build-aux/manconv.sh: Fix US-ASCII and UTF-8 output.
    
    groff defaults to SGR escapes. Using -P-c passes -c to grotty
    which restores the old behavior. Perhaps there is a better way to
    get pure plain text output but this works for now.

commit 9a706167b0d903d92fd134895acb4bc6a5e3e688
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 1 19:10:43 2023 +0300

    Update THANKS.

commit 33e25a0f5650754c38bed640deedefe3b4fec5ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 1 18:22:24 2023 +0300

    Update THANKS.

commit b6b7d065853cd4c3f5b8d9be8aea0b6dcb0fe090
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 18 17:37:33 2023 +0300

    xz: Translate the second "%s: " in message.c since French needs "%s : ".
    
    This string is used to print a filename when using "xz -v" and
    stderr isn't a terminal.

commit be644042c3066d8e7a2834f989671ba74d27f749
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 18 14:35:33 2023 +0300

    xz: Make "%s: %s" translatable because French needs "%s : %s".

commit 97fd5cb669ee0afc48d2087675ab166aff89eaa2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 18 13:57:54 2023 +0300

    liblzma: Tweak #if condition in memcmplen.h.
    
    Maybe ICC always #defines _MSC_VER on Windows but now
    it's very clear which code will get used.

commit 40392c19f71985852d75997f109dea97177d6f3f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 18 13:49:43 2023 +0300

    liblzma: Omit unnecessary parenthesis in a preprocessor directive.

commit b4cf7a2822e8d30eb2b12a1a07fd04383b10ade3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 27 17:24:49 2023 +0300

    Minor tweaks to style and comments.

commit 23fb9e3a329117c2968c1e7388b6ef07c782dba1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 27 17:19:49 2023 +0300

    CMake: Rename CHECK_ATTR_IFUNC to ALLOW_ATTR_IFUNC.
    
    It's so that there's a clear difference in wording compared
    to liblzma's integrity check types.

commit ee44863ae88e377a5df10db007ba9bfadde3d314
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 27 17:05:23 2023 +0300

    liblzma: Add ifunc implementation to crc64_fast.c.
    
    The ifunc method avoids indirection via the function pointer
    crc64_func. This works on GNU/Linux and probably on FreeBSD too.
    The previous __attribute((__constructor__)) method is kept for
    compatibility with ELF platforms which do support ifunc.
    
    The ifunc method has some limitations, for example, building
    liblzma with -fsanitize=address will result in segfaults.
    The configure option --disable-ifunc must be used for such builds.
    
    Thanks to Hans Jansen for the original patch.
    Closes: https://github.com/tukaani-project/xz/pull/53

commit 44c0c5eae990a22ef04e9b88c1a15838a0d00878
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 3 22:46:42 2023 +0300

    tuklib_integer.h: Fix a recent copypaste error in Clang detection.
    
    Wrong line was changed in 7062348bf35c1e4cbfee00ad9fffb4a21aa6eff7.
    Also, this has >= instead of == since ints larger than 32 bits would
    work too even if not relevant in practice.

commit 3938718ce3773c90755785c0df8777f133b7ae29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 14 18:42:33 2023 +0300

    liblzma: Update project maintainers in lzma.h.
    
    AUTHORS was updated earlier, lzma.h was simply forgotten.

commit 0ba234f692772595329d225462d391fe2c199d0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 23 15:14:29 2023 +0200

    CMake: Bump maximum policy version to 3.26.
    
    It adds only one new policy related to FOLDERS which we don't use.
    This makes it clear that the code is compatible with the policies
    up to 3.26.

commit 8be136f667aaeb8f9e16fbd57a83cb282f0c27ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 21 14:07:51 2023 +0200

    Build: Add a comment that AC_PROG_CC_C99 is needed for Autoconf 2.69.
    
    It's obsolete in Autoconf >= 2.70 and just an alias for AC_PROG_CC
    but Autoconf 2.69 requires AC_PROG_CC_C99 to get a C99 compiler.

commit 53cc475f2652d9e390ca002018dfd0af0626ef80
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 21 14:04:37 2023 +0200

    Build: configure.ac: Use AS_IF and AS_CASE where required.
    
    This makes no functional difference in the generated configure
    (at least with the Autotools versions I have installed) but this
    change might prevent future bugs like the one that was just
    fixed in the commit 5a5bd7f871818029d5ccbe189f087f591258c294.

commit 3b8890a40233b6c783bb101ec14405e786871775
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 21 13:12:03 2023 +0200

    Update THANKS.

commit 5a5bd7f871818029d5ccbe189f087f591258c294
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 21 13:11:49 2023 +0200

    Build: Fix --disable-threads breaking the building of shared libs.
    
    This is broken in the releases 5.2.6 to 5.4.2. A workaround
    for these releases is to pass EGREP='grep -E' as an argument
    to configure in addition to --disable-threads.
    
    The problem appeared when m4/ax_pthread.m4 was updated in
    the commit 6629ed929cc7d45a11e385f357ab58ec15e7e4ad which
    introduced the use of AC_EGREP_CPP. AC_EGREP_CPP calls
    AC_REQUIRE([AC_PROG_EGREP]) to set the shell variable EGREP
    but this was only executed if POSIX threads were enabled.
    Libtool code also has AC_REQUIRE([AC_PROG_EGREP]) but Autoconf
    omits it as AC_PROG_EGREP has already been required earlier.
    Thus, if not using POSIX threads, the shell variable EGREP
    would be undefined in the Libtool code in configure.
    
    ax_pthread.m4 is fine. The bug was in configure.ac which called
    AX_PTHREAD conditionally in an incorrect way. Using AS_CASE
    ensures that all AC_REQUIREs get always run.
    
    Thanks to Frank Busse for reporting the bug.
    Fixes: https://github.com/tukaani-project/xz/issues/45

commit dfe1710784c0a3c3a90c17b80c9e1fe19b5fce06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 19 22:45:59 2023 +0200

    liblzma: Silence -Wsign-conversion in SSE2 code in memcmplen.h.
    
    Thanks to Christian Hesse for reporting the issue.
    Fixes: https://github.com/tukaani-project/xz/issues/44

commit 5a7b930efa7f9849d8da8397e8e5d8638f92be40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 18 16:00:54 2023 +0200

    Update the copy of GNU GPLv3 from gnu.org to COPYING.GPLv3.

commit b473a92891f7e991398a3b5eff305f6f2b6d7293
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 18 15:51:57 2023 +0200

    Change a few HTTP URLs to HTTPS.
    
    The xz man page timestamp was intentionally left unchanged.

commit 76e2315e14c399c15cc90e7930fd4d3d086b0227
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 17 18:36:22 2023 +0200

    Windows: build.bash: Copy liblzma API docs to the output package.

commit 133cf55edc5ce92952d2709abd992e48ef1f45ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 17 08:53:38 2023 +0200

    Windows: Add microlzma_*.c to the VS project files.
    
    These should have been included in 5.3.2alpha already.

commit 75c9ca450fab6982fda9286b168081c9d54126cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 17 08:43:51 2023 +0200

    CMake: Add microlzma_*.c to the build.
    
    These should have been included in 5.3.2alpha already.

commit 0cc3313bd4e569c51e686e5aab8c40c35241d34b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 17 08:41:36 2023 +0200

    Build: Update comments about unaligned access to mention 64-bit.

commit 5e57e3301319f20c35f8111dea73fa58403b96b1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 17 00:02:30 2023 +0200

    Tests: Update .gitignore.

commit 0007394d54e21bf30abb9a5e09cbc1e8d44a73ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 14 20:04:03 2023 +0200

    po4a/update-po: Display the script name consistently in error messages.

commit f68f4b27f62f53fdac570885a1f4f23367ce6599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 15 19:19:13 2023 +0200

    COPYING: Add a note about the included Doxygen-generated HTML.

commit c97d12f300b2a94c9f54a44c8931c8bc08cf0a73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 16 21:23:48 2023 +0800

    Doxygen: Refactor Doxyfile.in to doxygen/Doxyfile.
    
    Instead of having Doxyfile.in configured by Autoconf, the Doxyfile
    can have the tags that need to be configured piped into the doxygen
    command through stdin with the overrides after Doxyfile's contents.
    
    Going forward, the documentation should be generated in two different
    modes: liblzma or internal.
    
    liblzma is useful for most users. It is the documentation for just
    the liblzma API header files. This is the default.
    
    internal is for people who want to understand how xz and liblzma work.
    It might be useful for people who want to contribute to the project.

commit 717aa3651ce582807f379d8654c2516e1594df77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 11 18:42:08 2023 +0200

    xz: Simplify the error-label in Capsicum sandbox code.
    
    Also remove unneeded "sandbox_allowed = false;" as this code
    will never be run more than once (making it work with multiple
    input files isn't trivial).

commit a0eecc235d3ba8ad3453da98b46c7bc3e644de75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 7 19:59:23 2023 +0200

    xz: Make Capsicum sandbox more strict with stdin and stdout.

commit 4b7fb3bf41a0ca4c97fad3799949a2aa61b13b99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 27 18:38:35 2023 +0200

    CMake: Require that the C compiler supports C99 or a newer standard.
    
    Thanks to autoantwort for reporting the issue and suggesting
    a different patch:
    https://github.com/tukaani-project/xz/pull/42

commit 805b45cd60bfd5da3d3d89077de3789df179b324
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 23 20:46:16 2023 +0200

    Update THANKS.

commit 30e95bb44c36ae26b2ab12a94343b215fec285e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 21 22:57:10 2023 +0200

    liblzma: Avoid null pointer + 0 (undefined behavior in C).
    
    In the C99 and C17 standards, section 6.5.6 paragraph 8 means that
    adding 0 to a null pointer is undefined behavior. As of writing,
    "clang -fsanitize=undefined" (Clang 15) diagnoses this. However,
    I'm not aware of any compiler that would take advantage of this
    when optimizing (Clang 15 included). It's good to avoid this anyway
    since compilers might some day infer that pointer arithmetic implies
    that the pointer is not NULL. That is, the following foo() would then
    unconditionally return 0, even for foo(NULL, 0):
    
        void bar(char *a, char *b);
    
        int foo(char *a, size_t n)
        {
            bar(a, a + n);
            return a == NULL;
        }
    
    In contrast to C, C++ explicitly allows null pointer + 0. So if
    the above is compiled as C++ then there is no undefined behavior
    in the foo(NULL, 0) call.
    
    To me it seems that changing the C standard would be the sane
    thing to do (just add one sentence) as it would ensure that a huge
    amount of old code won't break in the future. Based on web searches
    it seems that a large number of codebases (where null pointer + 0
    occurs) are being fixed instead to be future-proof in case compilers
    will some day optimize based on it (like making the above foo(NULL, 0)
    return 0) which in the worst case will cause security bugs.
    
    Some projects don't plan to change it. For example, gnulib and thus
    many GNU tools currently require that null pointer + 0 is defined:
    
        https://lists.gnu.org/archive/html/bug-gnulib/2021-11/msg00000.html
    
        https://www.gnu.org/software/gnulib/manual/html_node/Other-portability-assumptions.html
    
    In XZ Utils null pointer + 0 issue should be fixed after this
    commit. This adds a few if-statements and thus branches to avoid
    null pointer + 0. These check for size > 0 instead of ptr != NULL
    because this way bugs where size > 0 && ptr == NULL will likely
    get caught quickly. None of them are in hot spots so it shouldn't
    matter for performance.
    
    A little less readable version would be replacing
    
        ptr + offset
    
    with
    
        offset != 0 ? ptr + offset : ptr
    
    or creating a macro for it:
    
        #define my_ptr_add(ptr, offset) \
                ((offset) != 0 ? ((ptr) + (offset)) : (ptr))
    
    Checking for offset != 0 instead of ptr != NULL allows GCC >= 8.1,
    Clang >= 7, and Clang-based ICX to optimize it to the very same code
    as ptr + offset. That is, it won't create a branch. So for hot code
    this could be a good solution to avoid null pointer + 0. Unfortunately
    other compilers like ICC 2021 or MSVC 19.33 (VS2022) will create a
    branch from my_ptr_add().
    
    Thanks to Marcin Kowalczyk for reporting the problem:
    https://github.com/tukaani-project/xz/issues/36

commit b9f171dd00a3cc32b6d41ea8e082cf545640ec2a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 17 20:56:49 2023 +0200

    Update THANKS.

commit 2ee86d20e49985b903b78ebcfa3fa672e73e93aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 17 20:48:28 2023 +0200

    Build: Use only the generic symbol versioning on MicroBlaze.
    
    On MicroBlaze, GCC 12 is broken in sense that
    __has_attribute(__symver__) returns true but it still doesn't
    support the __symver__ attribute even though the platform is ELF
    and symbol versioning is supported if using the traditional
    __asm__(".symver ...") method. Avoiding the traditional method is
    good because it breaks LTO (-flto) builds with GCC.
    
    See also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766
    
    For now the only extra symbols in liblzma_linux.map are the
    compatibility symbols with the patch that spread from RHEL/CentOS 7.
    These require the use of __symver__ attribute or __asm__(".symver ...")
    in the C code. Compatibility with the patch from CentOS 7 doesn't
    seem valuable on MicroBlaze so use liblzma_generic.map on MicroBlaze
    instead. It doesn't require anything special in the C code and thus
    no LTO issues either.
    
    An alternative would be to detect support for __symver__
    attribute in configure.ac and CMakeLists.txt and fall back
    to __asm__(".symver ...") but then LTO would be silently broken
    on MicroBlaze. It sounds likely that MicroBlaze is a special
    case so let's treat it as a such because that is simpler. If
    a similar issue exists on some other platform too then hopefully
    someone will report it and this can be reconsidered.
    
    (This doesn't do the same fix in CMakeLists.txt. Perhaps it should
    but perhaps CMake build of liblzma doesn't matter much on MicroBlaze.
    The problem breaks the build so it's easy to notice and can be fixed
    later.)
    
    Thanks to Vincent Fazio for reporting the problem and proposing
    a patch (in the end that solution wasn't used):
    https://github.com/tukaani-project/xz/pull/32

commit d831072cceca458d94d2d5da201862f6d43a417b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 16 21:09:00 2023 +0200

    liblzma: Very minor API doc tweaks.
    
    Use "member" to refer to struct members as that's the term used
    by the C standard.
    
    Use lzma_options_delta.dist and such in docs so that in Doxygen's
    HTML output they will link to the doc of the struct member.
    
    Clean up a few trailing white spaces too.

commit 718b22a6c5e3ee5de123323ea798872381f9320e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 16 17:59:50 2023 +0200

    liblzma: Silence a warning from MSVC.
    
    It gives C4146 here since unary minus with unsigned integer
    is still unsigned (which is the intention here). Doing it
    with substraction makes it clearer and avoids the warning.
    
    Thanks to Nathan Moinvaziri for reporting this.

commit 1dbe12b90cff79bb51923733ac0840747b4b4131
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 7 19:07:45 2023 +0200

    xz: Improve the comment about start_time in mytime.c.
    
    start_time is relative to an arbitary point in time, it's not
    time of day, so using it for anything else than time differences
    wouldn't make sense.

commit 610dde15a88f12cc540424eb3eb3ed61f3876f74
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 27 20:02:49 2023 +0200

    xz: Use clock_gettime() even if CLOCK_MONOTONIC isn't available.
    
    mythread.h and thus liblzma already does it.

commit 2e02877288f6576cd4595e9ac7684f867cd47d68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 27 19:41:19 2023 +0200

    po4a/po4a.conf: Sort the language identifiers in alphabetical order.

commit ff592c616eda274215b485cf1b8d34f060c9f3be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 26 18:29:17 2023 +0200

    xz: Add SIGTSTP handler for progress indicator time keeping.
    
    This way, if xz is stopped the elapsed time and estimated time
    remaining won't get confused by the amount of time spent in
    the stopped state.
    
    This raises SIGSTOP. It's not clear to me if this is the correct way.
    POSIX and glibc docs say that SIGTSTP shouldn't stop the process if
    it is orphaned but this commit doesn't attempt to handle that.
    
    Search for SIGTSTP in section 2.4.3:
    
    https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html

commit a15a7552f9f67c4e402f5d2967324e0ccfd6fccc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 26 17:51:06 2023 +0200

    Build: Avoid different quoting style in --enable-doxygen doc.

commit af5a4bd5afc089d9697756dded38feafaa987ae4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 26 17:39:46 2023 +0200

    tuklib_physmem: Check for __has_warning before GCC version.
    
    Clang can be configured to fake a too high GCC version so
    this way it's more robust.

commit 2f78ecc5939b3d97ddfc2a6bd31b50108a28d0a2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 23 23:44:58 2023 +0200

    Revert "tuklib_common: Define __has_warning if it is not defined."
    
    This reverts commit 82e3c968bfa10e3ff13333bd9cbbadb5988d6766.
    
    Macros in the reserved namespace (_foo or __foo) shouldn't be #defined
    without a very good reason. Here the alternative would have been
    to #define tuklib_has_warning(str) to an approriate value.
    
    Also the tuklib_* files should stay namespace clean if possible.

commit 8366cf8738e8b7bb74c967d07bf0fd2a1878e575
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 23 23:38:34 2023 +0200

    tuklib_physmem: Clean up the way -Wcast-function-type is silenced on Windows.
    
    __has_warning and other __has_foo macros are meant to become
    compiler-agnostic so it's not good to check for __clang__ with it.
    
    This also relied on tuklib_common.h for #defining __has_warning
    which was confusing as #defining reserved macros is generally
    not a good idea.

commit 683a3c7e2fcd922200c31078e5c9dd1348e90941
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 24 00:05:38 2023 +0200

    xz: Flip the return value of suffix_is_set to match the documentation.
    
    Also edit style to match the existing coding style in the project.

commit a8bb8358d10b059274f3cf993d9b8f490bafb268
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 13:04:05 2023 +0200

    Build: Omit -Wmissing-noreturn from the default warnings.
    
    It's not that important. It can be annoying in builds that
    disable many features since in those cases the tests programs
    will correctly trigger this warning with Clang.

commit 52dc033d0bde0d19e3912303c6c74bae559d6498
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 06:05:58 2023 +0200

    xz: Use ssize_t for the to-be-ignored return value from write(fd, ptr, 1).
    
    It makes no difference here as the return value fits into an int
    too and it then gets ignored but this looks better.

commit b1a6d180a363d57b2b1c89526ff3f0782bf863d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 06:01:12 2023 +0200

    xz: Silence warnings from -Wsign-conversion in a 32-bit build.

commit 31c21c734b7c7d7428a3da7402a2cb7bc2587339
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 05:38:48 2023 +0200

    liblzma: Silence another warning from -Wsign-conversion in a 32-bit build.
    
    It doesn't warn on a 64-bit system because truncating
    a ptrdiff_t (signed long) to uint32_t is diagnosed under
    -Wconversion by GCC and -Wshorten-64-to-32 by Clang.

commit 37fbdfb7263522c11c7ad2685413d6295532581d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 04:46:45 2023 +0200

    liblzma: Silence a warning from -Wsign-conversion in a 32-bit build.

commit 5ce6ddc221d0bfb57d810d845bb65fb0aac0b008
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 04:17:24 2023 +0200

    Build: Make configure add more warning flags for GCC and Clang.
    
    -Wstrict-aliasing was removed from the list since it is enabled
    by -Wall already.
    
    A normal build is clean with these on GNU/Linux x86-64 with
    GCC 12.2.0 and Clang 14.0.6.

commit bfc3a0a8ac16de90049c1b1ba1445a7626d0230c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 04:14:18 2023 +0200

    Tests: Fix warnings from clang --Wassign-enum.
    
    Explicitly casting the integer to lzma_check silences the warning.
    Since such an invalid value is needed in multiple tests, a constant
    INVALID_LZMA_CHECK_ID was added to tests.h.
    
    The use of 0x1000 for lzma_block.check wasn't optimal as if
    the underlying type is a char then 0x1000 will be truncated to 0.
    However, in these test cases the value is ignored, thus even with
    such truncation the test would have passed.

commit 49245bb31e215ad455a1ab85e4ed6783152dc522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 03:51:07 2023 +0200

    Tests: Silence warnings from -Wsign-conversion.
    
    Note that assigning an unsigned int to lzma_check doesn't warn
    on GNU/Linux x86-64 since the enum type is unsigned on that
    platform. The enum can be signed on some other platform though
    so it's best to use enumeration type lzma_check in these situations.

commit 3f13bf6b9e8624cbe6d6e3e82d6c98a3ed1ad571
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 03:19:59 2023 +0200

    liblzma: Silence warnings from clang -Wconditional-uninitialized.
    
    This is similar to 2ce4f36f179a81d0c6e182a409f363df759d1ad0.
    The actual initialization of the variables is done inside
    mythread_sync() macro. Clang doesn't seem to see that
    the initialization code inside the macro is always executed.

commit 6c886cc5b3c90c6a75e6be8b1278ec2261e452a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 03:11:40 2023 +0200

    Fix warnings from clang -Wdocumentation.

commit a0e7fb1c1ea658b67f30517f5d1975efd0226dba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 03:04:28 2023 +0200

    Tests: test_lzip_decoder: Remove trailing white-space.

commit c0f8d6782f29e219fd496dd23f6a033270509d5c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 12 03:03:55 2023 +0200

    Tests: test_lzip_decoder: Silence warnings from -Wsign-conversion.

commit 0b8fa310cf56fec55663f62340e49e8e1441594f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 22:14:03 2023 +0200

    liblzma: CLMUL CRC64: Work around a bug in MSVC, second attempt.
    
    This affects only 32-bit x86 builds. x86-64 is OK as is.
    
    I still cannot easily test this myself. The reporter has tested
    this and it passes the tests included in the CMake build and
    performance is good: raw CRC64 is 2-3 times faster than the
    C version of the slice-by-four method. (Note that liblzma doesn't
    include a MSVC-compatible version of the 32-bit x86 assembly code
    for the slice-by-four method.)
    
    Thanks to Iouri Kharon for figuring out a fix, testing, and
    benchmarking.

commit cfabb62a4874c146e7d6f30445637602545bc054
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 12:47:16 2023 +0200

    Revert "liblzma: CLMUL CRC64: Workaround a bug in MSVC (VS2015-2022)."
    
    This reverts commit 36edc65ab4cf10a131f239acbd423b4510ba52d5.
    
    It was reported that it wasn't a good enough fix and MSVC
    still produced (different kind of) bad code when building
    for 32-bit x86 if optimizations are enabled.
    
    Thanks to Iouri Kharon.

commit 0b64215170dd3562f207ef26f794755bcd600526
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 11:56:11 2023 +0200

    sysdefs.h: Don't include strings.h anymore.
    
    On some platforms src/xz/suffix.c may need <strings.h> for
    strcasecmp() but suffix.c includes the header when it needs it.
    
    Unless there is an old system that otherwise supports enough C99
    to build XZ Utils but doesn't have C89/C90-compatible <string.h>,
    there should be no need to include <strings.h> in sysdefs.h.

commit ec2fc39fe4f4e6e242b3a669585049763968cdeb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 11:23:41 2023 +0200

    xz: Include <strings.h> in suffix.c if needed for strcasecmp().
    
    SUSv2 and POSIX.1‐2017 declare only a few functions in <strings.h>.
    Of these, strcasecmp() is used on some platforms in suffix.c.
    Nothing else in the project needs <strings.h> (at least if
    building on a modern system).
    
    sysdefs.h currently includes <strings.h> if HAVE_STRINGS_H is
    defined and suffix.c relied on this.
    
    Note that dos/config.h doesn't #define HAVE_STRINGS_H even though
    DJGPP does have strings.h. It isn't needed with DJGPP as strcasecmp()
    is also in <string.h> in DJGPP.

commit 7049c4a76c805ad27d6cf4ee119a2ef2a7add59f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 10:05:13 2023 +0200

    sysdefs.h: Fix a comment.

commit 194a5fab69277d9e804a6113b5f676b8666b3a61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 10:04:06 2023 +0200

    sysdefs.h: Don't include memory.h anymore even if it were available.
    
    It quite probably was never needed, that is, any system where memory.h
    was required likely couldn't compile XZ Utils for other reasons anyway.
    
    XZ Utils 5.2.6 and later source packages were generated using
    Autoconf 2.71 which no longer defines HAVE_MEMORY_H. So the code
    being removed is no longer used anyway.

commit 5e34774c31d1b7509b5cb77a3be9973adec59ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 08:29:32 2023 +0200

    CMake: Fix appending to CMAKE_RC_FLAGS.
    
    It's a string, not a list. It only worked when the variable was empty.
    
    Thanks to Iouri Kharon.

commit 6e652ceb18c615c578c869db300fa0756788b4e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 00:33:14 2023 +0200

    Windows: Update INSTALL-MSVC.txt to recommend CMake over project files.

commit 6b117d3b1fe91eb26d533ab16a2e552f84148d47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 9 23:41:25 2023 +0200

    CMake: Fix windres issues again.
    
    At least on some systems, GNU windres needs --use-temp-file
    in addition to the \x20 hack to avoid spaces in the command line
    argument. Hovever, that \x20 syntax is broken with llvm-windres
    version 15.0.0 (results in "XZx20Utils") but luckily it works
    with a regular space. Thus it is best to limit the workarounds
    to GNU toolchain on Windows.

commit 0c210ca7f489e971e94e1ddc72b0b0806e3c7935
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 22:53:38 2023 +0200

    Tests: test_filter_flags: Clean up minor issues.
    
    Here are the list of the most significant issues addressed:
    - Avoid using internal common.h header. It's not good to copy the
    constants like this but common.h cannot be included for use outside
    of liblzma. This is the quickest thing to do that could be fixed later.
    
    - Omit the INIT_FILTER macro. Initialization should be done with just
    regular designated initializers.
    
    - Use start_offset = 257 for BCJ tests. It demonstrates that Filter
    Flags encoder and decoder don't validate the options thoroughly.
    257 is valid only for the x86 filter. This is a bit silly but
    not a significant problem in practice because the encoder and
    decoder initialization functions will catch bad alignment still.
    Perhaps this should be fixed but it's not urgent and doesn't need
    to be in 5.4.x.
    
    - Various tweaks to comments such as filter id -> Filter ID

commit 36edc65ab4cf10a131f239acbd423b4510ba52d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 9 12:22:05 2023 +0200

    liblzma: CLMUL CRC64: Workaround a bug in MSVC (VS2015-2022).
    
    I haven't tested with MSVC myself and there doesn't seem to be
    information about the problem online, so I'm relying on the bug report.
    
    Thanks to Iouri Kharon for the bug report and the patch.

commit 790a12a95a78ff82d8c6d4efe3b789851ca9470d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 9 11:27:24 2023 +0200

    CMake: Fix a copypaste error in xzdec Windows resource file handling.
    
    It was my mistake. Thanks to Iouri Kharon for the bug report.

commit 0e1545fea39c0514c7b7032a0a3592a9a33d2848
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 8 00:32:29 2023 +0200

    Tests: tuktest.h: Support tuktest_malloc(0).
    
    It's not needed in XZ Utils at least for now. It's good to support
    it still because if such use is needed later, it wouldn't be
    caught on GNU/Linux since malloc(0) from glibc returns non-NULL.

commit 69d5d78c6904668eb09a131da86276beec3281f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 8 00:24:23 2023 +0200

    Update THANKS.

commit dd38655f80c113c9db73b9ed370dc900e1c4dc41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 7 21:57:11 2023 +0200

    CMake: Update cmake_minimum_required from 3.13...3.16 to 3.13...3.25.
    
    The changes listed on cmake-policies(7) for versions 3.17 to 3.25
    shouldn't affect this project.

commit a890a637bee9193d5b690aefa9a59eba5b8532ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 7 19:50:35 2023 +0200

    Update THANKS.

commit 6e38e595dd56ac1800478cef1f6f754d0eba0d2e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 7 19:50:03 2023 +0200

    CMake/Windows: Add resource files to xz.exe and xzdec.exe.
    
    The command line tools cannot be built with MSVC for now but
    they can be built with MinGW-w64.
    
    Thanks to Iouri Kharon for the bug report and the original patch.

commit 443dfebced041adc88f10d824188eeef5b5821a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 7 19:48:52 2023 +0200

    CMake/Windows: Add a workaround for windres from GNU binutils.
    
    Thanks to Iouri Kharon for the bug report and the original patch.

commit ceb805011747d04a915f3f39e4bed9eed151c634
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 7 19:31:15 2023 +0200

    Build: Require that _mm_set_epi64x() is usable to enable CLMUL support.
    
    VS2013 doesn't have _mm_set_epi64x() so this way CLMUL gets
    disabled with VS2013.
    
    Thanks to Iouri Kharon for the bug report.

commit fc0c788469159f634f09ff23c8cef6925c91da57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:58:48 2023 +0200

    Tests: test_index_hash: Add an assert_uint_eq().

commit d550304f5343b3a082da265107cd820e0d81dc71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:55:06 2023 +0200

    Tests: test_index_hash: Fix a memory leak.

commit 02608f74ea1f2d2d56585711ff241c34b4ad0937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:53:03 2023 +0200

    Tests: test_index_hash: Don't treat pointers as booleans.

commit 056766c8601a3808bea1761f6cc833197a35a3e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:51:41 2023 +0200

    Tests: test_index_hash: Fix a typo in a comment.

commit 873e684028ba9738f071c5236db7d452ed797b4c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:44:29 2023 +0200

    Tests: test_index_hash: Avoid the variable name "index".
    
    It can trigger warnings from -Wshadow on some systems.

commit d1f24c35874eeba8432d75aa77b06c50375ed937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:35:50 2023 +0200

    Tests: test_index_hash: Use the word "Record" instead of "entry".

commit b93f7c5cbb02b42024ac866fc0af541de3d816e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:35:05 2023 +0200

    Tests: test_index_hash: Tweak comments and style.
    
    The words defined in the .xz file format specification
    begin with capital letter to emphasize that they have
    a specific meaning.

commit c48b24fc06d98569adb72f13c2e8e5ff30bb8036
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 6 17:17:37 2023 +0200

    Tests: test_index_hash: Use INDEX_INDICATOR constant instead of 0.

commit 7657ce1c3c4abff7560336a7b687d98e0e2bd14f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 4 22:40:54 2023 +0200

    Update THANKS.

commit aafd67fba045ab99683971263a5a26fb2a6e8ce2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 4 18:40:28 2023 +0200

    Tests: Adjust style in test_compress.sh.

commit 4103a2e78ac60b00c888485cd967a5fe5d1b917c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 2 17:20:47 2023 +0200

    Bump version and soname for 5.5.0alpha.
    
    5.5.0alpha won't be released, it's just to mark that
    the branch is not for stable 5.4.x.
    
    Once again there is no API/ABI stability for new features
    in devel versions. The major soname won't be bumped even
    if API/ABI of new features breaks between devel releases.

commit 73c9e6d6b970ccc3d5ad61dcaa21cba050e5df0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 2 17:05:07 2023 +0200

    Build: Fix config.h comments.

commit dfecda875211f737d0db92dc1d3c58a3a2afb0c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 30 20:10:08 2022 +0200

    Tests: test_check: Test corner cases of CLMUL CRC64.

commit ce96bb20435212fe797d6d84738fb9fd4ea13cc7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 30 19:36:49 2022 +0200

    Tests: Clarify a comment in test_lzip_decoder.c.

commit 8fd225a2c149f30aeac377e68eb5abf6b28300ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 16 18:30:02 2022 +0200

    liblzma: Update authors list in arm64.c.

commit b69da6d4bb6bb11fc0cf066920791990d2b22a06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 20:37:17 2022 +0200

    Bump version to 5.4.0 and soname to 5.4.0.

commit 20869eb3fb280ff4f271ef527b12b6bf68b05e19
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 20:29:39 2022 +0200

    Update INSTALL: CMake on Windows isn't experimental anymore.
    
    Using CMake to build liblzma should work on a few other OSes
    but building the command line tools is still subtly broken.
    
    It is known that shared library versioning may differ between
    CMake and Libtool builds on some OSes, most notably Darwin.

commit cbbd84451944e3e8c63acfaa3c923f6d8aff7852
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 19:47:53 2022 +0200

    Add NEWS for 5.4.0.

commit c3e94d37e8d10a3e96019864b6f5d7b578db2c14
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 17:41:20 2022 +0200

    Fix a typo in NEWS.

commit 0d2a2e0a545c3da2b3e9500f1e531eb903087245
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 17:41:03 2022 +0200

    Add NEWS for 5.2.10.

commit 177ece1c8eb007188fb1b04eff09ca2193fbdea6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 12:30:45 2022 +0200

    Tests: Fix a typo in tests/files/README.

commit 60f45bdbaa6b07558b3f4baac285739b0c6342f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 13 12:30:09 2022 +0200

    Tests: Add two ARM64 test files.

commit f5e419550619c548c7c35d7e367cf00580a56521
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 12 22:44:21 2022 +0200

    Translations: Update the Catalan translation.

commit 0fb9d355da3789b1757040af475b4e6bbc8b8af8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 12 19:18:12 2022 +0200

    Update THANKS.

commit e5b6c161c61a37c54dcb76a99bbb83ac4abe02dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 12 19:07:58 2022 +0200

    Update AUTHORS.

commit f2d98e691099d82054d5f3071ef6f5e809932e44
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 12 15:31:14 2022 +0200

    Docs: Omit multi-threaded decompress from TODO.
    
    The TODO file outdated still.

commit b42908c42a4cc091db45a7e5ba0e0ecceaa3f6da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 11 21:16:09 2022 +0200

    Docs: Update xz-file-format.txt to 1.1.0 for ARM64 filter.

commit 854f2f5946b353cb0963fd6dfd54d363adc89b9f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 11 21:13:57 2022 +0200

    xz: Rename --experimental-arm64 to --arm64.

commit 31dbd1e5fb65831915a7bbb531c3f19aea8d57a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 11 21:13:06 2022 +0200

    liblzma: Change LZMA_FILTER_ARM64 to the official Filter ID 0x0A.

commit 01b3549e523edac899ec4925b282ceddd20da116
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 8 19:24:22 2022 +0200

    xz: Make args_info.files_name a const pointer.

commit bc665b84ea6bf7946394a08122177efe41b26a5f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 8 19:18:16 2022 +0200

    xz: Don't modify argv[].
    
    The code that parses --memlimit options and --block-list modified
    the argv[] when parsing the option string from optarg. This was
    visible in "ps auxf" and such and could be confusing. I didn't
    understand it back in the day when I wrote that code. Now a copy
    is allocated when modifiable strings are needed.

commit a13064e1c290de7933db72b6dffbd65cfce59c9f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 8 18:18:57 2022 +0200

    Translations: Update the German man page translations.

commit ac2a747e939c2cbccff7a49c399769af5e02d2ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 8 17:30:09 2022 +0200

    liblzma: Check for unexpected NULL pointers in block_header_decode().
    
    The API docs gave an impression that such checks are done
    but they actually weren't done. In practice it made little
    difference since the calling code has a bug if these are NULL.
    
    Thanks to Jia Tan for the original patch that checked for
    block->filters == NULL.

commit 24790f49ae66938c1c7574315e1c0aba1ed5ed25
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 20:59:32 2022 +0200

    Bump version number for 5.3.5beta.
    
    This also sorts the symbol names alphabetically in liblzma_*.map.

commit 7e53c5bcb3c2c17f47c096c06ff6b1481e6ecafa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 20:57:26 2022 +0200

    Add NEWS for 5.3.5beta.

commit 5865f2aaac326fcbd9f8a7d62defa230e4cb644e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 20:57:09 2022 +0200

    Update THANKS.

commit 62b270988ec67314d69976df484d2974c6eacfda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 20:04:17 2022 +0200

    liblzma: Use __has_attribute(__symver__) to fix Clang detection.
    
    If someone sets up Clang to define __GNUC__ to 10 or greater
    then symvers broke. __has_attribute is supported by such GCC
    and Clang versions that don't support __symver__ so this should
    be much better and simpler way to detect if __symver__ is
    actually supported.
    
    Thanks to Tomasz Gajc for the bug report.

commit f9ca7d45162664ddd9fb70e19335c2426e5d75bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 18:51:52 2022 +0200

    liblzma: Omit zero-skipping from ARM64 filter.
    
    It has some complicated downsides and its usefulness is more limited
    than I originally thought. So this change is bad for certain very
    specific situations but a generic solution that works for other
    filters (and is otherwise better too) is planned anyway. And this
    way 7-Zip can use the same compatible filter for the .7z format.
    
    This is still marked as experimental with a new temporary Filter ID.

commit 5baec3f0a9c85e6abf45c0f652f699b074129a8b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 18:13:27 2022 +0200

    xz: Omit the special notes about ARM64 filter on the man page.

commit 0c3627b51862eb0dcdd4fc283d046250571991c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 18:12:03 2022 +0200

    liblzma: Don't be over-specific in lzma_str_to_filters API doc.

commit 94adf057f27b1970f493dc99cd166407d7255639
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 17:54:23 2022 +0200

    liblzma: Silence unused variable warning when BCJ filters are disabled.
    
    Thanks to Jia Tan for the original patch.

commit c68af4441744e5ffc41a472e1be9c9d53a1d9780
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 1 17:38:03 2022 +0200

    Translations: Update the Chinese (simplified) translation.

commit 3be6942e5c27d29995d41da52fbe274e4ce4a537
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 30 18:55:03 2022 +0200

    Add NEWS for 5.2.9.

commit 764955e2d4f2a5e8d6d6fec63af694f799e050e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 30 18:08:34 2022 +0200

    Change the bug report address.
    
    It forwards to me and Jia Tan.
    
    Also update the IRC reference in README as #tukaani was moved
    to Libera Chat long ago.

commit c21983c76031e01da01ad3c6cc716fe4b8a75070
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 30 17:50:17 2022 +0200

    Build: Add string_conversion.c to CMake, DOS, and VS files.

commit 30be0c35d24eb5175459d69dbf7d92e2b087ef82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 30 17:38:32 2022 +0200

    Update to HTTPS URLs in AUTHORS.

commit a6e21fcede3b196160a52dd294d965c508a4bb33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 29 22:27:42 2022 +0200

    liblzma: Two fixes to lzma_str_list_filters() API docs.
    
    Thanks to Jia Tan.

commit 7484744af6cbabe81e92af7d9e061dfd597fff7b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 21:57:47 2022 +0200

    xz: Use lzma_str_from_filters().
    
    Two uses: Displaying encoder filter chain when compressing with -vv,
    and displaying the decoder filter chain in --list -vv.

commit cedeeca2ea6ada5b0411b2ae10d7a859e837f203
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 21:37:48 2022 +0200

    liblzma: Add lzma_str_to_filters, _from_filters, and _list_filters.
    
    lzma_str_to_filters() uses static error messages which makes
    them not very precise. It tells the position in the string
    where an error occurred though which helps quite a bit if
    applications take advantage of it. Dynamic error messages can
    be added later with a new flag if it seems important enough.

commit 072ebf7b1335421193ffa9d4a70d5533786b8995
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 21:02:19 2022 +0200

    liblzma: Make lzma_validate_chain() available outside filter_common.c.

commit 5f22bd2d37e3bd01a5d701b51750eb51f09c11bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 10:51:03 2022 +0200

    liblzma: Remove lzma_lz_decoder_uncompressed() as it's now unused.

commit cee83206465b95729ab649aa2f57fdbde8dcaf89
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 10:48:53 2022 +0200

    liblzma: Use LZMA1EXT feature in lzma_microlzma_decoder().
    
    Here too this avoids the slightly ugly method to set
    the uncompressed size.
    
    Also moved the setting of dict_size to the struct initializer.

commit e310e8b6a490dfb468f4ed68feff246d776b323c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 28 10:28:20 2022 +0200

    liblzma: Use LZMA1EXT feature in lzma_alone_decoder().
    
    This avoids the need to use the slightly ugly method to
    set the uncompressed size.

commit 33b8a24b6646a9dbfd8358405aec466b13078559
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 27 23:16:21 2022 +0200

    liblzma: Add LZMA_FILTER_LZMA1EXT to support LZMA1 without end marker.
    
    Some file formats need support for LZMA1 streams that don't use
    the end of payload marker (EOPM) alias end of stream (EOS) marker.
    So far liblzma API has supported decompressing such streams via
    lzma_alone_decoder() when .lzma header specifies a known
    uncompressed size. Encoding support hasn't been available in the API.
    
    Instead of adding a new LZMA1-only API for this purpose, this commit
    adds a new filter ID for use with raw encoder and decoder. The main
    benefit of this approach is that then also filter chains are possible,
    for example, if someone wants to implement support for .7z files that
    use the x86 BCJ filter with LZMA1 (not BCJ2 as that isn't supported
    in liblzma).

commit 9a304bf1e45b3ddf61aaeaa7c764915b34618ede
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 27 18:43:07 2022 +0200

    liblzma: Avoid unneeded use of void pointer in LZMA decoder.

commit 218394958c7683f892275bb40eae880620feebcc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 27 18:20:33 2022 +0200

    liblzma: Pass the Filter ID to LZ encoder and decoder.
    
    This allows using two Filter IDs with the same
    initialization function and data structures.

commit 1663c7676b76f4c514031797f3db1896e8100f7f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 27 01:03:16 2022 +0200

    liblzma: Remove two FIXME comments.

commit 11fe708db783ac36ebeeb85da164e29e8c300910
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 26 22:25:30 2022 +0200

    xz: Use lzma_filters_free().

commit e782af9110d8499c7ac2929bc871540eefea5ea1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 26 22:21:13 2022 +0200

    liblzma: Use lzma_filters_free() in more places.

commit 90caaded2dc6db1d6a55b01160d7e87f4a423628
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 25 18:04:37 2022 +0200

    liblzma: Omit simple coder init functions if they are disabled.

commit 5cd9f0df78cc4f8a7807bf6104adea13034fbb45
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 23:24:59 2022 +0200

    xz: Allow nice_len 2 and 3 even if match finder requires 3 or 4.
    
    Now that liblzma accepts these, we avoid the extra check and
    there's one message less for translators too.

commit 3be88ae071371caa279b44e13f4836fb178fe4ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 23:23:55 2022 +0200

    liblzma: Allow nice_len 2 and 3 even if match finder requires 3 or 4.
    
    That is, if the specified nice_len is smaller than the minimum
    of the match finder, silently use the match finder's minimum value
    instead of reporting an error. The old behavior is annoying to users
    and it complicates xz options handling too.

commit 93439cfafe1768b3b18d67d2356ef7e7559bba59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 16:25:10 2022 +0200

    liblzma: Add lzma_filters_update() support to the multi-threaded encoder.
    
    A tiny downside of this is that now a 1-4 tiny allocations are made
    for every Block because each worker thread needs its own copy of
    the filter chain.

commit 17ac51e689794eb41cab3e80946fec689caea2d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 14:53:22 2022 +0200

    Update THANKS.

commit 06824396b2b6c84f3a235cb7c19c2a9701167797
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 14:52:44 2022 +0200

    Build: Don't put GNU/Linux-specific symbol versions into static liblzma.
    
    It not only makes no sense to put symbol versions into a static library
    but it can also cause breakage.
    
    By default Libtool #defines PIC if building a shared library and
    doesn't define it for static libraries. This is documented in the
    Libtool manual. It can be overriden using --with-pic or --without-pic.
    configure.ac detects if --with-pic or --without-pic is used and then
    gives an error if neither --disable-shared nor --disable-static was
    used at the same time. Thus, in normal situations it works to build
    both shared and static library at the same time on GNU/Linux,
    only --with-pic or --without-pic requires that only one type of
    library is built.
    
    Thanks to John Paul Adrian Glaubitz from Debian for reporting
    the problem that occurred on ia64:
    https://www.mail-archive.com/xz-devel@tukaani.org/msg00610.html

commit e1acf7107291f8b3d6d609a7133331ff36d35d14
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 01:32:16 2022 +0200

    liblzma: Refactor to use lzma_filters_free().
    
    lzma_filters_free() sets the options to NULL and ids to
    LZMA_VLI_UNKNOWN so there is no need to do it by caller;
    the filter arrays will always be left in a safe state.
    
    Also use memcpy() instead of a loop to copy a filter chain
    when it is known to be safe to copy LZMA_FILTERS_MAX + 1
    (even if the elements past the terminator might be uninitialized).

commit cb05dbcf8b868441ec805016222f3fd77f1c5caa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 01:26:37 2022 +0200

    liblzma: Fix another invalid free() after memory allocation failure.
    
    This time it can happen when lzma_stream_encoder_mt() is used
    to reinitialize an existing multi-threaded Stream encoder
    and one of 1-4 tiny allocations in lzma_filters_copy() fail.
    
    It's very similar to the previous bug
    10430fbf3820dafd4eafd38ec8be161a6978ed2b, happening with
    an array of lzma_filter structures whose old options are freed
    but the replacement never arrives due to a memory allocation
    failure in lzma_filters_copy().

commit d0901645170b638c517f5c50866b6ef48f491c65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 01:02:50 2022 +0200

    liblzma: Add new API function lzma_filters_free().
    
    This is small but convenient and should have been added
    a long time ago.

commit ae1f8a723dcde2f2c5cf444bcbb5fc5026b3c3c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 24 00:02:31 2022 +0200

    CMake: Don't use symbol versioning with static library.

commit 48c1b99dc537a27e1ca929d8837e778e5ba32191
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 23 21:55:22 2022 +0200

    liblzma: Add lzma_attr_warn_unused_result to lzma_filters_copy().

commit 10430fbf3820dafd4eafd38ec8be161a6978ed2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 23 21:26:21 2022 +0200

    liblzma: Fix invalid free() after memory allocation failure.
    
    The bug was in the single-threaded .xz Stream encoder
    in the code that is used for both re-initialization and for
    lzma_filters_update(). To trigger it, an application had
    to either re-initialize an existing encoder instance with
    lzma_stream_encoder() or use lzma_filters_update(), and
    then one of the 1-4 tiny allocations in lzma_filters_copy()
    (called from stream_encoder_update()) must fail. An error
    was correctly reported but the encoder state was corrupted.
    
    This is related to the recent fix in
    f8ee61e74eb40600445fdb601c374d582e1e9c8a which is good but
    it wasn't enough to fix the main problem in stream_encoder.c.

commit cafd6dc397ca8b5b5f7775e8d6876b8fe70f8e70
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 22 16:37:15 2022 +0200

    liblzma: Fix language in a comment.

commit c392bf8ccba857baaf50399c4b460119befacd54
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 22 11:20:17 2022 +0200

    liblzma: Fix infinite loop in LZMA encoder init with dict_size >= 2 GiB.
    
    The encoder doesn't support dictionary sizes larger than 1536 MiB.
    This is validated, for example, when calculating the memory usage
    via lzma_raw_encoder_memusage(). It is also enforced by the LZ
    part of the encoder initialization. However, LZMA encoder with
    LZMA_MODE_NORMAL did an unsafe calculation with dict_size before
    such validation and that results in an infinite loop if dict_size
    was 2 << 30 or greater.

commit f50534c973a591ccf65485adfc827a8a7126ca6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 21 13:02:33 2022 +0200

    liblzma: Fix two Doxygen commands in the API headers.
    
    These were caught by clang -Wdocumentation.

commit 649d4872ed2f55196114a061d45b416fc4353569
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 19 19:09:55 2022 +0200

    xz: Refactor duplicate code from hardware_memlimit_mtenc_get().

commit d327743bb547a53364e5951a16e5f1663fe4b9ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 19 19:06:13 2022 +0200

    xz: Add support --threads=+N so that -T+1 gives threaded mode.

commit 2af8d9e9b3f44f62d19e7c39297ec63af2e8c64f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 15 19:10:21 2022 +0200

    Translations: Update the Korean translation.

commit 16ac05677292f7e21a4feaddcfb2ab062ea5f385
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 15 19:09:28 2022 +0200

    Translations: Update the Turkish translation.

commit b9a67d9a5fa207062d4aa8a01639234609315d31
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 15 10:58:39 2022 +0200

    Bump version number for 5.3.4alpha.

commit 5b999ba289b3280457b7386b9ac65dbbdf1575a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 15 10:54:40 2022 +0200

    Add NEWS for 5.3.4alpha.

commit ce8db9e37da4f6c87691c5066f51f91f2411c44a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 15 10:54:08 2022 +0200

    Add NEWS for 5.2.8.

commit b56bc8251d2736224af6bdaaae734ceb8926a879
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 23:19:57 2022 +0200

    Revert "liblzma: Simple/BCJ filters: Allow disabling generic BCJ options."
    
    This reverts commit 177bdc922cb17bd0fd831ab8139dfae912a5c2b8
    and also does equivalent change to arm64.c.
    
    Now that ARM64 filter will use lzma_options_bcj, this change
    is not needed anymore.

commit 8370ec8edf9ddf8d1d9fef03d8d1027503ec4c35
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 23:14:41 2022 +0200

    Replace the experimental ARM64 filter with a new experimental version.
    
    This is incompatible with the previous version.
    
    This has space/tab fixes in filter_*.c and bcj.h too.

commit f644473a211394447824ea00518d0a214ff3f7f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 21:34:57 2022 +0200

    liblzma: Add fast CRC64 for 32/64-bit x86 using SSSE3 + SSE4.1 + CLMUL.
    
    It also works on E2K as it supports these intrinsics.
    
    On x86-64 runtime detection is used so the code keeps working on
    older processors too. A CLMUL-only build can be done by using
    -msse4.1 -mpclmul in CFLAGS and this will reduce the library
    size since the generic implementation and its 8 KiB lookup table
    will be omitted.
    
    On 32-bit x86 this isn't used by default for now because by default
    on 32-bit x86 the separate assembly file crc64_x86.S is used.
    If --disable-assembler is used then this new CLMUL code is used
    the same way as on 64-bit x86. However, a CLMUL-only build
    (-msse4.1 -mpclmul) won't omit the 8 KiB lookup table on
    32-bit x86 due to a currently-missing check for disabled
    assembler usage.
    
    The configure.ac check should be such that the code won't be
    built if something in the toolchain doesn't support it but
    --disable-clmul-crc option can be used to unconditionally
    disable this feature.
    
    CLMUL speeds up decompression of files that have compressed very
    well (assuming CRC64 is used as a check type). It is know that
    the CLMUL code is significantly slower than the generic code for
    tiny inputs (especially 1-8 bytes but up to 16 bytes). If that
    is a real-world problem then there is already a commented-out
    variant that uses the generic version for small inputs.
    
    Thanks to Ilya Kurdyukov for the original patch which was
    derived from a white paper from Intel [1] (published in 2009)
    and public domain code from [2] (released in 2016).
    
    [1] https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/fast-crc-computation-generic-polynomials-pclmulqdq-paper.pdf
    [2] https://github.com/rawrunprotected/crc

commit 3b466bc79672bb2b06d1245a500588e6026e0ba0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 20:14:34 2022 +0200

    Translations: Update the Swedish translation one more time.

commit e963379a8622ebdff6ce78e76b803bcd1e1d16d6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 19:34:15 2022 +0200

    Translations: Update the Swedish translation again.

commit a4bc689a823a2254f29ac9d233170add5121b307
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 19:07:45 2022 +0200

    Translations: Update the Swedish translation.

commit bbf2073d824ab4ba33bed4b77f467435abd333a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 18:58:09 2022 +0200

    Translations: Update the Ukrainian translation.

commit ac10b1b3622e70881595586edfb8a3ebdcd76bb6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 17:58:07 2022 +0200

    Build: Omit x86_64 from --enable-assembler.
    
    It didn't do anything. There are only 32-bit x86 assembly files
    and it feels likely that new files won't be added as intrinsics
    in C are more portable across toolchains and OSes.

commit eb0f1450ad9f23dac03050d9c8375980240aee21
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 14 16:00:52 2022 +0200

    liblzma: Use __attribute__((__constructor__)) if available.
    
    This uses it for CRC table initializations when using --disable-small.
    It avoids mythread_once() overhead. It also means that then
    --disable-small --disable-threads is thread-safe if this attribute
    is supported.

commit 6553f49b11dafad35c73b05f12e14865ea1fd8a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 12 21:19:52 2022 +0200

    Translations: Update the Romanian translation.

commit db97e69e12393becc29f8febd53133d0d36989bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 12 21:17:45 2022 +0200

    Translations: Update the Hungarian translation.

commit 2bbb9c0f3829a8b121b36998d273a6c6f92000f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:58:57 2022 +0200

    Translations: Update the Finnish translation.

commit 3c8cbb8137b6f8ed9416c1209d73cdbcb015251f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:58:18 2022 +0200

    Translations: Update the Croatian translation.

commit 26c3359eac0988d6f3986735cd1363bec1678e8e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:57:18 2022 +0200

    Translations: Update the Polish translation.

commit 577e467b137c735afb8de6ae71ac7a73c2960cc4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:56:44 2022 +0200

    Translations: Update the Spanish translation.

commit f9b4ff6e9a0f1678650775582d3e4fe782abce97
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:16:03 2022 +0200

    Update THANKS.

commit a39961ef211e1bf030b17edeea3cff29fe263b67
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 17:15:25 2022 +0200

    liblzma: Fix building with Intel ICC (the classic compiler).
    
    It claims __GNUC__ >= 10 but doesn't support __symver__ attribute.
    
    Thanks to Stephen Sachs.

commit c715f683dcb1a817d565da292cddfbceda643e12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 14:35:58 2022 +0200

    liblzma: Fix incorrect #ifdef for x86 SSE2 support.
    
    __SSE2__ is the correct macro for SSE2 support with GCC, Clang,
    and ICC. __SSE2_MATH__ means doing floating point math with SSE2
    instead of 387. Often the latter macro is defined if the first
    one is but it was still a bug.

commit bd334ae56afe7f642ad4d0f1ac19e74e82daa1ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 13:27:06 2022 +0200

    Add NEWS for 5.2.7 (forgotten cherry-pick from v5.2).

commit 3c7860cf49de6f81046b3a4034a89f3a4803a576
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 13:16:21 2022 +0200

    xzdiff: Add support for .lz files.
    
    The other scripts don't need changes for .lz support because
    in those scripts it is enough that xz supports .lz.

commit d76c752a6d77052e5ad57ade555082585f7ac5d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 11 12:23:58 2022 +0200

    Scripts: Ignore warnings from xz.
    
    In practice this means making the scripts work when
    the input files have an unsupported check type which
    isn't a problem in practice unless support for
    some check types has been disabled at build time.

commit 6552535afd1fe29d726ab6e68cf14ce3624fd48c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 10 12:34:43 2022 +0200

    Translations: Rename poa4/fr_FR.po to po4a/fr.po.
    
    That's how it is preferred at the Translation Project.
    On my system /usr/share/man/fr_FR doesn't contain any
    other man pages than XZ Utils while /usr/share/man/fr
    has quite a few, so this will fix that too.
    
    Thanks to Benno Schulenberg from the Translation Project.

commit 0918159ce4c75bfb60aff0193b559f8a9f41d25a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 18:48:50 2022 +0200

    xz: Update the man page about BCJ filters, including upcoming --arm64.
    
    The --arm64 isn't actually implemented yet in the form
    described in this commit.
    
    Thanks to Jia Tan.

commit ba2ae3596f6be1587495f33b367488f6e00e56f1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 18:14:14 2022 +0200

    xz: Add --arm64 to --long-help and omit endianness from ARM(-Thumb).
    
    Modern 32-bit ARM in big endian mode use little endian for
    instruction encoding still, so the filters work on such
    executables too. It's likely less confusing for users this way.
    
    The --arm64 option hasn't been implemented yet (there is
    --experimental-arm64 but it's different). The --arm64 option
    is added now anyway because this is the likely result and the
    strings need to be ready for translators.
    
    Thanks to Jia Tan.

commit 802d57d9215d9c81dbee86edb43c9e93a7f7ec55
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 15:12:13 2022 +0200

    Windows: Update the VS project files for ARM64 and .lz support.

commit 5846aeda05972bc803c6094821ae836229ebe691
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 14:57:48 2022 +0200

    DOS: Update Makefile and config.h to include ARM64 and .lz support.

commit 781da8d6c44de6aa278c916375250668a0b107f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 14:45:05 2022 +0200

    CMake: Add lzip decoder files and #define to the build.

commit df8ad4af65a9c4846b108550d0083770a69dee64
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 14:41:56 2022 +0200

    Docs: Update INSTALL and also add new prohibited options to PACKAGERS.

commit c8ef089c149afaab413c3a51be827dd1d11afe0e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 20 17:39:06 2022 +0300

    Tests: Test the .lz files in test_files.sh.

commit c8f70ebb4628ceb6cb29cc9195d9deadf69d2bd7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 20 15:35:59 2022 +0300

    Tests: Add .lz (lzip) test files.

commit 731db13e6fa3ad3e3fc786c0ccf6eac4cce6865f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 19 22:32:51 2022 +0300

    xz: Remove the commented-out FORMAT_GZIP, gzip, .gz, and .tgz.

commit 3176f992c55b8d788c4633809aaf9447376a5a12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 8 21:28:15 2022 +0300

    xz: Add .lz (lzip) decompression support.
    
    If configured with --disable-lzip-decoder then --long-help will
    still list `lzip' in --format but I left it like that since
    due to translations it would be messy to have two help strings.
    Features are disabled only in special situations so wrong help
    in such a situation shouldn't matter much.
    
    Thanks to Michał Górny for the original patch.

commit 034086e1ae1459210837a24e04878435c86dc41b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 8 00:29:20 2022 +0300

    liblzma: Add .lz support to lzma_auto_decoder().
    
    Thanks to Michał Górny for the original patch.

commit 0538db038f3cdc352007dacb42454aa1806b8e40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 6 15:50:20 2022 +0300

    liblzma: Add .lz (lzip) decompression support (format versions 0 and 1).
    
    Support for format version 0 was removed from lzip 1.18 for some
    reason. .lz format version 0 files are rare (and old) but some
    source packages were released in this format, and some people might
    have personal files in this format too. It's very little extra code
    to support it along side format version 1 so this commits adds
    support for both.
    
    The Sync Flush marker extentension to the original .lz format
    version 1 isn't supported. It would require changes to the
    LZMA decoder itself. Such files are very rare anyway.
    
    See the API doc for lzma_lzip_decoder() for more details about
    the .lz format support.
    
    Thanks to Michał Górny for the original patch.

commit 633d48a075b9ce4b9c08a7a56a7eb4cabc18100c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 14:17:23 2022 +0200

    liblzma: Add the missing Makefile.inc change for --disable-microlzma.
    
    This was forgotten from commit 59c4d6e1390f6f4176f43ac1dad1f7ac03c449b8.

commit 724285dadbdc88765c8fb83eab9816575a260966
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 14:10:52 2022 +0200

    xz: Add comments about stdin and src_st.st_size.
    
    "xz -v < regular_file > out.xz" doesn't display the percentage
    and estimated remaining time because it doesn't even try to
    check the input file size when input is read from stdin.
    This could be improved but for now there's just a comment
    to remind about it.

commit f723eec68b0e44234910f669a29119de33018967
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 12:48:22 2022 +0200

    xz: Fix displaying of file sizes in progress indicator in passthru mode.
    
    It worked for one input file since the counters are zero when
    xz starts but they weren't reset when starting a new file in
    passthru mode. For example, if files A, B, and C are one byte each,
    then "xz -dcvf A B C" would show file sizes as 1, 2, and 3 bytes
    instead of 1, 1, and 1 byte.

commit 69265d0f223ddf1d66f799b8b047df22923e376f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 9 11:27:20 2022 +0200

    xz: Add a comment why --to-stdout is not in --help.
    
    It is on the man page still.

commit fe6b8852a3c6a0eb5a3c33512e0a69af257d3bc7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 23:05:37 2022 +0200

    xz: Make xz -lvv show that the upcoming --arm64 needs 5.4.0 to decompress.

commit fb3f05ac9f2b4b0e3643401960fbeab31997ac7a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 22:26:54 2022 +0200

    Docs: Update faq.txt a little.

commit 05331f091ec3b68eccbfb2a9a7a576072768fb4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 16:57:17 2022 +0200

    Translations: Update Turkish translation.

commit ed3a4822963b4940d84e6f44d47277c394fc046d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 14:55:32 2022 +0200

    Translations: Update Croatian translation.

commit 4746f5ec721316bc4c6fec9905b2902e0360e0af
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 14:13:03 2022 +0200

    liblzma: Update API docs about decoder flags.

commit 8779a9db5d0cec00c9dc9e9965dd2dda04f9d80d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 14:01:50 2022 +0200

    liblzma: Use the return_if_error() macro in alone_decoder.c.

commit 3f4990b6822961e75cd9b4e2e82b1df63f6f8fcc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 14:00:58 2022 +0200

    liblzma: Fix a comment in auto_decoder.c.

commit 026a5897c72a2041ae08ceec54ce8b1cdeb51334
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 8 13:43:19 2022 +0200

    xz: Initialize the pledge(2) sandbox at the very beginning of main().
    
    It feels better that the initializations are sandboxed too.
    They don't do anything that the pledge() call wouldn't allow.

commit 49a59f6ca001c3ce9affa2c162b437aad021b4d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 7 22:51:16 2022 +0200

    xz: Extend --robot --info-memory output.
    
    Now it includes everything that the human-readable --info-memory shows.

commit 5e2450c75cbac966c62cf2231c824f2cc91ddba8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 7 17:22:04 2022 +0200

    liblzma: Include cached memory in reported memusage in threaded decoder.
    
    This affects lzma_memusage() and lzma_memlimit_set() when used
    with the threaded decompressor. Now all allocations are reported
    by lzma_memusage() (so it's not misleading) and lzma_memlimit_set()
    cannot lower the limit below that value.
    
    The alternative would have been to allow lowering the limit if
    doing so is possible by freeing the cached memory but since
    the primary use case of lzma_memlimit_set() is to increase
    memlimit after LZMA_MEMLIMIT_ERROR this simple approach
    was selected.
    
    The cached memory was always included when enforcing
    the memory usage limit while decoding.
    
    Thanks to Jia Tan.

commit cf118c014683069b5dbe91898acdc40f2f0a1f5d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 31 16:26:05 2022 +0200

    Build: Clarify comment in configure.ac about SSE2.

commit aad3c609ffb72f581a7a2b67be3ad70b2b327840
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 31 16:16:37 2022 +0200

    Build: Remove obsolete commented-out lines from configure.ac.

commit e53e0e2186c6b8ce866bd19aec52f1c318ed31ba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 31 13:31:58 2022 +0200

    Windows: Fix mythread_once() macro with Vista threads.
    
    Don't call InitOnceComplete() if initialization was already done.
    
    So far mythread_once() has been needed only when building
    with --enable-small. windows/build.bash does this together
    with --disable-threads so the Vista-specific mythread_once()
    is never needed by those builds. VS project files or
    CMake-builds don't support HAVE_SMALL builds at all.

commit 48dde3bab9dc04081acb5aa7cf7c5044b8a49f58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 31 11:54:44 2022 +0200

    liblzma: Silence -Wconversion warning from crc64_fast.c.

commit a243c617ff249d915ac123de4f536b80322c1fdb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 31 11:49:47 2022 +0200

    CMake: Sync tuklib_cpucores.cmake with tuklib_cpucores.m4.
    
    This was forgotten from commit 2611c4d90535652d3eb7ef4a026a6691276fab43.

commit 05c72de06fcaaedc78f8abba7d5ec568ddcf1e75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 27 15:49:18 2022 +0300

    Tests: test_files.sh: Make it not fail if features were disabled at build.
    
    It now tries to test as many files as easily possible.
    The exit status indicates skipping if any of the files were
    skipped. This way it is easy to notice if something is being
    skipped when it isn't expected.

commit b3459327a51f4b8239d19e6c34b4e0c6bc2d81de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 27 15:30:13 2022 +0300

    Tests: test_files.sh: Suppress an expected warning from the log.
    
    xz (but not xzdec) will normally warn about unsupported check
    but since we are testing specifically such a file, it's better
    to silence that warning so that it doesn't look suspicious in
    test_files.sh.log.
    
    The use of -q and -Q in xzdec is just for consistency and
    doesn't affect the result at least for now.

commit 798c86e4231e0835ab76ccd0810c8ea30833b2ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 27 15:27:50 2022 +0300

    Tests: test_files.sh: Print the reason for skipping if xz & xzdec missing.

commit c1dd8524e1af07f16b790463899de06a6a5fcc08
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 27 01:12:40 2022 +0300

    Tests: Keep test_compress_* working when some filters are unavailable.

commit 89c5cfcacaca7130509fac836e2f30c46b824502
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 26 00:05:57 2022 +0300

    Tests: Test also unsupported-*.xz.

commit a4b214b93ac741edef9c41e55865b0b867ca2587
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 23:45:03 2022 +0300

    Build: Use AC_CONFIG_HEADERS instead of the ancient AC_CONFIG_HEADER.
    
    We require Autoconf >= 2.69 and that has AC_CONFIG_HEADERS.
    
    There is a warning about AC_PROG_CC_C99 being obsolete but
    it cannot be removed because it is needed with Autoconf 2.69.

commit 04f299b64e73f50afc188c2590ebebc6b73ed744
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 23:31:44 2022 +0300

    Build: Update m4/ax_pthread.m4 from Autoconf Archive.

commit 59c4d6e1390f6f4176f43ac1dad1f7ac03c449b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 23:28:34 2022 +0300

    Build: Add configure option --disable-microlzma.
    
    MicroLZMA was made for EROFS and used by erofs-utils.
    It might be used by something else in the future but
    those wanting a smaller build for specific situations
    can now disable this rarely-needed feature.

commit 054ccd6d14b2cc6eddc56897af280d3221414150
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 23:09:11 2022 +0300

    xz: Fix --single-stream with an empty .xz Stream.
    
    Example:
    
        $ xz -dc --single-stream good-0-empty.xz
        xz: good-0-empty.xz: Internal error (bug)
    
    The code, that is tries to catch some input file issues early,
    didn't anticipate LZMA_STREAM_END which is possible in that
    code only when --single-stream is used.

commit 563288ea705e83ff5cb292adf794650c263bca1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 21:11:58 2022 +0300

    xz: Add support for OpenBSD's pledge() sandbox.

commit f9913e8ee2ba0b1e4ff4d0aa4c001aae305ed944
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 19:07:17 2022 +0300

    xz: Fix decompressor behavior if input uses an unsupported check type.
    
    Now files with unsupported check will make xz display
    a warning, set the exit status to 2 (unless --no-warn is used),
    and then decompress the file normally. This is how it was
    supposed to work since the beginning but this was broken by
    the commit 231c3c7098f1099a56abb8afece76fc9b8699f05, that is,
    a little before 5.0.0 was released. The buggy behavior displayed
    a message, set exit status 1 (error), and xz didn't attempt to
    to decompress the file.
    
    This doesn't matter today except for special builds that disable
    CRC64 or SHA-256 at build time (but such builds should be used
    in special situations only). The bug matters if new check type
    is added in the future and an old xz version is used to decompress
    such a file; however, it's likely that such files would use a new
    filter too and an old xz wouldn't be able to decompress the file
    anyway.
    
    The first hunk in the commit is the actual fix. The second hunk
    is a cleanup since LZMA_TELL_ANY_CHECK isn't used in xz.
    
    There is a test file for unsupported check type but it wasn't
    used by test_files.sh, perhaps due to different behavior between
    xz and the simpler xzdec.

commit aa4fe145b9486adc454f44fd3e09be9add808a0f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 18:36:19 2022 +0300

    xz: Clarify the man page: input file isn't removed if an error occurs.

commit 8b46ae8cdeddfd7dc01fec92971b8696e9a96c5d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 18:30:55 2022 +0300

    xz: Refactor to remove is_empty_filename().
    
    Long ago it was used in list.c too but nowadays it's needed
    only in io_open_src() so it's nicer to avoid a separate function.

commit 85624015978b0de294cff3df79006df987c552b1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 25 18:23:54 2022 +0300

    xz: If input file cannot be removed, treat it as a warning, not error.
    
    Treating it as a warning (message + exit status 2) matches gzip
    and it seems more logical as at that point the output file has
    already been successfully closed. When it's a warning it is
    possible to suppress it with --no-warn.

commit fda9f85f52c546f7ca0313cf89481da4707fecb3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 24 16:25:09 2022 +0300

    liblzma: Threaded decoder: Stop the worker threads on errors.
    
    It's waste of CPU time and electricity to leave the unfinished
    worker threads running when it is known that their output will
    get ignored.

commit 2611c4d90535652d3eb7ef4a026a6691276fab43
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 20 20:22:50 2022 +0300

    tuklib_cpucores: Use HW_NCPUONLINE on OpenBSD.
    
    On OpenBSD the number of cores online is often less
    than what HW_NCPU would return because OpenBSD disables
    simultaneous multi-threading (SMT) by default.
    
    Thanks to Christian Weisgerber.

commit 424ac91c7e0419393ff2bde4f62e21fa611c776d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 19 19:39:35 2022 +0300

    Tests: Skip tests in test_*.sh if encoders and/or decoders are disabled.
    
    This isn't perfect as the scripts can still fail if only
    certain filters are disabled. This is still an improvement
    as now "make check" has better behavior when all encoders
    or decoders are disabled.
    
    Grepping ../config.h is simple and fairly clean but it only
    works if config.h was created. CMake builds don't create
    config.h but they don't use these test scripts either.
    
    Thanks to Sebastian Andrzej Siewior for reporting the problem.
    Thanks to Jia Tan for the original patch which grepped xz
    error messages instead of config.h.

commit ca8bf9d7c5a30be8ba1eeb106fd892f19e83ed09
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 19 18:54:34 2022 +0300

    Test: Remove the (exit 1) lines.
    
    I suspect that I used these in the original version because
    Autoconf's manual describes that such a trick is needed in
    some specific situations for portability reasons. None of those
    situations listed on Autoconf 2.71 manual apply to these test
    scripts though so this cleans them up.

commit 82fcb7cfc17ce62f79ebc7ca2374e1daca5e4d5e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 19 17:14:57 2022 +0300

    Tests: Fix a warning in test_memlimit.c when decoders are disabled.

commit b5f8271b45b9b0e59485ffba3640ca3418835ec4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 19 17:11:46 2022 +0300

    Tests: Add test_memlimit to .gitignore.
    
    Thanks to Jia Tan.

commit 7dcabeec63d46b436fa5f043c3d1f09d0e15be16
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 5 16:20:47 2022 +0300

    Tests: Include mythread.h in the tests that use MYTHREAD_ENABLED.

commit fae37ad2affd8fe8871f4ff93d5cab5ec14d5e58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 5 14:26:00 2022 +0300

    tuklib_integer: Add 64-bit endianness-converting reads and writes.
    
    Also update the comment in liblzma's memcmplen.h.
    
    Thanks to Michał Górny for the original patch for the reads.

commit 508a44372c5b0dede8863fd0d358d4a9d8645c95
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 30 12:06:13 2022 +0300

    liblzma: Add API doc note about the .xz decoder LZMA_MEMLIMIT_ERROR bug.
    
    The bug was fixed in 660739f99ab211edec4071de98889fb32ed04e98.

commit a61d32172789735350a941e23baf6b587c49e5d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 28 12:20:41 2022 +0300

    tuklib_physmem: Fix Unicode builds on Windows.
    
    Thanks to ArSaCiA Game.

commit 5a4d3548ab214fdca364d5c734baf1d1fab47308
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 28 11:12:07 2022 +0300

    Tests: Add test_memlimit.c to test restarting after LZMA_MEMLIMIT_ERROR.

commit 660739f99ab211edec4071de98889fb32ed04e98
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 28 11:05:15 2022 +0300

    liblzma: Stream decoder: Fix restarting after LZMA_MEMLIMIT_ERROR.
    
    If lzma_code() returns LZMA_MEMLIMIT_ERROR it is now possible
    to use lzma_memlimit_set() to increase the limit and continue
    decoding. This was supposed to work from the beginning but
    there was a bug. With other decoders (.lzma or threaded .xz)
    this already worked correctly.

commit 7e68fda58c74ad9e5b876cc22fcbe80fc0e4747b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 28 11:00:23 2022 +0300

    liblzma: Stream decoder: Fix comments.

commit f664cb25841fc1c478b819034a224a558e2ac6e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 20 16:58:22 2022 +0300

    liblzma: ARM64: Add comments.

commit b557b4a0eea05470fae8ba5ef4ad5a6dfb36ac41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 20 16:27:50 2022 +0300

    liblzma: ARM64: Fix wrong comment in API doc.
    
    Thanks to Jia Tan.

commit d5b0906fa55157f48c200188a3951d80df9cb308
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 19 20:24:26 2022 +0300

    xz: Add --experimental-arm64[=width=WIDTH].
    
    It will be renamed to --arm64 once it is stable.
    
    Man page or --long-help weren't updated yet.

commit ecb966de308c255bb4735a7307ef9901c643a9de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 19 19:34:56 2022 +0300

    liblzma: Add experimental ARM64 BCJ filter with a temporary Filter ID.
    
    That is, the Filter ID will be changed once the design is final.
    The current version will be removed. So files created with the
    tempoary Filter ID won't be supported in the future.

commit 177bdc922cb17bd0fd831ab8139dfae912a5c2b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 17 22:42:18 2022 +0300

    liblzma: Simple/BCJ filters: Allow disabling generic BCJ options.
    
    This will be needed for the ARM64 BCJ filter as it will use
    its own options struct.

commit c3592d0a55114144686ecf960cb516d6b31c98e9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 16 17:08:53 2022 +0300

    Tests: Add a test file for lzma_index_append() integer overflow bug.
    
    This test fails before commit 18d7facd3802b55c287581405c4d49c98708c136.
    
    test_files.sh now runs xz -l for bad-3-index-uncomp-overflow.xz
    because only then the previously-buggy code path gets tested.
    Normal decompression doesn't use lzma_index_append() at all.
    Instead, lzma_index_hash functions are used and those already
    did the overflow check.

commit 982b29f828079a2a26253a40e975127a40a7d2bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 16 15:10:07 2022 +0300

    Translations: Add Turkish translation.

commit 1fc088d9f6d1697924aaeac8cd1fb9918d1532e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 16 14:09:07 2022 +0300

    Update THANKS.

commit 097c7b67ce86ff16a7cef7631b39e5ca4ee3d420
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 16 14:07:03 2022 +0300

    xzgrep: Fix compatibility with old shells.
    
    Running the current xzgrep on Slackware 10.1 with GNU bash 3.00.15:
    
        xzgrep: line 231: syntax error near unexpected token `;;'
    
    On SCO OpenServer 5.0.7 with Korn Shell 93r:
    
        syntax error at line 231 : `;;' unexpected
    
    Turns out that some old shells don't like apostrophes (') inside
    command substitutions. For example, the following fails:
    
        x=$(echo foo
        # asdf'zxcv
        echo bar)
        printf '%s\n' "$x"
    
    The problem was introduced by commits
    69d1b3fc29677af8ade8dc15dba83f0589cb63d6 (2022-03-29),
    bd7b290f3fe4faeceb7d3497ed9bf2e6ed5e7dc5 (2022-07-18), and
    a648978b20495b7aa4a8b029c5a810b5ad9d08ff (2022-07-19).
    5.2.6 is the only stable release that included
    this problem.
    
    Thanks to Kevin R. Bulgrien for reporting the problem
    on SCO OpenServer 5.0.7 and for providing the fix.

commit f2d084fe3f0d6d71488bfc6987f26542f67bfd99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 9 14:12:30 2022 +0300

    Tests: Silence warnings about unused functions from tuktest.h.
    
    Warnings about unused tuktest_run_test conveniently tell which
    test programs haven't been converted to tuktest.h yet but I
    silenced that warning too for now anyway.
    
    It is fine to use __attribute__((__unused__)) even when the
    function is actually used because the attribute only means
    that the function might be unused.

commit f8ee61e74eb40600445fdb601c374d582e1e9c8a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 9 13:51:57 2022 +0300

    liblzma: lzma_filters_copy: Keep dest[] unmodified if an error occurs.
    
    lzma_stream_encoder() and lzma_stream_encoder_mt() always assumed
    this. Before this patch, failing lzma_filters_copy() could result
    in free(invalid_pointer) or invalid memory reads in stream_encoder.c
    or stream_encoder_mt.c.
    
    To trigger this, allocating memory for a filter options structure
    has to fail. These are tiny allocations so in practice they very
    rarely fail.
    
    Certain badness in the filter chain array could also make
    lzma_filters_copy() fail but both stream_encoder.c and
    stream_encoder_mt.c validate the filter chain before
    trying to copy it, so the crash cannot occur this way.

commit 9ac06cb5b85274d18f9f70d82cf2d8c9c1151bd4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 8 15:11:08 2022 +0300

    Update THANKS.

commit 17485e884ce5c74315f29a8a1507bc706cd5cd1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 8 15:02:41 2022 +0300

    CMake: Update for liblzma_*.map files and fix wrong common_w32res.rc dep.
    
    The previous commit split liblzma.map into liblzma_linux.map and
    liblzma_generic.map. This commit updates the CMake build for those.
    
    common_w32res.rc dependency was listed under Linux/FreeBSD while
    obviously it belongs to Windows when building a DLL.

commit 913ddc5572b9455fa0cf299be2e35c708840e922
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 4 23:23:00 2022 +0300

    liblzma: Vaccinate against an ill patch from RHEL/CentOS 7.
    
    RHEL/CentOS 7 shipped with 5.1.2alpha, including the threaded
    encoder that is behind #ifdef LZMA_UNSTABLE in the API headers.
    In 5.1.2alpha these symbols are under XZ_5.1.2alpha in liblzma.map.
    API/ABI compatibility tracking isn't done between development
    releases so newer releases didn't have XZ_5.1.2alpha anymore.
    
    Later RHEL/CentOS 7 updated xz to 5.2.2 but they wanted to keep
    the exported symbols compatible with 5.1.2alpha. After checking
    the ABI changes it turned out that >= 5.2.0 ABI is backward
    compatible with the threaded encoder functions from 5.1.2alpha
    (but not vice versa as fixes and extensions to these functions
    were made between 5.1.2alpha and 5.2.0).
    
    In RHEL/CentOS 7, XZ Utils 5.2.2 was patched with
    xz-5.2.2-compat-libs.patch to modify liblzma.map:
    
      - XZ_5.1.2alpha was added with lzma_stream_encoder_mt and
        lzma_stream_encoder_mt_memusage. This matched XZ Utils 5.1.2alpha.
    
      - XZ_5.2 was replaced with XZ_5.2.2. It is clear that this was
        an error; the intention was to keep using XZ_5.2 (XZ_5.2.2
        has never been used in XZ Utils). So XZ_5.2.2 lists all
        symbols that were listed under XZ_5.2 before the patch.
        lzma_stream_encoder_mt and _mt_memusage are included too so
        they are listed both here and under XZ_5.1.2alpha.
    
    The patch didn't add any __asm__(".symver ...") lines to the .c
    files. Thus the resulting liblzma.so exports the threaded encoder
    functions under XZ_5.1.2alpha only. Listing the two functions
    also under XZ_5.2.2 in liblzma.map has no effect without
    matching .symver lines.
    
    The lack of XZ_5.2 in RHEL/CentOS 7 means that binaries linked
    against unpatched XZ Utils 5.2.x won't run on RHEL/CentOS 7.
    This is unfortunate but this alone isn't too bad as the problem
    is contained within RHEL/CentOS 7 and doesn't affect users
    of other distributions. It could also be fixed internally in
    RHEL/CentOS 7.
    
    The second problem is more serious: In XZ Utils 5.2.2 the API
    headers don't have #ifdef LZMA_UNSTABLE for obvious reasons.
    This is true in RHEL/CentOS 7 version too. Thus now programs
    using new APIs can be compiled without an extra #define. However,
    the programs end up depending on symbol version XZ_5.1.2alpha
    (and possibly also XZ_5.2.2) instead of XZ_5.2 as they would
    with an unpatched XZ Utils 5.2.2. This means that such binaries
    won't run on other distributions shipping XZ Utils >= 5.2.0 as
    they don't provide XZ_5.1.2alpha or XZ_5.2.2; they only provide
    XZ_5.2 (and XZ_5.0). (This includes RHEL/CentOS 8 as the patch
    luckily isn't included there anymore with XZ Utils 5.2.4.)
    
    Binaries built by RHEL/CentOS 7 users get distributed and then
    people wonder why they don't run on some other distribution.
    Seems that people have found out about the patch and been copying
    it to some build scripts, seemingly curing the symptoms but
    actually spreading the illness further and outside RHEL/CentOS 7.
    
    The ill patch seems to be from late 2016 (RHEL 7.3) and in 2017 it
    had spread at least to EasyBuild. I heard about the events only
    recently. :-(
    
    This commit splits liblzma.map into two versions: one for
    GNU/Linux and another for other OSes that can use symbol versioning
    (FreeBSD, Solaris, maybe others). The Linux-specific file and the
    matching additions to .c files add full compatibility with binaries
    that have been built against a RHEL/CentOS-patched liblzma. Builds
    for OSes other than GNU/Linux won't get the vaccine as they should
    be immune to the problem (I really hope that no build script uses
    the RHEL/CentOS 7 patch outside GNU/Linux).
    
    The RHEL/CentOS compatibility symbols XZ_5.1.2alpha and XZ_5.2.2
    are intentionally put *after* XZ_5.2 in liblzma_linux.map. This way
    if one forgets to #define HAVE_SYMBOL_VERSIONS_LINUX when building,
    the resulting liblzma.so.5 will have lzma_stream_encoder_mt@@XZ_5.2
    since XZ_5.2 {...} is the first one that lists that function.
    Without HAVE_SYMBOL_VERSIONS_LINUX @XZ_5.1.2alpha and @XZ_5.2.2
    will be missing but that's still a minor problem compared to
    only having lzma_stream_encoder_mt@@XZ_5.1.2alpha!
    
    The "local: *;" line was moved to XZ_5.0 so that it doesn't need
    to be moved around. It doesn't matter where it is put.
    
    Having two similar liblzma_*.map files is a bit silly as it is,
    at least for now, easily possible to generate the generic one
    from the Linux-specific file. But that adds extra steps and
    increases the risk of mistakes when supporting more than one
    build system. So I rather maintain two files in parallel and let
    validate_map.sh check that they are in sync when "make mydist"
    is run.
    
    This adds .symver lines for lzma_stream_encoder_mt@XZ_5.2.2 and
    lzma_stream_encoder_mt_memusage@XZ_5.2.2 even though these
    weren't exported by RHEL/CentOS 7 (only @@XZ_5.1.2alpha was
    for these two). I added these anyway because someone might
    misunderstand the RHEL/CentOS 7 patch and think that @XZ_5.2.2
    (@@XZ_5.2.2) versions were exported too.
    
    At glance one could suggest using __typeof__ to copy the function
    prototypes when making aliases. However, this doesn't work trivially
    because __typeof__ won't copy attributes (lzma_nothrow, lzma_pure)
    and it won't change symbol visibility from hidden to default (done
    by LZMA_API()). Attributes could be copied with __copy__ attribute
    but that needs GCC 9 and a fallback method would be needed anyway.
    
    This uses __symver__ attribute with GCC >= 10 and
    __asm__(".symver ...") with everything else. The attribute method
    is required for LTO (-flto) support with GCC. Using -flto with
    GCC older than 10 is now broken on GNU/Linux and will not be fixed
    (can silently result in a broken liblzma build that has dangerously
    incorrect symbol versions). LTO builds with Clang seem to work
    with the traditional __asm__(".symver ...") method.
    
    Thanks to Boud Roukema for reporting the problem and discussing
    the details and testing the fix.

commit 80a1a8bb838842a2be343bd88ad1462c21c5e2c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Aug 31 16:42:04 2022 +0300

    CMake: Add xz symlinks.
    
    These are a minor thing especially since the xz build has
    some real problems still like lack of large file support
    on 32-bit systems but I'll commit this since the code exists.
    
    Thanks to Jia Tan.

commit a4193bb6d85d7765b1b87faeab3e50106d3ab2e9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Aug 31 16:29:38 2022 +0300

    CMake: Put xz man page install under if(UNIX) like is for xzdec.
    
    Thanks to Jia Tan.

commit c1555b1a221a1427d4d650647531016d754bc4da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 22 18:16:40 2022 +0300

    Bump version number for 5.3.3alpha.

commit 44fedddc11c3f6ec2f7fe35a3e38f15ca93f90eb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 22 18:13:56 2022 +0300

    Add NEWS for 5.3.3alpha.

commit a93e235d7ca764cc19f8f9f9063b40ff361c3cfa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 12 17:59:41 2022 +0300

    Translations: Add Portuguese translation.
    
    Jia Tan made white-space changes and also changed "Language: pt_BR\n"
    to pt. The translator wasn't reached so I'm hoping these changes
    are OK and will commit it without translator's approval.
    
    Thanks to Pedro Albuquerque and Jia Tan.

commit e7cf5a946f25e40d77f45e41f0dee7d42a04e9ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 10 21:16:40 2022 +0300

    Translations: Add Serbian translation.
    
    Quite a few white-space changes were made by Jia Tan to make
    this look good. Contacting the translator didn't succeed so
    I'm committing this without getting translator's approval.
    
    Thanks to Мирослав Николић (Miroslav Nikolic) and Jia Tan.

commit cc8617ab53b1f2a4da212fa76c92fe538269c5de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 4 23:51:36 2022 +0300

    Translations: Add Swedish translation.
    
    Thanks to Sebastian Rasmussen and Jia Tan.

commit c613598c358b640682d0ca2aed38fa7df763e8c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 4 23:40:27 2022 +0300

    Translations: Add Esperanto translation.
    
    Thanks to Keith Bowes and Jia Tan.

commit 659a587d678f21e98e91d2751c31d4ce050c081a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 1 00:22:33 2022 +0300

    Translations: Add Catalan translation.
    
    Thanks to Jordi Mas and Jia Tan.

commit 739fd8c9bdf1d85f57d56642aad87148d4779530
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 30 17:47:08 2022 +0300

    Translations: Add Ukrainian translation.
    
    Thanks to Yuri Chornoivan and Jia Tan.

commit 73280550b111930c62a667e56add8fd574f80bc8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 30 17:45:26 2022 +0300

    Translators: Add Romanian translation.
    
    Thanks to Remus-Gabriel Chelu and Jia Tan.

commit 2465f5b825152714b2c357d96c2422c31109d320
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 29 18:33:32 2022 +0300

    Translations: Update Brazilian Portuguese translation.
    
    One msgstr was changed. The diff is long due to changes
    in the source code line numbers in the comments.
    
    Thanks to Rafael Fontenelle.

commit 434e1ffd3e62719d509da10b646216f5ef53fe4d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 29 18:04:44 2022 +0300

    Translations: Add Croatian translation.
    
    Thanks to Božidar Putanec and Jia Tan.

commit 0732d0f7065c9bd48bfe4f5983144ae970c4a499
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 29 17:58:48 2022 +0300

    Translations: Add Spanish translation.
    
    Thanks to Cristian Othón Martínez Vera and Jia Tan.

commit 9899b0f82bc130998d1f1f618a6ab805b73f2696
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 29 17:49:43 2022 +0300

    Translations: Add Korean translation.
    
    Thanks to Seong-ho Cho and Jia Tan.

commit 65217eaf6bd195f3ef027d4ac55d57b7d133d69f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 16 21:57:21 2020 +0200

    Translations: Rebuild cs.po to avoid incorrect fuzzy strings.
    
    "make dist" updates the .po files and the fuzzy strings would
    result in multiple very wrong translations.

commit e56ff423ee7af9e648e16b132f0d835d2cb4db26
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 16 17:30:39 2020 +0200

    Translations: Add partial Danish translation.
    
    I made a few minor white space changes without getting them
    approved by the Danish translation team.

commit 43e09c62e77cb8807d932c81de4decbdb956e184
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 22:37:54 2020 +0200

    Translations: Add hu, zh_CN, and zh_TW.
    
    I made a few white space changes to these without getting them
    approved by the translation teams. (I tried to contact the hu and
    zh_TW teams but didn't succeed. I didn't contact the zh_CN team.)

commit 982b6b198ae1ffe6093236dd8a3d03d1415b912b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 14:33:30 2020 +0200

    Translations: Update vi.po to match the file from the TP.
    
    The translated strings haven't been updated but word wrapping
    is different.

commit 801f39691fc4abc6dd33d7653d498781b593f3eb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 14:18:03 2020 +0200

    Translations: Add fi and pt_BR, and update de, fr, it, and pl.
    
    The German translation isn't identical to the file in
    the Translation Project but the changes (white space changes
    only) were approved by the translator Mario Blättermann.

commit 311e4f85ede5d2f0bb71f3ad70b5b7db1b5adf33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 22 17:27:19 2022 +0300

    xz: Try to clarify --memlimit-mt-decompress vs. --memlimit-compress.

commit df23c31000283c00e5ef1ca32a0bc3bb757bd707
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 22 16:46:18 2022 +0300

    CMake: Add liblzma tests.
    
    Thanks to Jia Tan for the patch.

commit 02a777f9c422d3b5ec895078530bb1a2b6f7bdf5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 19 23:32:22 2022 +0300

    xz: Revise --info-memory output.
    
    The strings could be more descriptive but it's good
    to have some version of this committed now.
    
    --robot mode wasn't changed yet.

commit f864f6d42eab57ea8ed82cc2dd19a03b51377442
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 19 23:12:02 2022 +0300

    xz: Update the man page for threaded decompression and memlimits.
    
    This documents the changes made in commits
    6c6da57ae2aa962aabde6892442227063d87e88c,
    cad299008cf73ec566f0662a9cf2b94f86a99659, and
    898faa97287a756231c663a3ed5165672b417207.
    
    The --info-memory bit hasn't been finished yet
    even though it's already mentioned in this commit
    under --memlimit-mt-decompress and --threads.

commit d13bfcc0056617dd648f655a01653932fad7067f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 18 17:49:16 2022 +0300

    Build: Include the CMake files in the distribution.
    
    This was supposed to be done in 2020 with 5.2.5 release
    already but it was noticed only today. 5.2.5 and 5.2.6
    even mention experiemental CMake support in the NEWS entries.
    
    Thanks to Olivier B. for reporting the problem.

commit e66787bcfefdb93f19c974f895f65969a77937b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 18 17:38:05 2022 +0300

    Windows: Fix broken liblzma.dll build with Visual Studio project files.
    
    The bug was introduced in 352ba2d69af2136bc814aa1df1a132559d445616
    "Windows: Fix building of resource files when config.h isn't used."
    
    That commit fixed liblzma.dll build with CMake while keeping it
    working with Autotools on Windows but the VS project files were
    forgotten.
    
    I haven't tested these changes.
    
    Thanks to Olivier B. for reporting the bug and for the initial patch.

commit c4e8e5fb311225b8b48d34157891a640b2535e0c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 18 17:16:49 2022 +0300

    liblzma: Threaded decoder: Improve LZMA_FAIL_FAST when LZMA_FINISH is used.
    
    It will now return LZMA_DATA_ERROR (not LZMA_OK or LZMA_BUF_ERROR)
    if LZMA_FINISH is used and there isn't enough input to finish
    decoding the Block Header or the Block. The use of LZMA_DATA_ERROR
    is simpler and the less risky than LZMA_BUF_ERROR but this might
    be changed before 5.4.0.

commit 6dcf606e7efa2b259f0262f9e2f61e00116842d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 12 18:31:47 2022 +0300

    Add NEWS for 5.2.6.

commit 413b86fcf8934fae5a004f378a9483d37d8fcaab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 12 14:28:41 2022 +0300

    Add Jia Tan to AUTHORS.

commit 352672732c346c546ff3c26d0605bc0ed1c8b7c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 25 19:28:26 2022 +0300

    Build: Start the generated ChangeLog from around 5.2.0 instead of 5.0.0.
    
    This makes ChangeLog smaller.

commit 6f6d11225d6016be2bbb55d845b66f6b04d048df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 25 19:11:05 2022 +0300

    Translations: Change the copyright comment string to use with po4a.
    
    This affects the second line in po4a/xz-man.pot. The man pages of
    xzdiff, xzgrep, and xzmore are from GNU gzip and under GNU GPLv2+
    while the rest of the man pages are in the public domain.

commit 9cc721af5436908f2d5a828aebbc4050a32a3487
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 24 13:27:48 2022 +0300

    xz: Update the man page that change to --keep will be in 5.2.6.

commit b81bf0c7d1873e52a4086a9abb494471d652cb55
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 19 23:23:54 2022 +0300

    Update THANKS.

commit d796b6d7fdb8b7238b277056cf9146cce25db604
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 19 23:19:49 2022 +0300

    xzgrep man page: Document exit statuses.

commit 923bf96b55e5216a6c8df9d8331934f54784390e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 19 23:13:24 2022 +0300

    xzgrep: Improve error handling, especially signals.
    
    xzgrep wouldn't exit on SIGPIPE or SIGQUIT when it clearly
    should have. It's quite possible that it's not perfect still
    but at least it's much better.
    
    If multiple exit statuses compete, now it tries to pick
    the largest of value.
    
    Some comments were added.
    
    The exit status handling of signals is still broken if the shell
    uses values larger than 255 in $? to indicate that a process
    died due to a signal ***and*** their "exit" command doesn't take
    this into account. This seems to work well with the ksh and yash
    versions I tried. However, there is a report in gzip/zgrep that
    OpenSolaris 5.11 (not 5.10) has a problem with "exit" truncating
    the argument to 8 bits:
    
        https://debbugs.gnu.org/cgi/bugreport.cgi?bug=22900#25
    
    Such a bug would break xzgrep but I didn't add a workaround
    at least for now. 5.11 is old and I don't know if the problem
    exists in modern descendants, or if the problem exists in other
    ksh implementations in use.

commit a648978b20495b7aa4a8b029c5a810b5ad9d08ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 19 00:10:55 2022 +0300

    xzgrep: Make the fix for ZDI-CAN-16587 more robust.
    
    I don't know if this can make a difference in the real world
    but it looked kind of suspicious (what happens with sed
    implementations that cannot process very long lines?).
    At least this commit shouldn't make it worse.

commit bd7b290f3fe4faeceb7d3497ed9bf2e6ed5e7dc5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 18 21:52:31 2022 +0300

    xzgrep: Use grep -H --label when available (GNU, *BSDs).
    
    It avoids the use of sed for prefixing filenames to output lines.
    Using sed for that is slower and prone to security bugs so now
    the sed method is only used as a fallback.
    
    This also fixes an actual bug: When grepping a binary file,
    GNU grep nowadays prints its diagnostics to stderr instead of
    stdout and thus the sed-method for prefixing the filename doesn't
    work. So with this commit grepping binary files gives reasonable
    output with GNU grep now.
    
    This was inspired by zgrep but the implementation is different.

commit b56729af9f1a596e57aeefd7570d8d7dce5c9f52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 18 21:10:25 2022 +0300

    xzgrep: Use -e to specify the pattern to grep.
    
    Now we don't need the separate test for adding the -q option
    as it can be added directly in the two places where it's needed.

commit bad61b5997e6647911974022bfb72f3d4818a594
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 18 19:18:48 2022 +0300

    Scripts: Use printf instead of echo in a few places.
    
    It's a good habbit as echo has some portability corner cases
    when the string contents can be anything.

commit 6a4a4a7d2667837dc824c26fcb19ed6ca5aff645
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 17 21:36:25 2022 +0300

    xzgrep: Add more LC_ALL=C to avoid bugs with multibyte characters.
    
    Also replace one use of expr with printf.
    
    The rationale for LC_ALL=C was already mentioned in
    69d1b3fc29677af8ade8dc15dba83f0589cb63d6 that fixed a security
    issue. However, unrelated uses weren't changed in that commit yet.
    
    POSIX says that with sed and such tools one should use LC_ALL=C
    to ensure predictable behavior when strings contain byte sequences
    that aren't valid multibyte characters in the current locale. See
    under "Application usage" in here:
    
    https://pubs.opengroup.org/onlinepubs/9699919799/utilities/sed.html
    
    With GNU sed invalid multibyte strings would work without this;
    it's documented in its Texinfo manual. Some other implementations
    aren't so forgiving.

commit b48f9d615f2c2e8d2f6e253d0e48ee66d0652b68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 17 20:55:16 2022 +0300

    xzgrep: Fix parsing of certain options.
    
    Fix handling of "xzgrep -25 foo" (in GNU grep "grep -25 foo" is
    an alias for "grep -C25 foo"). xzgrep would treat "foo" as filename
    instead of as a pattern. This bug was fixed in zgrep in gzip in 2012.
    
    Add -E, -F, -G, and -P to the "no argument required" list.
    
    Add -X to "argument required" list. It is an
    intentionally-undocumented GNU grep option so this isn't
    an important option for xzgrep but it seems that other grep
    implementations (well, those that I checked) don't support -X
    so I hope this change is an improvement still.
    
    grep -d (grep --directories=ACTION) requires an argument. In
    contrast to zgrep, I kept -d in the "no argument required" list
    because it's not supported in xzgrep (or zgrep). This way
    "xzgrep -d" gives an error about option being unsupported instead
    of telling that it requires an argument. Both zgrep and xzgrep
    tell that it's unsupported if an argument is specified.
    
    Add comments.

commit 2d2201bc6315deda4d43625aa510972467bd51d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 14 20:33:05 2022 +0300

    Tests: Add the .lzma files to test_files.sh.

commit ce5549a591bf126300618879f5b24023351baff6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 14 19:37:42 2022 +0300

    Tests: Add .lzma test files.

commit 107c93ee5cad51a6ea0cee471209bfe8d76deaa3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 14 18:12:38 2022 +0300

    liblzma: Rename a variable and improve a comment.

commit 511feb5eadb988d641b025d597f4fac7502003b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 13 22:24:41 2022 +0300

    Update THANKS.

commit 9595a3119b9faf0ce01375329cad8bbf85c35ea2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 13 22:24:07 2022 +0300

    liblzma: Add optional autodetection of LZMA end marker.
    
    Turns out that this is needed for .lzma files as the spec in
    LZMA SDK says that end marker may be present even if the size
    is stored in the header. Such files are rare but exist in the
    real world. The code in liblzma is so old that the spec didn't
    exist in LZMA SDK back then and I had understood that such
    files weren't possible (the lzma tool in LZMA SDK didn't
    create such files).
    
    This modifies the internal API so that LZMA decoder can be told
    if EOPM is allowed even when the uncompressed size is known.
    It's allowed with .lzma and not with other uses.
    
    Thanks to Karl Beldan for reporting the problem.

commit 0c0f8e9761eb6eaf199082cf144db7ac5f9d8cb2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 12 18:53:04 2022 +0300

    xz: Document the special memlimit case of 2000 MiB on MIPS32.
    
    See commit fc3d3a7296ef58bb799a73943636b8bfd95339f7.

commit 82e30fed66a89706388a8c15dc954d84e63f38fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 15:02:57 2022 +0300

    Tests: Use char[][24] array for enum_strings_lzma_ret.
    
    Array of pointers to short strings is a bit pointless here
    and now it's fully const.

commit 5ba9459e6c4a29f6870ca78ce8ac6e519d59c41e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 14:12:14 2022 +0300

    Tests: tuktest.h: Add tuktest_error_impl to help with error conditions.

commit b339892668da20aea22a93668c82b87a38e4a97f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 13:29:59 2022 +0300

    Tests: tuktest.h: Rename file_from_* and use tuktest_malloc there.

commit d8b63a0ad68d1c461eb373466679ebc41fbc207d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 13:08:19 2022 +0300

    Tests: tuktest.h: Add malloc wrapper with automatic freeing.

commit 1d51536a4b19a8fae768f8eb462fc2238cb36d53
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 11:47:37 2022 +0300

    Tests: tuktest.h: Move a function.

commit 70c7555f6403553ee35539e869de0025592d8564
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 22:21:15 2022 +0300

    Tests: test_vli: Remove an invalid test-assertion.
    
    lzma_vli is unsigned so trying a signed value results in
    a compiler warning from -Wsign-conversion. (lzma_vli)-1
    equals to LZMA_VLI_UNKNOWN anyway which is the next assertion.

commit 154b73c5a1092c3f785e01666b564ad7ff1be555
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 22:10:10 2022 +0300

    Tests: test_vli: Add const where appropriate.

commit 00e3613f1212eaa84e721585fdb4de6967cf2476
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 21:29:21 2022 +0300

    Tests: Use good-1-empty-bcj-lzma2.xz in test_bcj_exact_size.
    
    It's much nicer this way so that the test data isn't a hardcoded
    table inside the C file.

commit 86bab755be252bfd3e0a9aee8e7b83a9bbb23ed0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 21:26:13 2022 +0300

    Tests: Add file reading helpers to tuktest.h.

commit 83d2337b72dbf391c6f3b41889eea99e51679105
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 18:21:57 2022 +0300

    Tests: tuktest.h: Move a printf from a macro to a helper function.

commit f9e8176ea7d520797a2db2d49a5a632c285674a8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 14 17:20:49 2022 +0300

    Tests: Add test file good-1-empty-bcj-lzma2.xz.
    
    This is from test_bcj_exact_size.c.
    It's good to have it as a standalone file.

commit 5c8ffdca20813939818843476fb212dfae8838a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 2 21:01:45 2022 +0300

    Tests: Convert test_check to tuktest.
    
    Thanks to Jia Tan for help with all the tests.

commit faf5ff8899d539b4dcd2a7e5280cb820a4746c86
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 2 20:31:03 2022 +0300

    Tests: Convert test_block_header to tuktest.

commit 754d39fbebee3782258d42f154a223d3c5770ec7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 2 20:28:23 2022 +0300

    Tests: Convert test_bcj_exact_size to tuktest.
    
    The compress() and decompress() functions were merged because
    the later depends on the former so they need to be a single
    test case.

commit 96da21470f9570cd08286906a050a7c22631775b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 2 20:27:00 2022 +0300

    Tests: Include tuktest.h in tests.h.
    
    This breaks -Werror because none of the tests so far use
    tuktest.h and thus there are warnings about unused variables
    and functions.

commit df71ba1c991f60c3269aaadd398247e632714626
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 2 20:25:21 2022 +0300

    Tests: Add tuktest.h mini-test-framework.

commit 4773608554d1b684a05ff9c1d879cf5c42266d33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 21:31:36 2022 +0300

    Build: Enable Automake's parallel test harness.
    
    It has been the default for quite some time already and
    the old serial harness isn't discouraged. The downside is
    that with parallel tests one cannot print progress info or
    other diagnostics to the terminal; all output from the tests
    will be in the log files only. But now that the compression
    tests are separated the parallel tests will speed things up.

commit 9a6dd6d46f7f256a5573e5d874c1052033ed7b05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 21:17:47 2022 +0300

    Tests: Split test_compress.sh into separate test unit for each file.
    
    test_compress.sh now takes one command line argument:
    a filename to be tested. If it begins with "compress_generated_"
    the file will be created with create_compress_files.
    
    This will allow parallel execution of the slow tests.

commit c7758ac9c734707514dd34f254173ebac5eea7f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 20:32:49 2022 +0300

    Test: Make create_compress_files.c a little more flexible.
    
    If a command line argument is given, then only the test file
    of that type is created. It's quite dumb in sense that unknown
    names don't give an error but it's good enough here.
    
    Also use EXIT_FAILURE instead of 1 as exit status for errors.

commit 4a8e4a7b0ad4b03c0ac6862716c3457452cdaf8c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 20:17:42 2022 +0300

    Tests: Remove unneeded commented lines from test_compress.sh.

commit 2ee50d150ee009f36135540b459e6ff328549725
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 20:16:00 2022 +0300

    Tests: Remove progress indicator from test_compress.sh.
    
    It will be useless with Automake's parallel tests.

commit 2ce4f36f179a81d0c6e182a409f363df759d1ad0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 19:37:18 2022 +0300

    liblzma: Silence a warning.
    
    The actual initialization is done via mythread_sync and seems
    that GCC doesn't necessarily see that it gets initialized there.

commit 5d8f3764ef43c35910e6d7003c0900a961ef6544
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 14 20:53:16 2022 +0300

    xz: Fix build with --disable-threads.

commit 1d592897278b172d8549aa29c3a1f3a4f432a9b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 14 14:50:17 2022 +0300

    xz: Change the cap of the default -T0 memlimit for 32-bit xz.
    
    The SIZE_MAX / 3 was 1365 MiB. 1400 MiB gives little more room
    and it looks like a round (artificial) number in --info-memory
    once --info-memory is made to display it.
    
    Also, using #if avoids useless code on 64-bit builds.

commit c77fe55ddb7752ed0fec46967c5ec9a72632ea0c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 14 14:20:46 2022 +0300

    xz: Add a default soft memory usage limit for --threads=0.
    
    This is a soft limit in sense that it only affects the number of
    threads. It never makes xz fail and it never makes xz change
    settings that would affect the compressed output.
    
    The idea is to make -T0 have more reasonable behavior when
    the system has very many cores or when a memory-hungry
    compression options are used. This also helps with 32-bit xz,
    preventing it from running out of address space.
    
    The downside of this commit is that now the number of threads
    might become too low compared to what the user expected. I
    hope this to be an acceptable compromise as the old behavior
    has been a source of well-argued complaints for a long time.

commit 0adc13bfe32c14f3e4c6ce9f2d4fdf4112ab53f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 14 12:59:09 2022 +0300

    xz: Make -T0 use multithreaded mode on single-core systems.
    
    The main problem withi the old behavior is that the compressed
    output is different on single-core systems vs. multicore systems.
    This commit fixes it by making -T0 one thread in multithreaded mode
    on single-core systems.
    
    The downside of this is that it uses more memory. However, if
    --memlimit-compress is used, xz can (thanks to the previous commit)
    drop to the single-threaded mode still.

commit 898faa97287a756231c663a3ed5165672b417207
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 14 12:38:00 2022 +0300

    xz: Changes to --memlimit-compress and --no-adjust.
    
    In single-threaded mode, --memlimit-compress can make xz scale down
    the LZMA2 dictionary size to meet the memory usage limit. This
    obviously affects the compressed output. However, if xz was in
    threaded mode, --memlimit-compress could make xz reduce the number
    of threads but it wouldn't make xz switch from multithreaded mode
    to single-threaded mode or scale down the LZMA2 dictionary size.
    This seemed illogical and there was even a "FIXME?" about it.
    
    Now --memlimit-compress can make xz switch to single-threaded
    mode if one thread in multithreaded mode uses too much memory.
    If memory usage is still too high, then the LZMA2 dictionary
    size can be scaled down too.
    
    The option --no-adjust was also changed so that it no longer
    prevents xz from scaling down the number of threads as that
    doesn't affect compressed output (only performance). After
    this commit --no-adjust only prevents adjustments that affect
    compressed output, that is, with --no-adjust xz won't switch
    from multithreaded mode to single-threaded mode and won't
    scale down the LZMA2 dictionary size.
    
    The man page wasn't updated yet.

commit cad299008cf73ec566f0662a9cf2b94f86a99659
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 22:20:49 2022 +0300

    xz: Add --memlimit-mt-decompress along with a default limit value.
    
    --memlimit-mt-decompress allows specifying the limit for
    multithreaded decompression. This matches memlimit_threading in
    liblzma. This limit can only affect the number of threads being
    used; it will never prevent xz from decompressing a file. The
    old --memlimit-decompress option is still used at the same time.
    
    If the value of --memlimit-decompress (the default value or
    one specified by the user) is less than the value of
    --memlimit-mt-decompress , then --memlimit-mt-decompress is
    reduced to match --memlimit-decompress.
    
    Man page wasn't updated yet.

commit fe87b4cd5364f5bbb6a75a0299f1500c852d7c9a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 6 23:11:59 2022 +0300

    liblzma: Threaded decoder: Improve setting of pending_error.
    
    It doesn't need to be done conditionally. The comments try
    to explain it.

commit 90621da7f6e1bfd6d91d60415eae04b2bca274c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 6 12:39:49 2022 +0300

    liblzma: Add a new flag LZMA_FAIL_FAST for threaded decoder.
    
    In most cases if the input file is corrupt the application won't
    care about the uncompressed content at all. With this new flag
    the threaded decoder will return an error as soon as any thread
    has detected an error; it won't wait to copy out the data before
    the location of the error.
    
    I don't plan to use this in xz to keep the behavior consistent
    between single-threaded and multi-threaded modes.

commit 64b6d496dc815a176d8307f418f6834a26783484
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 5 12:24:57 2022 +0300

    liblzma: Threaded decoder: Always wait for output if LZMA_FINISH is used.
    
    This makes the behavior consistent with the single-threaded
    decoder when handling truncated .xz files.
    
    Thanks to Jia Tan for finding this issue.

commit e671bc8828b9c0c5406c3a22c541301d0eb54518
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 2 21:49:59 2022 +0300

    liblzma: Threaded decoder: Support zpipe.c-style decoding loop.
    
    This makes it possible to call lzma_code() in a loop that only
    reads new input when lzma_code() didn't fill the output buffer
    completely. That isn't the calling style suggested by the
    liblzma example program 02_decompress.c so perhaps the usefulness
    of this feature is limited.
    
    Also, it is possible to write such a loop so that it works
    with the single-threaded decoder but not with the threaded
    decoder even after this commit, or so that it works only if
    lzma_mt.timeout = 0.
    
    The zlib tutorial <https://zlib.net/zlib_how.html> is a well-known
    example of a loop where more input is read only when output isn't
    full. Porting this as is to liblzma would work with the
    single-threaded decoder (if LZMA_CONCATENATED isn't used) but it
    wouldn't work with threaded decoder even after this commit because
    the loop assumes that no more output is possible when it cannot
    read more input ("if (strm.avail_in == 0) break;"). This cannot
    be fixed at liblzma side; the loop has to be modified at least
    a little.
    
    I'm adding this in any case because the actual code is simple
    and short and should have no harmful side-effects in other
    situations.

commit 2ba8173e27be4793edb46497e499ac2ae753a316
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 31 00:05:07 2022 +0300

    Update THANKS.

commit 69d1b3fc29677af8ade8dc15dba83f0589cb63d6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 29 19:19:12 2022 +0300

    xzgrep: Fix escaping of malicious filenames (ZDI-CAN-16587).
    
    Malicious filenames can make xzgrep to write to arbitrary files
    or (with a GNU sed extension) lead to arbitrary code execution.
    
    xzgrep from XZ Utils versions up to and including 5.2.5 are
    affected. 5.3.1alpha and 5.3.2alpha are affected as well.
    This patch works for all of them.
    
    This bug was inherited from gzip's zgrep. gzip 1.12 includes
    a fix for zgrep.
    
    The issue with the old sed script is that with multiple newlines,
    the N-command will read the second line of input, then the
    s-commands will be skipped because it's not the end of the
    file yet, then a new sed cycle starts and the pattern space
    is printed and emptied. So only the last line or two get escaped.
    
    One way to fix this would be to read all lines into the pattern
    space first. However, the included fix is even simpler: All lines
    except the last line get a backslash appended at the end. To ensure
    that shell command substitution doesn't eat a possible trailing
    newline, a colon is appended to the filename before escaping.
    The colon is later used to separate the filename from the grep
    output so it is fine to add it here instead of a few lines later.
    
    The old code also wasn't POSIX compliant as it used \n in the
    replacement section of the s-command. Using \<newline> is the
    POSIX compatible method.
    
    LC_ALL=C was added to the two critical sed commands. POSIX sed
    manual recommends it when using sed to manipulate pathnames
    because in other locales invalid multibyte sequences might
    cause issues with some sed implementations. In case of GNU sed,
    these particular sed scripts wouldn't have such problems but some
    other scripts could have, see:
    
        info '(sed)Locale Considerations'
    
    This vulnerability was discovered by:
    cleemy desu wayo working with Trend Micro Zero Day Initiative
    
    Thanks to Jim Meyering and Paul Eggert discussing the different
    ways to fix this and for coordinating the patch release schedule
    with gzip.

commit bd93b776c1bd15e90661033c918cdeb354dbcc38
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 26 01:02:44 2022 +0200

    liblzma: Fix a deadlock in threaded decoder.
    
    If a worker thread has consumed all input so far and it's
    waiting on thr->cond and then the main thread enables
    partial update for that thread, the code used to deadlock.
    This commit allows one dummy decoding pass to occur in this
    situation which then also does the partial update.
    
    As part of the fix, this moves thr->progress_* updates to
    avoid the second thr->mutex locking.
    
    Thanks to Jia Tan for finding, debugging, and reporting the bug.

commit e0394e94230f208682ac1e1f4c41f22f9ad79916
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 23 16:34:00 2022 +0200

    Update THANKS.

commit 487c77d48760564b1949c5067630b675b87be4de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 23 16:28:55 2022 +0200

    liblzma: Threaded decoder: Don't stop threads on LZMA_TIMED_OUT.
    
    LZMA_TIMED_OUT is not an error and thus stopping threads on
    LZMA_TIMED_OUT breaks the decoder badly.
    
    Thanks to Jia Tan for finding the bug and for the patch.

commit 6c6da57ae2aa962aabde6892442227063d87e88c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 7 00:36:16 2022 +0200

    xz: Add initial support for threaded decompression.
    
    If threading support is enabled at build time, this will
    use lzma_stream_decoder_mt() even for single-threaded mode.
    With memlimit_threading=0 the behavior should be identical.
    
    This needs some work like adding --memlimit-threading=LIMIT.
    
    The original patch from Sebastian Andrzej Siewior included
    a method to get currently available RAM on Linux. It might
    be one way to go but as it is Linux-only, the available-RAM
    approach needs work for portability or using a fallback method
    on other OSes.
    
    The man page wasn't updated yet.

commit 4cce3e27f529af33e0e7749a8cbcec59954946b5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 6 23:36:20 2022 +0200

    liblzma: Add threaded .xz decompressor.
    
    I realize that this is about a decade late.
    
    Big thanks to Sebastian Andrzej Siewior for the original patch.
    I made a bunch of smaller changes but after a while quite a few
    things got rewritten. So any bugs in the commit were created by me.

commit 717631b9788dc9c100ee0c87d3c14a2782638ff4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 6 16:54:23 2022 +0200

    liblzma: Fix docs: lzma_block_decoder() cannot return LZMA_UNSUPPORTED_CHECK.
    
    If Check is unsupported, it will be silently ignored.
    It's the caller's job to handle it.

commit 1a4bb97a00936535e30ac61945aeee38882b5d1a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 6 16:41:19 2022 +0200

    liblzma: Add new output queue (lzma_outq) features.
    
    Add lzma_outq_clear_cache2() which may leave one buffer allocated
    in the cache.
    
    Add lzma_outq_outbuf_memusage() to get the memory needed for
    a single lzma_outbuf. This is now used internally in outqueue.c too.
    
    Track both the total amount of memory allocated and the amount of
    memory that is in active use (not in cache).
    
    In lzma_outbuf, allow storing the current input position that
    matches the current output position. This way the main thread
    can notice when no more output is possible without first providing
    more input.
    
    Allow specifying return code for lzma_outq_read() in a finished
    lzma_outbuf.

commit ddbc6f58c2de388eed24cd7ea91b523d397da5f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 6 15:18:58 2022 +0200

    liblzma: Index hash: Change return value type of hash_append() to void.

commit 20e7a33e2d59c6a814447d3991f21e2702174b20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 22 03:42:57 2022 +0200

    liblzma: Minor addition to lzma_vli_size() API doc.
    
    Thanks to Jia Tan.

commit 4f78f5fcf63592f2d77e921cfe0d5de300867374
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 22 02:04:18 2022 +0200

    liblzma: Check the return value of lzma_index_append() in threaded encoder.
    
    If lzma_index_append() failed (most likely memory allocation failure)
    it could have gone unnoticed and the resulting .xz file would have
    an incorrect Index. Decompressing such a file would produce the
    correct uncompressed data but then an error would occur when
    verifying the Index field.

commit 5313ad66b40aab822ddca3e9905254cb99a4080d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 22 01:37:39 2022 +0200

    Update THANKS.

commit 1c9a5786d206b4abc8e427326651c8174baea753
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 20 20:36:27 2022 +0200

    liblzma: Make Block decoder catch certain types of errors better.
    
    Now it limits the input and output buffer sizes that are
    passed to a raw decoder. This way there's no need to check
    if the sizes can grow too big or overflow when updating
    Compressed Size and Uncompressed Size counts. This also means
    that a corrupt file cannot cause the raw decoder to process
    useless extra input or output that would exceed the size info
    in Block Header (and thus cause LZMA_DATA_ERROR anyway).
    
    More importantly, now the size information is verified more
    carefully in case raw decoder returns LZMA_OK. This doesn't
    really matter with the current single-threaded .xz decoder
    as the errors would be detected slightly later anyway. But
    this helps avoiding corner cases in the upcoming threaded
    decompressor, and it might help other Block decoder uses
    outside liblzma too.
    
    The test files bad-1-lzma2-{9,10,11}.xz test these conditions.
    With the single-threaded .xz decoder the only difference is
    that LZMA_DATA_ERROR is detected in a difference place now.

commit 555de11873eb00c9b94a8be70645db502e5a9dbd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 20 19:38:55 2022 +0200

    Tests: Add bad-1-lzma2-11.xz.

commit f0da507f22e7f4e3edb75b45b74d344244ca03fb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 18 18:51:10 2022 +0200

    Translations: Fix po4a failure with the French man page translations.
    
    Thanks to Mario Blättermann for the patch.

commit f7711d228c3c32395460c82498c60a9f730d0239
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 7 01:14:37 2022 +0200

    Translations: Add French translation of man pages.
    
    This matches xz-utils 5.2.5-2 in Debian.
    
    The translation was done by "bubu", proofread by the debian-l10n-french
    mailing list contributors, and submitted to me on the xz-devel mailing
    list by Jean-Pierre Giraud. Thanks to everyone!

commit 2523c30705f49eabd27b854aa656ae87cc224808
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 6 23:19:32 2022 +0200

    liblzma: Fix uint64_t vs. size_t confusion.
    
    This broke 32-bit builds due to a pointer type mismatch.
    
    This bug was introduced with the output-size-limited encoding
    in 625f4c7c99b2fcc4db9e7ab2deb4884790e2e17c.
    
    Thanks to huangqinjin for the bug report.

commit 2024fbf2794885277d05378d40b2b8015a7c3b40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 13 21:04:05 2021 +0200

    xzgrep: Update man page timestamp.

commit 400e7a239a53282cedaad927a41f3463d7f542e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 13 18:23:24 2021 +0200

    Update THANKS.

commit edf525e2b1840dcaf377df472c67d8f11f8ace1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 28 23:02:11 2021 +0300

    Bump the version number for 5.3.2alpha.

commit ea8c948655a86290524efe59cff067e06a886709
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 28 22:59:52 2021 +0300

    Add NEWS for 5.3.2alpha.

commit 52435f302f4724157ec50b4210cbe42b285c3cbc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 27 23:27:48 2021 +0300

    Update THANKS.

commit f2aea1d5a504b2021bf47a238390e4f12bdd518d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 27 23:23:11 2021 +0300

    xz: Change the coding style of the previous commit.
    
    It isn't any better now but it's consistent with
    the rest of the code base.

commit 2b509c868cae3988bf21cd693fbf9021cdc85628
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 17 17:31:11 2021 +0300

    liblzma: Fix liblzma.map for the lzma_microlzma_* symbols.
    
    This should have been part of d267d109c370a40b502e73f8664b154b15e4f253.
    
    Thanks to Gao Xiang.

commit cacb06a954b58255dfc084a0bc9708f43a0fd6d6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 9 22:21:07 2021 +0300

    Update THANKS.

commit 6928aac9da6ba612780b9f72ba1d6ecbe1e8b54e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 9 21:41:51 2021 +0300

    liblzma: Use _MSVC_LANG to detect when "noexcept" can be used with MSVC.
    
    By default, MSVC always sets __cplusplus to 199711L. The real
    C++ standard version is available in _MSVC_LANG (or one could
    use /Zc:__cplusplus to set __cplusplus correctly).
    
    Fixes <https://sourceforge.net/p/lzmautils/discussion/708858/thread/f6bc3b108a/>.
    
    Thanks to Dan Weiss.

commit d267d109c370a40b502e73f8664b154b15e4f253
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 5 20:38:12 2021 +0300

    liblzma: Rename EROFS LZMA to MicroLZMA.
    
    It still exists primarily for EROFS but MicroLZMA is
    a more generic name (that hopefully doesn't clash with
    something that already exists).

commit 3247e95115acb95bc27f41e8cf4501db5b0b4309
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 4 19:02:38 2021 +0300

    xzdiff: Update the man page about the exit status.
    
    This was forgotten from 194029ffaf74282a81f0c299c07f73caca3232ca.

commit 96f5a28a46fc93ac4e296808ac0f8631d05498bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 4 18:52:48 2021 +0300

    xzless: Fix less(1) version detection when it contains a dot.
    
    Sometimes the version number from "less -V" contains a dot,
    sometimes not. xzless failed detect the version number when
    it does contain a dot. This fixes it.
    
    Thanks to nick87720z for reporting this. Apparently it had been
    reported here <https://bugs.gentoo.org/489362> in 2013.

commit 5fb5212d816addbc523d0798cb482fdd0484f8fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 11 19:58:10 2021 +0300

    Update THANKS.

commit e7da44d5151e21f153925781ad29334ae0786101
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 13 23:31:27 2021 +0200

    CMake: Use interface library for better FindLibLZMA compatibility.
    
    https://www.mail-archive.com/xz-devel@tukaani.org/msg00446.html
    
    Thanks to Markus Rickert.

commit a61dd82ada39030f41b4ffca9ea551714908bedc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 30 18:36:04 2021 +0200

    CMake: Try to improve compatibility with the FindLibLZMA module.
    
    The naming conflict with FindLibLZMA module gets worse.
    Not avoiding it in the first place was stupid.
    
    Normally find_package(LibLZMA) will use the module and
    find_package(liblzma 5.2.5 REQUIRED CONFIG) will use the config
    file even with a case insensitive file system. However, if
    CMAKE_FIND_PACKAGE_PREFER_CONFIG is TRUE and the file system
    is case insensitive, find_package(LibLZMA) will find our liblzma
    config file instead of using FindLibLZMA module.
    
    One big problem with this is that FindLibLZMA uses
    LibLZMA::LibLZMA and we use liblzma::liblzma as the target
    name. With target names CMake happens to be case sensitive.
    To workaround this, this commit adds
    
        add_library(LibLZMA::LibLZMA ALIAS liblzma::liblzma)
    
    to the config file. Then both spellings work.
    
    To make the behavior consistent between case sensitive and
    insensitive file systems, the config and related files are
    renamed from liblzmaConfig.cmake to liblzma-config.cmake style.
    With this style CMake looks for lowercase version of the package
    name so find_package(LiBLzmA 5.2.5 REQUIRED CONFIG) will work
    to find our config file.
    
    There are other differences between our config file and
    FindLibLZMA so it's still possible that things break for
    reasons other than the spelling of the target name. Hopefully
    those situations aren't too common.
    
    When the config file is available, it should always give as good or
    better results as FindLibLZMA so this commit doesn't affect the
    recommendation to use find_package(liblzma 5.2.5 REQUIRED CONFIG)
    which explicitly avoids FindLibLZMA.
    
    Thanks to Markus Rickert.

commit 5b7bc1b8ae766a76710ca1b99f909cf52c697f05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 29 21:19:43 2021 +0200

    Update THANKS.

commit 6c6f0db340dcb8bb424411cedba713405d55f6b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 29 21:19:08 2021 +0200

    liblzma: Fix unitialized variable.
    
    This was introduced two weeks ago in the commit
    625f4c7c99b2fcc4db9e7ab2deb4884790e2e17c.
    
    Thanks to Nathan Moinvaziri.

commit bb1d5c1fdd30550d4221ecd336e0be1206132a5c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 22:32:41 2021 +0200

    Tests: Add bad-1-lzma2-10.xz and also modify -9.xz.

commit 6b8abc84a5469792e0355d0bfc0784d41cfdfef7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 19:22:35 2021 +0200

    liblzma: Fix a wrong comment in stream_encoder_mt.c.

commit 939fc5ed654aac25fe0c8684b2df8dbeadb2de1e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 18:51:51 2021 +0200

    Tests: Add bad-1-lzma2-9.xz.

commit fdd30032f8531ac89519b48c21d810ecf06825f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 17:02:00 2021 +0200

    Tests: Add bad-1-check-crc32-2.xz.

commit db465419ae26ec7fb9b9472183911ff521620c77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 17 19:20:50 2021 +0200

    liblzma: In EROFS LZMA decoder, verify that comp_size matches at the end.
    
    When the uncompressed size is known to be exact, after decompressing
    the stream exactly comp_size bytes of input must have been consumed.
    This is a minor improvement to error detection.

commit 774cc0118ba2496581cb2621505a04bb6598cc75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 17 18:53:34 2021 +0200

    liblzma: Make EROFS LZMA decoder work when exact uncomp_size isn't known.
    
    The caller must still not specify an uncompressed size bigger
    than the actual uncompressed size.
    
    As a downside, this now needs the exact compressed size.

commit 421b0aa352da244075db10205cf33712f91b9835
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 14 20:57:11 2021 +0200

    liblzma: Fix missing normalization in rc_encode_dummy().
    
    Without this fix it could attempt to create too much output.

commit 601ec0311e769fc704daaaa7dac0ca840aff080e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 14 20:07:01 2021 +0200

    liblzma: Add EROFS LZMA encoder and decoder.
    
    Right now this is just a planned extra-compact format for use
    in the EROFS file system in Linux. At this point it's possible
    that the format will either change or be abandoned and removed
    completely.
    
    The special thing about the encoder is that it uses the
    output-size-limited encoding added in the previous commit.
    EROFS uses fixed-sized blocks (e.g. 4 KiB) to hold compressed
    data so the compressors must be able to create valid streams
    that fill the given block size.

commit 625f4c7c99b2fcc4db9e7ab2deb4884790e2e17c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 13 19:16:32 2021 +0200

    liblzma: Add rough support for output-size-limited encoding in LZMA1.
    
    With this it is possible to encode LZMA1 data without EOPM so that
    the encoder will encode as much input as it can without exceeding
    the specified output size limit. The resulting LZMA1 stream will
    be a normal LZMA1 stream without EOPM. The actual uncompressed size
    will be available to the caller via the uncomp_size pointer.
    
    One missing thing is that the LZMA layer doesn't inform the LZ layer
    when the encoding is finished and thus the LZ may read more input
    when it won't be used. However, this doesn't matter if encoding is
    done with a single call (which is the planned use case for now).
    For proper multi-call encoding this should be improved.
    
    This commit only adds the functionality for internal use.
    Nothing uses it yet.

commit 9cdabbeea891e8f1e7741b076f7db6ac05ae392a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 11 23:57:11 2021 +0200

    Scripts: Add zstd support to xzdiff.

commit d9ec3add97cf4c999a7f594c6529680227b6c274
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 11 23:41:30 2021 +0200

    Update THANKS.

commit 074259f4f3966aeac6edb205fecbc1a8d2b58bb2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 11 23:41:16 2021 +0200

    xz: Make --keep accept symlinks, hardlinks, and setuid/setgid/sticky.
    
    Previously this required using --force but that has other
    effects too which might be undesirable. Changing the behavior
    of --keep has a small risk of breaking existing scripts but
    since this is a fairly special corner case I expect the
    likehood of breakage to be low enough.
    
    I think the new behavior is more logical. The only reason for
    the old behavior was to be consistent with gzip and bzip2.
    
    Thanks to Vincent Lefevre and Sebastian Andrzej Siewior.

commit 73c555b3077c19dda29b6f4592ced2af876f8333
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 11 23:28:52 2021 +0200

    Scripts: Fix exit status of xzgrep.
    
    Omit the -q option from xz, gzip, and bzip2. With xz this shouldn't
    matter. With gzip it's important because -q makes gzip replace SIGPIPE
    with exit status 2. With bzip2 it's important because with -q bzip2
    is completely silent if input is corrupt while other decompressors
    still give an error message.
    
    Avoiding exit status 2 from gzip is important because bzip2 uses
    exit status 2 to indicate corrupt input. Before this commit xzgrep
    didn't recognize corrupt .bz2 files because xzgrep was treating
    exit status 2 as SIGPIPE for gzip compatibility.
    
    zstd still needs -q because otherwise it is noisy in normal
    operation.
    
    The code to detect real SIGPIPE didn't check if the exit status
    was due to a signal (>= 128) and so could ignore some other exit
    status too.

commit 194029ffaf74282a81f0c299c07f73caca3232ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 11 22:01:51 2021 +0200

    Scripts: Fix exit status of xzdiff/xzcmp.
    
    This is a minor fix since this affects only the situation when
    the files differ and the exit status is something else than 0.
    In such case there could be SIGPIPE from a decompression tool
    and that would result in exit status of 2 from xzdiff/xzcmp
    while the correct behavior would be to return 1 or whatever
    else diff or cmp may have returned.
    
    This commit omits the -q option from xz/gzip/bzip2/lzop arguments.
    I'm not sure why the -q was used in the first place, perhaps it
    hides warnings in some situation that I cannot see at the moment.
    Hopefully the removal won't introduce a new bug.
    
    With gzip the -q option was harmful because it made gzip return 2
    instead of >= 128 with SIGPIPE. Ignoring exit status 2 (warning
    from gzip) isn't practical because bzip2 uses exit status 2 to
    indicate corrupt input file. It's better if SIGPIPE results in
    exit status >= 128.
    
    With bzip2 the removal of -q seems to be good because with -q
    it prints nothing if input is corrupt. The other tools aren't
    silent in this situation even with -q. On the other hand, if
    zstd support is added, it will need -q since otherwise it's
    noisy in normal situations.
    
    Thanks to Étienne Mollier and Sebastian Andrzej Siewior.

commit f7fa309e1f7178d04c7bedc03b73077639371e97
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 9 21:14:36 2021 +0200

    liblzma: Make lzma_outq usable for threaded decompression too.
    
    Before this commit all output queue buffers were allocated as
    a single big allocation. Now each buffer is allocated separately
    when needed. Used buffers are cached to avoid reallocation
    overhead but the cache will keep only one buffer size at a time.
    This should make things work OK in the decompression where most
    of the time the buffer sizes will be the same but with some less
    common files the buffer sizes may vary.
    
    While this should work fine, it's still a bit preliminary
    and may even get reverted if it turns out to be useless for
    decompression.

commit a35a69d693ce37d4ba7c1855bda7d9cfa13d1778
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 23 17:15:49 2020 +0200

    Update THANKS.

commit bb3b8c6a23e25db79f862b1de325c56052e0354b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 16 18:33:29 2020 +0200

    Update THANKS.

commit 21588ca34af98738954fc12ded1b89d7294ef646
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 16 18:30:14 2020 +0200

    Build: Don't build bundles on Apple OSes.
    
    Thanks to Daniel Packard.

commit d05b0c42dd8b38d8c6b8193c8af50e9bd3d16f28
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 5 22:44:03 2020 +0200

    Update THANKS.

commit 2f108abb3d82e4e2313b438dae9c0c7c7a6366f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 17 20:51:48 2020 +0200

    CMake: Fix compatibility with CMake 3.13.
    
    The syntax "if(DEFINED CACHE{FOO})" requires CMake 3.14.
    In some other places the code treats the cache variables
    like normal variables already (${FOO} or if(FOO) is used,
    not ${CACHE{FOO}).
    
    Thanks to ygrek for reporting the bug on IRC.

commit 5af726a79273fafa5de5745b117e567f21c90e49
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 1 22:56:43 2020 +0200

    Update THANKS.

commit 4575d9d365c756ec189899f9f743e0b3515ce72d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 1 22:34:25 2020 +0200

    xz: Avoid unneeded \f escapes on the man page.
    
    I don't want to use \c in macro arguments but groff_man(7)
    suggests that \f has better portability. \f would be needed
    for the .TP strings for portability reasons anyway.
    
    Thanks to Bjarni Ingi Gislason.

commit 620b32f5339f86710cb4435e01ecdac972ccac73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 1 19:09:53 2020 +0200

    xz: Use non-breaking spaces when intentionally using more than one space.
    
    This silences some style checker warnings. Seems that spaces
    in the beginning of a line don't need this treatment.
    
    Thanks to Bjarni Ingi Gislason.

commit cb1f34988c8a4130485091b2f8b641303d8f701b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 1 18:49:37 2020 +0200

    xz: Protect the ellipsis (...) on the man page with \&.
    
    This does it only when ... appears outside macro calls.
    
    Thanks to Bjarni Ingi Gislason.

commit 5d224da3da87400f2fab313abbd7c710e7169ef9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 1 18:41:21 2020 +0200

    xz: Avoid the abbreviation "e.g." on the man page.
    
    A few are simply omitted, most are converted to "for example"
    and surrounded with commas. Sounds like that this is better
    style, for example, man-pages(7) recommends avoiding such
    abbreviations except in parenthesis.
    
    Thanks to Bjarni Ingi Gislason.

commit 90457dbe3e5717660f5b81f8c604860fc5137c0c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 12 23:10:03 2020 +0300

    xz man page: Change \- (minus) to \(en (en-dash) for a numeric range.
    
    Docs of ancient troff/nroff mention \(em (em-dash) but not \(en
    and \- was used for both minus and en-dash. I don't know how
    portable \(en is nowadays but it can be changed back if someone
    complains. At least GNU groff and OpenBSD's mandoc support it.
    
    Thanks to Bjarni Ingi Gislason for the patch.

commit 352ba2d69af2136bc814aa1df1a132559d445616
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 12 20:46:24 2020 +0300

    Windows: Fix building of resource files when config.h isn't used.
    
    Now CMake + Visual Studio works for building liblzma.dll.
    
    Thanks to Markus Rickert.

commit a9e2a87f1d61dcf684d809bf08c8ebea93f8a480
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 6 19:31:50 2020 +0300

    src/scripts/xzgrep.1: Filenames to xzgrep are optional.
    
    xzgrep --help was correct already.

commit b8e12f5ab4c9fd3cb09a4330b2861f6b979ababd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 23 18:07:50 2020 +0200

    Typo fixes from fossies.org.
    
    https://fossies.org/linux/misc/xz-5.2.5.tar.xz/codespell.html

commit 869b9d1b4edd6df07f819d360d306251f8147353
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 17 16:24:28 2020 +0200

    Update NEWS for 5.2.5.

commit a048e3a92d238c65f050a765174d9c75417231d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 16 20:01:37 2020 +0200

    README: Update outdated sections.

commit 29aed815ad4f98f3e4d355faa76a244ecd8ce716
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 16 19:39:45 2020 +0200

    README: Mention that man pages can be translated.

commit 7fa7653940cc9dcfcbce2fbc5166ea343ad4e3c1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 16 16:43:29 2020 +0200

    Update INSTALL.generic from Automake 1.16.1.

commit 9bd317ef03ab9b3e6a927c27c2e9c4ac041182f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 15 15:27:22 2020 +0200

    Update INSTALL for Windows and DOS and add preliminary info for z/OS.

commit a3148c0446dc7fa96363752df414d22539c9007b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 15 15:26:20 2020 +0200

    Build: Update m4/ax_pthread.m4 from Autoconf Archive (again).

commit 7812002dd3ed319e42a14662a8531802cca8ca67
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 21:15:35 2020 +0200

    xz: Never use thousand separators in DJGPP builds.
    
    DJGPP 2.05 added support for thousands separators but it's
    broken at least under WinXP with Finnish locale that uses
    a non-breaking space as the thousands separator. Workaround
    by disabling thousands separators for DJGPP builds.

commit 7c8f688bf7fccd65d396e0130cbf4ea5dff5c56f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 19:38:08 2020 +0200

    DOS: Update dos/Makefile for DJGPP 2.05.
    
    It doesn't need -fgnu89-inline like 2.04beta did.

commit 319ca928d73de87940c54e30bffe69f9fa65efdf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 19:36:07 2020 +0200

    DOS: Update instructions in dos/INSTALL.txt.

commit cb6b227ce39932824812ccd8a0647bd968de27d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 11 17:58:51 2020 +0200

    DOS: Update config.h.
    
    The added defines assume GCC >= 4.8.

commit 4572d53e16e87eee375bc5624de2fd59bb0ae9cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 2 13:54:33 2020 +0200

    liblzma: Fix a comment and RC_SYMBOLS_MAX.
    
    The comment didn't match the value of RC_SYMBOLS_MAX and the value
    itself was slightly larger than actually needed. The only harm
    about this was that memory usage was a few bytes larger.

commit 265daa873c0d871f5f23f9b56e133a6f20045a0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 27 20:58:52 2020 +0200

    Build: Make CMake build fail if tuklib_cpucores or tuklib_physmem fails.

commit 7c8b904527cdbe61248c80edcc2e20d840c4fef9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 27 20:24:27 2020 +0200

    Build: Add support for --no-po4a option to autogen.sh.
    
    Normally, if po4a isn't available, autogen.sh will return
    with non-zero exit status. The option --no-po4a can be useful
    when one knows that po4a isn't available but wants autogen.sh
    to still return with zero exit status.

commit 292a5c0f9c9b3a66f5a5c652dc46381836d4537f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 25 21:35:14 2020 +0200

    Update THANKS.

commit 474320e9908786ba2021035f9013191e16cde08a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 25 20:42:31 2020 +0200

    Build: Fix bugs in the CMake files.
    
    Seems that the phrase "add more quotes" from sh/bash scripting
    applies to CMake as well. E.g. passing an unquoted list ${FOO}
    to a function that expects one argument results in only the
    first element of the list being passed as an argument and
    the rest get ignored. Adding quotes helps ("${FOO}").
    
    list(INSERT ...) is weird. Inserting an empty string to an empty
    variable results in empty list, but inserting it to a non-empty
    variable does insert an empty element to the list.
    
    Since INSERT requires at least one element,
    "${CMAKE_THREAD_LIBS_INIT}" needs to be quoted in CMakeLists.txt.
    It might result in an empty element in the list. It seems to not
    matter as empty elements consistently get ignored in that variable.
    In fact, calling cmake_check_push_state() and cmake_check_pop_state()
    will strip the empty elements from CMAKE_REQUIRED_LIBRARIES!
    
    In addition to quoting fixes, this fixes checks for the cache
    variables in tuklib_cpucores.cmake and tuklib_physmem.cmake.
    
    Thanks to Martin Matuška for testing and reporting the problems.
    These fixes aren't tested yet but hopefully they soon will be.

commit 7e3493d40eac0c3fa3d5124097745a70e15c41f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 24 23:38:16 2020 +0200

    Build: Add very limited experimental CMake support.
    
    This does *NOT* replace the Autotools-based build system in
    the foreseeable future. See the comment in the beginning
    of CMakeLists.txt.
    
    So far this has been tested only on GNU/Linux but I commit
    it anyway to make it easier for others to test. Since I
    haven't played much with CMake before, it's likely that
    there are things that have been done in a silly or wrong
    way and need to be fixed.

commit 21bd4701fca3e9002ce78bc135debca369ed8545
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 24 23:37:07 2020 +0200

    Update m4/.gitignore.

commit e094d1d0f196a91ec703e8d0055948feef349ae8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 24 23:29:35 2020 +0200

    tuklib: Omit an unneeded <sys/types.h> from a tests.
    
    tuklib_cpucores.c and tuklib_physmem.c don't include <sys/types.h>
    even via other files in this package, so clearly that header isn't
    needed in the tests either (no one has reported build problems due
    to a missing header in a .c file).

commit b3ed19a55fe99a45bd77614e149d39d18498075c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 24 23:01:00 2020 +0200

    liblzma: Remove unneeded <sys/types.h> from fastpos_tablegen.c.
    
    This file only generates fastpos_table.c.
    It isn't built as a part of liblzma.

commit 7b8982b29179b3c586e0456dc9ecbd4f58dcea59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 22 14:15:07 2020 +0200

    Use defined(__GNUC__) before __GNUC__ in preprocessor lines.
    
    This should silence the equivalent of -Wundef in compilers that
    don't define __GNUC__.

commit 43dfe04e6209c691cf4fbe3072d4ee91271748f1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 21 17:40:02 2020 +0200

    liblzma: Add more uses of lzma_memcmplen() to the normal mode of LZMA.
    
    This gives a tiny encoder speed improvement. This could have been done
    in 2014 after the commit 544aaa3d13554e8640f9caf7db717a96360ec0f6 but
    it was forgotten.

commit 59e6eb4840b9f52fa3a61544974017279b448216
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 21 17:01:15 2020 +0200

    Build: Add visibility.m4 from gnulib.
    
    Appears that this file used to get included as a side effect of
    gettext. After the change to gettext version requirements this file
    no longer got copied to the package and so the build was broken.

commit 7fe3ef2eaa53d439cec043727ea1998f4ff0e22a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 21 16:10:44 2020 +0200

    xz: Silence a warning when sig_atomic_t is long int.
    
    It can be true at least on z/OS.

commit b0a2a77d10940c42b449d47a005bfc2e50ab5db8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 21 15:59:26 2020 +0200

    xz: Avoid unneeded access of a volatile variable.

commit 524c2f12c762032b819757aeda8af7c47c4cabce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 21 01:24:18 2020 +0200

    tuklib_integer.m4: Optimize the check order.
    
    The __builtin byteswapping is the preferred one so check for it first.

commit 57360bb4fd79b358b36d2877db26ac828d1fdfcb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 20 18:54:04 2020 +0200

    tuklib_exit: Add missing header.
    
    strerror() needs <string.h> which happened to be included via
    tuklib_common.h -> tuklib_config.h -> sysdefs.h if HAVE_CONFIG_H
    was defined. This wasn't tested without config.h before so it
    had worked fine.

commit fddd31175e74a538997a939d930462fde17d2dd4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 18 19:12:35 2020 +0200

    Revert the previous commit and add a comment.
    
    The previous commit broke crc32_tablegen.c.
    
    If the whole package is built without config.h (with defines
    set on the compiler command line) this should still work fine
    as long as these headers conform to C99 well enough.

commit 4e4e9fbb7e66d45319525ac224bff48fbdd0cf6e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 17 23:37:20 2020 +0200

    Do not check for HAVE_CONFIG_H in tuklib_config.h.
    
    In XZ Utils sysdefs.h takes care of it and the required headers.

commit 2d4cef954feba82073951358466a1d614141cf33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 16 11:18:28 2020 +0200

    sysdefs.h: Omit the conditionals around string.h and limits.h.
    
    string.h is used unconditionally elsewhere in the project and
    configure has always stopped if limits.h is missing, so these
    headers must have been always available even on the weirdest
    systems.

commit feb9c1969bc3eb33d4ecb72cfa897f92dae84939
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 15 15:07:11 2020 +0200

    Build: Bump Autoconf and Libtool version requirements.
    
    There is no specific reason for this other than blocking
    the most ancient versions. These are still old:
    
    Autoconf 2.69 (2012)
    Automake 1.12 (2012)
    gettext 0.19.6 (2015)
    Libtool 2.4 (2010)

commit 3d576cf92158d62790017ad7f2dd6dc1dd6b42bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 15 03:08:32 2020 +0200

    Build: Use AM_GNU_GETTEXT_REQUIRE_VERSION and require 0.19.6.
    
    This bumps the version requirement from 0.19 (from 2014) to
    0.19.6 (2015).
    
    Using only the old AM_GNU_GETTEXT_VERSION results in old
    gettext infrastructure being placed in the package. By using
    both macros we get the latest gettext files while the other
    programs in the Autotools family can still see the old macro.

commit fa792b8befaf7cb3960b655e0a9410da866d756f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 14 20:42:06 2020 +0200

    Translations: Add German translation of the man pages.
    
    Thanks to Mario Blättermann.

commit 6f7211b6bb47a895b47f533282dba9ee9a1b0c8b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 7 15:32:21 2020 +0200

    Build: Add support for translated man pages using po4a.
    
    The dependency on po4a is optional. It's never required to install
    the translated man pages when xz is built from a release tarball.
    If po4a is missing when building from xz.git, the translated man
    pages won't be generated but otherwise the build will work normally.
    
    The translations are only updated automatically by autogen.sh and
    by "make mydist". This makes it easy to keep po4a as an optional
    dependency and ensures that I won't forget to put updated
    translations to a release tarball.
    
    The translated man pages aren't installed if --disable-nls is used.
    
    The installation of translated man pages abuses Automake internals
    by calling "install-man" with redefined dist_man_MANS and man_MANS.
    This makes the hairy script code slightly less hairy. If it breaks
    some day, this code needs to be fixed; don't blame Automake developers.
    
    Also, this adds more quotes to the existing shell script code in
    the Makefile.am "-hook"s.

commit 426f9e5819ff7710a5ff573a96c02940be65d52f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 6 17:31:38 2020 +0200

    Update THANKS.

commit e3a4481d020e4de89efa037f335cf50f3ca55592
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 22:35:06 2020 +0200

    Update tests/.gitignore.

commit 07208de92f2d5bca764f6d0ebe9d9866051dc4ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 22:28:51 2020 +0200

    Update m4/.gitignore.

commit c91fbf223db46c3b3cb9df769863a1a60cd9c908
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 20:47:38 2020 +0200

    Update THANKS.

commit 15a133b6d1a3eab4faf6eb52a71fdc56bd65846f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 20:40:14 2020 +0200

    xz: Make it a fatal error if enabling the sandbox fails.
    
    Perhaps it's too drastic but on the other hand it will let me
    learn about possible problems if people report the errors.
    This won't be backported to the v5.2 branch.

commit af0fb386ef55db66654ae39e2deec6e04190c4ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 20:33:50 2020 +0200

    xz: Comment out annoying sandboxing messages.

commit 986d8c9b52b824474088e5bb3b6940651660f0e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 5 19:33:37 2020 +0200

    Build: Workaround a POSIX shell detection problem on Solaris.
    
    I don't know if the problem is in gnulib's gl_POSIX_SHELL macro
    or if xzgrep does something that isn't in POSIX. The workaround
    adds a special case for Solaris: if /usr/xpg4/bin/sh exists and
    gl_cv_posix_shell wasn't overriden on the configure command line,
    use that shell for xzgrep and other scripts. That shell is known
    to work and exists on most Solaris systems.

commit 6629ed929cc7d45a11e385f357ab58ec15e7e4ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 3 22:03:50 2020 +0200

    Build: Update m4/ax_pthread.m4 from Autoconf Archive.

commit 353970510895f6a80adfe60cf71b70a95adfa8bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 1 19:56:18 2020 +0200

    xz: Limit --memlimit-compress to at most 4020 MiB for 32-bit xz.
    
    See the code comment for reasoning. It's far from perfect but
    hopefully good enough for certain cases while hopefully doing
    nothing bad in other situations.
    
    At presets -5 ... -9, 4020 MiB vs. 4096 MiB makes no difference
    on how xz scales down the number of threads.
    
    The limit has to be a few MiB below 4096 MiB because otherwise
    things like "xz --lzma2=dict=500MiB" won't scale down the dict
    size enough and xz cannot allocate enough memory. With
    "ulimit -v $((4096 * 1024))" on x86-64, the limit in xz had
    to be no more than 4085 MiB. Some safety margin is good though.
    
    This is hack but it should be useful when running 32-bit xz on
    a 64-bit kernel that gives full 4 GiB address space to xz.
    Hopefully this is enough to solve this:
    
    https://bugzilla.redhat.com/show_bug.cgi?id=1196786
    
    FreeBSD has a patch that limits the result in tuklib_physmem()
    to SIZE_MAX on 32-bit systems. While I think it's not the way
    to do it, the results on --memlimit-compress have been good. This
    commit should achieve practically identical results for compression
    while leaving decompression and tuklib_physmem() and thus
    lzma_physmem() unaffected.

commit ba76d67585f88677af9f48b48e7bdc3bb7687def
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 20:53:25 2020 +0200

    xz: Set the --flush-timeout deadline when the first input byte arrives.
    
    xz --flush-timeout=2000, old version:
    
      1. xz is started. The next flush will happen after two seconds.
      2. No input for one second.
      3. A burst of a few kilobytes of input.
      4. No input for one second.
      5. Two seconds have passed and flushing starts.
    
    The first second counted towards the flush-timeout even though
    there was no pending data. This can cause flushing to occur more
    often than needed.
    
    xz --flush-timeout=2000, after this commit:
    
      1. xz is started.
      2. No input for one second.
      3. A burst of a few kilobytes of input. The next flush will
         happen after two seconds counted from the time when the
         first bytes of the burst were read.
      4. No input for one second.
      5. No input for another second.
      6. Two seconds have passed and flushing starts.

commit fd47fd62bbb1bfd13ab63869137971d8b390025f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 20:19:19 2020 +0200

    xz: Move flush_needed from mytime.h to file_pair struct in file_io.h.

commit 815035681063d5774d3640fc20b8ede783dd574e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 14:49:22 2020 +0200

    xz: coder.c: Make writing output a separate function.
    
    The same code sequence repeats so it's nicer as a separate function.
    Note that in one case there was no test for opt_mode != MODE_TEST,
    but that was only because that condition would always be true, so
    this commit doesn't change the behavior there.

commit 5a49e081a098455bcdbd95cefb90e9b18780fe58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 14:13:42 2020 +0200

    xz: Fix semi-busy-waiting in xz --flush-timeout.
    
    When input blocked, xz --flush-timeout=1 would wake up every
    millisecond and initiate flushing which would have nothing to
    flush and thus would just waste CPU time. The fix disables the
    timeout when no input has been seen since the previous flush.

commit dcca70fe9fa3c4bec56cf9c79e966166c9a9cf6a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 13:47:31 2020 +0200

    xz: Refactor io_read() a bit.

commit 4ae9ab70cd3214395756435d13d8d000368ca2cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 13:37:08 2020 +0200

    xz: Update a comment in file_io.h.

commit 3333ba4a6795a55cf0375329ba08152bd7fcbd46
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 26 13:27:51 2020 +0200

    xz: Move the setting of flush_needed in file_io.c to a nicer location.

commit cf2df0f05ac98c1158c6e48145900b773223605d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 19 21:54:33 2020 +0200

    Use $(LIB_FUZZING_ENGINE) in tests/ossfuzz/Makefile.
    
    https://github.com/google/oss-fuzz/pull/3219#issuecomment-573751048
    
    Thanks to Bhargava Shastry for sending the patch.

commit 7136f1735c60ac6967c4b8e277fcde53d485234f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 31 00:41:28 2019 +0200

    Rename unaligned_read32ne to read32ne, and similarly for the others.

commit 5e78fcbf2eb21936022c9c5c3625d4da76f4b241
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 31 00:29:48 2019 +0200

    Rename read32ne to aligned_read32ne, and similarly for the others.
    
    Using the aligned methods requires more care to ensure that
    the address really is aligned, so it's nicer if the aligned
    methods are prefixed. The next commit will remove the unaligned_
    prefix from the unaligned methods which in liblzma are used in
    more places than the aligned ones.

commit 77bc5bc6dd67056cfd5888520ac930cfc57b4516
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 31 00:18:24 2019 +0200

    Revise tuklib_integer.h and .m4.
    
    Add a configure option --enable-unsafe-type-punning to get the
    old non-conforming memory access methods. It can be useful with
    old compilers or in some other less typical situations but
    shouldn't normally be used.
    
    Omit the packed struct trick for unaligned access. While it's
    best in some cases, this is simpler. If the memcpy trick doesn't
    work, one can request unsafe type punning from configure.
    
    Because CRC32/CRC64 code needs fast aligned reads, if no very
    safe way to do it is found, type punning is used as a fallback.
    This sucks but since it currently works in practice, it seems to
    be the least bad option. It's never needed with GCC >= 4.7 or
    Clang >= 3.6 since these support __builtin_assume_aligned and
    thus fast aligned access can be done with the memcpy trick.
    
    Other things:
      - Support GCC/Clang __builtin_bswapXX
      - Cleaner bswap fallback macros
      - Minor cleanups

commit 8b72950a6b2e2a36c2d8fdc8857564b57191b088
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 29 22:51:58 2019 +0200

    Tests: Hopefully fix test_check.c to work on EBCDIC systems.
    
    Thanks to Daniel Richard G.

commit 43ce4ea7c762238d3df9717b34126d3e0d7cd51c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 24 23:02:40 2019 +0300

    Scripts: Put /usr/xpg4/bin to the beginning of PATH on Solaris.
    
    This adds a configure option --enable-path-for-scripts=PREFIX
    which defaults to empty except on Solaris it is /usr/xpg4/bin
    to make POSIX grep and others available. The Solaris case had
    been documented in INSTALL with a manual fix but it's better
    to do this automatically since it is needed on most Solaris
    systems anyway.
    
    Thanks to Daniel Richard G.

commit 6a89e656ebedd53a10cd1a063a32a9e4ade0da1f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 12 18:57:43 2019 +0300

    Fix comment typos in tuklib_mbstr* files.

commit ac0b4212656a48ef0c187c0c941d40ac9489ae36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 12 18:30:46 2019 +0300

    Add missing include to tuklib_mbstr_width.c.
    
    It didn't matter in XZ Utils because sysdefs.h
    includes string.h anyway.

commit 72a443281fb0b91aebf8cdff2ab1f7c07b081240
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 12 18:10:57 2019 +0300

    Update tuklib base headers to include stdbool.h.

commit de1f47b2b40e960b7bc3acba754f66dd19705921
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 00:54:31 2019 +0300

    xz: Automatically align the strings in --info-memory.
    
    This makes it easier to translate the strings.
    
    Also, the string for amount of RAM was shortened.

commit 8ce679125dbd0e2058d8f886e738d7f19a45cab5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 23:15:21 2019 +0300

    liblzma: Fix a buggy comment.

commit fc77929e92e869f6869bf88931066103fd75f376
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 00:16:06 2019 +0300

    configure.ac: Fix a typo in a comment.

commit e873902641794210ad7db59743f98e3e1cd6139f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 25 00:08:13 2019 +0300

    Tests: Silence warnings from clang -Wassign-enum.
    
    Also changed 999 to 99 so it fits even if lzma_check happened
    to be 8 bits wide.

commit d499e467d99efeaae688564eedc4548837c1416a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 23:52:17 2019 +0300

    liblzma: Add a comment.

commit a12b13c5f0d54c684fa8446f93fdac08ab2a716b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 23:45:21 2019 +0300

    liblzma: Silence clang -Wmissing-variable-declarations.

commit 1b4675cebf7471f7cc9b7072c950e3de97147063
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 23:25:41 2019 +0300

    Add LZMA_RET_INTERNAL1..8 to lzma_ret and use one for LZMA_TIMED_OUT.
    
    LZMA_TIMED_OUT is *internally* used as a value for lzma_ret
    enumeration. Previously it was #defined to 32 and cast to lzma_ret.
    That way it wasn't visible in the public API, but this was hackish.
    
    Now the public API has eight LZMA_RET_INTERNALx members and
    LZMA_TIMED_OUT is #defined to LZMA_RET_INTERNAL1. This way
    the code is cleaner overall although the public API has a few
    extra mysterious enum members.

commit 159c43875eb25deea626ed651274464bae3e32ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 22:57:43 2019 +0300

    xz: Silence a warning from clang -Wsign-conversion in main.c.

commit 466cfcd3e52f6750ce28a635997f3dd84fb18515
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 22:52:20 2019 +0300

    xz: Make "headings" static in list.c.
    
    Caught by clang -Wmissing-variable-declarations.

commit 608517b9b76c41fac6613dbda1193d6f41338e19
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 22:47:39 2019 +0300

    liblzma: Remove incorrect uses of lzma_attribute((__unused__)).
    
    Caught by clang -Wused-but-marked-unused.

commit c2d2ab6a9d41a2b55d047c5b710aacf80d219255
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 20:53:55 2019 +0300

    Tests: Silence a warning from -Wsign-conversion.

commit 2402f7873dcae719d0ebddd23bb579074519ac52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 20:45:49 2019 +0300

    xz: Fix an integer overflow with 32-bit off_t.
    
    Or any off_t which isn't very big (like signed 64 bit integer
    that most system have). A small off_t could overflow if the
    file being decompressed had long enough run of zero bytes,
    which would result in corrupt output.

commit 4fd3a8dd0b60f029e1c66a0ee634f9e9fda3caa9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 01:24:17 2019 +0300

    xz: Cleanup io_seek_src() a bit.
    
    lseek() returns -1 on error and checking for -1 is nicer.

commit dfda7cf6afa486e10df035327d68753896dfb48a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 00:57:23 2019 +0300

    Tests: Remove a duplicate branch from tests/tests.h.
    
    The duplication was introduced about eleven years ago and
    should have been cleaned up back then already.
    
    This was caught by -Wduplicated-branches.

commit 1d4a904d8fb634bd5a04f7fbdd17d3739f3d8866
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 00:40:45 2019 +0300

    xz: Change io_seek_src and io_pread arguments from off_t to uint64_t.
    
    This helps fixing warnings from -Wsign-conversion and makes the
    code look better too.

commit 50120deb0159fcb53ee1a6caffb2bb81a1ecd990
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 24 00:12:38 2019 +0300

    xz: list.c: Fix some warnings from -Wsign-conversion.

commit d0a78751eb54fb1572002746c533936a118e4e42
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 23:22:45 2019 +0300

    tuklib_mbstr_width: Fix a warning from -Wsign-conversion.

commit 7883d73530b4b2a701ddd7d50c35676cbc158039
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 23:19:34 2019 +0300

    xz: Fix some of the warnings from -Wsign-conversion.

commit c2b994fe3d35e9e575c28869a2f7f534f2495d05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 22:27:45 2019 +0300

    tuklib_cpucores: Silence warnings from -Wsign-conversion.

commit 07c4fa9e1a195e0543f271380c8de22a3ab145ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 21:40:47 2019 +0300

    xzdec: Fix warnings from -Wsign-conversion.

commit dfac2c9a1d7d4a2b8a5d7c9c6d567dee48318bcf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 21:38:56 2019 +0300

    liblzma: Fix warnings from -Wsign-conversion.
    
    Also, more parentheses were added to the literal_subcoder
    macro in lzma_comon.h (better style but no functional change
    in the current usage).

commit 41838dcc26375f6aa393a63e4d81e2f4d223de07
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 19:33:55 2019 +0300

    tuklib_integer: Silence warnings from -Wsign-conversion.

commit 3ce05d235f736d392347a05086b8033416874b87
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 20 19:40:30 2019 +0300

    tuklib_integer: Fix usage of conv macros.
    
    Use a temporary variable instead of e.g.
    conv32le(unaligned_read32ne(buf)) because the macro can
    evaluate its argument multiple times.

commit b525b0c0ef40cd89b69294c9b8d57f4a8db58e1f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 20:44:19 2019 +0300

    Update THANKS.

commit 039a168e8cf201d5104a25ec41f0cf25eda6cc53
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 3 20:41:54 2019 +0300

    liblzma: Fix comments.
    
    Thanks to Bruce Stark.

commit c460f6defebc5a81bbca90adc2476154ca244f69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 2 00:50:59 2019 +0300

    liblzma: Fix one more unaligned read to use unaligned_read16ne().

commit c81d77c537f0b8c8672868e1dc6cf7290ce4a25b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 21:41:55 2019 +0300

    Update THANKS.

commit 386394fc9fcde2615391f804eaa466749f96f4ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 21:36:13 2019 +0300

    liblzma: memcmplen: Use ctz32() from tuklib_integer.h.
    
    The same compiler-specific #ifdefs are already in tuklib_integer.h

commit 264ab971ce2994baac41b1579c9c35aba7743fc8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 21:30:03 2019 +0300

    tuklib_integer: Cleanup MSVC-specific code.

commit 33773c6f2a8711d4aa6656795db52c59a28580ec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 19:01:21 2019 +0300

    liblzma: Use unaligned_readXXne functions instead of type punning.
    
    Now gcc -fsanitize=undefined should be clean.
    
    Thanks to Jeffrey Walton.

commit e5f13a66567b1987e0aae42c6fdcd277bb5810ba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 18:46:54 2019 +0300

    tuklib_integer: Autodetect support for unaligned access on ARM.
    
    The result is used as the default for --enable-unaligned-access.
    The test should work with GCC and Clang.

commit 3bc112c2d38d5f348bce7bc2422286b1692c7490
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 1 18:41:16 2019 +0300

    tuklib_integer: Improve unaligned memory access.
    
    Now memcpy() or GNU C packed structs for unaligned access instead
    of type punning. See the comment in this commit for details.
    
    Avoiding type punning with unaligned access is needed to
    silence gcc -fsanitize=undefined.
    
    New functions: unaliged_readXXne and unaligned_writeXXne where
    XX is 16, 32, or 64.

commit 2a22de439ec63da1927b640eda309296a1e8dce5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 13 20:05:17 2019 +0300

    liblzma: Avoid memcpy(NULL, foo, 0) because it is undefined behavior.
    
    I should have always known this but I didn't. Here is an example
    as a reminder to myself:
    
        int mycopy(void *dest, void *src, size_t n)
        {
            memcpy(dest, src, n);
            return dest == NULL;
        }
    
    In the example, a compiler may assume that dest != NULL because
    passing NULL to memcpy() would be undefined behavior. Testing
    with GCC 8.2.1, mycopy(NULL, NULL, 0) returns 1 with -O0 and -O1.
    With -O2 the return value is 0 because the compiler infers that
    dest cannot be NULL because it was already used with memcpy()
    and thus the test for NULL gets optimized out.
    
    In liblzma, if a null-pointer was passed to memcpy(), there were
    no checks for NULL *after* the memcpy() call, so I cautiously
    suspect that it shouldn't have caused bad behavior in practice,
    but it's hard to be sure, and the problematic cases had to be
    fixed anyway.
    
    Thanks to Jeffrey Walton.

commit d3fc850cfedc058247d9e334ce59bbc8f2286d8a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 11 20:56:08 2019 +0300

    Update THANKS.

commit 4adb8288ab61d5f14e212007b8742df0710baf73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 11 20:54:12 2019 +0300

    xz: Update xz man page date.

commit 4ed339606156bd313ed99237485cb8ed0362d64f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 1 18:43:10 2019 +0300

    xz: In xz -lvv look at the widths of the check names too.
    
    Now the widths of the check names is used to adjust the width
    of the Check column. This way there no longer is a need to restrict
    the widths of the check names to be at most ten terminal-columns.

commit 2f4281a1001dcf7fdf1418c0c0d246c16561fb65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 1 18:33:25 2019 +0300

    xz: Fix xz -lvv column alignment to look at the translated strings.

commit 01d01b7c7c0b8eaf7f780a5584ec52c22d10fa4a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 1 16:52:36 2019 +0300

    Update THANKS.

commit 64030c6b17f7743df03a9948a0ccfcdf40c6b97c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 1 16:43:16 2019 +0300

    Windows: Update VS version in windows/vs2019/config.h.

commit d0e58b3a51e8e616f3dc26ec7b7e4aa0fa6991ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 4 22:49:04 2019 +0200

    README: Update translation instructions.
    
    XZ Utils is now part of the Translation Project
    <https://translationproject.org/>.

commit a750c35a7d45a16c11c1d40fecee8443c32a9996
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 4 21:20:39 2019 +0200

    xz: Automatically align column headings in xz -lvv.

commit 6cb42e8aa1dc37bf403a9f5acbd07e86036b7e77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 4 01:07:59 2019 +0200

    xz: Automatically align strings ending in a colon in --list output.
    
    This should avoid alignment errors in translations with these
    strings.

commit 1e3f29b62f2c03e50fc9ebea7b83c1497dd35484
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 13 17:29:23 2019 +0200

    Windows/VS2017: Omit WindowsTargetPlatformVersion from project files.
    
    I understood that if a WTPV is specified, it's often wrong
    because different VS installations have different SDK version
    installed. Omitting the WTPV tag makes VS2017 default to
    Windows SDK 8.1 which often is also missing, so in any case
    people may need to specify the WTPV before building. But some
    day in the future a missing WTPV tag will start to default to
    the latest installed SDK which sounds reasonable:
    
    https://developercommunity.visualstudio.com/content/problem/140294/windowstargetplatformversion-makes-it-impossible-t.html
    
    Thanks to "dom".

commit 4d86076332aece6314063d3712a5f364172bbb0f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 20 20:42:29 2018 +0200

    Update THANKS.

commit b55d79461d1f6aeaac03c7dae84481e5eb8bea4c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 20:34:30 2018 +0200

    xz: Fix a crash in progress indicator when in passthru mode.
    
    "xz -dcfv not_an_xz_file" crashed (all four options are
    required to trigger it). It caused xz to call
    lzma_get_progress(&strm, ...) when no coder was initialized
    in strm. In this situation strm.internal is NULL which leads
    to a crash in lzma_get_progress().
    
    The bug was introduced when xz started using lzma_get_progress()
    to get progress info for multi-threaded compression, so the
    bug is present in versions 5.1.3alpha and higher.
    
    Thanks to Filip Palian <Filip.Palian@pjwstk.edu.pl> for
    the bug report.

commit 4ae5526de013efd1021686fa80bdd10cf1cb9c56
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 22 17:20:31 2018 +0200

    xz: Update man page timestamp.

commit 9eca51ef805ed8002a851df1b4995d71826c8b6e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 2 20:40:48 2018 +0200

    Update THANKS.

commit 106d1a663d4ba42b63231caa289f531548df81c1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 2 20:18:45 2018 +0200

    Tests: Add a fuzz test program and a config file for OSS-Fuzz.
    
    Thanks to Bhargava Shastry and Github user pdknsk.

commit a18ae42a79a19b1394b41eb3e238139fd28012ec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 26 22:49:10 2018 +0300

    liblzma: Don't verify header CRC32s if building for fuzz testing.
    
    FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION is #defined when liblzma
    is being built for fuzz testing.
    
    Most fuzzed inputs would normally get rejected because of incorrect
    CRC32 and the actual header decoding code wouldn't get fuzzed.
    Disabling CRC32 checks avoids this problem. The fuzzer program
    must still use LZMA_IGNORE_CHECK flag to disable verification of
    integrity checks of uncompressed data.

commit f76f7516d6a1c832f61810c82e92d151cc80966c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 27 18:10:44 2018 +0300

    xzless: Rename unused variables to silence static analysers.
    
    In this particular case I don't see this affecting readability
    of the code.
    
    Thanks to Pavel Raiskup.

commit 3cbcaeb07eb7543735befd6f507fdb5fa4363cff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 27 16:02:58 2018 +0300

    liblzma: Remove an always-true condition from lzma_index_cat().
    
    This should help static analysis tools to see that newg
    isn't leaked.
    
    Thanks to Pavel Raiskup.

commit 76762ae6098ec55c326f4b4b4a42e8c1918ee81f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 19 21:23:25 2018 +0300

    liblzma: Improve lzma_properties_decode() API documentation.

commit 2267f5b0d20a5d24e93fcd9f72ea7eeb0d89708c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 18:58:19 2018 +0300

    Bump the version number to 5.3.1alpha.

commit cee3021d30704858e4bdd22240e7d28e570d7451
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 18:48:00 2018 +0300

    extra/scanlzma: Fix compiler warnings.

commit c5c7ceb08a011b97d261798033e2c39613a69eb7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 18:44:47 2018 +0300

    DOS: Add file_info.c to the list of files to build.

commit 114cab97af766b21e0fc8620479202fb1e7a5e41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 18:33:10 2018 +0300

    Update NEWS for 5.3.1alpha.

commit b8139e11c512bbf32bf58ab0689f9bb6c52819da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 18:15:37 2018 +0300

    Add NEWS for 5.2.4.

commit 47b59d47cfd904a420fbd45629d168ca1973721d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 6 19:36:30 2018 +0200

    Update THANKS.

commit fb6d4f83cb6e144734f2a4216bb117bd56dc3cb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 6 18:02:48 2018 +0200

    liblzma: Remove incorrect #ifdef from range_common.h.
    
    In most cases it was harmless but it could affect some
    custom build systems.
    
    Thanks to Pippijn van Steenhoven.

commit bc577d35c2d0ed17f554d2d8107b2a2a9abbac76
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 10 22:10:39 2018 +0200

    Update THANKS.

commit 713bbc1a80f26d34c96ed3dbb9887362204de3a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 10 21:54:27 2018 +0200

    tuklib_integer: New Intel C compiler needs immintrin.h.
    
    Thanks to Melanie Blower (Intel) for the patch.

commit a0ee1afbd99da138b559cb27fa2022e7f1ab44f3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 24 20:04:24 2017 +0300

    Update THANKS.

commit a1e2c568de29c0b57d873eab40a2879b749da429
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 16 20:36:20 2017 +0300

    Windows: Fix paths in VS project files.
    
    Some paths use slashes instead of backslashes as directory
    separators... now it should work (I tested VS2013 version).

commit cea5cf8d26c9d1dc30a808614d79c0b25640e15e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 16 12:56:20 2017 +0300

    Windows: Update VS2017 project files to include file info decoder.

commit 95d563db3ee497b223e522b699c4d4c29943eef0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 16 12:54:23 2017 +0300

    Windows: Add project files for VS2017.
    
    These files match the v5.2 branch (no file info decoder).

commit ab72416d62ea8f50ad31d5b8545fcb6a2bf96b73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 16 12:45:50 2017 +0300

    Windows: Update VS2013 project files to include file info decoder.

commit 82388980187b0e3794d187762054200bbdcc9a53
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 16 12:39:43 2017 +0300

    Windows: Move VS2013 files into windows/vs2013 directory.

commit 94e3f986aa4e14b4ff01ac24857f499630d6d180
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 14 20:08:33 2017 +0300

    Fix or hide warnings from GCC 7's -Wimplicit-fallthrough.

commit a015cd1f90116e655be4eaf4aad42c4c911c2807
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 23 18:34:43 2017 +0300

    xz: Fix "xz --list --robot missing_or_bad_file.xz".
    
    It ended up printing an uninitialized char-array when trying to
    print the check names (column 7) on the "totals" line.
    
    This also changes the column 12 (minimum xz version) to
    50000002 (xz 5.0.0) instead of 0 when there are no valid
    input files.
    
    Thanks to kidmin for the bug report.

commit c2e29f06a7d1e3ba242ac2fafc69f5d6e92f62cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 24 20:20:11 2017 +0300

    Docs: Add doc/examples/11_file_info.c.

commit 1520f6ec808896375ac7bf778c449e0f7dea5f46
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 24 19:48:47 2017 +0300

    Build: Omit pre-5.0.0 entries from the generated ChangeLog.
    
    It makes ChangeLog significantly smaller.

commit 8269782283806c90a8509c2ac2a308344f70e171
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 24 19:48:23 2017 +0300

    xz: Use lzma_file_info_decoder() for --list.

commit e353d0b1cc0d3997ae5048faa8e6786414953e06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 24 19:35:50 2017 +0300

    liblzma: Add lzma_file_info_decoder().

commit 144ef9e19e9496c995b21505dd1e111c442968d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 24 19:30:22 2017 +0300

    Update the Git repository URL to HTTPS in ChangeLog.

commit 8c9842c265993d7dd4039f732d3546267fb5ecc4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 21 15:05:16 2017 +0300

    liblzma: Rename LZMA_SEEK to LZMA_SEEK_NEEDED and seek_in to seek_pos.

commit 662b27c417cab248cb365dd7682121bdec4d5ae7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 19 22:17:35 2017 +0300

    Update the home page URLs to HTTPS.

commit c28f0b3d00af87b92dda229831548d8eb0067d1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 5 18:47:22 2017 +0300

    xz: Add io_seek_src().

commit bba477257d7319c8764890f3669175b866d24944
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 22:01:54 2017 +0300

    xz: Use POSIX_FADV_RANDOM for in "xz --list" mode.
    
    xz --list is random access so POSIX_FADV_SEQUENTIAL was clearly
    wrong.

commit 310d19816d1652b0c8bb1b82574d46345d924752
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 20:03:05 2017 +0300

    liblzma: Make lzma_index_decoder_init() visible to other liblzma funcs.
    
    This is to allow other functions to use it without going
    via the public API (lzma_index_decoder()).

commit a27920002dbc469f778a134fc665b7c3ea73701b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 20:00:09 2017 +0300

    liblzma: Add generic support for input seeking (LZMA_SEEK).
    
    Also mention LZMA_SEEK in xz/message.c to silence a warning.

commit a0b1dda409bc3e6e2957a2651663fc411d2caf2d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 19:47:45 2017 +0300

    liblzma: Fix lzma_memlimit_set(strm, 0).
    
    The 0 got treated specially in a buggy way and as a result
    the function did nothing. The API doc said that 0 was supposed
    to return LZMA_PROG_ERROR but it didn't.
    
    Now 0 is treated as if 1 had been specified. This is done because
    0 is already used to indicate an error from lzma_memlimit_get()
    and lzma_memusage().
    
    In addition, lzma_memlimit_set() no longer checks that the new
    limit is at least LZMA_MEMUSAGE_BASE. It's counter-productive
    for the Index decoder and was actually needed only by the
    auto decoder. Auto decoder has now been modified to check for
    LZMA_MEMUSAGE_BASE.

commit 84462afaada61379f5878e46f8f00e25a1cdcf29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 19:16:55 2017 +0300

    liblzma: Similar memlimit fix for stream_, alone_, and auto_decoder.

commit cbc74017939690d13441b8926bb743fb03211b83
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 30 18:58:18 2017 +0300

    liblzma: Fix handling of memlimit == 0 in lzma_index_decoder().
    
    It returned LZMA_PROG_ERROR, which was done to avoid zero as
    the limit (because it's a special value elsewhere), but using
    LZMA_PROG_ERROR is simply inconvenient and can cause bugs.
    
    The fix/workaround is to treat 0 as if it were 1 byte. It's
    effectively the same thing. The only weird consequence is
    that then lzma_memlimit_get() will return 1 even when 0 was
    specified as the limit.
    
    This fixes a very rare corner case in xz --list where a specific
    memory usage limit and a multi-stream file could print the
    error message "Internal error (bug)" instead of saying that
    the memory usage limit is too low.

commit 78ae13bced912b1b92ae927992c99cbcc463cae7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 30 13:25:10 2016 +0200

    Update NEWS for 5.2.3.

commit 0297863fdb453aed1a25eb025f3ba7bacbbb1357
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 26 20:55:52 2016 +0200

    Document --enable-sandbox configure option in INSTALL.

commit d4a0462abe5478193521c14625e1c81fead87f9f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 21 20:24:50 2016 +0200

    liblzma: Avoid multiple definitions of lzma_coder structures.
    
    Only one definition was visible in a translation unit.
    It avoided a few casts and temp variables but seems that
    this hack doesn't work with link-time optimizations in compilers
    as it's not C99/C11 compliant.
    
    Fixes:
    http://www.mail-archive.com/xz-devel@tukaani.org/msg00279.html

commit a01794c52add98263b49119842c3e7141d1b9ced
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 24 18:53:25 2016 +0300

    Update THANKS.

commit df8f446e3ad47e5148b8c8d8b6e519d3ce29cb9d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 24 18:51:36 2016 +0300

    tuklib_cpucores: Add support for sched_getaffinity().
    
    It's available in glibc (GNU/Linux, GNU/kFreeBSD). It's better
    than sysconf(_SC_NPROCESSORS_ONLN) because sched_getaffinity()
    gives the number of cores available to the process instead of
    the total number of cores online.
    
    As a side effect, this commit fixes a bug on GNU/kFreeBSD where
    configure would detect the FreeBSD-specific cpuset_getaffinity()
    but it wouldn't actually work because on GNU/kFreeBSD it requires
    using -lfreebsd-glue when linking. Now the glibc-specific function
    will be used instead.
    
    Thanks to Sebastian Andrzej Siewior for the original patch
    and testing.

commit 446e4318fa79788e09299d5953b5dd428953d14b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 30 20:27:36 2016 +0300

    xz: Fix copying of timestamps on Windows.
    
    xz used to call utime() on Windows, but its result gets lost
    on close(). Using _futime() seems to work.
    
    Thanks to Martok for reporting the bug:
    http://www.mail-archive.com/xz-devel@tukaani.org/msg00261.html

commit 1b0ac0c53c761263e91e34195cb21dfdcfeac0bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 22:46:02 2016 +0300

    xz: Silence warnings from -Wlogical-op.
    
    Thanks to Evan Nemerson.

commit c83b7a03342c3325ff10400b22ee21edfcd1e026
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 20:55:49 2016 +0300

    Build: Fix = to += for xz_SOURCES in src/xz/Makefile.am.
    
    Thanks to Christian Kujau.

commit ade31a2bfb95c94d05fbfc0ecbba5d6377f2506e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 20:54:17 2016 +0300

    Build: Bump GNU Gettext version requirement to 0.19.
    
    It silences a few warnings and most people probably have
    0.19 even on stable distributions.
    
    Thanks to Christian Kujau.

commit ac398c3bafa6e4c80e20571373a96947db863b3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 13 20:21:49 2016 +0200

    liblzma: Disable external SHA-256 by default.
    
    This is the sane thing to do. The conflict with OpenSSL
    on some OSes and especially that the OS-provided versions
    can be significantly slower makes it clear that it was
    a mistake to have the external SHA-256 support enabled by
    default.
    
    Those who want it can now pass --enable-external-sha256 to
    configure. INSTALL was updated with notes about OSes where
    this can be a bad idea.
    
    The SHA-256 detection code in configure.ac had some bugs that
    could lead to a build failure in some situations. These were
    fixed, although it doesn't matter that much now that the
    external SHA-256 is disabled by default.
    
    MINIX >= 3.2.0 uses NetBSD's libc and thus has SHA256_Init
    in libc instead of libutil. Support for the libutil version
    was removed.

commit 6fd5ecb589a9fdd7a576ea48c4850d496bab9ce5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 10 20:27:05 2016 +0200

    Update THANKS.

commit 473ef0dc69a30e64d5fa0d34aca02f7309faa3e9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 10 20:26:49 2016 +0200

    Build: Avoid SHA256_Init on FreeBSD and MINIX 3.
    
    On FreeBSD 10 and older, SHA256_Init from libmd conflicts
    with libcrypto from OpenSSL. The OpenSSL version has
    different sizeof(SHA256_CTX) and it can cause weird
    problems if wrong SHA256_Init gets used.
    
    Looking at the source, MINIX 3 seems to have a similar issue but
    I'm not sure. To be safe, I disabled SHA256_Init on MINIX 3 too.
    
    NetBSD has SHA256_Init in libc and they had a similar problem,
    but they already fixed it in 2009.
    
    Thanks to Jim Wilcoxson for the bug report that helped
    in finding the problem.

commit faf302137e54d605b44ecf0373cb51a6403a2de1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 8 20:16:10 2015 +0200

    tuklib_physmem: Hopefully silence a warning on Windows.

commit e52e9151cf8613022d1de4712ff39dbcb666e991
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 4 23:17:43 2015 +0200

    Update THANKS.

commit 14115f84a38161d55eaa2d070f08739bde37e966
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 4 23:14:00 2015 +0200

    liblzma: Make Valgrind happier with optimized (gcc -O2) liblzma.
    
    When optimizing, GCC can reorder code so that an uninitialized
    value gets used in a comparison, which makes Valgrind unhappy.
    It doesn't happen when compiled with -O0, which I tend to use
    when running Valgrind.
    
    Thanks to Rich Prohaska. I remember this being mentioned long
    ago by someone else but nothing was done back then.

commit f4c95ba94beb71a608eb6eadbf82b44f53a0260e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:55:45 2015 +0200

    liblzma: Rename lzma_presets.c back to lzma_encoder_presets.c.
    
    It would be too annoying to update other build systems
    just because of this.

commit c7bc20a6f3e71920871d48db31a79ab58b5a0a4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:47:07 2015 +0200

    Build: Disable xzdec, lzmadec, and lzmainfo when they cannot be built.
    
    They all need decoder support and if that isn't available,
    there's no point trying to build them.

commit 5cbca1205deeb6fb7afe7a864fa68a57466d928a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:35:19 2015 +0200

    Build: Simplify $enable_{encoders,decoders} usage a bit.

commit af13781886c8e7a0aabebb5141ea282dc364f5c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:31:31 2015 +0200

    Windows/MSVC: Update config.h.

commit 9fa5949330f162c5a2f6653f83025327837e8f39
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:29:58 2015 +0200

    DOS: Update config.h.

commit cb3111e3ed84152912b5138d690c8d9f00c6ef02
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 20:29:33 2015 +0200

    xz: Make xz buildable even when encoders or decoders are disabled.
    
    The patch is quite long but it's mostly about adding new #ifdefs
    to omit code when encoders or decoders have been disabled.
    
    This adds two new #defines to config.h: HAVE_ENCODERS and
    HAVE_DECODERS.

commit 4cc584985c0b7a13901da1b7a64ef9f7cc36e8ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 18:06:40 2015 +0200

    Build: Build LZMA1/2 presets also when only decoder is wanted.
    
    People shouldn't rely on the presets when decoding raw streams,
    but xz uses the presets as the starting point for raw decoder
    options anyway.
    
    lzma_encocder_presets.c was renamed to lzma_presets.c to
    make it clear it's not used solely by the encoder code.

commit 23ed1d41489f632155bbc9660f323d57e09da180
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 17:54:48 2015 +0200

    Build: Fix configure to handle LZMA1 dependency with LZMA2.
    
    Now it gives an error if LZMA1 encoder/decoder is missing
    when LZMA2 encoder/decoder was requested. Even better would
    be LZMA2 implicitly enabling LZMA1 but it would need more code.

commit b0bc3e03852af13419ea2960881824258d451117
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 3 17:41:54 2015 +0200

    Build: Don't omit lzma_cputhreads() unless using --disable-threads.
    
    Previously it was omitted if encoders were disabled
    with --disable-encoders. It didn't make sense and
    it also broke the build.

commit c6bf438ab39e0fb4a47d3c81725c227919502726
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 2 18:16:51 2015 +0200

    liblzma: Fix a build failure related to external SHA-256 support.
    
    If an appropriate header and structure were found by configure,
    but a library with a usable SHA-256 functions wasn't, the build
    failed.

commit e18adc56f2262aa9394d46681e9e4b9981ed5e97
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 2 15:19:10 2015 +0200

    xz: Always close the file before trying to delete it.
    
    unlink() can return EBUSY in errno for open files on some
    operating systems and file systems.

commit 282e768a1484e88c8b7ec35655ee4959954ec87a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 12 21:08:42 2015 +0300

    Update THANKS.

commit 372e402713a1d4337ffce5f56d5c5c9ed99a66d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 12 21:07:41 2015 +0300

    Tests: Add tests for the two bugs fixed in index.c.

commit 21515d79d778b8730a434f151b07202d52a04611
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 12 20:45:15 2015 +0300

    liblzma: Fix lzma_index_dup() for empty Streams.
    
    Stream Flags and Stream Padding weren't copied from
    empty Streams.

commit 09f395b6b360c0b13e8559eece1d179b908ebd3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 12 20:31:44 2015 +0300

    liblzma: Add a note to index.c for those using static analyzers.

commit 3bf857edfef51374f6f3fffae3d817f57d3264a0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 12 20:29:09 2015 +0300

    liblzma: Fix a memory leak in error path of lzma_index_dup().
    
    lzma_index_dup() calls index_dup_stream() which, in case of
    an error, calls index_stream_end() to free memory allocated
    by index_stream_init(). However, it illogically didn't
    actually free the memory. To make it logical, the tree
    handling code was modified a bit in addition to changing
    index_stream_end().
    
    Thanks to Evan Nemerson for the bug report.

commit 7f05803979b4b79642d5be4218a79da7a0b12c47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 29 13:57:28 2015 +0300

    Update NEWS for 5.2.2.

commit cbc9e39bae715accb44168930a71888480aad569
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 11 13:23:04 2015 +0300

    Build: Minor Cygwin cleanup.
    
    Some tests used "cygwin*" and some used "cygwin". I changed
    them all to use "cygwin". Shouldn't affect anything in practice.

commit bcacd8ce7a031566858e5e03c1009064c3f1c89e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 11 13:21:52 2015 +0300

    Build: Support building of MSYS2 binaries.

commit 0275a5398c01d57b724dec7fea52dec3bd6edc6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 9 21:06:26 2015 +0300

    Windows: Define DLL_EXPORT when building liblzma.dll with MSVC.
    
    src/liblzma/common/common.h uses it to set __declspec(dllexport)
    for the API symbols.
    
    Thanks to Adam Walling.

commit a74525cf9b945fb0b370e64cf406104beb31729b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 9 21:02:20 2015 +0300

    Windows: Omit unneeded header files from MSVC project files.

commit fbbb295a91caf39faf8838c8c39526e4cb4dc121
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 12 20:48:19 2015 +0300

    liblzma: A MSVC-specific hack isn't needed with MSVC 2013 and newer.

commit 713dbe5c230fe00865a54f5c32358ea30f9a1156
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 19 20:38:55 2015 +0300

    Update THANKS.

commit 3a5d755d055d51f99c523b4c2952727e1e69cfa1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 19 20:21:30 2015 +0300

    Windows: Update the docs.

commit b0798c6aa6184efcefd0bdcca20f96121a13feda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 19 17:25:31 2015 +0300

    Windows: Add MSVC project files for building liblzma.
    
    Thanks to Adam Walling for creating these files.

commit c7f4041f6b8f4729f88d3bc888b2a4080ae51f72
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 13 20:57:55 2015 +0300

    Tests: Fix a memory leak in test_bcj_exact_size.
    
    Thanks to Cristian Rodríguez.

commit 17b29d4f0ae0f780fbd69e15a398dc478d8492f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 12 18:08:24 2015 +0300

    Fix NEWS about threading in 5.2.0.
    
    Thanks to Andy Hochhaus.

commit 49c26920d6e2d85e5c6123e34958aed2e77485ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 11 21:26:16 2015 +0300

    xz: Document that threaded decompression hasn't been implemented yet.

commit 5b2458cb244ed237efe4de1ebcf06e1b3a1f4256
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 20 20:20:29 2015 +0300

    Update THANKS.

commit 6bd0349c58451b13442e8f463e35de83548bf985
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 20 19:59:18 2015 +0300

    Revert "xz: Use pipe2() if available."
    
    This reverts commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd.
    It is a problem when libc has pipe2() but the kernel is too
    old to have pipe2() and thus pipe2() fails. In xz it's pointless
    to have a fallback for non-functioning pipe2(); it's better to
    avoid pipe2() completely.
    
    Thanks to Michael Fox for the bug report.

commit fc0df0f8db87dff45543708a711e17d29c37f632
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 1 14:45:25 2015 +0300

    xz: Fix the Capsicum rights on user_abort_pipe.

commit 57393615b31b3788dd77280452d845bcc12d33af
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 31 22:20:11 2015 +0300

    Update THANKS.

commit 1238381143a9a7ce84839c2582ccd56ff750a440
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 31 22:19:34 2015 +0300

    xz: Add support for sandboxing with Capsicum.
    
    The sandboxing is used conditionally as described in main.c.
    This isn't optimal but it was much easier to implement than
    a full sandboxing solution and it still covers the most common
    use cases where xz is writing to standard output. This should
    have practically no effect on performance even with small files
    as fork() isn't needed.
    
    C and locale libraries can open files as needed. This has been
    fine in the past, but it's a problem with things like Capsicum.
    io_sandbox_enter() tries to ensure that various locale-related
    files have been loaded before cap_enter() is called, but it's
    possible that there are other similar problems which haven't
    been seen yet.
    
    Currently Capsicum is available on FreeBSD 10 and later
    and there is a port to Linux too.
    
    Thanks to Loganaden Velvindron for help.

commit 29a087fb5a0c879f0b1bc4c6b989f7b87bacdf9e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 31 21:12:30 2015 +0300

    Fix bugs and otherwise improve ax_check_capsicum.m4.
    
    AU_ALIAS was removed because the new version is incompatible
    with the old version.
    
    It no longer checks for <sys/capability.h> separately.
    It's enough to test for it as part of AC_CHECK_DECL.
    The defines HAVE_CAPSICUM_SYS_CAPSICUM_H and
    HAVE_CAPSICUM_SYS_CAPABILITY_H were removed as unneeded.
    HAVE_SYS_CAPSICUM_H from AC_CHECK_HEADERS is enough.
    
    It no longer does a useless search for the Capsicum library
    if the header wasn't found.
    
    Fixed a bug in ACTION-IF-FOUND (the first argument). Specifying
    the argument omitted the default action but the given action
    wasn't used instead.
    
    AC_DEFINE([HAVE_CAPSICUM]) is now always called when Capsicum
    support is found. Previously it was part of the default
    ACTION-IF-FOUND which a custom action would override. Now
    the default action only prepends ${CAPSICUM_LIB} to LIBS.
    
    The documentation was updated.
    
    Since there as no serial number, "#serial 2" was added.

commit 6e845c6a3eddf2fde9db5a29950421dff60a43ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 31 19:20:24 2015 +0300

    Add m4/ax_check_capsicum.m4 for detecting Capsicum support.
    
    The file was loaded from this web page:
    https://github.com/google/capsicum-test/blob/dev/autoconf/m4/ax_check_capsicum.m4
    
    Thanks to Loganaden Velvindron for pointing it out for me.

commit 3717885f9ef2c06f1bcbad9f4c2ed2d5695f844e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 30 22:44:02 2015 +0300

    Bump version to 5.3.0alpha and soname to 5.3.99.
    
    The idea of 99 is that it looks a bit weird in this context.
    For new features there's no API/ABI stability in devel versions.

commit eccd8155e107c5ada03d13e7730675cdf1a44ddc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 29 22:14:47 2015 +0300

    Update THANKS.

commit 25263fd9e7a8a913395cb93d7c104cd48c2b4a00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 29 22:13:48 2015 +0300

    Fix the detection of installed RAM on QNX.
    
    The earlier version compiled but didn't actually work
    since sysconf(_SC_PHYS_PAGES) always fails (or so I was told).
    
    Thanks to Ole André Vadla Ravnås for the patch and testing.

commit 4c544d2410903d38402221cb783ed85585b6a007
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 27 22:39:07 2015 +0200

    Fix CPU core count detection on QNX.
    
    It tried to use sysctl() on QNX but
      - it broke the build because sysctl() needs -lsocket on QNX;
      - sysctl() doesn't work for detecting the core count on QNX
        even if it compiled.
    
    sysconf() works. An alternative would have been to use
    QNX-specific SYSPAGE_ENTRY(num_cpu) from <sys/syspage.h>.
    
    Thanks to Ole André Vadla Ravnås.

commit e0ea6737b03e83ccaff4514d00e31bb926f8f0f3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 7 22:05:57 2015 +0200

    xz: size_t/uint32_t cleanup in options.c.

commit 8bcca29a65335fd679c13814b70b35b68fa5daed
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 7 22:04:23 2015 +0200

    xz: Fix a comment and silence a warning in message.c.

commit f243f5f44c6b19a7c289a0ec73a03ee08364cb5b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 7 22:01:00 2015 +0200

    liblzma: Silence more uint32_t vs. size_t warnings.

commit 7f0a4c50f4a374c40acf4b86848f301ad1e82d34
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 7 19:54:00 2015 +0200

    xz: Make arg_count an unsigned int to silence a warning.
    
    Actually the value of arg_count cannot exceed INT_MAX
    but it's nicer as an unsigned int.

commit f6ec46801588b1be29c07c9db98558b521304002
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 7 19:33:17 2015 +0200

    liblzma: Fix a warning in index.c.

commit a24518971cc621315af142dd3bb7614fab04ad27
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 26 20:46:14 2015 +0200

    Build: Fix a CR+LF problem when running autoreconf -fi on OS/2.

commit dec11497a71518423b5ff0e759100cf8aadf6c7b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 26 16:53:44 2015 +0200

    Bump version and soname for 5.2.1.

commit 29e39c79975ab89ee5dd671e97064534a9f3a649
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 26 13:01:09 2015 +0200

    Update NEWS for 5.2.1.

commit 7a11c4a8e5e15f13d5fa59233b3172e65428efdd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 22 19:38:48 2015 +0200

    xz: Use pipe2() if available.

commit 117d962685c72682c63edc9bb765367189800202
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 21 23:40:26 2015 +0200

    liblzma: Fix a compression-ratio regression in LZMA1/2 in fast mode.
    
    The bug was added in the commit
    f48fce093b07aeda95c18850f5e086d9f2383380 and thus
    affected 5.1.4beta and 5.2.0. Luckily the bug cannot
    cause data corruption or other nasty things.

commit ae984e31c167d3bc52972ec422dd1ebd5f5d5719
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 21 23:00:19 2015 +0200

    xz: Fix the fcntl() usage when creating a pipe for the self-pipe trick.
    
    Now it reads the old flags instead of blindly setting O_NONBLOCK.
    The old code may have worked correctly, but this is better.

commit 2205bb5853098aea36a56df6f5747037175f66b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 10 15:29:34 2015 +0200

    Update THANKS.

commit d935b0cdf3db440269b9d952b2b281b18f8c7b08
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 10 15:28:30 2015 +0200

    tuklib_cpucores: Use cpuset_getaffinity() on FreeBSD if available.
    
    In FreeBSD, cpuset_getaffinity() is the preferred way to get
    the number of available cores.
    
    Thanks to Rui Paulo for the patch. I edited it slightly, but
    hopefully I didn't break anything.

commit eb61bc58c20769cac4d05f363b9c0e8c9c71a560
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 9 22:08:37 2015 +0200

    xzdiff: Make the mktemp usage compatible with FreeBSD's mktemp.
    
    Thanks to Rui Paulo for the fix.

commit b9a5b6b7a29029680af733082b6a46e0fc01623a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 3 21:45:53 2015 +0200

    Add a few casts to tuklib_integer.h to silence possible warnings.
    
    I heard that Visual Studio 2013 gave warnings without the casts.
    
    Thanks to Gabi Davar.

commit c45757135f40e4a0de730ba5fff0100219493982
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 21:24:39 2015 +0200

    liblzma: Set LZMA_MEMCMPLEN_EXTRA depending on the compare method.

commit 3c500174ed5485f550972a2a6109c361e875f069
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 20:40:16 2015 +0200

    Update THANKS.

commit fec88d41e672d9e197c9442aecf02bd0dfa6d516
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 20:39:28 2015 +0200

    liblzma: Silence harmless Valgrind errors.
    
    Thanks to Torsten Rupp for reporting this. I had
    forgotten to run Valgrind before the 5.2.0 release.

commit a9b45badfec0928d20a27c7176c005fa637f7d1e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 9 21:50:19 2015 +0200

    xz: Fix comments.

commit 541aee6dd4aa97a809aba281475a21b641bb89e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 9 21:35:06 2015 +0200

    Update THANKS.

commit 4170edc914655310d2363baccf5e615e09b04911
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 9 21:34:06 2015 +0200

    xz: Don't fail if stdout doesn't support O_NONBLOCK.
    
    This is similar to the case with stdin.
    
    Thanks to Brad Smith for the bug report and testing
    on OpenBSD.

commit 04bbc0c2843c50c8ad1cba42b937118e38b0508d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 7 19:18:20 2015 +0200

    xz: Fix a memory leak in DOS-specific code.

commit f0f1f6c7235ffa901cf76fe18e33749e200b3eea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 7 19:08:06 2015 +0200

    xz: Don't fail if stdin doesn't support O_NONBLOCK.
    
    It's a problem at least on OpenBSD which doesn't support
    O_NONBLOCK on e.g. /dev/null. I'm not surprised if it's
    a problem on other OSes too since this behavior is allowed
    in POSIX-1.2008.
    
    The code relying on this behavior was committed in June 2013
    and included in 5.1.3alpha released on 2013-10-26. Clearly
    the development releases only get limited testing.

commit d2d484647d9d9d679f03c75abb0404f67069271c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 6 20:30:15 2015 +0200

    Tests: Don't hide unexpected error messages in test_files.sh.
    
    Hiding them makes no sense since normally there's no error
    when testing the "good" files. With "bad" files errors are
    expected and then it makes sense to keep the messages hidden.

commit aae6a6aeda51cf94a47e39ad624728f9bee75e30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 30 11:17:16 2014 +0200

    Update Solaris notes in INSTALL.
    
    Mention the possible "make check" failure on Solaris in the
    Solaris-specific section of INSTALL. It was already in
    section 4.5 but it is better mention it in the OS-specific
    section too.

commit 7815112153178800a3521b9f31960e7cdc26cfba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 26 12:00:05 2014 +0200

    Build: POSIX shell isn't required if scripts are disabled.

commit a0cd05ee71d330b79ead6eb9222e1b24e1559d3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 20:48:37 2014 +0200

    DOS: Update Makefile.

commit b85ee0905ec4ab7656d22e63519fdd3bedb21f2e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 19:50:38 2014 +0200

    Windows: Fix bin_i486 to bin_i686 in build.bash.

commit cbafa710918195dbba3db02c3fab4f0538235206
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:58:44 2014 +0200

    Docs: Use lzma_cputhreads() in 04_compress_easy_mt.c.

commit 8dbb57238d372c7263cfeb3e7f7fd9a73173156a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:56:44 2014 +0200

    Docs: Update docs/examples/00_README.txt.

commit 6060f7dc76fd6c2a8a1f8e85d0e4d86bb78273e6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:11:17 2014 +0200

    Bump version and soname for 5.2.0.
    
    I know that soname != app version, but I skip AGE=1
    in -version-info to make the soname match the liblzma
    version anyway. It doesn't hurt anything as long as
    it doesn't conflict with library versioning rules.

commit 3e8bd1d15e417f2d588e9be50ce027ee3d48b2da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:05:03 2014 +0200

    Avoid variable-length arrays in the debug programs.

commit 72f7307cfdceb941aeb2bf30d424cc0d13621786
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:01:45 2014 +0200

    Build: Include 04_compress_easy_mt.c in the tarball.

commit 2cb82ff21c62def11f3683a8bb0aaf363102aaa0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 18:00:38 2014 +0200

    Fix build when --disable-threads is used.

commit f168a6fd1a888cf4f0caaddcafcb21dadc6ab6e9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 14:32:33 2014 +0200

    Update NEWS for 5.2.0.

commit cec2ee863b3a88f4bf039cb00f73c4a4fc93a429
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 14:32:22 2014 +0200

    Update NEWS for 5.0.8.

commit 42e97a32649bf53ce43be2258b902a417c6e7fa1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 21 14:07:54 2014 +0200

    xz: Fix a comment.

commit 29b95d5d6665cedffa6a9d6d3d914f981e852182
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 20 20:43:14 2014 +0200

    Update INSTALL about the dependencies of the scripts.

commit 3af91040bb42c21afbb81f5568c3313125e61192
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 20 20:42:33 2014 +0200

    Windows: Update build instructions.

commit 0152f72bf6289d744823dc6c849538f3a139ad70
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 20 20:41:48 2014 +0200

    Windows: Update the build script and README-Windows.txt.
    
    The 32-bit build is now for i686 or newer because the
    prebuilt MinGW-w64 toolchains include i686 code in the
    executables even if one uses -march=i486.
    
    The build script builds 32-bit SSE2 enabled version too.
    Run-time detection of SSE2 support would be nice (on any OS)
    but it's not implemented in XZ Utils yet.

commit 4a1f6133ee5533cee8d91e06fcc22443e5f1881a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 19 15:51:50 2014 +0200

    Windows: Define TUKLIB_SYMBOL_PREFIX in config.h.
    
    It is to keep all symbols in the lzma_ namespace.

commit 7f7d093de79eee0c7dbfd7433647e46302f19f82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 16 21:00:09 2014 +0200

    xz: Update the man page about --threads.

commit 009823448b82aa5f465668878a544c5842885407
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 16 20:57:43 2014 +0200

    xz: Update the man page about --block-size.

commit 1190c641af09cde85f8bd0fbe5c4906f4a29431b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 2 20:04:07 2014 +0200

    liblzma: Document how lzma_mt.block_size affects memory usage.

commit e4fc1d2f9571fba79ce383595be2ea2a9257def0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 28 20:07:18 2014 +0200

    Update INSTALL about a "make check" failure in test_scripts.sh.

commit 34f9e40a0a0c3bd2c2730cdb9cd550bbb8a3f2fe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 26 20:12:27 2014 +0200

    Remove LZMA_UNSTABLE macro.

commit 6d9c0ce9f2677b159e32b224aba5b535b304a705
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 26 20:10:33 2014 +0200

    liblzma: Update lzma_stream_encoder_mt() API docs.

commit 2301f3f05dd9742f42cda8f0f318864f5dc39ab3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 25 12:32:05 2014 +0200

    liblzma: Verify the filter chain in threaded encoder initialization.
    
    This way an invalid filter chain is detected at the Stream
    encoder initialization instead of delaying it to the first
    call to lzma_code() which triggers the initialization of
    the actual filter encoder(s).

commit 107a263d5bb63cd3593fd6a5c938706539f84523
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 17 19:11:49 2014 +0200

    Build: Update m4/ax_pthread.m4 from Autoconf Archive.

commit b13a781833399ff5726cfc997f3cb2f0acbdbf31
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 17 18:52:21 2014 +0200

    Build: Replace obsolete AC_HELP_STRING with AS_HELP_STRING.

commit 542cac122ed3550148a2af0033af22b757491378
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 17 18:43:19 2014 +0200

    Build: Fix Autoconf warnings about escaped backquotes.
    
    Thanks to Daniel Richard G. for pointing out that it's
    good to sometimes run autoreconf -fi with -Wall.

commit 7b03a15cea8cd4f19ed680b51c4bcbae3ce4142f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 10 18:54:40 2014 +0200

    xzdiff: Use mkdir if mktemp isn't available.

commit f8c13e5e3609581d5dd9f8777985ca07f2390ad7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 10 18:45:01 2014 +0200

    xzdiff: Create a temporary directory to hold a temporary file.
    
    This avoids the possibility of "File name too long" when
    creating a temp file when the input file name is very long.
    
    This also means that other users on the system can no longer
    see the input file names in /tmp (or whatever $TMPDIR is)
    since the temporary directory will have a generic name. This
    usually doesn't matter since on many systems one can see
    the arguments given to all processes anyway.
    
    The number X chars to mktemp where increased from 6 to 10.
    
    Note that with some shells temp files or dirs won't be used at all.

commit 7716dcf9df7f457500cb657314e7a9aea5fedb06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 10 15:38:47 2014 +0200

    liblzma: Fix lzma_mt.preset in lzma_stream_encoder_mt_memusage().
    
    It read the filter chain from a wrong variable. This is a similar
    bug that was fixed in 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e.

commit 230fa4a605542c84b4178a57381695a0af4e779b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 10 14:49:55 2014 +0200

    Update THANKS.

commit 4e4ae08bc7c1711e399c9f2d26eb375d39d08101
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 29 21:28:25 2014 +0200

    Update .gitignore files.

commit c923b140b27d1a055db6284e10fd546ad1a7fcdb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 29 21:15:35 2014 +0200

    Build: Prepare to support Automake's subdir-objects.
    
    Due to a bug in Automake, subdir-objects won't be enabled
    for now.
    
    http://debbugs.gnu.org/cgi/bugreport.cgi?bug=17354
    
    Thanks to Daniel Richard G. for the original patches.

commit 08c2aa16bea0df82828f665d51fba2e0a5e8997f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 24 20:09:29 2014 +0300

    Translations: Update the Italian translation.
    
    Thanks to Milo Casagrande.

commit 2f9f61aa83539c54ff6c118a2693890f0519b3dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 18 18:51:45 2014 +0300

    Translations: Update the Polish translation.
    
    Thanks to Jakub Bogusz.

commit 7c32e6a935c3d7ee366abad1679bd5f322f0c7d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 9 19:42:26 2014 +0300

    Update THANKS.

commit 076258cc458f1e705041ac7a729b15ffe8c5214a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 9 19:41:51 2014 +0300

    Add support for AmigaOS/AROS to tuklib_physmem().
    
    Thanks to Fredrik Wikstrom.

commit efa7b0a210e1baa8e128fc98c5443a944c39ad24
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 9 18:42:14 2014 +0300

    xzgrep: Avoid passing both -q and -l to grep.
    
    The behavior of grep -ql varies:
      - GNU grep behaves like grep -q.
      - OpenBSD grep behaves like grep -l.
    
    POSIX doesn't make it 100 % clear what behavior is expected.
    Anyway, using both -q and -l at the same time makes no sense
    so both options simply should never be used at the same time.
    
    Thanks to Christian Weisgerber.

commit c4911f2db36d811896c73c008b4218d8fa9a4730
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 25 18:38:48 2014 +0300

    Build: Detect supported compiler warning flags better.
    
    Clang and nowadays also GCC accept any -Wfoobar option
    but then may give a warning that an unknown warning option
    was specified. To avoid adding unsupported warning options,
    the options are now tested with -Werror.
    
    Thanks to Charles Diza.

commit 76e75522ed6f5c228d55587dee5a997893f6e474
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 20 21:01:21 2014 +0300

    Update NEWS for 5.0.7.

commit d62028b4c1174fc67b6929f126f5eb24c018c700
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 20 19:42:56 2014 +0300

    liblzma: Fix a portability problem in Makefile.am.
    
    POSIX supports $< only in inference rules (suffix rules).
    Using it elsewhere is a GNU make extension and doesn't
    work e.g. with OpenBSD make.
    
    Thanks to Christian Weisgerber for the patch.

commit c35de31d4283edad3e57d37ffe939406542cb7bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 14 21:54:09 2014 +0300

    Bump the version number to 5.1.4beta.

commit e9e097e22cacdaa23e5414fea7913535449cb340
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 14 21:50:13 2014 +0300

    Update NEWS for 5.0.6 and 5.1.4beta.

commit 642f856bb8562ab66704b1e01ac7bc08b6d0a663
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 14 21:02:41 2014 +0300

    Update TODO.

commit 6b5e3b9eff5b8cedb2aac5f524d4d60fc8a48124
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 5 22:32:36 2014 +0300

    xz: Add --ignore-check.

commit 9adbc2ff373f979c917cdfd3679ce0ebd59f1040
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 5 22:15:07 2014 +0300

    liblzma: Add support for LZMA_IGNORE_CHECK.

commit 0e0f34b8e4f1c60ecaec15c2105982381cc9c3e6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 5 22:03:30 2014 +0300

    liblzma: Add support for lzma_block.ignore_check.
    
    Note that this slightly changes how lzma_block_header_decode()
    has been documented. Earlier it said that the .version is set
    to the lowest required value, but now it says that the .version
    field is kept unchanged if possible. In practice this doesn't
    affect any old code, because before this commit the only
    possible .version was 0.

commit 71e1437ab585b46f7a25f5a131557d3d1c0cbaa2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 4 19:25:58 2014 +0300

    liblzma: Use lzma_memcmplen() in the BT3 match finder.
    
    I had missed this when writing the commit
    5db75054e900fa06ef5ade5f2c21dffdd5d16141.
    
    Thanks to Jun I Jin.

commit 41dc9ea06e1414ebe8ef52afc8fc15b6e3282b04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 4 00:25:44 2014 +0300

    Update THANKS.

commit 5dcffdbcc23a68abc3ac3539b30be71bc9b5af84
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 3 21:32:25 2014 +0300

    liblzma: SHA-256: Optimize the Maj macro slightly.
    
    The Maj macro is used where multiple things are added
    together, so making Maj a sum of two expressions allows
    some extra freedom for the compiler to schedule the
    instructions.
    
    I learned this trick from
    <http://www.hackersdelight.org/corres.txt>.

commit a9477d1e0c6fd0e47e637d051e7b9e2a5d9af517
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 3 21:08:12 2014 +0300

    liblzma: SHA-256: Optimize the way rotations are done.
    
    This looks weird because the rotations become sequential,
    but it helps quite a bit on both 32-bit and 64-bit x86:
    
      - It requires fewer instructions on two-operand
        instruction sets like x86.
    
      - It requires one register less which matters especially
        on 32-bit x86.
    
    I hope this doesn't hurt other archs.
    
    I didn't invent this idea myself, but I don't remember where
    I saw it first.

commit 5a76c7c8ee9a0afbeedb1c211db9224260404347
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 3 20:38:13 2014 +0300

    liblzma: SHA-256: Remove the GCC #pragma that became unneeded.
    
    The unrolling in the previous commit should avoid the
    situation where a compiler may think that an uninitialized
    variable might be accessed.

commit 9a096f8e57509775c331950b8351bbca77bdcfa8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 3 20:33:38 2014 +0300

    liblzma: SHA-256: Unroll a little more.
    
    This way a branch isn't needed for each operation
    to choose between blk0 and blk2, and still the code
    doesn't grow as much as it would with full unrolling.

commit bc7650d87bf27f85f1a2a806dc2db1780e09e6a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 3 19:56:43 2014 +0300

    liblzma: SHA-256: Do the byteswapping without a temporary buffer.

commit 544aaa3d13554e8640f9caf7db717a96360ec0f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 22:38:28 2014 +0300

    liblzma: Use lzma_memcmplen() in normal mode of LZMA.
    
    Two locations were not changed yet because the simplest change
    assumes that the initial "len" may be greater than "limit".

commit f48fce093b07aeda95c18850f5e086d9f2383380
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 22:30:38 2014 +0300

    liblzma: Simplify LZMA fast mode code by using memcmp().

commit 6bf5308e34e23dede5b301b1b9b4f131dacd9218
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 22:29:49 2014 +0300

    liblzma: Use lzma_memcmplen() in fast mode of LZMA.

commit 353212137e51e45b105a3a3fc2e6879f1cf0d492
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 21:16:23 2014 +0300

    Update THANKS.

commit 5db75054e900fa06ef5ade5f2c21dffdd5d16141
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 21:15:07 2014 +0300

    liblzma: Use lzma_memcmplen() in the match finders.
    
    This doesn't change the match finder output.

commit e1c8f1d01f4a4e2136173edab2dc63c71ef038f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 25 20:57:20 2014 +0300

    liblzma: Add lzma_memcmplen() for fast memory comparison.
    
    This commit just adds the function. Its uses will be in
    separate commits.
    
    This hasn't been tested much yet and it's perhaps a bit early
    to commit it but if there are bugs they should get found quite
    quickly.
    
    Thanks to Jun I Jin from Intel for help and for pointing out
    that string comparison needs to be optimized in liblzma.

commit 765735cf52e5123586e74a51b9c073b5257f631f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 12 21:10:09 2014 +0300

    Update THANKS.

commit 59da01785ef66c7e62f36e70ca808fd2824bb995
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 12 20:06:08 2014 +0300

    Translations: Add Vietnamese translation.
    
    Thanks to Trần Ngọc Quân.

commit 17215f751c354852700e7f8592ccf319570a0721
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 29 20:54:14 2014 +0300

    xz: Update the help message of a few options.
    
    Updated: --threads, --block-size, and --block-list
    Added: --flush-timeout

commit 96864a6ddf91ad693d102ea165f3d7918744d582
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 22:07:06 2014 +0300

    xz: Use lzma_cputhreads() instead of own copy of tuklib_cpucores().

commit a115cc3748482e277f42a968baa3cd266f031dba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 22:04:24 2014 +0300

    liblzma: Add lzma_cputhreads().

commit 3ce3e7976904fbab4e6482bafa442856f77a51fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 19:11:52 2014 +0300

    xz: Check for filter chain compatibility for --flush-timeout.
    
    This avoids LZMA_PROG_ERROR from lzma_code() with filter chains
    that don't support LZMA_SYNC_FLUSH.

commit 381ac14ed79e5d38809f251705be8b3193bba417
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 13 19:21:54 2014 +0300

    xzgrep: List xzgrep_expected_output in tests/Makefile.am.

commit 4244b65b06d5ecaf6f9dd0387ac7e3166bd2364e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 13 18:58:22 2014 +0300

    xzgrep: Improve the test script.
    
    Now it should be close to the functionality of the original
    version by Pavel Raiskup.

commit 1e60f2c0a0ee6c18b02943ce56214799a70aac26
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 11 21:03:25 2014 +0300

    xzgrep: Add a test for the previous fix.
    
    This is a simplified version of Pavel Raiskup's
    original patch.

commit ceca37901783988204caaf40dff4623d535cc789
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 11 20:43:28 2014 +0300

    xzgrep: exit 0 when at least one file matches.
    
    Mimic the original grep behavior and return exit_success when
    at least one xz compressed file matches given pattern.
    
    Original bugreport:
    https://bugzilla.redhat.com/show_bug.cgi?id=1108085
    
    Thanks to Pavel Raiskup for the patch.

commit 8c19216baccb92d011694590df8a1262da2e980c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 9 21:21:24 2014 +0300

    xz: Force single-threaded mode when --flush-timeout is used.

commit 87f1a24810805187d7bbc8ac5512e7eec307ddf5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 25 22:05:39 2014 +0300

    Update THANKS.

commit da1718f266fcfc091e7bf08aae1bc986d0e6cc6b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 25 21:45:56 2014 +0300

    liblzma: Use lzma_alloc_zero() in LZ encoder initialization.
    
    This avoids a memzero() call for a newly-allocated memory,
    which can be expensive when encoding small streams with
    an over-sized dictionary.
    
    To avoid using lzma_alloc_zero() for memory that doesn't
    need to be zeroed, lzma_mf.son is now allocated separately,
    which requires handling it separately in normalize() too.
    
    Thanks to Vincenzo Innocente for reporting the problem.

commit 28af24e9cf2eb259997c85dce13d4c97b3daa47a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 25 19:25:57 2014 +0300

    liblzma: Add the internal function lzma_alloc_zero().

commit ed9ac85822c490e34b68c259afa0b385d21d1c40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 8 18:03:09 2014 +0300

    xz: Fix uint64_t vs. size_t which broke 32-bit build.
    
    Thanks to Christian Hesse.

commit d716acdae3fa7996f9e68a7bac012e6d8d13dd02
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 4 11:09:11 2014 +0300

    Docs: Update comments to refer to lzma/lzma12.h in example programs.

commit 4d5b7b3fda31241ca86ed35e08e73f776ee916e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 4 11:07:17 2014 +0300

    liblzma: Rename the private API header lzma/lzma.h to lzma/lzma12.h.
    
    It can be confusing that two header files have the same name.
    The public API file is still lzma.h.

commit 1555a9c5664afc7893a2b75e9970105437f01ef1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 17:53:42 2014 +0300

    Build: Fix the combination of --disable-xzdec --enable-lzmadec.
    
    In this case "make install" could fail if the man page directory
    didn't already exist at the destination. If it did exist, a
    dangling symlink was created there. Now the link is omitted
    instead. This isn't the best fix but it's better than the old
    behavior.

commit 56056571df3377eaa6ae6233b3ccc5d72e81d43d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 17:44:26 2014 +0300

    Build: Add --disable-doc to configure.

commit 6de61d8721097a6214810841aa85b08e303ac538
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 18:06:24 2014 +0300

    Update INSTALL.
    
    Add a note about failing "make check". The source of
    the problem should be fixed in libtool (if it really is
    a libtool bug and not mine) but I'm unable to spend time
    on that for now. Thanks to Nelson H. F. Beebe for reporting
    the issue.
    
    Add a note about a possible need to run "ldconfig" after
    "make install".

commit 54df428799a8d853639b753d0e6784694d73eb3e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 9 17:26:10 2014 +0300

    xz: Rename a variable to avoid a namespace collision on Solaris.
    
    I don't know the details but I have an impression that there's
    no problem in practice if using GCC since people have built xz
    with GCC (without patching xz), but renaming the variable cannot
    hurt either.
    
    Thanks to Mark Ashley.

commit 5876ca27daa1429676b1160007d9688266907f00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 29 20:19:41 2014 +0200

    Docs: Add example program for threaded encoding.
    
    I didn't add -DLZMA_UNSTABLE to Makefile so one has to
    specify it manually as long as LZMA_UNSTABLE is needed.

commit 9494fb6d0ff41c585326f00aa8f7fe58f8106a5e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 29 20:13:51 2014 +0200

    liblzma: Fix lzma_mt.preset not working with lzma_stream_encoder_mt().
    
    It read the filter chain from a wrong variable.

commit 673a4cb53de3a715685cb1b836da57a3c7dcd43c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 20 11:20:40 2014 +0200

    liblzma: Fix typo in a comment.

commit ad96a871a1470eb76d6233d3890ce9338047b7a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 19:38:43 2014 +0200

    Windows: Add config.h for building liblzma with MSVC 2013.
    
    This is for building liblzma. Building xz tool too requires
    a little more work. Maybe it will be supported, but for most
    MSVC users it's enough to be able to build liblzma.
    
    C99 support in MSVC 2013 is almost usable which is a big
    improvement over earlier versions. It's "almost" because
    there's a dumb bug that breaks mixed declarations after
    an "if" statements unless the "if" statement uses braces:
    
    https://connect.microsoft.com/VisualStudio/feedback/details/808650/visual-studio-2013-c99-compiler-bug
    https://connect.microsoft.com/VisualStudio/feedback/details/808472/c99-support-of-mixed-declarations-and-statements-fails-with-certain-types-and-constructs
    
    Hopefully it will get fixed. Then liblzma should be
    compilable with MSVC 2013 without patching.

commit 3d5c090872fab4212b57c290e8ed4d02c78c1737
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 17:41:14 2014 +0200

    xz: Fix a comment.

commit 69fd4e1c932c7975476a0143c86e45d81b60d3f9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 17:04:33 2014 +0200

    Windows: Add MSVC defines for inline and restrict keywords.

commit a19d9e8575ee6647cd9154cf1f20203f1330485f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 16:44:52 2014 +0200

    liblzma: Avoid C99 compound literal arrays.
    
    MSVC 2013 doesn't like them. Maybe they aren't so good
    for readability either since many aren't used to them.

commit e28528f1c867b2ed4ac91195ad08efb9bb8a6263
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 12:50:30 2014 +0200

    liblzma: Remove a useless C99ism from sha256.c.
    
    Unsurprisingly it makes no difference in compiled output.

commit 5ad1effc45adfb7dabc9a98e79736077e6b7e2d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 12:17:08 2014 +0200

    xz: Fix use of wrong variable.
    
    Since the only call to suffix_set() uses optarg
    as the argument, fixing this bug doesn't change
    the behavior of the program.

commit 3e62c68d75b5a3fdd46dbb34bb335d73289860d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 12 12:11:36 2014 +0200

    Fix typos in comments.

commit e90ea601fb72867ec04adf456cbe4bf9520fd412
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 26 18:20:16 2013 +0200

    Update THANKS.

commit b22e94d8d15764416354e04729382a7371ae2c30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 26 18:20:09 2013 +0200

    liblzma: Document the need for block->check for lzma_block_header_decode().
    
    Thanks to Tomer Chachamu.

commit d1cd8b1cb824b72421d1ee370e628024d2fcbec4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 12 16:38:57 2013 +0200

    xz: Update the man page about --block-size and --block-list.

commit 76be7c612e6bcc38724488ccc3b8bcb1cfec9f0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 12 16:30:53 2013 +0200

    Update THANKS.

commit dd750acbe2259d75444ef0f8da2d4bacc90d7afc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 12 16:29:48 2013 +0200

    xz: Make --block-list and --block-size work together in single-threaded.
    
    Previously, --block-list and --block-size only worked together
    in threaded mode. Boundaries are specified by --block-list, but
    --block-size specifies the maximum size for a Block. Now this
    works in single-threaded mode too.
    
    Thanks to James M Leddy for the original patch.

commit ae222fe9805d0161d022d75ba8485dab8bf6d7d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 26 13:26:14 2013 +0300

    Bump the version number to 5.1.3alpha.

commit 2193837a6a597cd3bf4e9ddf49421a5697d8e155
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 26 13:25:02 2013 +0300

    Update NEWS for 5.1.3alpha.

commit ed48e75e2763876173aef8902da407a8eb28854b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 26 12:47:04 2013 +0300

    Update TODO.

commit 841da0352d79a56a44796a4c39163429c9f039a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 25 22:41:28 2013 +0300

    xz: Document behavior of --block-list with threads.
    
    This needs to be updated before 5.2.0.

commit 56feb8665b78c1032aabd53c619c62af51defe64
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 22 20:03:12 2013 +0300

    xz: Document --flush-timeout=TIMEOUT on the man page.

commit ba413da1d5bb3324287cf3174922acd921165971
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 22 19:51:55 2013 +0300

    xz: Take advantage of LZMA_FULL_BARRIER with --block-list.
    
    Now if --block-list is used in threaded mode, the encoder
    won't need to flush at each Block boundary specified via
    --block-list. This improves performance a lot, making
    threading helpful with --block-list.
    
    The flush timer was reset after LZMA_FULL_FLUSH but since
    LZMA_FULL_BARRIER doesn't flush, resetting the timer is
    no longer done.

commit 0cd45fc2bc5537de287a0bc005e2d67467a92148
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 2 20:05:23 2013 +0300

    liblzma: Support LZMA_FULL_FLUSH and _BARRIER in threaded encoder.
    
    Now --block-list=SIZES works with in the threaded mode too,
    although the performance is still bad due to the use of
    LZMA_FULL_FLUSH instead of the new LZMA_FULL_BARRIER.

commit 97bb38712f414fabecca908af2e38a12570293fd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 2 12:55:11 2013 +0300

    liblzma: Add LZMA_FULL_BARRIER support to single-threaded encoder.
    
    In the single-threaded encoder LZMA_FULL_BARRIER is simply
    an alias for LZMA_FULL_FLUSH.

commit fef0c6b410c08e581c9178700a4e7599f0895ff9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 17 11:57:51 2013 +0300

    liblzma: Add block_buffer_encoder.h into Makefile.inc.
    
    This should have been in b465da5988dd59ad98fda10c2e4ea13d0b9c73bc.

commit 8083e03291b6d21c0f538163e187b4e8cd5594e4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 17 11:55:38 2013 +0300

    xz: Add a missing test for TUKLIB_DOSLIKE.

commit 6b44b4a775fe29ecc7bcb7996e086e3bc09e5fd0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 17 11:52:28 2013 +0300

    Add native threading support on Windows.
    
    Now liblzma only uses "mythread" functions and types
    which are defined in mythread.h matching the desired
    threading method.
    
    Before Windows Vista, there is no direct equivalent to
    pthread condition variables. Since this package doesn't
    use pthread_cond_broadcast(), pre-Vista threading can
    still be kept quite simple. The pre-Vista code doesn't
    use anything that wasn't already available in Windows 95,
    so the binaries should run even on Windows 95 if someone
    happens to care.

commit ae0ab74a88d5b9b15845f1d9a24ade4349a54f9f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 11 14:40:35 2013 +0300

    Build: Remove a comment about Automake 1.10 from configure.ac.
    
    The previous commit supports silent rules and that requires
    Automake 1.11.

commit 72975df6c8c59aaf849138ab3606e8fb6970596a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 9 20:37:03 2013 +0300

    Build: Create liblzma.pc in a src/liblzma/Makefile.am.
    
    Previously it was done in configure, but doing that goes
    against the Autoconf manual. Autoconf requires that it is
    possible to override e.g. prefix after running configure
    and that doesn't work correctly if liblzma.pc is created
    by configure.
    
    A potential downside of this change is that now e.g.
    libdir in liblzma.pc is a standalone string instead of
    being defined via ${prefix}, so if one overrides prefix
    when running pkg-config the libdir won't get the new value.
    I don't know if this matters in practice.
    
    Thanks to Vincent Torri.

commit 1c2b6e7e8382ed390f53e140f160488bb2205ecc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 4 15:24:09 2013 +0300

    Fix the previous commit which broke the build.
    
    Apparently I didn't even compile-test the previous commit.
    
    Thanks to Christian Hesse.

commit 124eb69c7857f618b4807588c51bc9ba21bf8691
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 3 13:52:58 2013 +0300

    Windows: Add Windows support to tuklib_cpucores().
    
    It is used for Cygwin too. I'm not sure if that is
    a good or bad idea.
    
    Thanks to Vincent Torri.

commit 16581080e5f29f9a4e49efece21c5bf572323acc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 15 14:08:41 2013 +0300

    Update THANKS.

commit 3e2b198ba37b624efd9c7caee2a435dc986b46c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 15 14:08:02 2013 +0300

    Build: Fix the detection of missing CRC32.
    
    Thanks to Vincent Torri.

commit dee6ad3d5915422bc30a6821efeacaeb8ca8ef00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 4 14:18:46 2013 +0300

    xz: Add preliminary support for --flush-timeout=TIMEOUT.
    
    When --flush-timeout=TIMEOUT is used, xz will use
    LZMA_SYNC_FLUSH if read() would block and at least
    TIMEOUT milliseconds has elapsed since the previous flush.
    
    This can be useful in realtime-like use cases where the
    data is simultanously decompressed by another process
    (possibly on a different computer). If new uncompressed
    input data is produced slowly, without this option xz could
    buffer the data for a long time until it would become
    decompressible from the output.
    
    If TIMEOUT is 0, the feature is disabled. This is the default.
    
    This commit affects the compression side. Using xz for
    the decompression side for the above purpose doesn't work
    yet so well because there is quite a bit of input and
    output buffering when decompressing.
    
    The --long-help or man page were not updated yet.
    The details of this feature may change.

commit fa381acaf9a29a8114e1c0a97de99bab9adb014e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 4 13:41:03 2013 +0300

    xz: Don't set src_eof=true after an I/O error because it's useless.

commit ea00545beace5b950f709ec21e46878e0f448678
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 4 13:25:11 2013 +0300

    xz: Fix the test when to read more input.
    
    Testing for end of file was no longer correct after full flushing
    became possible with --block-size=SIZE and --block-list=SIZES.
    There was no bug in practice though because xz just made a few
    unneeded zero-byte reads.

commit 736903c64bef394c06685d79908e397bcb08b88f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 4 12:51:57 2013 +0300

    xz: Move some of the timing code into mytime.[hc].
    
    This switches units from microseconds to milliseconds.
    
    New clock_gettime(CLOCK_MONOTONIC) will be used if available.
    There is still a fallback to gettimeofday().

commit 24edf8d807e24ffaa1e793114d94cca3b970027d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 1 14:35:03 2013 +0300

    Update THANKS.

commit c0627b3fceacfa1ed162f5f55235360ea26f569a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 1 14:34:11 2013 +0300

    xz: Silence a warning seen with _FORTIFY_SOURCE=2.
    
    Thanks to Christian Hesse.

commit 1936718bb38ee394bd89836fdd4eabc0beb02443
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 30 19:40:11 2013 +0300

    Update NEWS for 5.0.5.

commit a37ae8b5eb6093a530198f109c6f7a538c80ecf0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 30 18:02:27 2013 +0300

    Man pages: Use similar syntax for synopsis as in xz.
    
    The man pages of lzmainfo, xzmore, and xzdec had similar
    constructs as the man page of xz had before the commit
    eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494. Eric S. Raymond
    didn't mention these man pages in his bug report, but
    it's nice to be consistent.

commit cdba9ddd870ae72fd6219a125662c20ec997f86c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 29 15:59:13 2013 +0300

    xz: Use non-blocking I/O for the output file.
    
    Now both reading and writing should be without
    race conditions with signals.
    
    They might still be signal handling issues left.
    Signals are blocked during many operations to avoid
    EINTR but it may cause problems e.g. if writing to
    stderr blocks when trying to display an error message.

commit e61a5c95da3fe31281d959e5e842885a8ba2b5bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 23:56:17 2013 +0300

    xz: Fix return value type in io_write_buf().
    
    It didn't affect the behavior of the code since -1
    becomes true anyway.

commit 9dc319eabb34a826f4945f91c71620f14a60e9e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 23:48:05 2013 +0300

    xz: Use the self-pipe trick to avoid a race condition with signals.
    
    It is possible that a signal to set user_abort arrives right
    before a blocking system call is made. In this case the call
    may block until another signal arrives, while the wanted
    behavior is to make xz clean up and exit as soon as possible.
    
    After this commit, the race condition is avoided with the
    input side which already uses non-blocking I/O. The output
    side still uses blocking I/O and thus has the race condition.

commit 3541bc79d0cfabc0ad155c99bfdad1289f17fec3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 22:51:02 2013 +0300

    xz: Use non-blocking I/O for the input file.

commit 78673a08bed5066c81e8a8e90d20e670c28ecfd5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 18:46:13 2013 +0300

    xz: Remove an outdated NetBSD-specific comment.
    
    Nowadays errno == EFTYPE is documented in open(2).

commit a616fdad34b48b2932ef03fb87309dcc8b829527
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 18:09:47 2013 +0300

    xz: Fix error detection of fcntl(fd, F_SETFL, flags) calls.
    
    POSIX says that fcntl(fd, F_SETFL, flags) returns -1 on
    error and "other than -1" on success. This is how it is
    documented e.g. on OpenBSD too. On Linux, success with
    F_SETFL is always 0 (at least accorinding to fcntl(2)
    from man-pages 3.51).

commit 4a08a6e4c61c65ab763ab314100a6d7a3bb89298
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 17:36:47 2013 +0300

    xz: Fix use of wrong variable in a fcntl() call.
    
    Due to a wrong variable name, when writing a sparse file
    to standard output, *all* file status flags were cleared
    (to the extent the operating system allowed it) instead of
    only clearing the O_APPEND flag. In practice this worked
    fine in the common situations on GNU/Linux, but I didn't
    check how it behaved elsewhere.
    
    The original flags were still restored correctly. I still
    changed the code to use a separate boolean variable to
    indicate when the flags should be restored instead of
    relying on a special value in stdout_flags.

commit b790b435daa3351067f80a5973b647f8d55367a2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 28 14:55:37 2013 +0300

    xz: Fix assertion related to posix_fadvise().
    
    Input file can be a FIFO or something else that doesn't
    support posix_fadvise() so don't check the return value
    even with an assertion. Nothing bad happens if the call
    to posix_fadvise() fails.

commit 84d2da6c9dc252f441deb7626c2522202b005d4d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 26 13:30:57 2013 +0300

    xz: Check the value of lzma_stream_flags.version in --list.
    
    It is a no-op for now, but if an old xz version is used
    together with a newer liblzma that supports something new,
    then this check becomes important and will stop the old xz
    from trying to parse files that it won't understand.

commit 9376f5f8f762296f2173d61af9101112c36f38c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 26 12:17:00 2013 +0300

    Build: Require Automake 1.12 and use serial-tests option.
    
    It should actually still work with Automake 1.10 if
    the serial-tests option is removed. Automake 1.13 started
    using parallel tests by default and the option to get
    the old behavior isn't supported before 1.12.
    
    At least for now, parallel tests don't improve anything
    in XZ Utils but they hide the progress output from
    test_compress.sh.

commit b7e200d7bd0a3c7c171c13ad37d68296d6f73374
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 18:59:13 2013 +0300

    Update THANKS.

commit 46540e4c10923e363741ff5aab99e79fc0ce6ee8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 18:57:23 2013 +0300

    liblzma: Avoid a warning about a shadowed variable.
    
    On Mac OS X wait() is declared in <sys/wait.h> that
    we include one way or other so don't use "wait" as
    a variable name.
    
    Thanks to Christian Kujau.

commit ebb501ec73cecc546c67117dd01b5e33c90bfb4a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 23 17:36:47 2013 +0300

    xz: Validate Uncompressed Size from Block Header in list.c.
    
    This affects only "xz -lvv". Normal decompression with xz
    already detected if Block Header and Index had mismatched
    Uncompressed Size fields. So this just makes "xz -lvv"
    show such files as corrupt instead of showing the
    Uncompressed Size from Index.

commit c09e91dd236d3cabee0fc48312b3dc8cceae41ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 21 22:08:11 2013 +0300

    Update THANKS.

commit eb6ca9854b8eb9fbf72497c1cf608d6b19d2d494
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 21 22:04:45 2013 +0300

    xz: Make the man page more friendly to doclifter.
    
    Thanks to Eric S. Raymond.

commit 0c0a1947e6ad90a0a10b7a5c39f6ab99a0aa5c93
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 21 21:54:59 2013 +0300

    xz: A couple of man page fixes.
    
    Now the interaction of presets and custom filter chains
    is described correctly. Earlier it contradicted itself.
    
    Thanks to DevHC who reported these issues on IRC to me
    on 2012-12-14.

commit 2fcda89939c903106c429e109083d43d894049e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 21 21:50:26 2013 +0300

    xz: Fix interaction between preset and custom filter chains.
    
    There was somewhat illogical behavior when --extreme was
    specified and mixed with custom filter chains.
    
    Before this commit, "xz -9 --lzma2 -e" was equivalent
    to "xz --lzma2". After it is equivalent to "xz -6e"
    (all earlier preset options get forgotten when a custom
    filter chain is specified and the default preset is 6
    to which -e is applied). I find this less illogical.
    
    This also affects the meaning of "xz -9e --lzma2 -7".
    Earlier it was equivalent to "xz -7e" (the -e specified
    before a custom filter chain wasn't forgotten). Now it
    is "xz -7". Note that "xz -7e" still is the same as "xz -e7".
    
    Hopefully very few cared about this in the first place,
    so pretty much no one should even notice this change.
    
    Thanks to Conley Moorhous.

commit 97379c5ea758da3f8b0bc444d5f7fa43753ce610
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 27 22:07:46 2013 +0300

    Build: Use -Wvla with GCC if supported.
    
    Variable-length arrays are mandatory in C99 but optional in C11.
    The code doesn't currently use any VLAs and it shouldn't in the
    future either to stay compatible with C11 without requiring any
    optional C11 features.

commit 8957c58609d3987c58aa72b96c436cf565cc4917
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 15 19:29:09 2013 +0300

    xzdec: Improve the --help message.
    
    The options are now ordered in the same order as in xz's help
    message.
    
    Descriptions were added to the options that are ignored.
    I left them in parenthesis even if it looks a bit weird
    because I find it easier to spot the ignored vs. non-ignored
    options from the list that way.

commit ed886e1a92534a24401d0e99c11f1dcff3b5220a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 5 19:25:40 2013 +0300

    Update THANKS.

commit 5ea900cb5ad862bca81316729f92357c1fc040ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 23 22:25:15 2013 +0200

    liblzma: Be less picky in lzma_alone_decoder().
    
    To avoid false positives when detecting .lzma files,
    rare values in dictionary size and uncompressed size fields
    were rejected. They will still be rejected if .lzma files
    are decoded with lzma_auto_decoder(), but when using
    lzma_alone_decoder() directly, such files will now be accepted.
    Hopefully this is an OK compromise.
    
    This doesn't affect xz because xz still has its own file
    format detection code. This does affect lzmadec though.
    So after this commit lzmadec will accept files that xz or
    xz-emulating-lzma doesn't.
    
    NOTE: lzma_alone_decoder() still won't decode all .lzma files
    because liblzma's LZMA decoder doesn't support lc + lp > 4.
    
    Reported here:
    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/7068827

commit bb117fffa84604b6e3811b068c80db82bf7f7b05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 23 21:55:13 2013 +0200

    liblzma: Use lzma_block_buffer_bound64() in threaded encoder.
    
    Now it uses lzma_block_uncomp_encode() if the data doesn't
    fit into the space calculated by lzma_block_buffer_bound64().

commit e572e123b55b29527e54ce5f0807f115481d78b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 23 21:51:38 2013 +0200

    liblzma: Fix another deadlock in the threaded encoder.
    
    This race condition could cause a deadlock if lzma_end() was
    called before finishing the encoding. This can happen with
    xz with debugging enabled (non-debugging version doesn't
    call lzma_end() before exiting).

commit b465da5988dd59ad98fda10c2e4ea13d0b9c73bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 23 19:17:33 2013 +0200

    liblzma: Add lzma_block_uncomp_encode().
    
    This also adds a new internal function
    lzma_block_buffer_bound64() which is similar to
    lzma_block_buffer_bound() but uses uint64_t instead
    of size_t.

commit 9e6dabcf22ef4679f4faaae15ebd5b137ae2fad1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 5 19:14:50 2013 +0200

    Avoid unneeded use of awk in xzless.
    
    Use "read" instead of "awk" in xzless to get the version
    number of "less". The need for awk was introduced in
    the commit db5c1817fabf7cbb9e4087b1576eb26f0747338e.
    
    Thanks to Ariel P for the patch.

commit e7b424d267a34803db8d92a3515528be2ed45abd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 20:13:32 2012 +0200

    Make the progress indicator smooth in threaded mode.
    
    This adds lzma_get_progress() to liblzma and takes advantage
    of it in xz.
    
    lzma_get_progress() collects progress information from
    the thread-specific structures so that fairly accurate
    progress information is available to applications. Adding
    a new function seemed to be a better way than making the
    information directly available in lzma_stream (like total_in
    and total_out are) because collecting the information requires
    locking mutexes. It's waste of time to do it more often than
    the up to date information is actually needed by an application.

commit 2ebbb994e367f55f2561aa7c9e7451703c171f2f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 11:01:41 2012 +0200

    liblzma: Fix mythread_sync for nested locking.

commit 4c7e28705f6de418d19cc77324ef301f996e01ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 13 21:05:36 2012 +0200

    xz: Mention --threads in --help.
    
    Thanks to Olivier Delhomme for pointing out that this
    was still missing.

commit 65536214a31ecd33b6b03b68a351fb597d3703d6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Oct 3 15:54:24 2012 +0300

    xz: Fix the note about --rsyncable on the man page.

commit 3d93b6354927247a1569caf22ad27b07e97ee904
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 28 20:11:09 2012 +0300

    xz: Improve handling of failed realloc in xrealloc.
    
    Thanks to Jim Meyering.

commit ab225620664e235637833be2329935f9d290ba80
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 24 16:27:31 2012 +0300

    A few typo fixes to comments and the xz man page.
    
    Thanks to Jim Meyering.

commit f3c1ec69d910175ffd431fd82968dd35cec806ed
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 13 21:40:09 2012 +0300

    xz: Add a warning to --help about alpha and beta versions.

commit d8eaf9d8278c23c2cf2b7ca5562d4de570d3b5db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 2 17:13:30 2012 +0300

    Build: Bump gettext version requirement to 0.18.
    
    Otherwise too old version of m4/lib-link.m4 gets included
    when autoreconf -fi is run.

commit 96e08902b09f0f304d4ff80c6e83ef7fff883f34
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 17 18:29:08 2012 +0300

    Update THANKS.

commit 3778db1be53e61ff285c573af5ee468803008456
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 17 18:19:59 2012 +0300

    liblzma: Make the use of lzma_allocator const-correct.
    
    There is a tiny risk of causing breakage: If an application
    assigns lzma_stream.allocator to a non-const pointer, such
    code won't compile anymore. I don't know why anyone would do
    such a thing though, so in practice this shouldn't cause trouble.
    
    Thanks to Jan Kratochvil for the patch.

commit d625c7cf824fd3b61c6da84f56179e94917ff603
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 5 07:36:28 2012 +0300

    Tests: Remove tests/test_block.c that had gotten committed accidentally.

commit 0b09d266cce72bc4841933b171e79551e488927c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 5 07:33:35 2012 +0300

    Build: Include macosx/build.sh in the distribution.
    
    It has been in the Git repository since 2010 but probably
    few people have seen it since it hasn't been included in
    the release tarballs. :-(

commit d6e0b23d4613b9f417893dd96cc168c8005ece3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 5 07:28:53 2012 +0300

    Build: Include validate_map.sh in the distribution.
    
    It's required by "make mydist".
    
    Fix also the location of EXTRA_DIST+= so that those files
    get distributed also if symbol versioning isn't enabled.

commit 19de545d86097c3954d69ab5d12820387f6a09bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 5 07:24:45 2012 +0300

    Docs: Fix the name LZMA Utils -> XZ Utils in debug/README.

commit 672eccf57c31a40dfb956b7662db06d43e18618e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 5 07:23:17 2012 +0300

    Include debug/translation.bash in the distribution.
    
    Also fix the script name mentioned in README.

commit cafb523adac1caf305e70a04bc37f25602bf990c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 22:31:58 2012 +0300

    xz: Document --block-list better.
    
    Thanks to Jonathan Nieder.

commit c7ff218528bc8f7c65e7ef73c6515777346c6794
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 20:01:49 2012 +0300

    Bump the version number to 5.1.2alpha.

commit 8f3c1d886f93e6478ad509ff52102b2ce7faa999
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 20:01:19 2012 +0300

    Update NEWS for 5.1.2alpha.

commit 0d5fa05466e580fbc458820f87013ae7644e20e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 19:58:23 2012 +0300

    xz: Fix the version number printed by xz -lvv.
    
    The decoder bug was fixed in 5.0.2 instead of 5.0.3.

commit df11317985a4165731dde12bb0f0028da0e7b77f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 17:11:31 2012 +0300

    Build: Add a comment to configure.ac about symbol versioning.

commit bd9cc179e8be3ef515201d3ed9c7dd79ae88869d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 17:06:49 2012 +0300

    Update TODO.

commit 4a238dd9b22f462cac5e199828bf1beb0df05884
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 4 17:05:46 2012 +0300

    Document --enable-symbol-versions in INSTALL.

commit 88ccf47205d7f3aa314d358c72ef214f10f68b43
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 3 21:16:39 2012 +0300

    xz: Add incomplete support for --block-list.
    
    It's broken with threads and when also --block-size is used.

commit 972179cdcdf5d8949c48ee31737d87d3050b44af
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 1 18:44:33 2012 +0300

    xz: Update the man page about the new field in --robot -lvv.

commit 1403707fc64a70976aebe66f8d9a9bd12f73a2c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 28 10:47:49 2012 +0300

    liblzma: Check that the first byte of range encoded data is 0x00.
    
    It is just to be more pedantic and thus perhaps catch broken
    files slightly earlier.

commit eccd8017ffe2c5de473222c4963ec53c62f7fda2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 22 19:00:23 2012 +0300

    Update NEWS from 5.0.4.

commit 2e6754eac26a431e8d340c28906f63bcd1e177e8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 22 14:34:03 2012 +0300

    xz: Update man page date to match the latest update.

commit b3235a0b1af45d5e1244cbe3191516966c076fa0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 18 21:27:47 2012 +0300

    Docs: Language fix to 01_compress_easy.c.
    
    Thanks to Jonathan Nieder.

commit f1675f765fe228cb5a5f904f853445a03e33cfe9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 14 20:15:30 2012 +0300

    Fix the top-level Makefile.am for the new example programs.

commit 3a0c5378abefaf86aa39a62a7c9682bdb21568a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 14 10:52:33 2012 +0300

    Docs: Add new example programs.
    
    These have more comments than the old examples and
    human-readable error messages. More tutorial-like examples
    are needed but these are a start.

commit 1bd2c2c553e30c4a73cfb82abc6908efd6be6b8d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 14 10:33:27 2012 +0300

    Docs: Move xz_pipe_comp.c and xz_pipe_decomp.c to doc/examples_old.
    
    It is good to keep these around to so that if someone has
    copied the decompressor bug from xz_pipe_decomp.c he has
    an example how to easily fix it.

commit 905f0ab5b5ce544d4b68a2ed6077df0f3d021292
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 14 10:33:01 2012 +0300

    Docs: Fix a bug in xz_pipe_decomp.c example program.

commit 4bd1a3bd5fdf4870b2f96dd0b8a21657c8a58ad8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 30 23:14:33 2012 +0300

    Translations: Update the French translation.
    
    Thanks to Adrien Nader.

commit d2e836f2f3a87df6fe6bb0589b037db51205d910
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 29 23:42:37 2012 +0300

    Translations: Update the German translation.
    
    The previous only included the new strings in v5.0.

commit c9a16151577ba459afd6e3528df23bc0ddb95171
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 29 22:26:27 2012 +0300

    Translations: Update the German translation.

commit 1530a74fd48f8493372edad137a24541efe24713
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 29 22:14:21 2012 +0300

    Translations: Update Polish translation.

commit d8db706acb8316f9861abd432cfbe001dd6d0c5c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 28 20:42:11 2012 +0300

    liblzma: Fix possibility of incorrect LZMA_BUF_ERROR.
    
    lzma_code() could incorrectly return LZMA_BUF_ERROR if
    all of the following was true:
    
      - The caller knows how many bytes of output to expect
        and only provides that much output space.
    
      - When the last output bytes are decoded, the
        caller-provided input buffer ends right before
        the LZMA2 end of payload marker. So LZMA2 won't
        provide more output anymore, but it won't know it
        yet and thus won't return LZMA_STREAM_END yet.
    
      - A BCJ filter is in use and it hasn't left any
        unfiltered bytes in the temp buffer. This can happen
        with any BCJ filter, but in practice it's more likely
        with filters other than the x86 BCJ.
    
    Another situation where the bug can be triggered happens
    if the uncompressed size is zero bytes and no output space
    is provided. In this case the decompression can fail even
    if the whole input file is given to lzma_code().
    
    A similar bug was fixed in XZ Embedded on 2011-09-19.

commit 3f94b6d87f1b8f1c421ba548f8ebb83dca9c8cda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 28 15:38:32 2012 +0300

    Update THANKS.

commit 7769ea051d739a38a1640fd448cf5eb83cb119c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 28 15:37:43 2012 +0300

    xz: Don't show a huge number in -vv when memory limit is disabled.

commit ec921105725e4d3ef0a683dd83eee6f24ab60ccd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 27 22:30:17 2012 +0300

    xz: Document the "summary" lines of --robot -lvv.
    
    This documents only the columns that are in v5.0.
    The new columns added in the master branch aren't
    necessarily stable yet.

commit 27d24eb0a9f6eed96d6a4594c2b0bf7a91d29f9a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 27 21:53:20 2012 +0300

    xz: Fix output of verbose --robot --list modes.
    
    It printed the filename in "filename (x/y)" format
    which it obviously shouldn't do in robot mode.

commit ab25b82a91754d9388c89abddf806424671d9431
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 24 18:33:54 2012 +0300

    Build: Upgrade m4/acx_pthread.m4 to the latest version.

commit d05d6d65c41a4bc83f162fa3d67c5d84e8751634
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 10 21:15:17 2012 +0300

    Update THANKS.

commit e077391982f9f28dbfe542bba8800e7c5b916666
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 10 21:14:16 2012 +0300

    Docs: Cleanup line wrapping a bit.

commit 29fa0566d5df199cb9acb2d17bf7eea61acc7fa1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 29 11:51:25 2012 +0300

    Windows: Update notes about static linking with MSVC.

commit aac1b31ea4e66cf5a7a8c116bdaa15aa45e6c56e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 19 15:25:26 2012 +0300

    liblzma: Remove outdated comments.

commit df14a46013bea70c0bd35be7821b0b9108f97de7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 19 14:17:52 2012 +0300

    DOS: Link against DJGPP's libemu to support FPU emulation.
    
    This way xz should work on 386SX and 486SX. Floating point
    only is needed for verbose output in xz.

commit 03ed742a3a4931bb5c821357832083b26f577b13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 19 14:02:25 2012 +0300

    liblzma: Fix Libs.private in liblzma.pc to include -lrt when needed.

commit 8c5b13ad59df70f49429bfdfd6ac120b8f892fda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 19 13:58:55 2012 +0300

    Docs: Update MINIX 3 information in INSTALL.

commit c7376fc415a1566f38b2de4b516a17013d516a8b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 22 14:23:13 2012 +0200

    Update THANKS.

commit cff070aba6281ba743d29a62b8c0c66e5da4b2a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 22 14:02:34 2012 +0200

    Fix exit status of xzgrep when grepping binary files.
    
    When grepping binary files, grep may exit before it has
    read all the input. In this case, gzip -q returns 2 (eating
    SIGPIPE), but xz and bzip2 show SIGPIPE as the exit status
    (e.g. 141). This causes wrong exit status when grepping
    xz- or bzip2-compressed binary files.
    
    The fix checks for the special exit status that indicates SIGPIPE.
    It uses kill -l which should be supported everywhere since it
    is in both SUSv2 (1997) and POSIX.1-2008.
    
    Thanks to James Buren for the bug report.

commit 41cafb2bf9beea915710ee68f05fe929cd17759c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 22 12:08:43 2012 +0200

    Update THANKS.

commit 2dcea03712fa881930d69ec9eff70855c3d126d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 22 12:00:16 2012 +0200

    Fix compiling with IBM XL C on AIX.

commit 7db6bdf4abcf524115be2cf5659ed540cef074c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 10 17:13:03 2012 +0200

    Tests: Fix a compiler warning with _FORTIFY_SOURCE.
    
    Reported here:
    http://sourceforge.net/projects/lzmautils/forums/forum/708858/topic/4927385

commit 694952d545b6cf056547893ced69486eff9ece55
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 19 21:21:29 2011 +0200

    Docs: Explain the stable releases better in README.

commit 418fe668b3c53a9a20020b6cc652aaf25c734b29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 7 13:07:52 2011 +0200

    xz: Show minimum required XZ Utils version in xz -lvv.
    
    Man page wasn't updated yet.

commit 7081d82c37326bac97184e338345fa1c327e3580
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 4 17:57:16 2011 +0200

    xz: Fix a typo in a comment.
    
    Thanks to Bela Lubkin.

commit 232fe7cd70ad258d6a37f17e860e0f1b1891eeb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 3 17:08:02 2011 +0200

    Update THANKS.

commit 74d2bae4d3449c68453b0473dd3430ce91fd90c1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 3 17:07:22 2011 +0200

    xz: Fix xz on EBCDIC systems.
    
    Thanks to Chris Donawa.

commit 4ac4923f47cc0ef97dd9ca5cfcc44fc53eeab34a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 23 17:09:10 2011 +0300

    Update THANKS.

commit ab50ae3ef40c81e5bf613905ca3fd636548b75e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 23 17:08:14 2011 +0300

    liblzma: Fix invalid free() in the threaded encoder.
    
    It was triggered if initialization failed e.g. due to
    running out of memory.
    
    Thanks to Arkadiusz Miskiewicz.

commit 6b620a0f0813d28c3c544b4ff8cb595b38a6e908
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 23 17:05:55 2011 +0300

    liblzma: Fix a deadlock in the threaded encoder.
    
    It was triggered when reinitializing the encoder,
    e.g. when encoding two files.

commit bd52cf150ecd51e3ab63a9cc1a3cff6a77500178
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 6 12:03:41 2011 +0300

    Build: Fix "make check" on Windows.

commit 5c5b2256969ac473001b7d67615ed3bd0a54cc82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 9 21:19:13 2011 +0300

    Update THANKS.

commit 5b1e1f10741af9e4bbe4cfc3261fb7c7b04f7809
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 9 21:16:44 2011 +0300

    Workaround unusual SIZE_MAX on SCO OpenServer.

commit e9ed88126eee86e2511fa42681a5c7104820cf0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 6 20:37:28 2011 +0300

    Run the scripts with the correct shell in test_scripts.sh.
    
    The scripts are now made executable in the build tree.
    This way the scripts can be run like programs in
    test_scripts.sh. Previously test_scripts.sh always
    used sh but it's not correct if @POSIX_SHELL@ is set
    to something else by configure.
    
    Thanks to Jonathan Nieder for the patch.

commit 1c673e5681720491a74fc4b2992e075f47302c22
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 31 11:01:47 2011 +0300

    Fix exit status of "xzdiff foo.xz bar.xz".
    
    xzdiff was clobbering the exit status from diff in a case
    statement used to analyze the exit statuses from "xz" when
    its operands were two compressed files. Save and restore
    diff's exit status to fix this.
    
    The bug is inherited from zdiff in GNU gzip and was fixed
    there on 2009-10-09.
    
    Thanks to Jonathan Nieder for the patch and
    to Peter Pallinger for reporting the bug.

commit 324cde7a864f4506c32ae7846d688c359a83fe65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 16 12:15:29 2011 +0300

    liblzma: Remove unneeded semicolon.

commit 492c86345551a51a29bf18e55fe55a5e86f169ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 28 19:24:56 2011 +0300

    Build: Make configure print if symbol versioning is enabled or not.

commit fc4d4436969bd4d71b704d400a165875e596034a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 28 16:43:26 2011 +0300

    Don't call close(-1) in tuklib_open_stdxxx() on error.
    
    Thanks to Jim Meyering.

commit bd35d903a04c4d388adb4065b0fa271302380895
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 28 15:55:39 2011 +0300

    liblzma: Use symbol versioning.
    
    Symbol versioning is enabled by default on GNU/Linux,
    other GNU-based systems, and FreeBSD.
    
    I'm not sure how stable this is, so it may need
    backward-incompatible changes before the next release.
    
    The idea is that alpha and beta symbols are considered
    unstable and require recompiling the applications that
    use those symbols. Once a symbol is stable, it may get
    extended with new features in ways that don't break
    compatibility with older ABI & API.
    
    The mydist target runs validate_map.sh which should
    catch some probable problems in liblzma.map. Otherwise
    I would forget to update the map file for new releases.

commit afbb244362c9426a37ce4eb9d54aab768da3adad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 28 09:46:46 2011 +0300

    Translations: Update the Italian translation.
    
    Thanks to Milo Casagrande.

commit 79bef85e0543c0c3723281c3c817616c6cec343b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 28 08:46:04 2011 +0300

    Tests: Add a test file for the bug in the previous commit.

commit c0297445064951807803457dca1611b3c47e7f0f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 27 22:25:44 2011 +0300

    xz: Fix error handling in xz -lvv.
    
    It could do an invalid free() and read past the end
    of the uninitialized filters array.

commit 8bd91918ac50731f00b1a2a48072980572eb2ff9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 27 22:09:49 2011 +0300

    liblzma: Handle allocation failures correctly in lzma_index_init().
    
    Thanks to Jim Meyering.

commit fe00f95828ef5627721b57e054f7eb2d42a2c961
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 24 00:23:46 2011 +0300

    Build: Fix checking for system-provided SHA-256.

commit 21b45b9bab541f419712cbfd473ccc31802e0397
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 23 18:30:30 2011 +0300

    Build: Set GZIP_ENV=-9n in top-level Makefile.am.

commit 48053e8a4550233af46359024538bff90c870ab1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 22 16:42:11 2011 +0300

    Update NEWS for 5.0.3.

commit bba37df2c9e54ad773e15ff00a09d2d6989fb3b2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 21 16:28:44 2011 +0300

    Add French translation.
    
    It is known that the BCJ filter --help text is only
    partially translated.

commit 4161d7634965a7a287bf208dcd79f6185f448fe8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 21 15:12:10 2011 +0300

    xz: Translate also the string used to print the program name.
    
    French needs a space before a colon, e.g. "xz : foo error".

commit b94aa0c8380cdb18cddb33440d625474c16643cf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 21 15:08:44 2011 +0300

    liblzma: Try to use SHA-256 from the operating system.
    
    If the operating system libc or other base libraries
    provide SHA-256, use that instead of our own copy.
    Note that this doesn't use OpenSSL or libgcrypt or
    such libraries to avoid creating dependencies to
    other packages.
    
    This supports at least FreeBSD, NetBSD, OpenBSD, Solaris,
    MINIX, and Darwin. They all provide similar but not
    identical SHA-256 APIs; everyone is a little different.
    
    Thanks to Wim Lewis for the original patch, improvements,
    and testing.

commit f004128678d43ea10b4a6401aa184cf83252d6ec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 17 12:52:18 2011 +0300

    Don't use clockid_t in mythread.h when clock_gettime() isn't available.
    
    Thanks to Wim Lewis for the patch.

commit f779516f42ebd2db47a5b7d6143459bf7737cf2f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 17 12:26:28 2011 +0300

    Update THANKS.

commit 830ba587775bb562f6eaf05cad61bf669d1f8892
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 17 12:21:33 2011 +0300

    Update INSTALL with a note about linker problem on OpenSolaris x86.

commit ec7106309c8060e9c646dba20c4f15689a0bbb04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 17 12:01:37 2011 +0300

    Build: Fix initialization of enable_check_* variables in configure.ac.
    
    This doesn't matter much in practice since it is unlikely
    that anyone would have such environment variable names.
    
    Thanks to Wim Lewis.

commit 4c6e146df99696920f12410fb17754412797ef36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 17 11:54:38 2011 +0300

    Add underscores to attributes (__attribute((__foo__))).

commit 7a480e485938884ef3021b48c3b0b9f9699dc9b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 1 12:24:23 2011 +0300

    xz: Fix input file position when --single-stream is used.
    
    Now the following works as you would expect:
    
        echo foo | xz > foo.xz
        echo bar | xz >> foo.xz
        ( xz -dc --single-stream ; xz -dc --single-stream ) < foo.xz
    
    Note that it doesn't work if the input is not seekable
    or if there is Stream Padding between the concatenated
    .xz Streams.

commit c29e6630c1450c630c4e7b783bdd76515db9004c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 1 12:15:51 2011 +0300

    xz: Print the maximum number of worker threads in xz -vv.

commit 0b77c4a75158ccc416b07d6e81df8ee0abaea720
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 19 10:44:48 2011 +0300

    Build: Warn if no supported method to detect the number of CPU cores.

commit e4622df9ab4982f8faa53d85b17be66216175a58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 19 09:55:06 2011 +0300

    Update THANKS.

commit 9c1b05828a88eff54409760b92162c7cc2c7cff6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 19 09:20:44 2011 +0300

    Fix portability problems in mythread.h.
    
    Use gettimeofday() if clock_gettime() isn't available
    (e.g. Darwin).
    
    The test for availability of pthread_condattr_setclock()
    and CLOCK_MONOTONIC was incorrect. Instead of fixing the
    #ifdefs, use an Autoconf test. That way if there exists a
    system that supports them but doesn't specify the matching
    POSIX #defines, the features will still get detected.
    
    Don't try to use pthread_sigmask() on OpenVMS. It doesn't
    have that function.
    
    Guard mythread.h against being #included multiple times.

commit 3de00cc75da7b0e7b65e84c62b5351e231f501e9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 18 19:35:49 2011 +0300

    Update THANKS.

commit 6ef4eabc0acc49e1bb9dc68064706e19fa9fcf48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 12:48:31 2011 +0300

    Bump the version number to 5.1.1alpha and liblzma soname to 5.0.99.

commit 9a4377be0d21e597c66bad6c7452873aebfb3c1c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 12:42:37 2011 +0300

    Put the unstable APIs behind #ifdef LZMA_UNSTABLE.
    
    This way people hopefully won't complain if these APIs
    change and break code that used an older API.

commit 3e321a3acd50002cf6fdfd259e910f56d3389bc3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 11:59:49 2011 +0300

    Remove doubled words from documentation and comments.
    
    Spot candidates by running these commands:
      git ls-files |xargs perl -0777 -n \
        -e 'while (/\b(then?|[iao]n|i[fst]|but|f?or|at|and|[dt]o)\s+\1\b/gims)' \
        -e '{$n=($` =~ tr/\n/\n/ + 1); ($v=$&)=~s/\n/\\n/g; print "$ARGV:$n:$v\n"}'
    
    Thanks to Jim Meyering for the original patch.

commit d91a84b534b012d19474f2fda1fbcaef873e1ba4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 11:46:01 2011 +0300

    Update NEWS.

commit 14e6ad8cfe0165c1a8beeb5b2a1536558b29b0a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 11:45:40 2011 +0300

    Update TODO.

commit 70e750f59793f9b5cd306a5adce9b8e427739e04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 12 11:08:55 2011 +0300

    xz: Update the man page about threading.

commit 24e0406c0fb7494d2037dec033686faf1bf67068
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 22:06:03 2011 +0300

    xz: Add support for threaded compression.

commit de678e0c924aa79a19293a8a6ed82e8cb6572a42
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 22:03:30 2011 +0300

    liblzma: Add lzma_stream_encoder_mt() for threaded compression.
    
    This is the simplest method to do threading, which splits
    the uncompressed data into blocks and compresses them
    independently from each other. There's room for improvement
    especially to reduce the memory usage, but nevertheless,
    this is a good start.

commit 25fe729532cdf4b8fed56a4519b73cf31efaec50
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 21:15:07 2011 +0300

    liblzma: Add the forgotten lzma_lzma2_block_size().
    
    This should have been in 5eefc0086d24a65e136352f8c1d19cefb0cbac7a.

commit 91afb785a1dee34862078d9bf844ef12b8cc3e35
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 21:04:13 2011 +0300

    liblzma: Document lzma_easy_(enc|dec)oder_memusage() better too.

commit 4a9905302a9e4a1601ae09d650d3f08ce98ae9ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 20:59:07 2011 +0300

    liblzma: Document lzma_raw_(enc|dec)oder_memusage() better.
    
    It didn't mention the return value that is used if
    an error occurs.

commit 0badb0b1bd649163322783b0bd9e590b4bc7a93d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 19:28:18 2011 +0300

    liblzma: Use memzero() to initialize supported_actions[].
    
    This is cleaner and makes it simpler to add new members
    to lzma_action enumeration.

commit a7934c446a58e20268689899d2a39f50e571f251
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 19:26:27 2011 +0300

    liblzma: API comment about lzma_allocator with threaded coding.

commit 5eefc0086d24a65e136352f8c1d19cefb0cbac7a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 19:16:30 2011 +0300

    liblzma: Add an internal function lzma_mt_block_size().
    
    This is based lzma_chunk_size() that was included in some
    development version of liblzma.

commit d1199274758049fc523d98c5b860ff814a799eec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 13:59:50 2011 +0300

    liblzma: Don't create an empty Block in lzma_stream_buffer_encode().
    
    Empty Block was created if the input buffer was empty.
    Empty Block wastes a few bytes of space, but more importantly
    it triggers a bug in XZ Utils 5.0.1 and older when trying
    to decompress such a file. 5.0.1 and older consider such
    files to be corrupt. I thought that no encoder creates empty
    Blocks when releasing 5.0.2 but I was wrong.

commit 3b22fc2c87ec85fcdd385c163b68fc49c97aa848
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 13:28:40 2011 +0300

    liblzma: Fix API docs to mention LZMA_UNSUPPORTED_CHECK.
    
    This return value was missing from the API comments of
    four functions.

commit 71b9380145dccf001f22e66a06b9d508905c25ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 13:21:28 2011 +0300

    liblzma: Validate encoder arguments better.
    
    The biggest problem was that the integrity check type
    wasn't validated, and e.g. lzma_easy_buffer_encode()
    would create a corrupt .xz Stream if given an unsupported
    Check ID. Luckily applications don't usually try to use
    an unsupport Check ID, so this bug is unlikely to cause
    many real-world problems.

commit ec7e3dbad704268825fc48f0bdd4577bc46b4f13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 09:57:30 2011 +0300

    xz: Move the description of --block-size in --long-help.

commit cd3086ff443bb282bdf556919c28b3e3cbed8169
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 09:55:35 2011 +0300

    Docs: Document --single-stream and --block-size.

commit fb64a4924334e3c440865710990fe08090f2fed0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 09:27:57 2011 +0300

    liblzma: Make lzma_stream_encoder_init() static (second try).
    
    It's an internal function and it's not needed by
    anything outside stream_encoder.c.

commit a34730cf6af4d33a4057914e57227b6dfde6567e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 11 08:31:42 2011 +0300

    Revert "liblzma: Make lzma_stream_encoder_init() static."
    
    This reverts commit 352ac82db5d3f64585c07b39e4759388dec0e4d7.
    I don't know what I was thinking.

commit 9f0a806aef7ea79718e3f1f2baf3564295229a27
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 21:23:21 2011 +0300

    Revise mythread.h.
    
    This adds:
    
      - mythread_sync() macro to create synchronized blocks
    
      - mythread_cond structure and related functions
        and macros for condition variables with timed
        waiting using a relative timeout
    
      - mythread_create() to create a thread with all
        signals blocked
    
    Some of these wouldn't need to be inline functions,
    but I'll keep them this way for now for simplicity.
    
    For timed waiting on a condition variable, librt is
    now required on some systems to use clock_gettime().
    configure.ac was updated to handle this.

commit 352ac82db5d3f64585c07b39e4759388dec0e4d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 20:37:36 2011 +0300

    liblzma: Make lzma_stream_encoder_init() static.
    
    It's an internal function and it's not needed by
    anything outside stream_encoder.c.

commit 9e807fe3fe79618ac48f58207cf7082ea20a6928
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 14:58:10 2011 +0300

    DOS: Update the docs and include notes about 8.3 filenames.

commit ebd54dbd6e481d31e80757f900ac8109ad1423c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 13:09:42 2011 +0300

    xz/DOS: Add experimental 8.3 filename support.
    
    This is incompatible with the 8.3 support patch made by
    Juan Manuel Guerrero. I think this one is nicer, but
    I need to get feedback from DOS users before saying
    that this is the final version of 8.3 filename support.

commit cd4fe97852bcaeffe674ee51b4613709292a0972
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Apr 10 12:47:47 2011 +0300

    xz/DOS: Be more careful with the destination file.
    
    Try to avoid overwriting the source file if --force is
    used and the generated destination filename refers to
    the source file. This can happen with 8.3 filenames where
    extra characters are ignored.
    
    If the generated output file refers to a special file
    like "con" or "prn", refuse to write to it even if --force
    is used.

commit 607f9f98ae5ef6d49f4c21c806d462bf6b3d6796
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 9 18:29:30 2011 +0300

    Update THANKS.

commit fca396b37410d272b754843a5dc13847be443a3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 9 18:28:58 2011 +0300

    liblzma: Add missing #ifdefs to filter_common.c.
    
    Passing --disable-decoders to configure broke a few
    encoders due to missing #ifdefs in filter_common.c.
    
    Thanks to Jason Gorski for the patch.

commit b03f6cd3ebadd675f2cc9d518cb26fa860269447
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 9 15:24:59 2011 +0300

    xz: Avoid unneeded fstat() on DOS-like systems.

commit 335fe260a81f61ec99ff5940df733b4c50aedb7c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 9 15:11:13 2011 +0300

    xz: Minor internal changes to handling of --threads.
    
    Now it always defaults to one thread. Maybe this
    will change again if a threading method is added
    that doesn't affect memory usage.

commit 9edd6ee895fbe71d245a173f48e511f154a99875
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 8 17:53:05 2011 +0300

    xz: Change size_t to uint32_t in a few places.

commit 411013ea4506a6df24d35a060fcbd73a57b73eb3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 8 17:48:41 2011 +0300

    xz: Fix a typo in a comment.

commit b34c5ce4b22e8d7b81f9895d15054af41d17f805
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 5 22:41:33 2011 +0300

    liblzma: Use TUKLIB_GNUC_REQ to check GCC version in sha256.c.

commit db33117cc85c17e0b897b5312bd5eb43aac41c03
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 5 17:12:20 2011 +0300

    Build: Upgrade m4/acx_pthread.m4 to the latest version.
    
    It was renamed to ax_pthread.m4 in Autoconf Archive.

commit 1039bfcfc098b69d56ecb39d198a092552eacf6d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 5 15:27:26 2011 +0300

    xz: Use posix_fadvise() if it is available.

commit 1ef3cf44a8eb9512480af4482a5232ea08363b14
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 5 15:13:29 2011 +0300

    xz: Call lzma_end(&strm) before exiting if debugging is enabled.

commit bd432015d33dcade611d297bc01eb0700088ef6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Apr 2 14:49:56 2011 +0300

    liblzma: Fix a memory leak in stream_encoder.c.
    
    It leaks old filter options structures (hundred bytes or so)
    every time the lzma_stream is reinitialized. With the xz tool,
    this happens when compressing multiple files.

commit 16889013214e7620d204b6e6c1bf9f3103a13655
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 1 08:47:20 2011 +0300

    Updated NEWS for 5.0.2.

commit 85cdf7dd4e97b078e7b929e47f55a7f1da36010f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 31 15:06:58 2011 +0300

    Update INSTALL with another note about IRIX.

commit c3f4995586873d6a4fb7e451010a128571a9a370
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 31 12:22:55 2011 +0300

    Tests: Add a new file to test empty LZMA2 streams.

commit 0d21f49a809dc2088da6cc0da7f948404df7ecfa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 31 11:54:48 2011 +0300

    liblzma: Fix decoding of LZMA2 streams having no uncompressed data.
    
    The decoder considered empty LZMA2 streams to be corrupt.
    This shouldn't matter much with .xz files, because no encoder
    creates empty LZMA2 streams in .xz. This bug is more likely
    to cause problems in applications that use raw LZMA2 streams.

commit 40277998cb9bad564ce4827aff152e6e1c904dfa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 24 01:42:49 2011 +0200

    Scripts: Better fix for xzgrep.
    
    Now it uses "grep -q".
    
    Thanks to Gregory Margo.

commit 2118733045ad0ca183a3f181a0399baf876983a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 24 01:22:18 2011 +0200

    Updated THANKS.

commit c7210d9a3fca6f31a57208bfddfc9ab20a2e097a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Mar 24 01:21:32 2011 +0200

    Scripts: Fix xzgrep -l.
    
    It didn't work at all. It tried to use the -q option
    for grep, but it appended it after "--". This works
    around it by redirecting to /dev/null. The downside
    is that this can be slower with big files compared
    to proper use of "grep -q".
    
    Thanks to Gregory Margo.

commit 4eb83e32046a6d670862bc91c3d82530963b455e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 19 13:08:22 2011 +0200

    Scripts: Add lzop (.lzo) support to xzdiff and xzgrep.

commit 923b22483bd9356f3219b2b784d96f455f4dc499
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 18 19:10:30 2011 +0200

    xz: Add --block-size=SIZE.
    
    This uses LZMA_FULL_FLUSH every SIZE bytes of input.
    
    Man page wasn't updated yet.

commit 57597d42ca1740ad506437be168d800a50f1a0ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 18 18:19:19 2011 +0200

    xz: Add --single-stream.
    
    This can be useful when there is garbage after the
    compressed stream (.xz, .lzma, or raw stream).
    
    Man page wasn't updated yet.

commit 96f94bc925d579a700147fa5d7793b64d69cfc18
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 4 22:49:31 2011 +0200

    xz: Clean up suffix.c.
    
    struct suffix_pair isn't needed in compresed_name()
    so get rid of it there.

commit 8930c7ae3f82bdae15aa129f01de08be23d7e8d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 4 11:29:47 2011 +0200

    xz: Check if the file already has custom suffix when compressing.
    
    Now "xz -S .test foo.test" refuses to compress the
    file because it already has the suffix .test. The man
    page had it documented this way already.

commit 940d5852c6cf08abccc6befd9d1b5411c9076a58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 2 23:01:51 2011 +0200

    Updated THANKS.

commit 4ebe65f839613f27f127bab7b8c347d982330ee3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 2 23:00:33 2011 +0200

    Translations: Add Polish translation.
    
    Thanks to Jakub Bogusz.

commit fc1d292dca1925dfd17174f443f91a696ecd5bf8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 2 22:24:00 2011 +0200

    Updated THANKS.

commit 6dd061adfd2775428b079eb03d6fd47d7c0f1ffe
Merge: 9d542cee 5fbce0b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 6 20:13:01 2011 +0200

    Merge commit '5fbce0b8d96dc96775aa0215e3581addc830e23d'

commit 5fbce0b8d96dc96775aa0215e3581addc830e23d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 28 20:16:57 2011 +0200

    Update NEWS for 5.0.1.

commit 03ebd1bbb314f9f204940219a835c883bf442475
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 26 12:19:08 2011 +0200

    xz: Fix --force on setuid/setgid/sticky and multi-hardlink files.
    
    xz didn't compress setuid/setgid/sticky files and files
    with multiple hard links even with --force. This bug was
    introduced in 23ac2c44c3ac76994825adb7f9a8f719f78b5ee4.
    
    Thanks to Charles Wilson.

commit 9d542ceebcbe40b174169c132ccfcdc720ca7089
Merge: 4f2c69a4 7bd0a5e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 19 11:45:35 2011 +0200

    Merge branch 'v5.0'

commit 7bd0a5e7ccc354f7c2e95c8bc27569c820f6a136
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 18 21:25:24 2011 +0200

    Updated THANKS.

commit f71c4e16e913f660977526f0ef8d2acdf458d7c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 18 21:23:50 2011 +0200

    Add alloc_size and malloc attributes to a few functions.
    
    Thanks to Cristian Rodríguez for the original patch.

commit 316cbe24465143edde8f6ffb7532834b7b2ea93f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 13 16:36:33 2010 +0200

    Scripts: Fix gzip and bzip2 support in xzdiff.

commit 4f2c69a4e3e0aee2e37b0b1671d34086e20c8ac6
Merge: adb89e68 9311774c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 12 23:13:22 2010 +0200

    Merge branch 'v5.0'

commit 9311774c493c19deab51ded919dcd2e9c4aa2829
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 12 21:23:55 2010 +0200

    Build: Enable ASM on DJGPP by default.

commit 4a42aaee282fc73b482581684d65110506d5efdd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 12 16:09:42 2010 +0200

    Updated THANKS.

commit ce56f63c41ee210e6308090eb6d49221fdf67d6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 12 16:07:11 2010 +0200

    Add missing PRIx32 and PRIx64 compatibility definitions.
    
    This fixes portability to systems that lack C99 inttypes.h.
    
    Thanks to Juan Manuel Guerrero.

commit e6baedddcf54e7da049ebc49183565b99facd4c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 12 14:50:04 2010 +0200

    DOS-like: Treat \ and : as directory separators in addition to /.
    
    Juan Manuel Guerrero had fixed this in his XZ Utils port
    to DOS/DJGPP. The bug affects also Windows and OS/2.

commit adb89e68d43a4cadb0c215b45ef7a75737c9c3ec
Merge: 7c24e0d1 b7afd3e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 7 18:53:04 2010 +0200

    Merge branch 'v5.0'

commit b7afd3e22a8fac115b75c738d40d3eb1de7e286f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 7 18:52:04 2010 +0200

    Translations: Fix Czech translation of "sparse file".
    
    Thanks to Petr Hubený and Marek Černocký.

commit 7c24e0d1b8a2e86e9263b0d56d39621e01aed7af
Merge: b4d42f1a 3e564704
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 15 14:33:01 2010 +0200

    Merge branch 'v5.0'

commit 3e564704bc6f463cb2db11e3f3f0dbd71d85992e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 15 14:28:26 2010 +0200

    liblzma: Document the return value of lzma_lzma_preset().

commit 15ee6935abe4a2fc76639ee342ca2e69af3e0ad6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 4 18:31:40 2010 +0200

    Update the copies of GPLv2 and LGPLv2.1 from gnu.org.
    
    There are only a few white space changes.

commit 8e355f7fdbeee6fe394eb02a28f267ce99a882a2
Merge: 974ebe63 37c25658
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 26 15:53:06 2010 +0300

    Merge branch 'v5.0'

commit 37c25658efd25b034266daf87cd381d20d1df776
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 26 15:48:48 2010 +0300

    Build: Copy the example programs to $docdir/examples.
    
    The example programs by Daniel Mealha Cabrita were included
    in the git repository, but I had forgot to add them to
    Makefile.am. Thus, they didn't get included in the source
    package at all by "make dist".

commit 974ebe63497bdf0d262e06474f0dd5a70b1dd000
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 26 10:36:41 2010 +0300

    liblzma: Rename a few variables and constants.
    
    This has no semantic changes. I find the new names slightly
    more logical and they match the names that are already used
    in XZ Embedded.
    
    The name fastpos wasn't changed (not worth the hassle).

commit 7c427ec38d016c0070a42315d752857e33792fc4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 25 12:59:25 2010 +0300

    Bump version 5.1.0alpha.

commit e45929260cd902036efd40c5610a8d0a50d5712b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 17:25:52 2010 +0300

    Build: Fix mydist rule when .git doesn't exist.

commit 6e1326fcdf6b6209949be57cfe3ad4b781b65168
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 14:15:35 2010 +0300

    Add NEWS for 5.0.0.

commit b667a3ef6338a2c1db7b7706b1f6c99ea392221c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 14:02:53 2010 +0300

    Bump version to 5.0.0 and liblzma version-info to 5:0:0.

commit 8c947e9291691629714dafb4536c718b6cc24fbd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 12:30:54 2010 +0300

    liblzma: Make lzma_code() check the reserved members in lzma_stream.
    
    If any of the reserved members in lzma_stream are non-zero
    or non-NULL, LZMA_OPTIONS_ERROR is returned. It is possible
    that a new feature in the future is indicated by just setting
    a reserved member to some other value, so the old liblzma
    version need to catch it as an unsupported feature.

commit e61d85e082743ebd2dd0ff28fc0a82482ede0538
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 12:26:33 2010 +0300

    Windows: Use MinGW's stdio functions.
    
    The non-standard ones from msvcrt.dll appear to work
    most of the time with XZ Utils, but there are some
    corner cases where things may go very wrong. So it's
    good to use the better replacements provided by
    MinGW(-w64) runtime.

commit 23e23f1dc029146714c9a98313ab3ea93d71a2fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 12:21:32 2010 +0300

    liblzma: Use 512 as INDEX_GROUP_SIZE.
    
    This lets compiler use shifting instead of 64-bit division.

commit 613939fc82603b75b59eee840871a05bc8dd08e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 23 12:20:11 2010 +0300

    liblzma: A few ABI tweaks to reserve space in structures.

commit 68b83f252df3d27480a9f6f03445d16f6506fef1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 21 23:16:11 2010 +0300

    xz: Make sure that message_strm() can never return NULL.

commit d09c5753e33ff96ee57edb6d1e98e34041203695
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 21 23:06:31 2010 +0300

    liblzma: Update the comments in the API headers.
    
    Adding support for LZMA_FINISH for Index encoding and
    decoding needed tiny additions to the relevant .c files too.

commit 33c1c0e102eb529588503b8beea0903a45488fad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 19 12:08:30 2010 +0300

    Update INSTALL.generic.

commit 0076e03641f201c4b77dddd5a6db5880be19a78c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 19 11:44:37 2010 +0300

    Clean up a few FIXMEs and TODOs.
    
    lzma_chunk_size() was commented out because it is
    currently useless.

commit ce34ec4f54ff8b753da236f371ad8dd23c8135c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 19 10:21:08 2010 +0300

    Update docs.

commit f0fa880d247e73264d2c04fe31fb3412318a0026
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 12 15:13:30 2010 +0300

    xz: Avoid raise() also on OpenVMS.
    
    This is similar to DOS/DJGPP that killing the program
    with a signal will print a backtrace or a similar message.

commit ac462b1c47c451f5c62e428306314c4bdad8ae7f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 11 21:26:19 2010 +0300

    xz: Avoid SA_RESTART for portability reasons.
    
    SA_RESTART is not as portable as I had hoped. It's missing
    at least from OpenVMS, QNX, and DJGPP). Luckily we can do
    fine without SA_RESTART.

commit d52b411716a614c202e89ba732492efb9916cd3f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 10 17:58:58 2010 +0300

    xz: Use "%"PRIu32 instead of "%d" in a format string.

commit ae74d1bdeb075c3beefe76e1136c5741804e7e91
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 10 17:43:26 2010 +0300

    test_files.sh: Fix the first line.
    
    For some reason this prevented running the test only
    on OS/2 and even on that it broke only recently.
    
    Thanks to Elbert Pol.

commit d492b80ddd6f9a13419de6d102df7374d8f448e8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 10 16:49:01 2010 +0300

    lzmainfo: Use "%"PRIu32 instead of "%u" for uint32_t.

commit 825e859a9054bd91202e5723c41a17e72f63040a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 10 16:47:01 2010 +0300

    lzmainfo: Use fileno(stdin) instead of STDIN_FILENO.

commit acbc4cdecbeec2a4dfaac04f185ece49b2ff17c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 23:20:51 2010 +0300

    lzmainfo: Use setmode() on DOS-like systems.

commit ef364d3abc5647111c5424ea0d83a567e184a23b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 21:51:03 2010 +0300

    OS/2 and DOS: Be less verbose on signals.
    
    Calling raise() to kill xz when user has pressed C-c
    is a bit verbose on OS/2 and DOS/DJGPP. Instead of
    calling raise(), set only the exit status to 1.

commit 5629c4be07b6c67e79842b2569da1cedc9c0d69a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 19:28:49 2010 +0300

    DOS: Update the Makefile, config.h and README.
    
    This is now simpler and builds only xz.exe.

commit f25a77e6b9bc48a243ddfbbd755b7960eec7e0ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 18:57:55 2010 +0300

    Windows: Put some license info into README-Windows.txt.

commit e75100f549f85d231df25c07aa94d63e78e2d668
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 18:57:04 2010 +0300

    Windows: Fix a diagnostics bug in build.bash.

commit efeb998a2b1025df1c1d202cc7d21d866cd1c336
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 13:02:15 2010 +0300

    lzmainfo: Add Windows resource file.

commit 389d418445f1623593dfdbba55d52fbb6d1205f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 12:57:25 2010 +0300

    Add missing public domain notice to lzmadec_w32res.rc.

commit 6389c773a4912dd9f111256d74ba1605230a7957
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 12:52:12 2010 +0300

    Windows: Update common_w32res.rc.

commit 71275457ca24c9b01721f5cfc3638cf094daf454
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 12:27:08 2010 +0300

    Windows: Make build.bash prefer MinGW-w32 over MinGW.
    
    This is simply for licensing reasons. The 64-bit version
    will be built with MinGW-w64 anyway (at least for now),
    so using it also for 32-bit build allows using the same
    copyright notice about the MinGW-w64/w32 runtime.
    
    Note that using MinGW would require a copyright notice too,
    because its runtime is not in the public domain either even
    though MinGW's home page claims that it is public domain.
    See <http://marc.info/?l=mingw-users&m=126489506214078>.

commit 3ac35719d8433af937af6491383d4a50e343099b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 9 11:33:21 2010 +0300

    Windows: Copy COPYING-Windows.txt (if it exists) to the package.
    
    Also, put README-Windows.txt to the doc directory like
    the other documentation files.

commit 7b5db576fd7a4a67813b8437a9ccd4dbc94bbaae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 8 21:42:37 2010 +0300

    Windows: Fix build.bash again.
    
    630a8beda34af0ac153c8051b1bf01230558e422 wasn't good.

commit d3cd7abe85ec7c2f46cf198b15c00d5d119df3dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 8 16:53:20 2010 +0300

    Use LZMA_VERSION_STRING instead of PACKAGE_VERSION.
    
    Those are the same thing, and the former makes it a bit
    easier to build the code with other build systems, because
    one doesn't need to update the version number into custom
    config.h.
    
    This change affects only lzmainfo. Other tools were already
    using LZMA_VERSION_STRING.

commit 084c60d318f2dbaef4078d9b100b4a373d0c3a7f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 8 15:59:25 2010 +0300

    configure.ac: Remove two unused defines.

commit 11f51b6714357cb67ec7e56ed9575c199b5581fe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 8 15:32:29 2010 +0300

    Make tests accommodate missing xz or xzdec.

commit b1c7368f95e93ccdefdd0748e04398c26766f47f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 8 15:25:45 2010 +0300

    Build: Add options to disable individual command line tools.

commit 630a8beda34af0ac153c8051b1bf01230558e422
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 7 00:44:53 2010 +0300

    Windows: Make build.bash work without --enable-dynamic=no.

commit f9907503f882a745dce9d84c2968f6c175ba966a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 5 14:13:16 2010 +0300

    Build: Remove the static/dynamic tricks.
    
    Most distros want xz linked against shared liblzma, so
    it doesn't help much to require --enable-dynamic for that.
    Those who want to avoid PIC on x86-32 to get better
    performance, can still do it e.g. by using --disable-shared
    to compile xz and then another pass to compile shared liblzma.
    
    Part of these static/dynamic tricks were needed for Windows
    in the past. Nowadays we rely on GCC and binutils to do the
    right thing with auto-import. If the Autotooled build system
    needs to support some other toolchain on Windows in the future,
    this may need some rethinking.

commit fda4724d8114fccfa31c1839c15479f350c2fb4c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 5 12:18:58 2010 +0300

    configure.ac: Silence a warning from Autoconf 2.68.

commit 80b5675fa62c87426fe86f8fcd20feeabc4361b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 4 19:43:01 2010 +0300

    A few more languages files to the xz man page.
    
    Thanks to Jonathan Nieder.

commit f9722dbeca4dc4c43cfd15d122dafaac50b0a0bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 2 12:07:33 2010 +0300

    Update the FAQ.

commit 61ae593661e8dc402394e84d567ca2044a51572b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 2 11:38:20 2010 +0300

    liblzma: Small fixes to comments in the API headers.

commit 9166682dc601fd42c1b9510572e3f917d18de504
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 28 11:40:12 2010 +0300

    Create the PDF versions of the man pages better.

commit 17d3c61edd35de8fa884944fc70d1db86daa5dd8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 28 10:59:53 2010 +0300

    Move version.sh to build-aux.

commit 84af9d8770451339a692e9b70f96cf56156a6069
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 28 10:53:02 2010 +0300

    Update .gitignore.

commit 31575a449ac64c523da3bab8d0c0b522cdc7c780
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 28 01:17:14 2010 +0300

    Fix accomodate -> accommodate on the xz man page.

commit cec0ddc8ec4ce81685a51998b978e22167e461f9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 27 23:29:34 2010 +0300

    Major man page updates.
    
    Lots of content was updated on the xz man page.
    
    Technical improvements:
      - Start a new sentence on a new line.
      - Use fairly short lines.
      - Use constant-width font for examples (where supported).
      - Some minor cleanups.
    
    Thanks to Jonathan Nieder for some language fixes.

commit 075257ab0416a0603be930082e31a5703e4ba345
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 26 18:10:31 2010 +0300

    Fix the preset -3e.
    
    depth=0 was missing.

commit 2577da9ebdba13fbe99ae5ee8bde35f7ed60f6d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 23 14:03:10 2010 +0300

    Add translations.bash and translation notes to README.
    
    translations.bash prints some messages from xz, which
    hopefully makes it a bit easier to test translations.

commit a3c5997c57e5b1a20aae6d1071b584b4f17d0b23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 17 22:14:30 2010 +0300

    xz: Update the Czech translation.
    
    Thanks to Marek Černocký.

commit a1766af582dc23fddd9da1eeb4b9d61e3eb4c2e6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 16 23:40:41 2010 +0300

    xz: Add Italian translation.
    
    Thanks to Milo Casagrande and Lorenzo De Liso.

commit 21088018554e2b0e02914205377ceb6e34a090bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 15 00:34:13 2010 +0300

    xz: Edit a translators comment.

commit be16e28ece1b492b8f93382b7fa1cc4da23c6ff6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 14 22:47:14 2010 +0300

    xz: Add German translation.
    
    Thanks to Andre Noll.

commit e23ea74f3240e6b69683f9e69d1716e0f9e9092b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 10 14:30:25 2010 +0300

    Updated README.

commit 8dad2fd69336985adb9f774fa96dc9c0efcb5a71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 10 14:30:07 2010 +0300

    Updated INSTALL.

commit 0b5f07fe3728c27cce416ddc40f7e4803ae96ac2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 10 14:26:20 2010 +0300

    Updated the git repository address in ChangeLog.

commit a8760203f93a69bc39fd14520a6e9e7b7d70be06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 10 14:09:33 2010 +0300

    xz: Add a comment to translators about "literal context bits".

commit bb0b1004f83cdc4d309e1471c2ecaf9f95ce60c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 10 10:30:33 2010 +0300

    xz: Multiple fixes.
    
    The code assumed that printing numbers with thousand separators
    and decimal points would always produce only US-ASCII characters.
    This was used for buffer sizes (with snprintf(), no overflows)
    and aligning columns of the progress indicator and --list. That
    assumption was wrong (e.g. LC_ALL=fi_FI.UTF-8 with glibc), so
    multibyte character support was added in this commit. The old
    way is used if the operating system doesn't have enough multibyte
    support (e.g. lacks wcwidth()).
    
    The sizes of buffers were increased to accomodate multibyte
    characters. I don't know how big they should be exactly, but
    they aren't used for anything critical, so it's not too bad.
    If they still aren't big enough, I hopefully get a bug report.
    snprintf() takes care of avoiding buffer overflows.
    
    Some static buffers were replaced with buffers allocated on
    stack. double_to_str() was removed. uint64_to_str() and
    uint64_to_nicestr() now share the static buffer and test
    for thousand separator support.
    
    Integrity check names "None" and "Unknown-N" (2 <= N <= 15)
    were marked to be translated. I had forgot these, plus they
    wouldn't have worked correctly anyway before this commit,
    because printing tables with multibyte strings didn't work.
    
    Thanks to Marek Černocký for reporting the bug about
    misaligned table columns in --list output.

commit 639f8e2af33cf8a184d59ba56b6df7c098679d61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 8 08:49:22 2010 +0300

    Update the Czech translation.
    
    Thanks to Marek Černocký.

commit 41bc9956ebfd7c86777d33676acf34c45e7ca7c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 7 12:31:40 2010 +0300

    xz: Add a note to translators.

commit 77a7746616e555fc08028e883a56d06bf0088b81
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 7 10:42:13 2010 +0300

    Fix use of N_() and ngettext().
    
    I had somehow thought that N_() is usually used
    as shorthand for ngettext().
    
    This also fixes a missing \n from a call to ngettext().

commit e6ad39335842343e622ab51207d1d3cb9caad801
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 6 19:43:12 2010 +0300

    Add missing files to POTFILES.in.

commit 58f55131820d2e08a1a6beb9ec0ee2378044eb30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 6 10:16:24 2010 +0300

    xz: Improve a comment.

commit bcb1b898341f7073f51660d7052d7ed6c5461a66
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 5 21:34:29 2010 +0300

    xz: Update the comment about NetBSD in file_io.c.
    
    Thanks to Joerg Sonnenberger.

commit da014d55972f5addbf6b4360d3d8ed2ef4282170
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 5 21:11:33 2010 +0300

    xz: Use an array instead of pointer for stdin_filename.
    
    Thanks Joerg Sonnenberger.

commit 8c7d3d1a0781c296c6b6e2465becaffd2132f7ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 5 12:16:17 2010 +0300

    xz: Hopefully ease translating the messages in list.c.

commit ef840950ad99cf2955c754875af0e01acf125079
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 4 23:14:44 2010 +0300

    xz: Fix grammar.

commit c46afd6edc04ea140db6c59e8486f5707c810c13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 4 23:12:20 2010 +0300

    xz: Use lzma_lzma_preset() to initialize the options structure.

commit 8fd3ac046d0b1416a2094fecc456d9e0f4d5d065
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 4 22:16:28 2010 +0300

    Don't set lc=4 with --extreme.
    
    This should reduce the cases where --extreme makes
    compression worse. On the other hand, some other
    files may now benefit slightly less from --extreme.

commit 474bac0c33e94aeaca8ada17ab19972b1424bc2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 4 22:10:32 2010 +0300

    xz: Minor improvements to --help and --long-help.

commit 2fce9312f36727ea82f3430cc5d3a7d243c5f087
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 3 15:54:40 2010 +0300

    xz: Make -vv show also decompressor memory usage.

commit b4b1cbcb53624ab832f8b3189c74450dc7ea29b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 3 15:13:12 2010 +0300

    Tweak the compression presets -0 .. -5.
    
    "Extreme" mode might need some further tweaking still.
    Docs were not updated yet.

commit 77fe5954cd3d10fb1837372684cbc133b56b6a87
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 3 12:28:41 2010 +0300

    liblzma: Adjust default depth calculation for HC3 and HC4.
    
    It was 8 + nice_len / 4, now it is 4 + nice_len / 4.
    This allows faster settings at lower nice_len values,
    even though it seems that I won't use automatic depth
    calcuation with HC3 and HC4 in the presets.

commit fce69059cf901ce8075a78c7607d591f144a3b5a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 3 11:11:25 2010 +0300

    xz: Make --help two lines shorter.
    
    At least for now, the --help option doesn't list any
    options that take arguments, so "Mandatory arguments to..."
    can be omitted.

commit a848e47ced6e5e2a564b5c454b2f5a19c2f40298
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 2 19:22:35 2010 +0300

    xz: Make setting a preset override a custom filter chain.
    
    This is more logical behavior than ignoring preset level
    options once a custom filter chain has been specified.

commit b3ff7ba044eaeab3e424d7b51fe914daf681b1a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 2 19:09:57 2010 +0300

    xz: Always warn if adjusting dictionary size due to memlimit.

commit d5653ba8a1ea9c00de4fddc617aba3c51e18139d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 10 11:04:30 2010 +0300

    Fix test_compress.sh.
    
    It broke when --memory option was removed from xzdec.
    
    Thanks to Jonathan Nieder.

commit 792331bdee706aa852a78b171040ebf814c6f3ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 7 20:45:18 2010 +0300

    Disable the memory usage limiter by default.
    
    For several people, the limiter causes bigger problems that
    it solves, so it is better to have it disabled by default.
    Those who want to have a limiter by default need to enable
    it via the environment variable XZ_DEFAULTS.
    
    Support for environment variable XZ_DEFAULTS was added. It is
    parsed before XZ_OPT and technically identical with it. The
    intended uses differ quite a bit though; see the man page.
    
    The memory usage limit can now be set separately for
    compression and decompression using --memlimit-compress and
    --memlimit-decompress. To set both at once, -M or --memlimit
    can be used. --memory was retained as a legacy alias for
    --memlimit for backwards compatibility.
    
    The semantics of --info-memory were changed in backwards
    incompatible way. Compatibility wasn't meaningful due to
    changes in the memory usage limiter functionality.
    
    The memory usage limiter info is no longer shown at the
    bottom of xz --long -help.
    
    The memory usage limiter support for removed completely from xzdec.
    
    xz's man page was updated to match the above changes. Various
    unrelated fixes were also made to the man page.

commit 4a45dd4c39f75d25c7a37b6400cb24d4010ca801
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Aug 6 20:22:16 2010 +0300

    Add missing const to a global constant in xz.

commit 01aa4869cb220b7fdad6d1acbabb2233045daa8f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 28 11:44:55 2010 +0300

    Language fixes for man pages.
    
    Thanks to A. Costa and Jonathan Nieder.

commit ce1f0deafe8504e1492bf1b1efb3e3ec950b1a2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 27 20:47:12 2010 +0300

    Windows: Add a note about building a Git repository snapshot

commit 507a4a4dea1e5462f12f7ed4b076c34e02054a38
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 27 20:45:03 2010 +0300

    Windows: build.sh is a bash script so name it correctly.

commit b1cbfd40f049a646a639eb78a3e41e9e3ef73339
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 27 20:27:32 2010 +0300

    Windows: Don't strip liblzma.a too much.

commit a540198ffb25fad36380c5e92ac20c2d28eec46a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 13 20:07:26 2010 +0300

    Updated THANKS.

commit bab0f01ed931f606b4675aa9f9331a17cec09bad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 13 19:55:50 2010 +0300

    Add two simple example programs.
    
    Hopefully these help a bit when learning the basics
    of liblzma API. I plan to write detailed examples about
    both basic and advanced features with lots of comments,
    but these two examples are good have right now.
    
    The examples were written by Daniel Mealha Cabrita. Thanks.

commit c15c42abb3c8c6e77c778ef06c97a4a10b8b5d00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 15 14:06:29 2010 +0300

    Add --no-adjust.

commit 2130926dd1c839280358172dfadd8d3054bde2b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 11 21:51:32 2010 +0300

    Updated THANKS.

commit bc612d0e0c9e4504c59d49168e87a7ae3e458443
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 11 21:48:32 2010 +0300

    Clarify the description of the default memlimit in the man page.
    
    Thanks to Denis Excoffier.

commit e1b6935d60a00405e6b5b455a3426d2248cc926c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 11 21:43:28 2010 +0300

    Fix string to uint64_t conversion.
    
    Thanks to Denis Excoffier for the bug report.

commit 3e49c8acb0f5312948eddb2342dbb5802d4571d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 11 10:40:28 2010 +0300

    Put the git commit to the filename in mydist rule.

commit d8b41eedce486d400f701b757b7b5e4e32276618
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 2 23:13:55 2010 +0300

    Fix compiling with -Werror.

commit b5fbab6123a39c9a55cd5d7af410e9aae067d5f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 2 23:09:22 2010 +0300

    Silence a bogus Valgrind warning.
    
    When using -O2 with GCC, it liked to swap two comparisons
    in one "if" statement. It's otherwise fine except that
    the latter part, which is seemingly never executed, got
    executed (nothing wrong with that) and then triggered
    warning in Valgrind about conditional jump depending on
    uninitialized variable. A few people find this annoying
    so do things a bit differently to avoid the warning.

commit 29a7b250e685852f2f97615493ec49acaf528623
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 2 21:32:12 2010 +0300

    Fix a Windows-specific FIXME in signal handling code.

commit e89d987056cee7d4e279be3ef3a6cc690bfc0e6d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 2 17:46:58 2010 +0300

    Adjust SA_RESTART workaround.
    
    I want to get a bug report if something else than
    DJGPP lacks SA_RESTART.

commit e243145c84ab5c3be8259fd486ead0de5235b3f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 1 16:02:30 2010 +0300

    xz man page updates.
    
    - Concatenating .xz files and padding
    - List mode
    - Robot mode
    - A few examples (but many more are needed)

commit ce6dc3c0a891f23a862f80ec08d3b6f0beb2a562
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 1 15:51:44 2010 +0300

    Major update to xz --list.

commit 905e54804a899e4ad526d38fdba7e803ab9b71bd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 1 14:13:03 2010 +0300

    Rename message_filters_get() to message_filters_to_str().

commit 4b346ae8af20045027ae5efb068c6d69da3324d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 1 14:09:12 2010 +0300

    Fix a comment.

commit 07dc34f6da45c9ab757dad7fd5eef522ad27d296
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 27 16:17:42 2010 +0300

    Fix lzma_block_compressed_size().

commit 44d70cb154225e47eebf15a3cfbdf3794cbb4593
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 27 14:32:51 2010 +0300

    Take Cygwin into account in some #if lines.
    
    This change is no-op, but good to have just in case
    for the future.

commit a334348dc02803241cf4e0a539eecdc0e7ad2cc7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 27 13:42:44 2010 +0300

    Remove references to the Subblock filter in xz and tests.
    
    Thanks to Jonathan Nieder.

commit 70e5e2f6a7084e6af909deee88ceac2f6efa7893
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 27 13:35:36 2010 +0300

    Remove unused chunk_size.c.
    
    Thanks to Jonathan Nieder for the reminder.

commit 920a69a8d8e4203c5edddd829d932130eac188ea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 26 10:36:46 2010 +0300

    Rename MIN() and MAX() to my_min() and my_max().
    
    This should avoid some minor portability issues.

commit 019ae27c24d0c694545a6a46f8b9fb552198b015
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 26 10:30:20 2010 +0300

    Fix compilation of debug/known_sizes.c.

commit 98a4856a6ea84f79c790057a6eb89a25bc45b074
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 26 10:28:54 2010 +0300

    Remove references to Subblock filter in debug/sync_flush.c.

commit 703d2c33c095c41ae0693ee8c27c45e3847e4535
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 26 10:16:57 2010 +0300

    Better #error message.

commit d8a55c48b39703dd83f11089ad01e1ff2ac102e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed May 26 09:55:47 2010 +0300

    Remove the Subblock filter code for now.
    
    The spec isn't finished and the code didn't compile anymore.
    It won't be included in XZ Utils 5.0.0. It's easy to get it
    back once the spec is done.

commit b6377fc990f9b8651149cae0fecb8b9c5904e26d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 16 18:42:22 2010 +0300

    Split message_filters().
    
    message_filters_to_str() converts the filter chain to
    a string. message_filters_show() replaces the original
    message_filters().
    
    uint32_to_optstr() was also added to show the dictionary
    size in nicer format when possible.

commit d9986db782d6cf0f314342127280519339378fa0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 14 23:17:20 2010 +0300

    Omit lzma_restrict from the API headers.
    
    It isn't really useful so omitting it makes things
    shorter and slightly more readable.

commit 0d3489efca0a723dca0394809fa3e6170843af4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 10 19:57:24 2010 +0300

    Updated INSTALL.

commit 3fb3d594a2b53886adee161b6261e92277f05f7c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 10 19:54:52 2010 +0300

    Updated THANKS.

commit 6548e304657e77d3a972053db3c41c5daf591113
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon May 10 19:54:15 2010 +0300

    Updates to tuklib_physmem and tuklib_cpucores.
    
    Don't use #error to generate compile error, because some
    compilers actually don't take it as an error. This fixes
    tuklib_physmem on IRIX.
    
    Fix incorrect error check for sysconf() return values.
    
    Add AIX, HP-UX, and Tru64 specific code to detect the
    amount RAM.
    
    Add HP-UX specific code to detect the number of CPU cores.
    
    Thanks a lot to Peter O'Gorman for initial patches,
    testing, and debugging these fixes.

commit a290cfee3e23f046889c022aa96b4eca2016fdda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 12 21:55:56 2010 +0300

    Show both elapsed time and estimated remaining time in xz -v.
    
    The extra space for showing both has been taken from the
    sizes field. If the sizes grow big, bigger units than MiB
    will be used. It makes it slightly difficult to see that
    progress is still happening with huge files, but it should
    be OK in practice.
    
    Thanks to Trent W. Buck for <http://bugs.debian.org/574583>
    and Jonathan Nieder for suggestions how to fix it.

commit a1f7a986b8d708f9290da9799ca1b8d7082fad3e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 31 16:47:25 2010 +0300

    Add a simple tip to faq.txt about tar and xz.
    
    Thanks to Gilles Espinasse.

commit c737eec91d200d730aa82662affd6b06ebb0bff0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 22 21:03:03 2010 +0200

    Updated THANKS.

commit f4b2b52624b802c786e4e2a8eb6895794dd93b24
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 7 19:52:25 2010 +0200

    Fix xzgrep to not break if filenames have spaces or quotes.
    
    Thanks to someone who reported the bug on IRC.

commit cf38da00a140bd3bd65b192390ae5553380fd774
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 7 13:59:32 2010 +0200

    Treat all integer multiplier suffixes as base-2.
    
    Originally both base-2 and base-10 were supported, but since
    there seems to be little need for base-10 in XZ Utils, treat
    everything as base-2 and also be more relaxed about the case
    of the first letter of the suffix. Now xz will accept e.g.
    KiB, Ki, k, K, kB, and KB, and interpret them all as 1024. The
    recommended spelling of the suffixes are still KiB, MiB, and GiB.

commit 00fc1211ae7b687ac912098f4479112059deccbd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 7 13:50:23 2010 +0200

    Consistently round up the memory usage limit in messages.
    
    It still feels a bit wrong to round 1 byte to 1 MiB but
    at least it is now done consistently so that the same
    byte value is always rounded the same way to MiB.

commit 9886d436ff5615fc70eef32ff757b1e934069621
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 7 13:34:34 2010 +0200

    Change the default of --enable-assume-ram from 32 to 128 MiB.
    
    This is to allow files created with "xz -9" to be decompressed
    if the amount of RAM cannot be determined.

commit 2672bcc9f85ba28ff648e092e9eb4cd9e69ce418
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 7 13:29:28 2010 +0200

    Increase the default memory usage limit on "low-memory" systems.
    
    Previously the default limit was always 40 % of RAM. The
    new limit is a little bit more complex:
    
      - If 40 % of RAM is at least 80 MiB, 40 % of RAM is used
        as the limit.
    
      - If 80 % of RAM is over 80 MiB, 80 MiB is used as the limit.
    
      - Otherwise 80 % of RAM is used as the limit.
    
    This should make it possible to decompress files created with
    "xz -9" on more systems. Swapping is generally more expected
    on systems with less RAM, so higher default limit on them
    shouldn't cause too bad surprises in terms of heavy swapping.
    Instead, the higher default limit should reduce the number of
    bad surprises when it used to prevent decompression of files
    created with "xz -9". The DoS prevention system shouldn't be
    a DoS itself.
    
    Note that even with the new default limit, a system with 64 MiB
    RAM cannot decompress files created with "xz -9" without user
    overriding the limit. This should be OK, because if xz is going
    to need more memory than the system has RAM, it will run very
    very slowly and thus it's good that user has to override the limit
    in that case.

commit 5527b7269a997e7f335d60f237a64bbf225d9dc7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 6 21:36:19 2010 +0200

    Updated THANKS.

commit d0d1c51aea4351288a7e533cce28cb7f852f6b05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 6 21:17:20 2010 +0200

    Fix missing initialization in lzma_strm_init().
    
    With bad luck, lzma_code() could return LZMA_BUF_ERROR
    when it shouldn't.
    
    This has been here since the early days of liblzma.
    It got triggered by the modifications made to the xz
    tool in commit 18c10c30d2833f394cd7bce0e6a821044b15832f
    but only when decompressing .lzma files. Somehow I managed
    to miss testing that with Valgrind earlier.
    
    This fixes <http://bugs.gentoo.org/show_bug.cgi?id=305591>.
    Thanks to Rafał Mużyło for helping to debug it on IRC.

commit eb7d51a3faf9298c0c7aa9aaeae1023dcf9e37ea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 12 13:16:15 2010 +0200

    Collection of language fixes to comments and docs.
    
    Thanks to Jonathan Nieder.

commit 4785f2021aa6a23f1caf724fcc823e562584f225
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 12 12:41:20 2010 +0200

    Fix jl -> jb in ASM files.

commit 6b50c9429bf85521d355adc61745d06ee017f8c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 12 12:31:22 2010 +0200

    Use __APPLE__ instead of __MACH__ in ASM files.
    
    This allows the files to work on HURD.
    
    Thanks to Jonathan Nieder.

commit 6503fde658a5cdbdd907a788865470dd64771601
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 7 19:48:06 2010 +0200

    Subtle change to liblzma Block handling API.
    
    lzma_block.version has to be initialized even for
    lzma_block_header_decode(). This way a future version
    of liblzma won't allocate memory in a way that an old
    application doesn't know how to free it.
    
    The subtlety of this change is that all current apps
    using lzma_block_header_decode() will keep working for
    now, because the only possible version value is zero,
    and lzma_block_header_decode() unconditionally sets the
    version to zero even now. Unless fixed, these apps will
    break in the future if a new version of the Block options
    is ever needed.

commit dd7c3841ff78cb94ce02b0220c6e4748460970f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 2 11:50:11 2010 +0200

    Fix wrong assertion.
    
    This was added in 455e68c030fde8a8c2f5e254c3b3ab9489bf3735.

commit 9d67588c1597849504a3e5ac8bf6f06e7d2ee8be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 1 22:48:42 2010 +0200

    Updated TODO.

commit fef6333f52c8801308c3b78acb7942988541d137
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 1 22:47:54 2010 +0200

    Fix typos in comments.

commit 455e68c030fde8a8c2f5e254c3b3ab9489bf3735
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 1 22:46:56 2010 +0200

    Fix signal handling for --list.

commit 82220a149015616f75641ee8bbea415137535b9b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 1 11:44:45 2010 +0200

    Fix compression of symlinks with --force.
    
    xz --force accepted symlinks, but didn't remove
    them after successful compression. Instead, an error
    message was displayed.

commit d4da177d5ba3d2ef7323a6f1e06ca16e0478810e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 1 10:20:57 2010 +0200

    Fix a comment.

commit f9dd797a423a148903cf345b4146cb1fe1eab11d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 23:43:54 2010 +0200

    Updated THANKS.

commit ee5ddb8b28419fe4923ded5c18a50570a762dcab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 23:41:29 2010 +0200

    Updated TODO.

commit 11936ad3f5a2e97bda3463c7a56a2f4bb9265ea6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 23:35:04 2010 +0200

    Mention TODO in README.

commit 2901a8e7e82af05675b8cd8758a8ceddb111359f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 23:31:14 2010 +0200

    Updated INSTALL.

commit 8884e16864ba53fb4b58623d7537d7ef30c28e11
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 23:28:51 2010 +0200

    Revise the Windows build files.
    
    The old Makefile + config.h was deleted, because it
    becomes outdated too easily and building with the
    Autotools based build system works fine even on Windows.
    
    windows/build.sh hasn't got much testing, but it should
    work to build 32-bit x86 and x86-64 versions of XZ Utils
    using MSYS, MinGW or MinGW-w32, and MinGW-w64.
    
    windows/INSTALL-Windows.txt describes what packages are
    needed and how to install them.
    
    windows/README-Windows.txt is a readme file for the binary
    package that build.sh hopefully builds.
    
    There are no instructions about using Autotools for now,
    so those using a git snapshot may want to run
    "autoreconf -fi && ./configure && make mydist" on a UN*X
    box and then copy the resulting .tar.gz to a Windows.

commit 34eb5e201d62f7f46bbe6fe97cfe08cb31b3b88c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 19:52:38 2010 +0200

    Select the default integrity check type at runtime.
    
    Previously it was set statically to CRC64 or CRC32
    depending on options passed to the configure script.

commit 96a4f840e3b9ca5c81e5711ff9c267b194f93ef1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 18:17:50 2010 +0200

    Improve displaying of the memory usage limit.

commit b3cc4d8edd68a0250cc69680c99b9f7343f99cf2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 12:53:56 2010 +0200

    Don't use uninitialized sigset_t.
    
    If signal handlers haven't been established, then it's
    useless to try to block them, especially since the sigset_t
    used for blocking hasn't been initialized yet.

commit 231c3c7098f1099a56abb8afece76fc9b8699f05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 31 12:01:54 2010 +0200

    Delay opening the destionation file and other fixes.
    
    The opening of the destination file is now delayed a little.
    The coder is initialized, and if decompressing, the memory
    usage of the first Block compared against the memory
    usage limit before the destination file is opened. This
    means that if --force was used, the old "target" file won't
    be deleted so easily when something goes wrong very early.
    Thanks to Mark K for the bug report.
    
    The above fix required some changes to progress message
    handling. Now there is a separate function for setting and
    printing the filename. It is used also in list.c.
    
    list_file() now handles stdin correctly (gives an error).
    
    A useless check for user_abort was removed from file_io.c.

commit 0dbd0641db99d5e73d51d04ce7a71e52dc6b4105
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 29 22:48:04 2010 +0200

    Add list.h to src/xz/Makefile.am.
    
    This should have been already in
    0bc9eab243dee3be764b3530433a7fcdc3f7c6a1.

commit b4b1a56e0cbd597157858264f5c7189201ac9018
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 29 13:24:27 2010 +0200

    Add lzmainfo.1 to manfiles list to convert to .txt and .pdf.

commit 5574d64e03ad3a3d6e00e4b0d3e81c7b5529ec95
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 27 16:42:11 2010 +0200

    Silence two compiler warnings on DOS-like systems.

commit b063cc34a30a4edf109343ff373b2b62b8ca72d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 27 13:31:03 2010 +0200

    Use PACKAGE_URL instead of custom PACKAGE_HOMEPAGE.

commit 38b8035b5cb5f56457c5fa5a891d6900fcf5984f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 26 23:37:46 2010 +0200

    Add a missing space to an error message.
    
    Thanks to Robert Readman.

commit e5496f9628ff5979392a80421d0b63a4de8015b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 26 22:53:37 2010 +0200

    Use past tense in error message in io_unlink().
    
    Added a note to translators too.
    
    Thanks to Robert Readman.

commit d9a9800597ea540090e434132c3b511217df0a2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 26 15:42:24 2010 +0200

    Fix too small static buffer in util.c.
    
    This was introduced in
    0dd6d007669b946543ca939a44243833c79e08f4 two days ago.

commit d0b4bbf5da068503c099cd456e294d7673548cc0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 26 14:46:43 2010 +0200

    Minor comment fix.

commit 0bc9eab243dee3be764b3530433a7fcdc3f7c6a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 23:50:54 2010 +0200

    Add initial version of xz --list.
    
    This is a bit rough but should be useful for basic things.
    Ideas (with detailed examples) about the output format are
    welcome.
    
    The output of --robot --list is not necessarily stable yet,
    although I don't currently have any plans about changing it.
    
    The man page hasn't been updated yet.

commit df254ce03be016e217b511e7acd5d493f9929ca5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 22:46:11 2010 +0200

    Add io_pread().
    
    It will be used by --list.

commit ef68dd4a92976276304de2aedfbe34ae91a86abb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 22:45:14 2010 +0200

    Set LC_NUMERIC=C when --robot is used.
    
    It is to ensure that floating point numbers
    will always have a dot as the decimal separator.

commit 0dd6d007669b946543ca939a44243833c79e08f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 24 16:57:40 2010 +0200

    Some improvements to printing sizes in xz.

commit 2a98fdffd68c66371279c211c29153c808ad5c1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 20 22:02:35 2010 +0200

    Fix a typo in README.
    
    Thanks to R. Bijker.

commit 07a11dad44e041b01dcfc73e8d4e00731158c06d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 17 11:59:54 2010 +0200

    Updated windows/Makefile.
    
    Thanks to Dan Shechter for the patch.
    
    It is likely that windows/Makefile will be removed
    completely, because Autotols based build nowadays
    works well with both 32-bit and 64-bit MinGW (I
    just need to update the docs).

commit 37f31ead9d2b4e467df11450cf29ed7d7e3e25f3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 15 11:05:11 2010 +0200

    Update the xz man page to match the previous two commits.

commit 3ffd5d81a43210c8da56da5c5b3637d3f8bc63c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 13 19:10:25 2010 +0200

    Don't read compressed data from a terminal or write it
    to a terminal even if --force is specified.
    
    It just seems more reasonable this way.
    
    The new behavior matches bzip2. The old one matched gzip.

commit 23ac2c44c3ac76994825adb7f9a8f719f78b5ee4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 13 18:12:40 2010 +0200

    Don't compress or decompress special files unless writing
    to stdout even if --force is used.
    
    --force will still enable compression of symlinks, but only
    in case they point to a regular file.
    
    The new way simply seems more reasonable. It matches gzip's
    behavior while the old one matched bzip2's behavior.

commit cee12aa852ec0902983dc1f153346ef750157fb9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 12 16:30:33 2010 +0200

    Updated THANKS.

commit 153c7740c54b3c90129dbd3d6153ac1303c4d605
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 12 16:18:14 2010 +0200

    Add IRIX-specific code to tuklib_physmem and tuklib_cpucores.
    
    This is untested but it will get tested soon and, if needed,
    fixed before 5.0.0.
    
    Thanks to Stuart Shelton.

commit 8ea8dc754a7a5bc2d60db1eac201839cabdab6a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 1 00:29:10 2010 +0200

    Fix _memconfig() functions.
    
    This affects lzma_memusage() and lzma_memlimit_get().

commit 1a7ec87c8ee61dfc2e496d2e1fb7ab0939804691
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 31 22:45:53 2009 +0200

    Revised the Index handling code.
    
    This breaks API and ABI but most apps are not affected
    since most apps don't use this part of the API. You will
    get a compile error if you are using anything that got
    broken.
    
    Summary of changes:
    
      - Ability to store Stream Flags, which are needed
        for random-access reading in multi-Stream files.
    
      - Separate function to set size of Stream Padding.
    
      - Iterator structure makes it possible to read the same
        lzma_index from multiple threads at the same time.
    
      - A lot faster code to locate Blocks.
    
      - Removed lzma_index_equal() without adding anything
        to replace it. I don't know what it should do exactly
        with the new features and what actually needs this
        function in the first place other than test_index.c,
        which now has its own code to compare lzma_indexes.

commit f29997a846e673cb3b8cbd57de47ed313b3978bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 31 21:13:25 2009 +0200

    Remove c-format tag in cs.po.
    
    It was fixed in the C code earlier.

commit 097bad000363e0bf29f8274ad2d7ab59f7dbf644
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 31 21:11:05 2009 +0200

    Add missing lzma_nothrow in filter.h.

commit b56cb1fc31fa2381f92eefc040df85667048d626
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 9 18:13:44 2009 +0200

    Remove redefinition of _(msgid) macro from lzmainfo.c.

commit f7e44c6c11f630519072971b8b07a5729c096c36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 9 00:38:55 2009 +0200

    Always rely on GCC's auto-import on Windows.
    
    I understood that this is nicer, because then people
    don't need to worry about the LZMA_API_STATIC macro.
    
    Thanks to Charles Wilson and Keith Marshall.

commit 7b76a3e2336f25088957cba92b0dbd854d9caa3c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 7 21:46:53 2009 +0200

    Fix file_io.c on DOS-like systems.
    
    The problem was introduced when adding sparse file
    support in 465d1b0d6518c5d980f2db4c2d769f9905bdd902.
    
    Thanks to Charles Wilson.

commit 0696f5d268362221380e039bad48a86e29067c6a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 7 20:54:21 2009 +0200

    Add Czech translation.
    
    Thanks to Marek Černocký.
    
    Other people planning to translate xz: Note that the
    messages are a little bit in flux still. Translations
    are still welcome, just be prepared to some extra work
    in case there are changes.

commit 5e817a50d276f0a3607638c1c1d449d50b9aa4e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 7 20:32:08 2009 +0200

    Add a note for translators to add a bug reporting address
    for translation bugs.

commit 6db1c35be9e1e364cdacff6878910e1b7aac2a37
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 7 20:07:02 2009 +0200

    Prevent xgettext from taking one regular string as a C format string.
    
    Thanks to Marek Černocký.

commit e0c2776b6ffbd2b1900fde353aceac734edc93d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 28 17:45:22 2009 +0200

    Remove duplicate code in io_open_dest().
    
    Fix a missing _() in the error message too.

commit f057a33c6f7c5992389479f2d4feabf2900ba7ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 26 10:11:23 2009 +0200

    Typo fix to sysdefs.h.
    
    Thanks to Jonathan Nieder.

commit 8767b41534eafdf5e742e12190646bf5740b0cdb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 26 10:10:36 2009 +0200

    Fix a memory leak in test_index.c.
    
    This was introduced in
    bd13b04e202b6f495a68eb0766f97085b7c50a06.
    
    Thanks to Jim Meyering for noticing it.

commit 919fbaff860acdaa4bcd216500a0b1c960a6db92
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 25 14:22:19 2009 +0200

    Add missing error check to coder.c.
    
    With bad luck this could cause a segfault due to
    reading (but not writing) past the end of the buffer.

commit bd13b04e202b6f495a68eb0766f97085b7c50a06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 25 13:04:10 2009 +0200

    Fix bugs in lzma_index_read() and lzma_index_cat().
    
    lzma_index_read() didn't skip over Stream Padding
    if it was the first record in the Index.
    
    lzma_index_cat() didn't combine small Indexes correctly.
    
    The test suite was updated to check for these bugs.
    
    These bugs didn't affect the xz command line tool or
    most users of liblzma in any way.

commit 1f196909143b888e062bd9a0c4ba8c34d3019bfa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 25 12:52:56 2009 +0200

    Index decoder fixes.
    
    The Index decoder code didn't perfectly match the API docs,
    which said that *i will be set to point to the decoded Index
    only after decoding has succeeded. The docs were a bit unclear
    too.
    
    Now the decoder will initially set *i to NULL. *i will be set
    to point to the decoded Index once decoding has succeeded.
    This simplifies applications too, since it avoids dangling
    pointers.

commit 465d1b0d6518c5d980f2db4c2d769f9905bdd902
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 25 11:19:20 2009 +0200

    Create sparse files by default when decompressing into
    a regular file.
    
    Sparse file creation can be disabled with --no-sparse.
    I don't promise yet that the name of this option won't
    change before 5.0.0. It's possible that the code, that
    checks when it is safe to use sparse output on stdout,
    is not good enough, and a more flexible command line
    option is needed to configure sparse file handling.

commit 37de544414fc2dc5039471d1002ebd015eb3e627
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 22 12:43:06 2009 +0200

    Updated THANKS.

commit f1a28b96c900c658fe016852ff62f6c24d1f50fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 22 12:05:33 2009 +0200

    Add missing consts to pointer casts.

commit b9b5c54cd438b3ae47b44cc211b71f3bc53e35ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 22 12:00:30 2009 +0200

    Enable assembler code only if it is known to work
    on that operating system.
    
    I'm too lazy to think how to make a good Autoconf test
    for this and it's not that important anyway.
    
    No longer define HAVE_ASM_X86 or HAVE_ASM_X86_64.
    Inline assembler (if any) is used if a macro like
    __i386__ or __x86_64__ is defined.

commit 0733f4c9994db696420a405810d5f02c79ebc404
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 22 11:55:03 2009 +0200

    Make fastpos.h use tuklib_integer.h instead of bsr.h
    when --enable-small has been specified.

commit 7ac3985d891dcc5773543f84cc5bce6c14841b12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 22 11:52:30 2009 +0200

    Update tuklib_integer.h with bit scan functions.
    
    Thanks to Joachim Henke for the original patch.

commit c74c132f7f79a842c073c66575a4fdb985e4c2e3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 20 12:51:19 2009 +0200

    Update tuklib_cpucores.m4 and tuklib_physmem.m4 from tuklib,
    which now use AC_CACHE_CHECK. Using the cache variable,
    configure now warns if there is no method to detect the amount
    of RAM and recommends using --enable-assume-ram.

commit d315ca4930ff96e1428c6021c96f209e1abdd83e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Nov 16 18:16:45 2009 +0200

    Add support for --info-memory and --robot to xz.
    
    Currently --robot works only with --info-memory and
    --version. --help and --long-help work too, but --robot
    has no effect on them.
    
    Thanks to Jonathan Nieder for the original patches.

commit e330fb7e6b8162894280c8a3dc22fdc05cd2d85e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 15 12:54:45 2009 +0200

    Fix wrong indentation caused by incorrect settings
    in the text editor.

commit 93e418562cf127a9171e87bcd4e9af8e1bfcdae4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 15 12:40:17 2009 +0200

    Add lzma_physmem().
    
    I had hoped to keep liblzma as purely a compression
    library as possible (e.g. file I/O will go into
    a different library), but it seems that applications
    linking agaisnt liblzma need some way to determine
    the memory usage limit, and knowing the amount of RAM
    is one reasonable way to help making such decisions.
    
    Thanks to Jonathan Nieder for the original patch.

commit cf39faca59083d38422058c6c97aa757ea7797d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 14 20:21:19 2009 +0200

    Updated THANKS.

commit 2ddcae247c284cc2f396b6cfdab57790c7588b5f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 14 20:20:03 2009 +0200

    Some updates to xz man page.

commit 19b2674f07f8b588dfaf6638396b4b42866d7e23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 14 19:51:03 2009 +0200

    Fix description of --memory in --long-help.

commit 2291346f0cccf88e605d84b75c9c5aaaaddb5df8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 14 19:45:39 2009 +0200

    Update the debug programs so that they compile again.

commit 418d64a32e8144210f98a810738fed5a897e8367
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 14 18:59:19 2009 +0200

    Fix a design error in liblzma API.
    
    Originally the idea was that using LZMA_FULL_FLUSH
    with Stream encoder would read the filter chain
    from the same array that was used to intialize the
    Stream encoder. Since most apps wouldn't use
    LZMA_FULL_FLUSH, most apps wouldn't need to keep
    the filter chain available after initializing the
    Stream encoder. However, due to my mistake, it
    actually required keeping the array always available.
    
    Since setting the new filter chain via the array
    used at initialization time is not a nice way to do
    it for a couple of reasons, this commit ditches it
    and introduces lzma_filters_update(). This new function
    replaces also the "persistent" flag used by LZMA2
    (and to-be-designed Subblock filter), which was also
    an ugly thing to do.
    
    Thanks to Alexey Tourbin for reminding me about the problem
    that Stream encoder used to require keeping the filter
    chain allocated.

commit f0bf7634b77263a4dd02b20c71861ab67995da68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 17 11:11:58 2009 +0300

    Fix wrong function name in the previous commit.
    
    It was meant to be lzma_filters_copy(), not lzma_filters_dup().

commit 6d118a0b9def82e96afba7386ec8d7da0b59649f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Oct 17 01:47:07 2009 +0300

    Add lzma_filters_copy().
    
    This will be needed internally by liblzma once I fix
    a design mistake in the encoder API. This function may
    be useful to applications too so it's good to export it.

commit 7b7fe902d98da28e5769e2aa1e0c08c92384f7ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 16 20:35:39 2009 +0300

    Mention --check=none in --long-help. It was already in
    the man page though.
    
    Thanks to Jim Meyering for noticing this.

commit ebfb2c5e1f344e5c6e549b9dedaa49b0749a4a24
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Oct 4 22:57:12 2009 +0300

    Use a tuklib module for integer handling.
    
    This replaces bswap.h and integer.h.
    
    The tuklib module uses <byteswap.h> on GNU,
    <sys/endian.h> on *BSDs and <sys/byteorder.h>
    on Solaris, which may contain optimized code
    like inline assembly.

commit 29fd321033276261b87da7be5223db33d879a4c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 2 14:35:56 2009 +0300

    Add support for --enable-assume-ram=SIZE.

commit 3782b3fee4812b0dd4ffdfa6563ed49f73060f25
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 2 11:28:17 2009 +0300

    Use unaligned access (if possible) on both endiannesses
    in lz_encoder_hash.h.

commit c5f68b5cc79085a87f950fea53843e27f328068e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 2 11:03:26 2009 +0300

    Make liblzma produce the same output on both endiannesses.
    
    Seems that it is a problem in some cases if the same
    version of XZ Utils produces different output on different
    endiannesses, so this commit fixes that problem. The output
    will still vary between different XZ Utils versions, but I
    cannot avoid that for now.
    
    This commit bloatens the code on big endian systems by 1 KiB,
    which should be OK since liblzma is bloated already. ;-)

commit 188a1dcd0cc7867810ed3a55c598d0680922c63b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 27 11:53:36 2009 +0300

    Updated THANKS.

commit db9119b9181b307e7ac5d2bae82444d04b902b59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 27 11:48:54 2009 +0300

    Work around a bug in Interix header files.
    
    Thanks to Markus Duft for the patch.

commit b3d105e69786a45963176fd2193abe75e05ba738
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 24 17:50:17 2009 +0300

    Fix an error in OpenVMS-specific code.
    
    Thanks to Jouk Jansen.

commit 5e000ff00d4d01e559397b49eb648ad3f159d496
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 22 18:59:56 2009 +0300

    Added OpenVMS-specific information to INSTALL.

commit 932b2e204463d70f3eee5b8a1ea5a23bf9d001a4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 22 14:03:02 2009 +0300

    Better fixes for OpenVMS support.
    
    Thanks to Jouk Jansen.

commit 4c3630ec4179fe9265407a35c4db1374ffc82372
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 22 13:40:19 2009 +0300

    Avoid non-standard preprocessor construct.
    
    Thanks to Jouk Jansen.

commit 0deb1bb60addd1306b525e0ac0ad2a84eb0390d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Sep 21 19:50:09 2009 +0300

    Make sure that TUKLIB_DOSLIKE doesn't get defined on Cygwin.
    
    Thanks to Charles Wilson.

commit e599bba4216c0edb8cc8f40adad3a6dba88685f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 19 09:47:30 2009 +0300

    Various changes.
    
    Separate a few reusable components from XZ Utils specific
    code. The reusable code is now in "tuklib" modules. A few
    more could be separated still, e.g. bswap.h.
    
    Fix some bugs in lzmainfo.
    
    Fix physmem and cpucores code on OS/2. Thanks to Elbert Pol
    for help.
    
    Add OpenVMS support into physmem. Add a few #ifdefs to ease
    building XZ Utils on OpenVMS. Thanks to Jouk Jansen for the
    original patch.

commit 49cfc8d392cf535f8dd10233225b1fc726fec9ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 15 21:07:23 2009 +0300

    Fix incorrect use of "restrict".

commit 15ffd675ab7af84592eb1c23b0e9f4699aa0fd8c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 12 14:09:17 2009 +0300

    Fix GCC version check for nothrow attribute.

commit 6bfdd3a88a819f04c8f202e7d3c6f88a01c7d224
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 12 14:08:15 2009 +0300

    Updated THANKS.

commit 4ab7b16b9573bdfa32279e4adadff684d5cd58ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 12 14:07:36 2009 +0300

    A few grammar fixes.
    
    Thanks to Christian Weisgerber for pointing out some of these.

commit 8905a33daadcd2d6557c83c81c490b827d566c94
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 11 17:08:15 2009 +0300

    Updated THANKS.

commit 68059334ff435300ab1ce2c616b0eee1b0d88dd9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 11 17:06:32 2009 +0300

    Add PACKAGE_HOMEPAGE to {windows,dos}/config.h to fix build errors.

commit 221be761f467da76875247bc02d7a1716682075d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 11 10:24:09 2009 +0300

    Use $(LN_EXEEXT) in symlinks to executables.
    
    This fixes "make install" on operating systems using
    a suffix for executables.
    
    Cygwin is treated specially. The symlink names won't have
    .exe suffix even though the executables themselves have.
    Thanks to Charles Wilson.

commit 18a4233a53d9b82abac7db7d7804684c5fea9c2c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 11 09:25:09 2009 +0300

    Fix a couple of warnings.

commit 429910b2ba67611d8df60d1a9da9641bdb5f82b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 5 18:39:21 2009 +0300

    Add OS/2-specific code to physmem.h.
    
    Also move DJGPP-specific code near the code meant
    for other DOS-like systems.

commit 7aca7b3174bcbba4a4915682ff0cd405d63f5740
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 5 01:21:15 2009 +0300

    Updated THANKS.

commit 60ccb80c9c4a0d771acc5b7d9d6f32b17fed1071
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 5 01:20:29 2009 +0300

    Use sysctl() != -1 instead of !sysctl() to check if
    the function call succeeded.
    
    NetBSD 4.0 returns positive values on success, but
    NetBSD Current and FreeBSD return zero. OpenBSD's
    man page doesn't tell what sysctl() returns on
    success. All these BSDs return -1 on error.
    
    Thanks to Robert Elz and Thomas Klausner.

commit 173368911cf09ab0b03fc4db8f3d4b81d86dce32
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 2 09:43:51 2009 +0300

    Mention in INSTALL that --enable-small doesn't modify CFLAGS.

commit 319a0fd7d7e9ebbb71ca6930abfc20777cb4aacc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 1 20:40:01 2009 +0300

    Refactored option parsing.

commit 25adaaa56e2e51a47a910a8d73452414619a2e53
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 1 20:23:30 2009 +0300

    Fix options parsing bug in xz.
    
    xz used to reject "xz --lzma2=pb=2," while
    "xz --lzma2=pb=2,," worked. Now both work.

commit 5f6dddc6c911df02ba660564e78e6de80947c947
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 1 20:20:19 2009 +0300

    Updated TODO.

commit 655457b9ada5ec7db398c5392e41290f3f332ea8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 31 21:59:25 2009 +0300

    Revert 43f44160b1ddcbf7e5205c37db09b3bebe7226f9
    and use a fix that works on all systems using
    GNU assembler.
    
    Maybe the assembler code is used e.g. on Solaris x86
    but let's worry about it if this doesn't work on it.

commit 162189c3477953805a28f96d3a75cb9ab9417928
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 30 17:29:19 2009 +0300

    Updated THANKS.

commit 2331f5f97af3e5897e23da45d9df3d664099c7f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 30 17:28:52 2009 +0300

    Add more OS/2 specific info to INSTALL.

commit 94c66b3297b3ad307eee93cf6b160e3c43997f11
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 29 14:43:52 2009 +0300

    Use even more hackish way to support thousand separators.
    
    Seems that in addition on Windows and DOS, also OpenBSD
    lacks support for %'d style printf() format strings.
    So far that is the only modern POSIX-like system I know
    with this problem, but after this hack, the thousand
    separator shouldn't be a problem on any system.
    
    Maybe testing if a format string like %'d produces
    reasonable output is invoking undefined behavior on some
    systems, but so far all the problematic systems I've tried
    just print the raw format string (e.g. %'d prints 'd).
    
    Maybe Autoconf test would have been better, but this
    hack works also for cross-compilation, and avoids
    recompilation in case the system libc starts to support
    the thousand separator.

commit 3432e9c6aab851da1227b63dce645d7f190c04d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 29 13:42:56 2009 +0300

    Updated THANKS.

commit 27414daadf5727e8ab942374b5ec1c8990122878
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 29 13:39:21 2009 +0300

    Fix sysctl() usage.
    
    This fixes build on *BSDs and Darwin.
    
    Thanks to Jukka Salmi for the patches.
    Richard Koch reported the problem too.

commit 43f44160b1ddcbf7e5205c37db09b3bebe7226f9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Aug 29 13:35:23 2009 +0300

    Fix x86 assembler on GCC 3.
    
    Thanks to Karl Berry.

commit 682efdc1f9492fdd76c9ce82e7c00ca0768067e8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 18:36:59 2009 +0300

    "make dist" fixes

commit c8c184db1c95bf70f78256ec6237845a57f342af
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 17:08:33 2009 +0300

    Update xz man page date.

commit 9756fce565e98b8fa5fe6ead296d84e7601ec254
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 17:00:22 2009 +0300

    Fix the debug directory.
    
    6a2eb54092fc625d59921a607ff68cd1a90aa898 and
    71f18e8a066a01dda0c8e5508b135ef104e43e4c required
    some changes that weren't applied in debug.

commit 77007a7fb20187fcf3d1dd9839c79ace2d63f2ea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 16:36:40 2009 +0300

    Add missing files to EXTRA_DIST.

commit 04dcbfdeb921e5f361a4487134e91e23fffbe09d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 16:21:22 2009 +0300

    Bumped version to 4.999.9beta.

commit fd7618611a22f42a6913bc8d518c9bbc9252d6b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 16:17:47 2009 +0300

    Updated THANKS.

commit c29e76c0f910fca0a90a50b78d337f6c32623e9d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 16:12:52 2009 +0300

    .xz file format specification 1.0.4 (probably).
    
    Thanks to Christian von Roques, Peter Lawler,
    and Jim Meyering for the fixes.

commit 696d7ee3953beaf4f0ed18e78917ccf300431966
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 15:43:54 2009 +0300

    Require GNU libtool 2.2.

commit 4c3558aa8305a8f8b6c43b8569eb539717ca9e8d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 15:34:45 2009 +0300

    Add "dos" to EXTRA_DIST.

commit 35b29e4424ced5a3ababf132283e519080c7b298
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 15:23:27 2009 +0300

    Updated TODO.

commit 23414377192c21f3f34c84cdfe0ef0fbd06a1dea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 15:17:00 2009 +0300

    Some xz man page improvements.

commit 371b04e19fc9051dbaeec51ec0badec6a1f0699d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 10:41:01 2009 +0300

    Removed doc/bugs.txt.

commit d88c4072b36d3a76f839185799fb1d91037a1b81
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 10:40:25 2009 +0300

    Updated README.
    
    It now includes bug reporting instructions/tips.

commit 92e536d8b8d33a6b12d0802bcd7be4437046f13e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 10:21:18 2009 +0300

    Fix a typo in FAQ.
    
    Thanks to Jim Meyering.
    
    (From now on, I try to always remember to put
    the relevant thanks to commit messages.)

commit 3e2ba8b58585743e59251e69ad2783eb08357079
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 27 10:13:46 2009 +0300

    Updates to liblzma API headers.
    
    Added lzma_nothrow for every function. It adds
    throw() when the header is used in C++ code.
    
    Some lzma_attrs were added or removed.
    
    Lots of comments were improved.

commit 8e8ebc17c535a1f8846718059b48417409c37050
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 18 00:30:09 2009 +0300

    Install faq.txt.

commit b198e770a146e4a41f91a93f0b233713f2515848
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Aug 18 00:26:48 2009 +0300

    Updated faq.txt.
    
    Some questions worth answering were removed, because I
    currently don't have good up to date answers to them.

commit fe111a25cd788d31b581996e4533910388a7f0a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 17 22:45:50 2009 +0300

    Some xz man changes.

commit 10242a21e9abda0c5c6a03501703cc40b8a699a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 16 22:15:42 2009 +0300

    Updated THANKS.

commit 3ce1916c83041113b9cad9ead5c97a527cf8aa1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 16 22:15:13 2009 +0300

    Fix data corruption in LZ/LZMA2 encoder.
    
    Thanks to Jonathan Stott for the bug report.

commit 66da129c8ec33dd66acc92f113f7c1ca740ca81a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 15:15:37 2009 +0300

    Updated INSTALL and PACKAGERS to match the changes
    made in --enable-dynamic.

commit 8238c4b2402f952c4e492e5b778aa272e57b6705
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 15:03:46 2009 +0300

    Link lzmainfo against shared liblzma by default.

commit 71f18e8a066a01dda0c8e5508b135ef104e43e4c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 15:00:21 2009 +0300

    Make --enable-dynamic a tristate option.
    
    Some programs will by default be linked against static
    liblzma and some against shared liblzma. --enable-dynamic
    now allows overriding the default to both directions
    (all dynamic or all static) even when building both
    shared and static liblzma.
    
    This is quite messy compared to how simple thing it is supposed
    to be. The complexity is mostly due to Windows support.

commit 5aa4678b2342dcfc1d2b31aa9fa4f39c539e4b61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 12:56:47 2009 +0300

    Fix xz Makefile.am for the man page.
    
    install-exec-hook -> install-data-hook

commit e51b4e49e800bd84e6d589dca2964d3985e88139
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 12:55:45 2009 +0300

    Add lzmainfo for backward compatibility with LZMA Utils.
    
    lzmainfo now links against static liblzma. In contrast
    to other command line tools in XZ Utils, linking lzmainfo
    against static liblzma by default is dumb. This will be
    fixed once I have fixed some related issues in configure.ac.

commit a4165d0584376d948c213ec93c6065d24ff6a5e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 12:42:36 2009 +0300

    Sync some error messages from xz to xzdec.
    
    Make xz error message translation usable outside
    xz (at least in upcoming lzmainfo).

commit df636eb4e066b4e154ce8e66e82c87ba1db652a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 09:37:21 2009 +0300

    Add xz man page to manfiles in toplevel Makefile.am.

commit 180bdf58ea5bb07941e0a99b304d9aa832198748
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 13 09:37:01 2009 +0300

    Fix first line of xz man page.

commit e1ce2291e759b50ebfcf7cbbcc04cd098f1705a4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Aug 10 11:22:31 2009 +0300

    Added a rough version of the xz man page.

commit a7f5d2fe4826ac68839d00059f05004fb81d5c69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 9 20:57:46 2009 +0300

    GPLv2+ not GPLv2 for Doxyfile.in is probably OK.

commit b735cde20cc14857136ae65a0e5d336ed7ddc862
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 2 00:27:29 2009 +0300

    Added a copyright notice to Doxyfile.in since it contains
    lots of comments from Doxygen.
    
    It seems that the Doxygen authors' intent is to not apply
    their copyright on generated files, but since it doesn't
    matter for XZ Utils at all, better safe than sorry.

commit 0fd157cc008446adfc8f91394f5503868025a642
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 2 00:11:37 2009 +0300

    Updated THANKS.

commit b198da96ff9ac8c89b466b4d196c5f3fe1c7904f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 2 00:10:22 2009 +0300

    Updated TODO.

commit 669413bb2db954bbfde3c4542fddbbab53891eb4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 30 12:25:55 2009 +0300

    Updated THANKS.

commit adbad2d16cb5909f85d4a429011005613ea62ffe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 24 13:15:06 2009 +0300

    Added history.txt to doc_DATA.

commit e0236f12569eb36f9b81ce7a1e52e0f73698ac27
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 24 12:00:40 2009 +0300

    Updated .gitignore files.

commit 2f34fb269265e3aba43a2a9c734020a45268826d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 24 11:34:02 2009 +0300

    Minor improvements to COPYING.

commit 0db1befcfbc120377df4b89923762f16d25f548a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 23 19:10:55 2009 +0300

    Fix incorrect usage of getopt_long(), which caused
    invalid memory access if XZ_OPT was defined.

commit 8f8ec942d6d21ada2096eaf063411bc8bc7e2d48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 20 15:43:32 2009 +0300

    Avoid internal error with --format=xz --lzma1.

commit 99f9e879a6a8bb54a65da99c12e0f390216c152a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 19 13:14:20 2009 +0300

    Major documentation update.
    
    Installation and packaging instructions were added.
    README and other generic docs were revised.
    
    Some of the documentation files are now installed to $docdir.

commit ef4cf1851de89022cba5674784f1a8f6343c15b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 19 11:09:31 2009 +0300

    Added missing author notice to xzless.in.

commit 4c9c989d45b188667799a7a1d6c728ed43f7bf77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 18 18:54:55 2009 +0300

    Use AC_CONFIG_AUX_DIR to clean up the toplevel directory
    a little.
    
    Fixed a related bug in the toplevel Makefile.am.
    
    Added the build-aux directory to .gitignore.

commit 366e436090a7a87215e9bf0e3ddcd55f05b50587
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 18 14:34:08 2009 +0300

    Updated the totally outdated TODO file.

commit 64e498c89d8b9966e8663f43bf64d47c26c55c62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 18 11:26:39 2009 +0300

    Added public domain notice into a few files.

commit a35755c5de808df027675688855d1b621a4fb428
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 14 21:10:36 2009 +0300

    Allow extra commas in filter-specific options on xz command line.
    
    This may slightly ease writing scripts that construct
    filter-specific option strings dynamically.

commit 98f3cac1ad31191c5160a7e48398bf85141e941c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jul 14 18:04:31 2009 +0300

    Accept --lzma2=preset=6e where "e" is equivalent to --extreme
    when no custom chain is in use.

commit d873a09e956363e54bf58c577c8f7e487b6fb464
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 12 19:08:30 2009 +0300

    Add dist-hook to create ChangeLog from the commit log,
    and to conver the man pages to PDF and plain text, which
    may be convenient to those who cannot render man pages.

commit cd69a5a6c16c289f6f8e2823b03c72289472270f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 10 11:39:38 2009 +0300

    BCJ filters: Reject invalid start offsets with LZMA_OPTIONS_ERROR.
    
    This is a quick and slightly dirty fix to make the code
    conform to the latest file format specification. Without
    this patch, it's possible to make corrupt files by
    specifying start offset that is not a multiple of the
    filter's alignment. Custom start offset is almost never
    used, so this was only a minor bug.
    
    The xz command line tool doesn't validate the start offset,
    so one will get a bit unclear error message if trying to use
    an invalid start offset.

commit eed9953732b801f6c97317fb3160445a8754180b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jul 10 11:33:21 2009 +0300

    Look for full command names instead of substrings
    like "un", "cat", and "lz" when determining if
    xz is run as unxz, xzcat, lzma, unlzma, or lzcat.
    
    This is to ensure that if xz is renamed (e.g. via
    --program-transform-name), it doesn't so easily
    work in wrong mode.

commit 6f62fa88f4ff7ba78565c314c0e6e71c498fa658
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 8 23:06:46 2009 +0300

    Updated THANKS.

commit 1754b7e03e2aa7e2e0196807fe8b0f3f5a637b0e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 8 23:05:29 2009 +0300

    Portability improvement to version.sh.

commit 3bdb53792c0e3e3febe9370e56eda5b08f89410f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 8 22:50:16 2009 +0300

    Remove --force from xzdec.
    
    It was ignored for compatibility with xz, but now that
    --decompress --stdout --force copies unrecognized files
    as is to stdout, simply ignoring --force in xzdec would
    be wrong. xzdec will not support copying unrecognized
    data as is to stdout, so it cannot support --force.

commit 5f16ef4abf220028a9ddbcb138217597a9455f62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jul 6 10:36:04 2009 +0300

    Use sed instead of $(SED) so that we don't need to
    use AC_PROG_SED. We don't do anything fancy with sed,
    so this should work OK. libtool 2.2 sets SED but 1.5
    doesn't, so $(SED) happened to work when using libtool 2.2.

commit 96e4b257e101d72072d43e144897d92920270669
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 5 22:25:17 2009 +0300

    Major update to the xzgrep and other scripts based on
    the latest versions found from gzip CVS repository.
    
    configure will try to find a POSIX shell to be used by
    the scripts. This should ease portability on systems
    which have pre-POSIX /bin/sh.
    
    xzgrep and xzdiff support .xz, .lzma, .gz, and .bz2 files.
    xzmore and xzless support only .xz and .lzma files.
    
    The name of the xz executable used in these scripts is
    now correct even if --program-transform-name has been used.

commit 25cc7a6e8c2506a0d80084a4c1c67d33e7439100
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jul 5 19:26:53 2009 +0300

    Use @PACKAGE_HOMEPAGE@ in liblzma.pc.in.

commit 18c10c30d2833f394cd7bce0e6a821044b15832f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jul 4 00:40:44 2009 +0300

    Make "xz --decompress --stdout --force" copy unrecognized
    files as is to standard output.
    
    This feature is needed to be more compatible with gzip's
    behavior. This was more complicated to implement than it
    sounds, because the way liblzma is able to return errors with
    files of only a few bytes in size. xz now has its own file
    type detection code and no longer uses lzma_auto_decoder().

commit 0a289c01ac821ea9c4250aa906b0ae3cfa953633
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jul 2 14:30:38 2009 +0300

    Define PACKAGE_HOMEPAGE in configure.ac and use it in
    xz and xzdec.
    
    Use also PACKAGE_NAME instead of hardcoding "XZ Utils".

commit 5cc99db5bae8633f85559e5cdaef4cd905a4ee9c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jul 1 12:21:24 2009 +0300

    Avoid visibility related compiler warnings on Windows.

commit 7653d1cf48080e63b189ed9d58dea0e82b6b1c5e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 30 17:14:39 2009 +0300

    Use static liblzma by default also for tests.

commit f42ee981668b545ab6d06c6072e262c29605273c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 30 17:09:57 2009 +0300

    Build system fixes
    
    Don't use libtool convenience libraries to avoid recently
    discovered long-standing subtle but somewhat severe bugs
    in libtool (at least 1.5.22 and 2.2.6 are affected). It
    was found when porting XZ Utils to Windows
    <http://lists.gnu.org/archive/html/libtool/2009-06/msg00070.html>
    but the problem is significant also e.g. on GNU/Linux.
    
    Unless --disable-shared is passed to configure, static
    library built from a set of convenience libraries will
    contain PIC objects. That is, while libtool builds non-PIC
    objects too, only PIC objects will be used from the
    convenience libraries. On 32-bit x86 (tested on mobile XP2400+),
    using PIC instead of non-PIC makes the decompressor 10 % slower
    with the default CFLAGS.
    
    So while xz was linked against static liblzma by default,
    it got the slower PIC objects unless --disable-shared was
    used. I tend develop and benchmark with --disable-shared
    due to faster build time, so I hadn't noticed the problem
    in benchmarks earlier.
    
    This commit also adds support for building Windows resources
    into liblzma and executables.

commit 89dac1db6f168d7469cfbc4432651d4724c5c0de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 29 22:19:51 2009 +0300

    Added a comment about "autoconf -fi" to autogen.sh.

commit 6e685aae4594bc0af1b5032e01bb37d0edaa3ebd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 28 10:04:24 2009 +0300

    Add -no-undefined to get shared liblzma on Windows.

commit 73f560ee5fa064992b76688d9472baf139432540
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 22:57:15 2009 +0300

    Make physmem() work on Cygwin 1.5 and older.

commit 7ff0004fbce24ae72eddfe392828ffd7d4639ed1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 17:28:01 2009 +0300

    Moved the Windows resource files outside the windows directory
    to prepare for building them with Autotools.

commit 449c634674f35336a4815d398172e447659a135e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 13:05:03 2009 +0300

    Added missing $(EXEEXT).

commit 792db79f27ad9ab1fb977e23be65c7761f545752
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 12:32:40 2009 +0300

    Create correct symlinks even when
    --program-{prefix,suffix,transform} is passed to configure.

commit 0adc72feb84f5b903f6ad9d3f759b1c326fafc6b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 10:02:24 2009 +0300

    Silence a compiler warning on DOS-like systems.

commit ad12edc95254ede3f0cb8dec8645e8789e984c4f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 09:35:15 2009 +0300

    Updated the filenames in POTFILES.in too.

commit b2b1f867532732fe9969131f8713bdd6b0731763
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jun 27 00:43:06 2009 +0300

    Hopefully improved portability of the assembler code in
    Autotools based builds on Windows.

commit c393055947247627a09b6a6b8f20aa0c32f9be16
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 21:17:29 2009 +0300

    Updated THANKS (most of today's commits are based on
    Charles Wilson's patches).

commit da0af22e4b4139b8a10710945f8b245b3a77c97d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 21:00:35 2009 +0300

    Updated comments to match renamed files.

commit 65014fd211dfbd4be48685998cb5a12aaa29c8d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 20:49:54 2009 +0300

    Rename process.[hc] to coder.[hc] and io.[hc] to file_io.[hc]
    to avoid problems on systems with system headers with those
    names.

commit 5e1257466dcb66f1d7a3f71814a5ad885cba43e8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 20:43:36 2009 +0300

    Rename process_file() to coder_run().

commit cad62551c5fa9865dbe0841a0b3bc729c4fbe8fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 20:36:45 2009 +0300

    Ugly hack to make it possible to use the thousand separator
    format character with snprintf() on POSIX systems but not
    on non-POSIX systems and still keep xgettext working.

commit fe378d47074b16c52b00fe184d119287c68ce2e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 15:40:40 2009 +0300

    Added missing source files to windows/Makefile.

commit 390a6408563067613b29de895cb40e4d0386d62c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 15:37:53 2009 +0300

    Basic support for building with Cygwin and MinGW using
    the Autotools based build system. It's not good yet, more
    fixes will follow.

commit 1c9360b7d1197457aaad2f8888b99f1149861579
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 14:47:31 2009 +0300

    Fix @variables@ to $(variables) in Makefile.am files.
    Fix the ordering of libgnu.a and LTLIBINTL on the linker
    command line and added missing LTLIBINTL to tests/Makefile.am.

commit d45615c555e250209ebb55aa3649abe790f1eeac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 14:20:02 2009 +0300

    Allow to explicitly specify autotool versions in autogen.sh.

commit eaf8367368a329afa48785380f9dca6b681f3397
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 26 14:18:32 2009 +0300

    Add version.sh to EXTRA_DIST.

commit b317b218e2d383dd27a700094c0de4510540ea18
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 24 20:14:10 2009 +0300

    Support HW_PHYSMEM64

commit ae82dde5d9cc60c80cc89601b6c51cc1611d48e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 24 13:01:59 2009 +0300

    Cast a char argument to isspace() to unsigned char.

commit 1735d31ea347210e914df038eeea4b2626e76e42
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 5 13:46:26 2009 +0300

    A few more spelling fixes. Released the .xz spec 1.0.3.

commit 8ed156ce894966103e895aa08f2a9fb912f6fad5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 4 23:42:12 2009 +0300

    Added xzdec man page.

commit f6df39afaa84f71439507178a49b2a5dda6e824c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 4 23:26:47 2009 +0300

    Harmonized xzdec --memory with xz --memory and made
    minor cleanups.

commit 1774f27c61ce294a56712ca2f4785f90a62441bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 4 22:59:55 2009 +0300

    Fix purporse -> purpose. Thanks to Andrew Dudman.
    Released .xz spec 1.0.2 due to this fix too.

commit cb613455642f48fb51059e22018615f64c59b70f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jun 1 14:53:57 2009 +0300

    The .xz file format version 1.0.1

commit 083c23c680ff844846d177cfc58bb7a874e7e6b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 26 14:48:48 2009 +0300

    Make the raw value of the Check field available to applications
    via lzma_block structure.
    
    This changes ABI but not doesn't break API.

commit b4f5c814090dc07d4350453576305e41eb9c998d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 23 16:57:21 2009 +0300

    Remove undocumented alternative option names --bcj, --ppc,
    and --itanium.

commit b1edee2cdc7ef4411b1a21c07094ec763f071281
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 23 15:12:23 2009 +0300

    Add support for specifying the BCJ filter start offset
    in the xz command line tool.

commit 72aa0e9c5f4289f10ef5bf240a9448d3017f1ceb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 23 14:51:09 2009 +0300

    Updated THANKS.

commit dcedb6998cefeca6597dd1219328a3abf5acf66d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 16:40:50 2009 +0300

    Added support for --quiet and --no-warn to xzdec.
    Cleaned up the --help message a little.

commit 5f735dae80aa629853f4831d7b84ec1c614979eb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 15:11:52 2009 +0300

    Use the 40 % of RAM memory usage limit in xzdec too.
    
    Update the memory usage info text in --help to match
    the text in xz --long-help.

commit b60376249e0c586910c4121fab4f791820cc1289
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 14:43:00 2009 +0300

    Add --no-warn.

commit b4f92f522d4b854c0adb7c38be7531e1a6a7b008
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 14:27:40 2009 +0300

    Fix a comment.

commit 4dd21d23f22569285ae706b58b0e5904b8db1839
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 14:21:20 2009 +0300

    Remove the --info option, which was an alias for --list.

commit 8836139b63ce774bdd62abf17ab69b290e08229e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 12:27:43 2009 +0300

    If xz is run as lzma, unlzma, or lzcat, simply imply
    --format=lzma. This means that xz emulating lzma
    doesn't decompress .xz files, while before this
    commit it did. The new way is slightly simpler in
    code and especially in upcoming documentation.

commit b0063023f8adb06ea735ec4af5c6f5b7bdb8e84d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 22 11:29:50 2009 +0300

    Make the default memory usage limit 40 % of RAM for both
    compressing and decompressing. This should be OK now that
    xz automatically scales down the compression settings if
    they would exceed the memory usage limit (earlier, the limit
    for compression was increased to 90 % because low limit broke
    scripts that used "xz -9" on systems with low RAM).
    
    Support spcifying the memory usage limit as a percentage
    of RAM (e.g. --memory=50%).
    
    Support --threads=0 to reset the thread limit to the default
    value (number of available CPU cores). Use UINT32_MAX instead
    of SIZE_MAX as the maximum in args.c. hardware.c was already
    expecting uint32_t value.
    
    Cleaned up the output of --help and --long-help.

commit 071b825b23911a69dd1cd2f8cda004ef8a781fae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu May 21 17:22:01 2009 +0300

    Support special value "max" where xz and xzdec accept an integer.
    Don't round the memory usage limit in xzdec --help to avoid
    an integer overflow and to not give wrong impression that
    the limit is high enough when it may not actually be.

commit a6f43e64128a6da5cd641de1e1e527433b3e5638
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 2 16:10:14 2009 +0300

    Use a GCC-specific #pragma instead of GCC-specific
    -Wno-uninitialized to silence a bogus warning.

commit f6ce63ebdb45a857c8949960c83c9580ae888951
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat May 2 14:46:50 2009 +0300

    Removed --disable-encoder and --disable-decoder. Use the values
    given to --enable-encoders and --enable-decoders to determine
    if any encoder or decoder support is wanted.

commit be06858d5cf8ba46557395035d821dc332f3f830
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 1 11:28:52 2009 +0300

    Remove docs that are too outdated to be updated
    (rewrite will be better).

commit 0255401e57c96af87c6b159eca28974e79430a82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 1 11:21:46 2009 +0300

    Added documentation about the legacy .lzma file format.

commit 1496ff437c46f38303e0e94c511ca604b3a11f85
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 1 11:20:23 2009 +0300

    Renamed the file format specification to xz-file-format.txt
    which is the filename used on the WWW.

commit 21c6b94373d239d7e86bd480fcd558e30391712f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 28 23:08:32 2009 +0300

    Fixed a crash in liblzma.
    
    liblzma tries to avoid useless free()/malloc() pairs in
    initialization when multiple files are handled using the
    same lzma_stream. This didn't work with filter chains
    due to comparison of wrong pointers in lzma_next_coder_init(),
    making liblzma think that no memory reallocation is needed
    even when it actually is.
    
    Easy way to trigger this bug is to decompress two files with
    a single xz command. The first file should have e.g. x86+LZMA2
    as the filter chain, and the second file just LZMA2.

commit e518d167aa5958e469982f4fb3a24b9b6a2b5d1c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 15 14:13:38 2009 +0300

    Fix uint32_t -> size_t in ARM and ARM-Thumb filters.
    
    On 64-bit system it would have gone into infinite
    loop if a single input buffer was over 4 GiB (unlikely).

commit 31decdce041581e57c0d8a407d4795b114ef27ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Apr 14 11:48:46 2009 +0300

    Minor fixes to test files' README.

commit 4787d654434891c7df5b43959b0d2873718f06e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 13 16:36:41 2009 +0300

    Updated history.txt.

commit 2f0bc9cd40f709152a0177c8e585c0757e9af9c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 13 14:49:48 2009 +0300

    Quick & dirty update to support xz in diff/grep/more scripts.

commit 02ddf09bc3079b3e17297729b9e43f14d407b8fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 13 11:27:40 2009 +0300

    Put the interesting parts of XZ Utils into the public domain.
    Some minor documentation cleanups were made at the same time.

commit e79c42d854657ae7f75613bd80c1a35ff7c525cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 10 11:17:02 2009 +0300

    Fix off-by-one in LZ decoder.
    
    Fortunately, this bug had no security risk other than accepting
    some corrupt files as valid.

commit 9bab5336ebd765ec4e12252f416eefdf04eba750
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 31 21:52:51 2009 +0300

    Add a note and work-around instructions to README about
    problems detecting a C99 compiler when some standard
    headers are missing.

commit a0497ff7a06f9350349264fe9b52dfefc6d53ead
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 18 16:54:38 2009 +0200

    Updated THANKS.

commit 390e69887fc5e0a108eb41203bed9acd100a3d76
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 18 16:51:41 2009 +0200

    Fix wrong macro names in lc_cpucores.m4 and cpucores.h.
    Thanks to Bert Wesarg.

commit 0df9299e2478c2a0c62c05b1ae14a85a353e20d6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 1 09:03:08 2009 +0200

    Test for Linux-specific sysinfo() only on Linux systems.
    Some other systems have sysinfo() with different semantics.

commit cf751edfde3ad6e088dc18e0522d31ae38405933
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 1 09:00:06 2009 +0200

    Added AC_CONFIG_MACRO_DIR to configure.ac.

commit 63df14c57dee7c461717784287056688482a7eb9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Mar 1 08:58:41 2009 +0200

    Fix the Autoconf test for getopt_long replacement.
    It was broken by e114502b2bc371e4a45449832cb69be036360722.

commit fd6a380f4eda4f00be5f2aa8d222992cd74a714f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 22 19:07:54 2009 +0200

    Add a rough explanation of --extreme to output of --help.

commit 68bf7ac2984d3627369a240ef0491934d53f7899
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 22 18:52:49 2009 +0200

    Fixes to progress message handling in xz:
    
      - Don't use Windows-specific code on Windows. The old code
        required at least Windows 2000. Now it should work on
        Windows 98 and later, and maybe on Windows 95 too.
    
      - Use less precision when showing estimated remaining time.
    
      - Fix some small design issues.

commit 47c2e21f82242f50f18713a27d644c2c94ab3fea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 18 13:00:10 2009 +0200

    Added files missing from the previous commit.

commit 489a3dbaa0465f04400804e956a1cfbbee3654a2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 17 10:43:00 2009 +0200

    Added lzma_easy_buffer_encode(). Splitted easy.c into small
    pieces to avoid unneeded dependencies making statically
    linked applications bigger than needed.

commit 7494816ab08d82f4d6409788825930c4e43cfd0d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 15 15:48:45 2009 +0200

    Make physmem.h work on old Windows versions.
    Thanks to Hongbo Ni for the original patch.

commit 11ae4ae35fd70182c713f2d914b7cb1143bc76f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 14 20:44:52 2009 +0200

    Fix microsecond vs. nanosecond confusion in my_time().

commit 3084d662d2646ab7eb58daf0dc32cf3f9a74eec7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 14 00:45:29 2009 +0200

    Cleanups to the code that detects the amount of RAM and
    the number of CPU cores. Added support for using sysinfo()
    on Linux systems whose libc lacks appropriate sysconf()
    support (at least dietlibc). The Autoconf macros were
    split into separate files, and CPU core count detection
    was moved from hardware.c to cpucores.h. The core count
    isn't used for anything real for now, so a problematic
    part in process.c was commented out.

commit 9c62371eab2706c46b1072f5935e28cb4cd9dca8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 13 18:23:50 2009 +0200

    Initial port to DOS using DJGPP.

commit 0dae8b7751d09e9c5a482d5519daaee4800ce203
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 13 18:02:05 2009 +0200

    Windows port: Take advantage of the version number macros.
    Now the version number is not duplicated in the
    Windows-specific files anymore.

commit fdbc0cfa71f7d660855098a609175ba384259529
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 13 18:00:03 2009 +0200

    Changed how the version number is specified in various places.
    Now configure.ac will get the version number directly from
    src/liblzma/api/lzma/version.h. The intent is to reduce the
    number of places where the version number is duplicated. In
    future, support for displaying Git commit ID may be added too.

commit 1d924e584b146136989f48c13fff2632896efb3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 13 17:30:30 2009 +0200

    Fix handling of integrity check type in the xz command line tool.

commit 96c46df7deb231ea68a03d8d1da9de4c774e36d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 13 17:29:02 2009 +0200

    Improve support for DOS-like systems.
    Here DOS-like means DOS, Windows, and OS/2.

commit b6a30ee8c2de60ecd722cd05223e4ba72f822e33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 11 20:02:32 2009 +0200

    Remove dead directories from .gitignore.

commit 154f5aec2de201c674841de4fcc9804c2a87af07
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 10 21:48:35 2009 +0200

    Removed Makefile from .gitignore since not all Makefiles
    in the repository are generated by Autotools. People
    should do test builds in a separate build directory anyway.

commit e605c2663691b0a4c307786aa368d124ea081daa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 10 21:48:05 2009 +0200

    Added resource files for the Windows build.

commit a3bbbe05d32b1f7ea9eb98805df4dda2e811b476
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 9 14:54:31 2009 +0200

    Let the user specify custom CFLAGS on the make command
    line. Previously custom CFLAGS worked only when they were
    passed to configure.

commit 53f7598998b1860a69c51243b5d2e34623c6bf60
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 8 21:35:11 2009 +0200

    Fix aliasing issue in physmem.h.

commit 0e27028d74c5c7a8e036ae2a9b8cecb0ac79d3a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 8 18:24:50 2009 +0200

    Add a separate internal function to initialize the CRC32
    table, which is used also by LZ encoder. This was needed
    because calling lzma_crc32() and ignoring the result is
    a no-op due to lzma_attr_pure.

commit ae1ad9af54210c9a2be336b1316532da5071516c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 8 18:17:05 2009 +0200

    Make "xz --force" to write to terminal as the error
    message suggests.

commit 79e25eded48d2fe33f31441ab7a034f902e335f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 8 10:37:50 2009 +0200

    Support both slash and backslash as path component
    separator on Windows when parsing argv[0].

commit bc7c7109cc4410055a888c1c70cbd1c9445c4361
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 23:18:13 2009 +0200

    Omit the wrong and (even if corrected) nowadays useless rm
    from autogen.sh.

commit edfc2031e56f8a2ccda063f02936b3a848d88723
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 21:41:52 2009 +0200

    Updated THANKS.

commit 880c3309386aac58fc4f3d7ca99bd31bcb1526a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 21:17:07 2009 +0200

    Make it easy to choose if command line tools should be
    linked statically or dynamically against liblzma. The
    default is still to use static liblzma, but it can now
    be changed by passing --enable-dynamic to configure.
    Thanks to Mike Frysinger for the original patch.
    
    Fixed a few minor bugs in configure.ac.

commit bd7ca1dad5c146b6217799ffaa230c32d207a3e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 17:07:52 2009 +0200

    Assume 32 MiB of RAM on unsupported operating systems like
    the comment in hardware.c already said.

commit d0ab8c1c73ae712adb0d26fbb9da762d99a63618
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 16:26:58 2009 +0200

    MinGW support: Don't build fastpos_tablegen.c as part of
    liblzma. Build both static and dynamic liblzma, and also
    static and dynamic versions of the command line tools.

commit bfd91198e44a52bd9bfe3cd6dcae5edab7c6eb45
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 15:55:47 2009 +0200

    Support LZMA_API_STATIC in assembler files to
    avoid __declspec(dllexport) equivalent.

commit 3306cf3883492720b3c34baa02f4eb4227d91c73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 7 11:11:50 2009 +0200

    Introduced LZMA_API_STATIC macro, which the applications
    need to #define when linking against static liblzma on
    platforms like Windows. Most developers don't need to
    care about LZMA_API_STATIC at all.

commit b719e63c5f4c91d2d5e2ea585d4c055ec3767d0b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 6 16:55:45 2009 +0200

    Another grammar fix

commit fe5434f940f75fec3611cf9d9edf78c4da8ac760
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 6 12:30:23 2009 +0200

    Grammar fix in README.

commit 3dfa58a9eedf5a0e566452b078801c9cbcf7a245
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 6 10:06:32 2009 +0200

    Some MSYS installations (e.g. MsysGit) don't include
    install.exe, so don't rely on it.

commit 975d8fd72a5148d46b2e1745f7a211cf1dfd9d31
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 6 09:13:15 2009 +0200

    Recreated the BCJ test files for x86 and SPARC. The old files
    were linked with crt*.o, which are copyrighted, and thus the
    old test files were not in the public domain as a whole. They
    are freely distributable though, but it is better to be careful
    and avoid including any copyrighted pieces in the test files.
    The new files are just compiled and assembled object files,
    and thus don't contain any copyrighted code.

commit 094b1b09a531f0d201ec81f2b07346a995fd80b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 5 21:21:27 2009 +0200

    Add the "windows" directory to EXTRA_DIST.

commit e1c3412eec7acec7ca3b32c9c828f3147dc65b49
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 5 09:17:51 2009 +0200

    Added initial experimental makefile for use with MinGW.

commit 75905a9afc0ee89954ede7d08af70d1148bf0fd9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 5 09:12:57 2009 +0200

    Various code cleanups the the xz command line tool.
    It now builds with MinGW.

commit d0c0b9e94e0af59d1d8f7f4829695d6efe19ccfe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 3 12:15:17 2009 +0200

    Another utime() fix.

commit ccf92a29e8c7234284f1568c1ec0fd7cb98356ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Feb 3 10:41:11 2009 +0200

    Fix wrong filename argument for utime() and utimes().
    This doesn't affect most systems, since most systems
    have better functions available.

commit 99c1c2abfae2e87f3c17e929783e6d1bb7a3f302
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 2 21:19:01 2009 +0200

    Updated the x86 assembler code:
      - Use call/ret pair to get instruction pointer for PIC.
      - Use PIC only if PIC or __PIC__ is #defined.
      - The code should work on MinGW and Darwin in addition
        to GNU/Linux and Solaris.

commit 22a0c6dd940b78cdac2f4a4b4b0e7cc0ac15021f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Feb 2 20:14:03 2009 +0200

    Modify LZMA_API macro so that it works on Windows with
    other compilers than MinGW. This may hurt readability
    of the API headers slightly, but I don't know any
    better way to do this.

commit 8dd7b6052e18621e2e6c62f40f762ee88bd3eb65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 1 22:40:35 2009 +0200

    Fix a bug in lzma_block_buffer_decode(), although this
    function should be rewritten anyway.

commit 55fd41431e61fb8178858283d636b6781e33e847
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 1 22:39:07 2009 +0200

    Added initial version of raw buffer-to-buffer coding
    functions, and cleaned up filter.h API header a little.
    May be very buggy, not tested yet.

commit 3e54ecee5cad30a5ca361a88a99230407abc0699
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 1 00:11:20 2009 +0200

    Fix missing newlines in xzdec.c.

commit d64ca34f1b6f34e86adefc7f735b4eff8e6d4a35
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Feb 1 00:10:07 2009 +0200

    Use __cdecl also for function pointers in liblzma API when
    on Windows.

commit 6a2eb54092fc625d59921a607ff68cd1a90aa898
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 31 11:01:48 2009 +0200

    Add LZMA_API to liblzma API headers. It's useful at least
    on Windows. sysdefs.h no longer #includes lzma.h, so lzma.h
    has to be #included separately where needed.

commit d9993fcb4dfc1f93abaf31ae23b3ef1f3123892b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 31 10:13:09 2009 +0200

    Use _WIN32 instead of WIN32 in xzdec.c to test if compiling on Windows.

commit 2dbdc5befb33c3703e4609809101047c67caf343
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 31 10:02:52 2009 +0200

    Fix two lines in lzma.h on which the # wasn't at the
    beginning of the line.

commit 4ab760109106dc04f39dd81c97d50f528d1b51c1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 31 09:55:05 2009 +0200

    Add support for using liblzma headers in MSVC, which has no
    stdint.h or inttypes.h.

commit b2172cf823d3be34cb0246cb4cb32d105e2a34c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 31 08:49:54 2009 +0200

    Fix # -> ## in a macro in lzma.h.

commit 1aae8698746d3c87a93f8398cdde2de9ba1f7208
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 30 18:50:16 2009 +0200

    Updated README.

commit f54bcf6f80d585236bc03ce49f7c73e1abaa17eb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 30 00:29:58 2009 +0200

    Remove dangling crc64_init.c.

commit 982da7ed314398420c38bf154a8f759d5f18b480
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 28 17:16:38 2009 +0200

    The .xz file format specification version 1.0.0 is now
    officially released. The format has been technically the same
    since 2008-11-19, but now that it is frozen, people can start
    using it without a fear that the format will break.

commit c4683a660b4372156bdaf92f0cdc54a58f95ee6f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 28 08:45:59 2009 +0200

    Updated THANKS.

commit 3241317093595db9f79104faafe93cb989c9f858
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 28 08:43:26 2009 +0200

    Fix uninitialized variables in alone_decoder.c. This bug was
    triggered by the previous commit, since these variables were
    not used by anything before support for a preset dictionary.

commit f76e39cf930f888d460b443d18f977ebedea8b2a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 27 18:36:05 2009 +0200

    Added initial support for preset dictionary for raw LZMA1
    and LZMA2. It is not supported by the .xz format or the xz
    command line tool yet.

commit 449b8c832b26c3633f3bec60095e57d2d3ada1f3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 20:09:17 2009 +0200

    Regenerate the CRC tables without trailing blanks.

commit 667481f1aad34e1ed15738e7913a9c7e256b4cf5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 14:34:10 2009 +0200

    Add lzma_block_buffer_decode().

commit 5fb34d8324d3e7e0061df25d0086b64c8726b19d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 14:33:28 2009 +0200

    Add more sanity checks to lzma_stream_buffer_decode().

commit c129748675a5daa8838df92bde32cc04f6ce61ba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 14:33:13 2009 +0200

    Avoid hardcoded constant in easy.c.

commit 1859d22d75e072463db74c25bc3f5a7992e5fdf6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 26 13:06:49 2009 +0200

    Tiny bit better sanity check in block_util.c

commit 2c5fe958e4bbe9b147b10c255955dfe2827fb8e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 25 01:35:56 2009 +0200

    Fix a dumb bug in Block decoder, which made it return
    LZMA_DATA_ERROR with valid data. The bug was added in
    e114502b2bc371e4a45449832cb69be036360722.

commit c81f13ff29271de7293f8af3d81848b1dcae3d19
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 23 22:27:50 2009 +0200

    Added lzma_stream_buffer_decode() and made minor cleanups.

commit 0b3318661ce749550b8531dfd469639a08930391
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 22 12:53:33 2009 +0200

    Fix a comment.

commit 9ec80355a7212a0a2f8c89d98e51b1d8b4e34eec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 20 16:37:27 2009 +0200

    Add some single-call buffer-to-buffer coding functions.

commit d8b58d099340f8f4007b24b211ee41a7210c061c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 20 13:45:41 2009 +0200

    Block encoder cleanups

commit 0c09810cb3635cb575cb54e694d41523e7d0a335
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 20 10:35:15 2009 +0200

    Use LZMA_PROG_ERROR in lzma_code() as documented in base.h.

commit 2f1a8e8eb898f6c036cde55d153ad348bfab3c00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 19 22:53:18 2009 +0200

    Fix handling of non-fatal errors in lzma_code().

commit 4810b6bc25087be872960b9dd1d11ff07735dc88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 19 14:00:33 2009 +0200

    Move some LZMA2 constants to lzma2_encoder.h so that they
    can be used outside lzma2_encoder.c.

commit 00be5d2e09f9c7a6a8563465ad8b8042866817a4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 19 13:52:36 2009 +0200

    Remove dead code.

commit 128586213f77c9bd82b7e9a62927f6d0c3769d85
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 17 14:24:25 2009 +0200

    Beta was supposed to be API stable but I had forgot to rename
    lzma_memlimit_encoder and lzma_memlimit_decoder to
    lzma_raw_encoder_memlimit and lzma_raw_decoder_memlimit. :-(
    Now it is fixed. Hopefully it doesn't cause too much trouble
    to those who already thought API is stable.

commit b056379490be5c584c264a967f0540041a163a1e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 15 14:29:22 2009 +0200

    Updated THANKS.

commit dc8f3be06d54ef6e6cfb5134dd3d25edd08cef89
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 15 14:27:32 2009 +0200

    Fixed a bug in 7z2lzma.bash to make it work with .7z files
    that use something else than 2^n as the dictionary size.
    Thanks to Dan Shechter for the bug report.

commit 8286a60b8f4bd5accfbc9d229d2204bac31994f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 7 18:41:15 2009 +0200

    Use pthread_sigmask() instead of sigprocmask() when pthreads
    are enabled.

commit 4fd43cb3a906f6da2943f69239ee984c4787c9a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 20:01:00 2008 +0200

    Bumped version to 4.999.8beta right after the release
    of 4.999.7beta.

commit 061748f5932719643cda73383db715167d543c22
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 18:59:02 2008 +0200

    Disable Subblock filter from test_compress.sh since it is
    disabled by default in configure.ac.

commit 9c45658ddc8bd4a7819ef8547d3e7ccf73203e78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 17:44:20 2008 +0200

    Disable both Subblock encoder and decoder my default,
    since they are not finished and may have security issues too.

commit b59f1e98f50694cf6a8f1b342fd878feebdb2f88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 17:42:50 2008 +0200

    Update some files in debug directory.

commit d1d17a40d33a9682424ca37282813492f2cba6d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 17:41:46 2008 +0200

    Prepare for 4.999.7beta release.

commit 88d3e6b0b18e24142b6d3b41dc1b84b00c49fef3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 17:15:03 2008 +0200

    Cleaned up some comments in the API headers.

commit 322ecf93c961e45a1da8c4a794a7fdacefcd7f40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 16:29:39 2008 +0200

    Renamed lzma_options_simple to lzma_options_bcj in the API.
    The internal implementation is still using the name "simple".
    It may need some cleanups, so I look at it later.

commit 7eea8bec3abfed883efba66264a1452a1c04f6b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 00:57:27 2008 +0200

    Fixed missing quoting in configure.ac.

commit 28e75f7086dbe9501d926c370375c69dfb1236ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 00:48:23 2008 +0200

    Updated src/liblzma/Makefile.am to use liblzma.pc.in, which
    should have been in the previous commit.

commit 7ed9d943b31d3ee9c5fb2387e84a241ba33afe90
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 31 00:30:49 2008 +0200

    Remove lzma_init() and other init functions from liblzma API.
    Half of developers were already forgetting to use these
    functions, which could have caused total breakage in some future
    liblzma version or even now if --enable-small was used. Now
    liblzma uses pthread_once() to do the initializations unless
    it has been built with --disable-threads which make these
    initializations thread-unsafe.
    
    When --enable-small isn't used, liblzma currently gets needlessly
    linked against libpthread (on systems that have it). While it is
    stupid for now, liblzma will need threads in future anyway, so
    this stupidity will be temporary only.
    
    When --enable-small is used, different code CRC32 and CRC64 is
    now used than without --enable-small. This made the resulting
    binary slightly smaller, but the main reason was to clean it up
    and to handle the lack of lzma_init_check().
    
    The pkg-config file lzma.pc was renamed to liblzma.pc. I'm not
    sure if it works correctly and portably for static linking
    (Libs.private includes -pthread or other operating system
    specific flags). Hopefully someone complains if it is bad.
    
    lzma_rc_prices[] is now included as a precomputed array even
    with --enable-small. It's just 128 bytes now that it uses uint8_t
    instead of uint32_t. Smaller array seemed to be at least as fast
    as the more bloated uint32_t array on x86; hopefully it's not bad
    on other architectures.

commit 5cda29b5665004fc0f21d0c41d78022a6a559ab2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 27 19:40:31 2008 +0200

    Use 28 MiB as memory usage limit for encoding in test_compress.sh.

commit 050eb14d29e2537c014662e83599fd8a77f13c45
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 27 19:32:20 2008 +0200

    Revert a change made in 3b34851de1eaf358cf9268922fa0eeed8278d680
    that was related to LZMA_MODE_FAST. The original code is slightly
    faster although it compresses slightly worse. But since it is fast
    mode, it is better to select the faster version.

commit 4820f10d0f173864f6a2ea7479663b509ac53358
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 27 19:30:19 2008 +0200

    Some xz command line tool improvements.

commit e33194e79d8f5ce07cb4aca909b324ae75098f7e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 27 19:27:49 2008 +0200

    Bunch of liblzma tweaks, including some API changes.
    The API and ABI should now be very close to stable,
    although the code behind it isn't yet.

commit 4d00652e75dd2736aedc3a3a8baff3dd0ea38074
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 18 13:42:52 2008 +0200

    Updated Makefile.am that was missing from the previous commit.

commit 634636fa56ccee6e744f78b0abed76c8940f2f8f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 17 21:49:53 2008 +0200

    Remove the alignment functions for now. Maybe they will
    be added back in some form later, but the current version
    wasn't modular, so it would need fixing anyway.

commit 4fed98417d1687f5eccccb42a133fde3ec81216a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 17 20:11:23 2008 +0200

    xz message handling improvements

commit 653e457e3756ef35e5d1b2be3523b3e4b1e9ee4d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 15 23:26:43 2008 +0200

    Fix a dumb bug in .lzma decoder which was introduced in
    the previous commit. (Probably the previous commit has
    other bugs too, it wasn't tested.)

commit 671a5adf1e844bfdd6fd327016c3c28694493158
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 15 19:39:13 2008 +0200

    Bunch of liblzma API cleanups and fixes.

commit 17781c2c20fd77029cb32e77792889f2f211d69d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 15 14:26:52 2008 +0200

    The LZMA2 decoder fix introduced a bug to LZ decoder,
    which made LZ decoder return too early after dictionary
    reset. This fixes it.

commit f9f2d1e74398500724041f7fb3c38db35ad8c8d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 15 11:20:22 2008 +0200

    Added two new test files.

commit ff7fb2c605bccc411069e07b9f11fb957aea2ddf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 15 10:01:59 2008 +0200

    Fix data corruption in LZMA2 decoder.

commit 1ceebcf7e1bd30b95125f0ad67a09fdb6215d613
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Dec 13 00:54:11 2008 +0200

    Name the package "xz" in configure.ac.

commit a94bf00d0af9b423851905b031be5a645a657820
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 12 22:43:21 2008 +0200

    Some adjustments to GCC warning flags. The important change
    is the removal of -pedantic. It messes up -Werror (which I
    really want to keep so that I don't miss any warnings) with
    printf format strings that are in POSIX but not in C99.

commit 8582d392baacd2cdac07ca60041f8c661323676d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 10 01:31:00 2008 +0200

    Remove obsolete comment.

commit b1ae6dd731ea3636c3c2bfc7aefa71457d3328f1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 10 01:27:15 2008 +0200

    Use "decompression" consistently in --long-help.

commit 1ea9e7f15afd5d3981e2432710e932320597bca9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Dec 10 01:23:58 2008 +0200

    Added preset=NUM to --lzma1 and --lzma2. This makes it easy
    to take a preset as a template and modify it a little.

commit bceb3918dbb21f34976bfdd4c171a81319de71f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 9 17:43:31 2008 +0200

    Put the file format specification into the public domain.
    Same will be done to the actual code later.

commit 6efa2d80d46a38861016f41f0eb6fa2ec9260fe6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 9 17:41:49 2008 +0200

    Make the memusage functions of LZMA1 and LZMA2 encoders
    to validate the filter options. Add missing validation
    to LZMA2 encoder when options are changed in the middle
    of encoding.

commit f20a03206b71ff01b827bb7a932411d6a6a4e06a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 9 10:36:24 2008 +0200

    Updated THANKS.

commit ef7890d56453dca1aeb2e12db29b7e418d93dde4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 23:04:12 2008 +0200

    In command line tool, take advantage of memusage calculation's
    ability to also validate the filter chain and options (not
    implemented yet for all filters).

commit ccd57afa09e332d664d6d6a7498702791ea5f659
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 22:59:28 2008 +0200

    Validate the filter chain before checking filter-specific
    memory usage.

commit c596fda40b62fe1683d0ac34d0c673dcaae2aa15
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 22:58:22 2008 +0200

    Make the memusage functions of LZMA1 and LZMA2 decoders
    to validate the filter options.

commit c58f469be5bb9b0bdab825c6687445fd553f4f3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 22:55:18 2008 +0200

    Added the changes for Delta filter that should have been
    part of 656ec87882ee74b192c4ea4a233a235eca7b04d4.

commit cd708015202dbf7585b84a8781462a20c42a324b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 22:50:28 2008 +0200

    LZMA2 decoder cleanups. Make it require new LZMA properties
    also in the first LZMA chunk after a dictionary reset in
    uncompressed chunk.

commit 656ec87882ee74b192c4ea4a233a235eca7b04d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 1 16:30:11 2008 +0200

    Added lzma_delta_coder_memusage() which also validates
    the options.

commit 691a9155b7a28882baf37e9d1e969e32e91dbc7a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 29 10:03:49 2008 +0200

    Automake includes the m4 directory, so don't add it in
    Makefile.am separately.
    
    Updated THANKS.

commit c7007ddf06ac2b0e018d71d281c21b99f16e7ae0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Nov 28 12:00:48 2008 +0200

    Tested using COLUMNS environment variable to avoid broken
    progress indicator but since COLUMNS isn't usually available,
    the code was left commented out.

commit ae65dcfde27014e4d811e1a1308aa5d0fe8debbd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 27 19:28:59 2008 +0200

    Cleanups to message.c.

commit a8368b75cdcd5427299001cc42839287f27b244d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Nov 25 02:37:47 2008 +0200

    Remove the nowadays unneeded memory limitting malloc() wrapper.

commit 69472ee5f055a2bb6f28106f0923e1461fd1d080
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Nov 23 15:09:03 2008 +0200

    VLI encoder and decoder cleanups. Made encoder return
    LZMA_PROG_ERROR in single-call mode if there's no output
    space.

commit 4249c8c15a08f55b51b7012e6aaafce3aa9eb650
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Nov 22 17:44:33 2008 +0200

    Typo fix

commit 6d1d6f4598d121253dbe1084c6866b66e95c361b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 20 22:59:10 2008 +0200

    Support NetBSD's errno for O_NOFOLLOW.

commit f901a290eef67b8ea4720ccdf5f46edf775ed9d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 20 18:05:52 2008 +0200

    Build xzdec and lzmadec from xzdec.c. xzdec supports only .xz
    files and lzmadec only .lzma files.

commit 86a0ed8f01c8ed44721223f885e679c71b7bb94c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Nov 20 11:01:29 2008 +0200

    Minor cleanups to xzdec.

commit 54f716ba8905d09752dcd1519455a40bd21d5317
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 19 23:55:22 2008 +0200

    Added missing check for uint16_t.

commit 1880a3927b23f265f63b2adb86fbdb81ea09eb06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 19 23:52:24 2008 +0200

    Renamed lzma to xz and lzmadec to xzdec. We create symlinks
    lzma, unlzma, and lzcat in "make install" for backwards
    compatibility with LZMA Utils 4.32.x; I'm not sure if this
    should be the default though.

commit e114502b2bc371e4a45449832cb69be036360722
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Nov 19 20:46:52 2008 +0200

    Oh well, big messy commit again. Some highlights:
      - Updated to the latest, probably final file format version.
      - Command line tool reworked to not use threads anymore.
        Threading will probably go into liblzma anyway.
      - Memory usage limit is now about 30 % for uncompression
        and about 90 % for compression.
      - Progress indicator with --verbose
      - Simplified --help and full --long-help
      - Upgraded to the last LGPLv2.1+ getopt_long from gnulib.
      - Some bug fixes

commit 3c3905b53462ae235c9438d86a4dc51086410932
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 9 11:12:29 2008 +0300

    Fixed the test that should have been fixed as part
    of 1e8e4fd1f3e50129b4541406ad765d2aa1233943.

commit 0f295bf7a3ece01f667caae318cc3e3424085886
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 7 16:42:18 2008 +0300

    Fixed some help messages.

commit 1e8e4fd1f3e50129b4541406ad765d2aa1233943
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Oct 7 09:40:31 2008 +0300

    Made the preset numbering more logical in liblzma API.

commit 5e4df4c3c09c82bbbb1a916784e3dc717ca4ff81
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 3 19:36:09 2008 +0300

    Removed fi from po/LINGUAS.

commit fcfb86c7770328cfffa2e83b176af9a1ba2d9128
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Oct 3 07:06:48 2008 +0300

    Fixed suffix handling with --format=raw.

commit bd137524f2f50e30ba054f42f1f6536cd3cee920
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Oct 2 22:51:46 2008 +0300

    Initial changes to change the suffix of the new format to .xz.
    This also fixes a bug related to --suffix option. Some issues
    with suffixes with --format=raw were not fixed.

commit 4c321a41c482821aa3c4d64cdf886a6ed904d844
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 30 17:43:55 2008 +0300

    Renamed the test files from .lzma suffix to .xz suffix.

commit 8e60c889a2816a63013a35c99ce26bf28f5b78eb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 30 13:57:44 2008 +0300

    Fixed Stream decoder to actually use the first_stream variable.

commit 3bdbc12c054d1961133ee19802af7dd3c3494543
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 30 13:56:57 2008 +0300

    Added one more test file.

commit a6639022fdc536e5659b070a465221b4cf7c51fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 30 13:34:07 2008 +0300

    Fixed uninitialized variable in Stream decoder.

commit ed3709000a3f17ecefab29b2235d7e2221b00003
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 30 13:27:28 2008 +0300

    Added two test files.

commit ea560b0ea80525752bdcd0074d24f8dc170bbe29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 23:49:24 2008 +0300

    Fix conflicting Subblock helper filter's ID.

commit ad97483b6e55142fd8d5c041db057017a891cd95
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 23:37:13 2008 +0300

    Changed magic bytes to match the updated spec. Filename
    suffix wasn't changed yet.

commit 7a57069167e9e63394e2b095ee3a63253fcb51c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 23:16:09 2008 +0300

    Remove po/fi.po since I'm not keeping it updated for now.

commit 018ae09df8f2fee5a7374f307df4cb42fad0b81e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 23:13:54 2008 +0300

    Fix also test_compress.sh.

commit 3a62a5fb85d2eebd8666e64ed5d364d095062858
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 23:01:15 2008 +0300

    Fixed compilation of test_filter_flags.c, which was broken by
    1dcecfb09b55157b8653d747963069c8bed74f04.

commit c6ca26eef7cd07eba449035514e2b8f9ac3111c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 19:11:02 2008 +0300

    Updated file format specification. It changes the suffix
    of the new format to .xz and removes the recently added
    LZMA filter.

commit 1dcecfb09b55157b8653d747963069c8bed74f04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 19:09:21 2008 +0300

    Some API changes, bug fixes, cleanups etc.

commit 5cc5064cae603b649c64c40125c7dd365de54c9d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 27 11:28:49 2008 +0300

    Added 7z2lzma.bash.

commit f147666a5cd15542d4e427da58629f4a71cc38e1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 17 22:11:39 2008 +0300

    Miscellaneous LZ and LZMA encoder cleanups

commit 13d68b069849e19c33822cd8996cd6447890abb1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 13 13:54:00 2008 +0300

    LZ decoder cleanup

commit 13a74b78e37f16c9096ba5fe1859cc04eaa2f9f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 13 12:10:43 2008 +0300

    Renamed constants:
      - LZMA_VLI_VALUE_MAX -> LZMA_VLI_MAX
      - LZMA_VLI_VALUE_UNKNOWN -> LZMA_VLI_UNKNOWN
      - LZMA_HEADER_ERRRO -> LZMA_OPTIONS_ERROR

commit 320601b2c7b08fc7da9da18d5bf7c3c1a189b080
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Sep 12 22:41:40 2008 +0300

    Improved the Stream Flags handling API.

commit ec490da5228263b25bf786bb23d1008468f55b30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 23:10:44 2008 +0300

    Simplified debug/known_sizes.c to match the relaxed
    requirements of Block encoder.

commit 16e8b98f2659347edfa74afdbbb9e73311153cb9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 23:09:24 2008 +0300

    Remove a check from Block encoder that should have already
    been removed in 2ba01bfa755e47ff6af84a978e3c8d63d7d2775e.

commit 5a710c3805bdf6d7e3c92e954e4e4565b27bcb13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 20:02:38 2008 +0300

    Remove bogus #includes.

commit 01892b2ca5f69bed0ea746e04b604030d57806bb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 10:49:14 2008 +0300

    Updated THANKS.

commit 962f2231d49409fe6852e44ffe8c5dbabb04bc7d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 10:48:12 2008 +0300

    Fix a compiler error on big endian systems that don't
    support unaligned memory access.

commit fa3ab0df8ae7a8a1ad55b52266dc0fd387458671
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 11 10:46:14 2008 +0300

    Silence a compiler warning.

commit 9373e81e18822db4972819442ea4c2cb9955470b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 10 19:16:32 2008 +0300

    Bumped version to 4.999.6alpha.

commit cb072b7c8442ba68bb0c62c0abbbe939794887a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 10 17:02:00 2008 +0300

    Check for LZMA_FILTER_RESERVED_START in filter_flags_encoder.c.
    Use LZMA_PROG_ERROR instead of LZMA_HEADER_ERROR if the Filter ID
    is in the reserved range. This allows Block Header encoder to
    detect unallowed Filter IDs, which is good for Stream encoder.

commit 123ab0acec435c9e9866a99e30482116cfbd9ba5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 10 16:44:32 2008 +0300

    Filter handling cleanups

commit 9cfcd0c4f2f865d8fbbb46ea28344a9be0dd8ad1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 10 00:33:00 2008 +0300

    Comments

commit 2ba01bfa755e47ff6af84a978e3c8d63d7d2775e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 10 00:27:02 2008 +0300

    Cleaned up Block encoder and moved the no longer shared
    code from block_private.h to block_decoder.c. Now the Block
    encoder doesn't need compressed_size and uncompressed_size
    from lzma_block structure to be initialized.

commit 07efcb5a6bc5d7018798ebd728586f84183e7d64
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Sep 7 10:23:13 2008 +0300

    Changed Filter ID of LZMA to 0x20.

commit 32fe5fa541e82c08e054086279079ae5016bd8d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 6 23:42:50 2008 +0300

    Comments

commit 0a31ed9d5e3cde4feb094b66f3a8b2c074605d84
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Sep 6 15:14:30 2008 +0300

    Some API cleanups

commit da98df54400998be2a6c3876f9655a3c51b93c10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 4 11:53:06 2008 +0300

    Added support for raw encoding and decoding to the command
    line tool, and made various cleanups. --lzma was renamed to
    --lzma1 to prevent people from accidentally using LZMA when
    they want LZMA2.

commit 2496aee8a7741a8a0d42987db41ff2cf1a4bdabd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Sep 4 10:39:15 2008 +0300

    Don't allow LZMA_SYNC_FLUSH with decoders anymore. There's
    simply nothing that would use it. Allow LZMA_FINISH to the
    decoders, which will usually ignore it (auto decoder and
    Stream decoder being exceptions).

commit bea301c26d5d52675e11e0236faec0492af98f60
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Sep 3 17:06:25 2008 +0300

    Minor updates to the file format specification.

commit 9c75b089b4a9e0edcf4cf7970a4383768707d6c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 2 19:33:32 2008 +0300

    Command line tool fixes

commit bab0590504b5aeff460ab4ca8c964dd7c1bad9e4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 2 19:31:42 2008 +0300

    Auto decoder cleanup

commit 689602336d126a46b60d791a67decab65e1e81f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 2 19:12:12 2008 +0300

    Updated auto decoder to handle LZMA_CONCATENATED when decoding
    LZMA_Alone files. Decoding of concatenated LZMA_Alone files is
    intentionally not supported, so it is better to put this in
    auto decoder than LZMA_Alone decoder.

commit 80c4158f19904026433eb6f5d5ca98a0ecd4f66c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 2 14:56:52 2008 +0300

    Stream decoder cleanups

commit fc681657450ce57be1fe08f7a15d31dcc705e514
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Sep 2 11:45:39 2008 +0300

    Some fixes to LZ encoder.

commit ede675f9ac1ca82a7d7c290324adba672118bc8d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Aug 31 11:47:01 2008 +0300

    Fix wrong pointer calculation in LZMA encoder.

commit 3b34851de1eaf358cf9268922fa0eeed8278d680
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Aug 28 22:53:15 2008 +0300

    Sort of garbage collection commit. :-| Many things are still
    broken. API has changed a lot and it will still change a
    little more here and there. The command line tool doesn't
    have all the required changes to reflect the API changes, so
    it's easy to get "internal error" or trigger assertions.

commit 57b9a145a527f0716822615e5ed536d33aebd3fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 20 17:16:32 2008 +0300

    Fix test_filter_flags to match the new restriction of lc+lp.

commit eaafc4367c77ec1d910e16d11b4da293969d97a3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jun 20 16:19:54 2008 +0300

    Remove some redundant code from LZMA encoder.

commit 0809c46534fa5664fe35d9e98d95e87312ed130e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jun 19 16:35:08 2008 +0300

    Add limit of lc + lp <= 4. Now we can allocate the
    literal coder as part of the main LZMA encoder or
    decoder structure.
    
    Make the LZMA decoder to rely on the current internal API
    to free the allocated memory in case an error occurs.

commit d25ab1b96178f06a0e724f58e3cd68300b2b1275
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 21:45:19 2008 +0300

    Comments

commit 6368a2fa5901c75864be5171dd57a50af7adbb41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 19:19:02 2008 +0300

    Delete old code that was supposed to be already deleted
    from test_block_header.c.

commit 7d17818cec8597f847b0a2537fde991bbc3d9e96
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 18 18:02:10 2008 +0300

    Update the code to mostly match the new simpler file format
    specification. Simplify things by removing most of the
    support for known uncompressed size in most places.
    There are some miscellaneous changes here and there too.
    
    The API of liblzma has got many changes and still some
    more will be done soon. While most of the code has been
    updated, some things are not fixed (the command line tool
    will choke with invalid filter chain, if nothing else).
    
    Subblock filter is somewhat broken for now. It will be
    updated once the encoded format of the Subblock filter
    has been decided.

commit bf6348d1a3ff09fdc06940468f318f75ffa6af11
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 17 15:03:46 2008 +0300

    Update the file format specification draft. The new one is
    a lot simpler than the previous versions, but it also means
    that the existing code will change a lot.

commit 803194ddd26f01ff60ba4e9924c6087a56b29827
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 11 21:42:47 2008 +0300

    Fix uninitialized variable in LZMA encoder. This was
    introduced in 369f72fd656f537a9a8e06f13e6d0d4c242be22f.

commit 0ea98e52ba87453497b1355c51f13bad55c8924a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jun 11 15:08:44 2008 +0300

    Improve command line integer parsing a little in lzma and
    lzmadec to make them accept also KiB in addition Ki etc.
    Fix also memory usage information in lzmadec --help.

commit 436fa5fae96d4e35759aed33066060f09ee8c6ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jun 10 20:36:12 2008 +0300

    s/decompressed/compressed/ in the command line tool's
    error message.

commit 369f72fd656f537a9a8e06f13e6d0d4c242be22f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jun 1 12:48:17 2008 +0300

    Fix a buffer overflow in the LZMA encoder. It was due to my
    misunderstanding of the code. There's no tiny fix for this
    problem, so I also cleaned up the code in general.
    
    This reduces the speed of the encoder 2-5 % in the fastest
    compression mode ("lzma -1"). High compression modes should
    have no noticeable performance difference.
    
    This commit breaks things (especially LZMA_SYNC_FLUSH) but I
    will fix them once the new format and LZMA2 has been roughly
    implemented. Plain LZMA won't support LZMA_SYNC_FLUSH at all
    and won't be supported in the new .lzma format. This may
    change still but this is what it looks like now.
    
    Support for known uncompressed size (that is, LZMA or LZMA2
    without EOPM) is likely to go away. This means there will
    be API changes.

commit e55e0e873ce2511325749d415ae547d62ab5f00d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri May 30 11:53:41 2008 +0300

    Typo fixes from meyering.

commit ed6664146fcbe9cc4a3b23b31632182ed812ea93
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 11 14:24:42 2008 +0300

    Remove support for pre-C89 libc versions that lack memcpy,
    memmove, and memset.

commit b09464bf9ae694afc2d1dc26188ac4e2e8af0a63
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 11 14:17:21 2008 +0300

    Improved C99 compiler detection in configure.ac. It will
    pass -std=gnu99 instead of -std=c99 to GCC now, but -pedantic
    should still give warnings about GNU extensions like before
    except with some special keywords like asm().

commit 11de5d5267f7a0a7f0a4d34eec147e65eaf9f9cf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 6 15:15:07 2008 +0300

    Bunch of grammar fixes from meyering.

commit dc192b6343ae36276c85fcf7ef6006147816eadc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue May 6 13:41:05 2008 +0300

    Typo fix

commit 944b62b93239b27b338d117f2668c0e95849659b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun May 4 22:29:27 2008 +0300

    Don't print an error message on broken pipe unless --verbose
    is used.

commit 8e074349e47ea6832b8fdf9244e581d453733433
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Apr 30 22:16:17 2008 +0300

    Fix a crash with --format=alone if other filters than LZMA
    are specified on the command line.

commit 2f361ac19b7fd3abcd362de4d470e6a9eb495b73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 28 17:08:27 2008 +0300

    Updated THANKS.

commit 3be21fb12f4cec2cf07799e8960382f4cb375369
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Apr 28 17:06:34 2008 +0300

    Fixed wrong spelling "limitter" to "limiter". This affects
    liblzma's API.

commit beeb81060821dfec4e7898e0d44b7900dcb2215e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 15:39:50 2008 +0300

    Prevent LZ encoder from hanging with known uncompressed
    size. The "fix" breaks LZMA_SYNC_FLUSH at end of stream
    with known uncompressed size, but since it currently seems
    likely that support for encoding with known uncompressed
    size will go away anyway, I'm not fixing this problem now.

commit c324325f9f13cdeb92153c5d00962341ba070ca2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 13:58:56 2008 +0300

    Removed src/liblzma/common/sysdefs.h symlink, which was
    annoying, because "make dist" put two copies of sysdefs.h
    into the tarball instead of the symlink.

commit d3ba30243c75c13d094de1793f9c58acdbacc692
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 13:41:29 2008 +0300

    Added memusage.c to debug directory.

commit 8f804c29aa8471ccd6438ddca254092b8869ca52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Apr 25 13:32:35 2008 +0300

    Bumped version number to 4.999.3alpha. It will become 5.0.0
    once we have a stable release (won't be very soon). The
    version number is no longer related to version of LZMA SDK.
    
    Made some small Automake-related changes to toplevel
    Makefile.am and configure.ac.

commit c99037ea10f121cbacf60c37a36c29768ae53447
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 20:25:39 2008 +0300

    Fix a memory leak by calling free(extra->data) in
    lzma_extra_free().

commit 22ba3b0b5043fa481903482ce85015fe775939e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 20:23:05 2008 +0300

    Make unlzma and lzcat symlinks.

commit 17c36422d4cbc2c70d5c83ec389406f92cd9e85e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 20:20:27 2008 +0300

    Fixed a bug in command line option parsing.

commit 283f939974c32c47f05d495e8dea455ec646ed64
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 20:19:20 2008 +0300

    Added two assert()s.

commit eb348a60b6e19a7c093f892434f23c4756973ffd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 19:22:53 2008 +0300

    Switch to uint16_t as the type of range coder probabilities.

commit 6c5306e312bcfd254cf654f88c04e34ba786df3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 18:39:57 2008 +0300

    Fix wrong return type (uint32_t -> bool).

commit 712cfe3ebfd24df24d8896b1315c53c3bc4369c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 18:38:00 2008 +0300

    Fix data corruption in LZ encoder with LZMA_SYNC_FLUSH.

commit bc04486e368d20b3027cde625267762aae063965
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 17:33:01 2008 +0300

    Fix fastpos problem in Makefile.am when built with --enable-small.

commit 7ab493924e0ed590a5121a15ee54038d238880d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Apr 24 17:30:51 2008 +0300

    Use 64-bit integer as range encoder's cache size. This fixes a
    theoretical data corruption, which should be very hard to trigger
    even intentionally.

commit 641998c3e1ecc8b598fe0eb051fab8b9535c291b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 24 16:38:40 2008 +0200

    Replaced the range decoder optimization that used arithmetic
    right shift with as fast version that doesn't need
    arithmetic right shift. Removed the related check from
    configure.ac.

commit ad999efd279d95f1e7ac555b14170e8e9020488c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 22 14:39:34 2008 +0200

    Take advantage of arithmetic right shift in range decoder.

commit 03e0e8a0d7228b6ff1f0af39e2c040a4e425973d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 22 14:18:29 2008 +0200

    Added autoconf check to detect if we can use arithmetic
    right shift for optimizations.

commit 7521bbdc83acab834594a22bec50c8e1bd836298
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 22 01:26:36 2008 +0200

    Update a comment to use the variable name rep_len_decoder.
    
    (And BTW, the previous commit actually did change the
    program logic slightly.)

commit 63b74d000eedaebb8485f623e56864ff5ab71064
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Mar 22 00:57:33 2008 +0200

    Demystified the "state" variable in LZMA code. Use the
    word literal instead of char for better consistency.
    There are still some names with _char instead of _literal
    in lzma_optimum, these may be changed later.
    
    Renamed length coder variables.
    
    This commit doesn't change the program logic.

commit e6eb0a26757e851cef62b9440319a8e73b015cb9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 14 23:16:11 2008 +0200

    Fix data corruption in LZMA encoder. Note that this bug was
    specific to liblzma and was *not* present in LZMA SDK.

commit 7d516f5129e4373a6d57249d7f608c634c66bf12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Mar 14 21:32:37 2008 +0200

    Fix a comment API header.

commit 748d6e4274921a350bd0a317380309717441ef9c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Mar 12 23:14:50 2008 +0200

    Make lzma_stream.next_in const. Let's see if anyone complains.

commit bfde3b24a5ae25ce53c854762b6148952386b025
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 11 15:35:34 2008 +0200

    Apply a minor speed optimization to LZMA decoder.

commit f310c50286d9e4e9c6170bb65348c9bb430a65b4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Mar 11 15:17:16 2008 +0200

    Initialize the last byte of the dictionary to zero so that
    lz_get_byte(lz, 0) returns zero. This was broken by
    1a3b21859818e4d8e89a1da99699233c1bfd197d.

commit 5ead36cf7f823093672a4e43c3180b38c9abbaff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 10 15:57:55 2008 +0200

    Really fix the price count initialization.

commit d4d7feb83d1a1ded8f662a82e21e053841ca726c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 10 13:47:17 2008 +0200

    Updated THANKS.

commit 0541c5ea63ef3c0ff85eeddb0a420e56b0c65258
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 10 13:46:48 2008 +0200

    Initialize align_price_count and match_price_count in
    lzma_encoder_init.c. While we don't call
    fill_distances_prices() and fill_align_prices() in
    lzma_lzma_encoder_init(), we still need to initialize
    these two variables so that the fill functions get
    called in lzma_encoder_getoptimum.c in the beginning
    of a stream.

commit 596fa1fac72823e4ef5bc26bb53f9090445bf748
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 10 13:44:29 2008 +0200

    Always initialize lz->temp_size in lz_decoder.c. temp_size did
    get initialized as a side-effect after allocating a new decoder,
    but not when the decoder was reused.

commit 45e43e169527e7a98a8c8a821d37bf25822b764d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Mar 10 13:41:25 2008 +0200

    Don't fill allocated memory with 0xFD when debugging is
    enabled. It hides errors from Valgrind.

commit c0e19e0662205f81a86da8903cdc325d50635870
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Feb 28 10:24:31 2008 +0200

    Remove two redundant validity checks from the LZMA decoder.
    These are already checked elsewhere, so omitting these
    gives (very) tiny speed up.

commit de7485806284d1614095ae8cb2ebbb5d74c9ac45
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Feb 6 13:25:32 2008 +0200

    Tiny clean up to file-format.txt.

commit 1a3b21859818e4d8e89a1da99699233c1bfd197d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Feb 2 14:51:06 2008 +0200

    Don't memzero() the history buffer when initializing LZ
    decoder. There's no danger of information leak here, so
    it isn't required. Doing memzero() takes a lot of time
    with large dictionaries, which could make it easier to
    construct DoS attack to consume too much CPU time.

commit 7e796e312bf644ea95aea0ff85480f47cfa30fc0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 1 08:39:26 2008 +0200

    Do uncompressed size validation in raw encoder. This way
    it gets done for not only raw encoder, but also Block
    and LZMA_Alone encoders.

commit 7dd48578a3853e0cfab9f1830bc30927173ec4bc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Feb 1 08:32:05 2008 +0200

    Avoid unneeded function call in raw_common.c.

commit b596fac963c3ff96f615d4d9b427a213ec341211
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 21:42:38 2008 +0200

    Updated THANKS.

commit e9f6e9c075ad93141a568d94f7d4eb0f2edbd6c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 21:40:23 2008 +0200

    Added note.GNU-stack to x86 assembler files. It is needed
    when using non-executable stack.

commit 4c7ad179c78f97f68ad548cb40a9dfa6871655ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 19:12:50 2008 +0200

    Added api/lzma/easy.h. I had forgot to add this to the
    git repo. Thanks to Stephan Kulow.

commit 288b232f54c3692cd36f471d4042f51daf3ea79f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 11:09:17 2008 +0200

    Added more test files.

commit c467b0defccf233d0c79234407bc38d7d09574d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 10:47:55 2008 +0200

    Added more test files.

commit f9842f712732c482f2def9f24437851e57dd83f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 26 00:25:34 2008 +0200

    Return LZMA_HEADER_ERROR if LZMA_SYNC_FLUSH is used with any
    of the so called simple filters. If there is demand, limited
    support for LZMA_SYNC_FLUSH may be added in future.
    
    After this commit, using LZMA_SYNC_FLUSH shouldn't cause
    undefined behavior in any situation.

commit e988ea1d1a286dd0f27af0657f9665d5cd8573aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 25 23:50:35 2008 +0200

    Added more Multi-Block test files. Improved some
    descriptions in the test files' README.

commit 4441e004185cd4c61bda184010eca5924c9dec87
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 25 23:12:36 2008 +0200

    Combine lzma_options_block validation needed by both Block
    encoder and decoder, and put the shared things to
    block_private.h. Improved the checks a little so that
    they may detect too big Compressed Size at initialization
    time if lzma_options_block.total_size or .total_limit is
    known.
    
    Allow encoding and decoding Blocks with combinations of
    fields that are not allowed by the file format specification.
    Doing this requires that the application passes such a
    combination in lzma_options_lzma; liblzma doesn't do that,
    but it's not impossible that someone could find them useful
    in some custom file format.

commit bf4200c818fcf9102e56328d39cde91bfa13cfb6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 25 19:21:22 2008 +0200

    Added test_memlimit.c.

commit 7b8fc7e6b501a32a36636dac79ecb57099269005
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 25 19:20:28 2008 +0200

    Improved the memory limitter:
      - Added lzma_memlimit_max() and lzma_memlimit_reached()
        API functions.
      - Added simple estimation of malloc()'s memory usage
        overhead.
      - Fixed integer overflow detection in lzma_memlimit_alloc().
      - Made some white space cleanups and added more comments.
    
    The description of lzma_memlimit_max() in memlimit.h is bad
    and should be improved.

commit e0c3d0043da2f670cfdb1abbb3223d5a594ad8db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 25 13:55:52 2008 +0200

    Use more parenthesis in succeed() macro in tests/tests.h.

commit 1fd76d488179580d37f31ee11948f4932aed31fd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 24 14:49:34 2008 +0200

    Added more Multi-Block Stream test files.

commit 6e27b1098a28f4ce09bfa6df68ad94182dfc2936
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 24 00:46:05 2008 +0200

    Added bunch of test files containing Multi-Block Streams.

commit db9df0a9609c01a00a227329fb96e983971040f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 23:43:00 2008 +0200

    Fix decoding of empty Metadata Blocks, that don't have
    even the Metadata Flags field. Earlier the code allowed
    such files; now they are prohibited as the file format
    specification requires.

commit 765f0b05f6e95ed9194fb90819cee189ebbac36b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 23:38:18 2008 +0200

    Fix a bug related to 99e12af4e2b866c011fe0106cd1e0bfdcc8fe9c6.
    lzma_metadata.header_metadata_size was not properly set to
    zero if the Metadata had only the Metadata Flags field.

commit 3a7cc5c3dec7b078941f961b0393b86c418883b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 23:35:49 2008 +0200

    Fix decoding of Extra Records that have empty Data.

commit e5fdec93e273855c1bcc2579b83cfb481a9a1492
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 22:02:38 2008 +0200

    Add the trailing '\0' to lzma_extra.data as the API header
    already documents.

commit ed40dc5a2c28a8dfccab8c165b3780738eeef93e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 21:21:21 2008 +0200

    Added debug/full_flush.c.

commit ae0cd09a666a1682da8fc09487322227679e218d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 21:05:33 2008 +0200

    Return LZMA_STREAM_END instead of LZMA_OK if
    LZMA_SYNC_FLUSH or LZMA_FULL_FLUSH is used when
    there's no unfinished Block open.

commit 0e80ded13dfceb98f9494cbb5381a95eb44d03db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 20:05:01 2008 +0200

    Added bad-single-none-footer_filter_flags.lzma and
    bad-single-none-too_long_vli.lzma.

commit 8c8eb14055d8dd536b1b1c58fb284d34bb8ed1dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 13:42:35 2008 +0200

    Fixed a typo.

commit 980f65a9a10160c4d105767871e3002b9aaba3e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 13:40:45 2008 +0200

    Fix a memory leak in the Subblock encoder.

commit 99e12af4e2b866c011fe0106cd1e0bfdcc8fe9c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 13:36:07 2008 +0200

    Fix Size of Header Metadata Block handling. Now
    lzma_metadata.header_metadata_size == LZMA_VLI_VALUE_UNKNOWN
    is not allowed at all. To indicate missing Header Metadata
    Block, header_metadata_size must be set to zero. This is
    what Metadata decoder does after this patch too.
    
    Note that other missing fields in lzma_metadata are still
    indicated with LZMA_VLI_VALUE_UNKNOWN. This isn't as
    illogical as it sounds at first, because missing Size of
    Header Metadata Block means that Header Metadata Block is
    not present in the Stream. With other Metadata fields,
    a missing field means only that the value is unknown.

commit 58b78ab20c1bcced45cf71ae6684868fc90b4b81
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 13:15:55 2008 +0200

    Fix a memory leak in metadata_decoder.c.

commit 4d8cdbdab44400fd98f0f18a0f701e27cd1acdae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 13:13:58 2008 +0200

    Fix the fix 863028cb7ad6d8d0455fa69348f56b376d7b908f which
    just moved to problem. Now it's really fixed.

commit 67321de963ccf69410b3868b8e31534fe18a90de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 00:21:04 2008 +0200

    Take advantage of return_if_error() macro in
    lzma_info_metadata_set() in info.c.

commit 863028cb7ad6d8d0455fa69348f56b376d7b908f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 23 00:18:32 2008 +0200

    Fixed a dangling pointer that caused invalid free().

commit cf49f42a6bd40143f54a6b10d6e605599e958c0b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 22 22:49:24 2008 +0200

    Added lzma_easy_* functions. These should make using
    liblzma as easy as using zlib, because the easy API
    don't require developers to know any fancy LZMA options.
    
    Note that Multi-Block Stream encoding is currently broken.
    The easy API should be OK, the bug(s) are elsewhere.

commit 1747b85a43abc1c3f152dbd349be2ef4089ecf6a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 22 21:16:22 2008 +0200

    Fix Multi-Block Stream encoder's EOPM usage.

commit 0ed6f1adcea540fb9593ca115d36de537f7f0dc6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 22 00:15:11 2008 +0200

    Made lzma_extra pointers const in lzma_options_stream.

commit 305afa38f64c75af8e81c4167e2d8fa8d85b53a4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 20 20:15:21 2008 +0200

    Updated debug/sync_flush.c.

commit d53e9b77054cfade6a643e77d085273a348b189c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 20 20:14:26 2008 +0200

    Added debug/repeat.c.

commit 107259e306bcfc2336a0fb870fb58034c28faa52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 20 20:12:58 2008 +0200

    Fix alignment handling bugs in Subblock encoder.
    
    This leaves one known alignment bug unfixed: If repeat count
    doesn't fit into 28-bit integer, the encoder has to split
    this to multiple Subblocks with Subblock Type `Repeating Data'.
    The extra Subblocks may have wrong alignment. Correct alignment
    is restored after the split Repeating Data has been completely
    written out.
    
    Since the encoder doesn't even try to fix the alignment unless
    the size of Data is at least 4 bytes, to trigger this bug you
    need at least 4 GiB of repeating data with sequence length of
    4 or more bytes. Since the worst thing done by this bug is
    misaligned data (no data corruption), this bug simply isn't
    worth fixing, because a proper fix isn't simple.

commit e141fe18950400faaa3503ff88ac20eacd73e88c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 19 21:16:33 2008 +0200

    Implemented LZMA_SYNC_FLUSH support to the Subblock encoder.
    The API for handing Subfilters was changed to make it
    consistent with LZMA_SYNC_FLUSH.
    
    A few sanity checks were added for Subfilter handling. Some
    small bugs were fixed. More comments were added.

commit 23c227a864a3b69f38c6a74306161d4e6918d1cc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 19 15:19:21 2008 +0200

    Revised the Delta filter implementation. The initialization
    function is still shared between encoder and decoder, but the
    actual coding is in separate files for encoder and decoder.
    
    There are now separate functions for the actual delta
    calculation depending on if Delta is the last filter in the
    chain or not. If it is the last, the new code copies the
    data from input to output buffer and does the delta
    calculation at the same time. The old code first copied the
    data, then did the delta in the target buffer, which required
    reading through the data twice.
    
    Support for LZMA_SYNC_FLUSH was added to the Delta encoder.
    This doesn't change anything in the file format.

commit 61dc82f3e306b25ce3cd3d529df9ec7a0ec04b73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 20:18:08 2008 +0200

    Added the debug directory and the first debug tool
    (sync_flush). These tools are not built unless the
    user runs "make" in the debug directory.

commit 0ae3208db94585eb8294b97ded387de0a3a07646
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 20:13:00 2008 +0200

    Added test files to test usage of flush marker in LZMA.

commit ab5feaf1fcc146ef9fd39360c53c290bec39524e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 20:02:52 2008 +0200

    Fix LZMA_SYNC_FLUSH handling in LZ and LZMA encoders.
    That code is now almost completely in LZ coder, where
    it can be shared with other LZ77-based algorithms in
    future.

commit 079c4f7fc26b3d0b33d9ae7536697b45f3b73585
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 17:21:24 2008 +0200

    Don't add -g to CFLAGS when --enable-debug is specified.
    It's the job of the user to put that in CFLAGS.

commit 61d1784d8f1761d979a6da6e223e279ca33815e6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 14:17:37 2008 +0200

    Set stdin and stdout to binary mode on Windows. This patch is
    a forward port of b7b22fcb979a16d3a47c8001f058c9f7d4416068
    from lzma-utils-legacy.git. I don't know if the new code base
    builds on Windows, but this is a start.

commit c9cba976913e55ff9aac8a8133cc94416c7c1c9c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 18 00:50:29 2008 +0200

    Added test_compress.sh and bunch of files needed by it.
    This new set of tests compress and decompress several
    test files with many different compression options.
    This set of tests will be extended later.

commit 33be3c0e24d8f43376ccf71cc77d53671e792f07
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 17 18:56:53 2008 +0200

    Subblock decoder: Don't exit the main loop in decode_buffer()
    too early if we hit End of Input while decoding a Subblock of
    type Repeating Data. To keep the loop termination condition
    elegant, the order of enumerations in coder->sequence were
    changed.
    
    To keep the case-labels in roughly the same order as the
    enumerations in coder->sequence, large chunks of code was
    moved around. This made the diff big and ugly compared to
    the amount of the actual changes made.

commit b254bd97b1cdb68d127523d91ca9e054ed89c4fd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 17 17:39:42 2008 +0200

    Fix wrong too small size of argument unfiltered_max
    in ia64_coder_init(). It triggered assert() in
    simple_coder.c, and could have caused a buffer overflow.
    
    This error was probably a copypaste mistake, since most
    of the simple filters use unfiltered_max = 4.

commit 8f5794c8f1a30e8e3b524b415bbe81af2e04c64a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 17 17:27:45 2008 +0200

    Added --delta to the output of "lzma --help".

commit f88590e0014b38d40465937c19f25f05f16c79ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 17 13:14:20 2008 +0200

    Fix Subblock docoder: If Subblock filter was used with known
    Uncompressed Size, and the last output byte was from RLE,
    the code didn't stop decoding as it should have done.

commit bc0b945ca376e333077644d2f7fd54c2848aab8a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 16:33:37 2008 +0200

    Tiny non-technical edits to file-format.txt.

commit 7599bb7064ccf007f054595dedda7927af868252
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 14:48:04 2008 +0200

    Plugged a memory leak in stream_decoder.c.

commit 0b581539311f3712946e81e747839f8fb5f441a7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 14:47:27 2008 +0200

    Added memory leak detection to lzmadec.c.

commit 5b5b13c7bb8fde6331064d21f3ebde41072480c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 14:46:50 2008 +0200

    Added lzma_memlimit_count().

commit 19389f2b82ec54fd4c847a18f16482e7be4c9887
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 14:31:44 2008 +0200

    Added ARRAY_SIZE(array) macro.

commit 9bc33a54cbf83952130adbcb1be32c6882485416
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 16 13:27:03 2008 +0200

    Make Uncompresed Size validation more strict
    in alone_decoder.c.

commit 01d71d60b79027e1ce3eb9c79ae5191e1407c883
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 17:46:59 2008 +0200

    Free the allocated memory in lzmadec if debugging is
    enabled. This should make it possible to detect possible
    memory leaks with Valgrind.

commit 8235e6e5b2878f76633afcda9a334640db503ef5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 16:25:38 2008 +0200

    Fix memory leaks from test_block_header.c.

commit f10fc6a69d40b6d5c9cfbf8d3746f49869c2e2f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 14:23:35 2008 +0200

    Use fastpos.h when encoding LZMA dictionary size in
    Filter Flags encoder.

commit e5728142a2048979f5c0c2149ce71ae952a092e1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 14:02:22 2008 +0200

    Revised the fastpos code. It now uses the slightly faster
    table-based version from LZMA SDK 4.57. This should be
    fast on most systems.
    
    A simpler and smaller alternative version is also provided.
    On some CPUs this can be even a little faster than the
    default table-based version (see comments in fastpos.h),
    but on most systems the table-based code is faster.

commit 10437b5b567f6a025ff16c45a572e417a0a9cc26
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 13:32:13 2008 +0200

    Added bsr.h.

commit f3c88e8b8d8dd57f4bba5f0921eebf276437c244
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 13:29:14 2008 +0200

    Fixed assembler detection in configure.ac, and added
    detection for x86_64.

commit 54ec204f58287f50d3976288295da4188a19192b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 12:20:41 2008 +0200

    Omit invalid space from printf() format string
    in price_table_gen.c.

commit 01b4b19f49f00e17a0f9cb8754c672ac0847b6e1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 09:54:34 2008 +0200

    Removed a few unused macros from lzma_common.h.

commit 19bd7f3cf25e4ff8487ef7098ca4a7b58681961d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 08:37:42 2008 +0200

    Fix a typo in lzma_encoder.c.

commit 9f9b1983013048f2142e8bc7e240149d2687bedc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 08:36:25 2008 +0200

    Convert bittree_get_price() and bittree_reverse_get_price()
    from macros to inline functions.

commit 78e85cb1a7667c54853670d2eb09d754bcbda87d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 07:44:59 2008 +0200

    Fix CRC code in case --enable-small is used.

commit 949d4346e2d75bcd9dcb66c394d8d851d8db3aa0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 07:41:39 2008 +0200

    Fix typo in test_index.c.

commit d13d693155c176fc9e9ad5c50d48ccba27c2d9c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 15 07:40:21 2008 +0200

    Added precomputed range coder probability price table.

commit 362dc3843b373c1007a50a4719f378981f18ae03
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 13:42:43 2008 +0200

    Remove RC_BUFFER_SIZE from lzma_encoder_private.h
    and replace it with a sanity check.

commit e22b37968d153683fec61ad37b6b160cb7ca4ddc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 13:39:54 2008 +0200

    Major changes to LZ encoder, LZMA encoder, and range encoder.
    These changes implement support for LZMA_SYNC_FLUSH in LZMA
    encoder, and move the temporary buffer needed by range encoder
    from lzma_range_encoder structure to lzma_lz_encoder.

commit b59ef3973781f892c0a72b5e5934194567100be5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 13:34:29 2008 +0200

    Added one assert() to process.c of the command line tool.

commit 9547e734a00ddb64c851fa3f116e4f9e7d763ea7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 12:09:52 2008 +0200

    Don't use coder->lz.stream_end_was_reached in assertions
    in match_c.h.

commit 3e09e1c05871f3757f759b801890ccccc9286608
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 12:08:02 2008 +0200

    In lzma_read_match_distances(), don't use
    coder->lz.stream_end_was_reached. That variable
    will be removed, and the check isn't required anyway.
    Rearrange the check so that it doesn't make one to
    think that there could be an integer overflow.

commit a670fec8021e5962429689c194148a04c3418872
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 11:56:41 2008 +0200

    Small LZMA_SYNC_FLUSH fixes to Block and Single-Stream encoders.

commit 3599dba9570a6972a16b6398d6c838e9b420e985
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 14 11:54:56 2008 +0200

    More fixes to LZMA decoder's flush marker handling.

commit f73c2ab6079ed5675a42b39d584a567befbd4624
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Jan 10 17:13:42 2008 +0200

    Eliminate lzma_lz_encoder.must_move_pos. It's needed
    only in one place which isn't performance criticial.

commit 382808514a42b2f4b4a64515e2dfb3fc1bc48ecd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 9 20:05:57 2008 +0200

    Define HAVE_ASM_X86 when x86 assembler optimizations are
    used. This #define will be useful for inline assembly.

commit 0e70fbe4032351aab13a1cd8e5deced105c0b276
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 9 12:06:46 2008 +0200

    Added good-single-none-empty_3.lzma and
    bad-single-none-empty.lzma.

commit 379fbbe84d922c7cc00afa65c6f0c095da596b19
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 23:11:59 2008 +0200

    Take advantage of return_if_error() in block_decoder.c.

commit 97d5fa82077e57815dfad995dc393c2809a78539
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 23:10:57 2008 +0200

    Updated tests/files/README.

commit 3bb9bb310936cba6a743b4f06739a397dec7c28f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 23:05:40 2008 +0200

    Added test files with empty Compressed Data.

commit 7054c5f5888ac6a7178cd43dc9583ce6c7e78c9f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 22:58:42 2008 +0200

    Fix decoding of Blocks that have only Block Header.

commit 753e4d95cd1cf29c632dfe1a670af7c67aeffbf4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 22:27:46 2008 +0200

    Added good-single-subblock_implicit.lzma.

commit faeac7b7aca75f86afed1e7cc06279d9d497c627
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 18:50:30 2008 +0200

    Disable CRC32 from Block Headers when --check=none
    has been specified.

commit a751126dbb656767ed4666cf0e5d3e17349d93d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 13:36:29 2008 +0200

    Fixed encoding of empty files. Arguments to is_size_valid()
    were in wrong order in block_encoder.c.

commit 9080267603b1006c4867c823307dca9df8be0d20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 13:35:36 2008 +0200

    Added a few test files.

commit b4943ccf73b64fc93a90a23474509c316f55eb2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 12:29:58 2008 +0200

    Avoid using ! in test_files.sh, because that doesn't work
    with some ancient /bin/sh versions.

commit e2417b2b9134f3f65e14b61e23cd3644d8954353
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Jan 8 00:48:30 2008 +0200

    More pre-C99 inttypes.h compatibility fixes. Now the code
    should work even if the system has no inttypes.h.

commit 5d227e51c23639423f4ade06aabb54e131f8505e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 23:25:32 2008 +0200

    Updated fi.po although it's currently pretty much crap.

commit c7189d981a1b27c63da0c1ee80d9b5cd8ce1733d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 23:14:25 2008 +0200

    Test for $GCC = yes instead of if it is non-empty. This
    way it is possible to use ac_cv_c_compiler_gnu=no to
    force configure to think it is using non-GNU C compiler.

commit 3dbbea82b74bb841c995ad332a3aeca613015e10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 21:49:41 2008 +0200

    Added test_files.sh to tests/Makefile.am so it gets
    included in the tarball with "make dist".

commit 2fd2d181543feab1b4003f3ac6e85625fbee04f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 18:22:24 2008 +0200

    Cosmetic edit to test_files.sh.

commit 9a71d573100a990ceb30ce0bec6a9a15d795605f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 18:09:44 2008 +0200

    Added tests/files/README.

commit 47f48fe9936ed72617a60fbd015df7e0e47a1e43
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 14:20:57 2008 +0200

    Tell in COPYING that everything in tests/files is
    public domain.

commit 3502b3e1d00251d3c8dda96079440705c28d8225
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 14:19:05 2008 +0200

    Cleaned up the tests/files directory.

commit 908b2ac604b9940369d7fe8a45e9eb6da5d2a24c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 13:49:19 2008 +0200

    Added test_files.sh to test decoding of the files in
    the tests/files directory. It doesn't test the malicious
    files yet.

commit ecb2a6548f5978022a8fa931719dc575f5fd3bf6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 11:23:13 2008 +0200

    Updated README regarding the assembler optimizations.

commit eacb8050438d3e6146c86eb9732d3fb1ef1825cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Jan 7 10:58:00 2008 +0200

    Updated THANKS.

commit 1239649f96132b18e3b7e2dd152ecf53a195caa8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 6 21:47:17 2008 +0200

    Cosmetic changes to configure.ac.

commit 88ee301ec2e4506a30ec7ac9aaa2288e2dcadd0e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 6 19:46:38 2008 +0200

    Automatically disable assembler code on Darwin x86.
    Darwin has different ABI than GNU+Linux and Solaris,
    thus the assembler code doesn't assemble on Darwin.

commit c15a7abf66e3a70792f7444115e484c7981c8284
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 6 19:45:27 2008 +0200

    With printf(), use PRIu64 with a cast to uint64_t instead
    of %zu, because some pre-C99 libc versions don't support %zu.

commit 4e7e54c4c522ab2f6a7abb92cefc4f707e9568fb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Jan 6 16:27:41 2008 +0200

    Introduced compatibility with systems that have pre-C99
    or no inttypes.h. This is useful when the compiler has
    good enough support for C99, but libc headers don't.
    
    Changed liblzma API so that sys/types.h and inttypes.h
    have to be #included before #including lzma.h. On systems
    that don't have C99 inttypes.h, it's the problem of the
    applications to provide the required types and macros
    before #including lzma.h.
    
    If lzma.h defined the missing types and macros, it could
    conflict with third-party applications whose configure
    has detected that the types are missing and defined them
    in config.h already. An alternative would have been
    introducing lzma_uint32 and similar types, but that would
    just be an extra pain on modern systems.

commit a71864f77dfb76b5d78a270641539947c312583a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 5 19:57:00 2008 +0200

    Fix typo in comment (INT64_MAX -> UINT64_MAX).

commit 072927905a3b66281c6311b4b351caa501d8b73a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 5 19:42:04 2008 +0200

    Rearranged testing of GCC-specific flags.

commit d160ee32598c6d1cd9054ef019e8c9331208b188
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sat Jan 5 01:20:24 2008 +0200

    Another bug fix for flush marker detection.

commit fc67f79f607cbfa78c6f47a69dec098d8659b162
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 4 21:37:01 2008 +0200

    Fix stupid bugs in flush marker detection.

commit 0029cbbabe87d491fc046a55a629a6d556010baa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 4 21:30:33 2008 +0200

    Added support for flush marker, which will be in files
    that use LZMA_SYNC_FLUSH with encoder (not implemented
    yet). This is a new feature in the raw LZMA format,
    which isn't supported by old decoders. This shouldn't
    be a problem in practice, since lzma_alone_encoder()
    will not allow LZMA_SYNC_FLUSH, and thus not allow
    creating files on decodable with old decoders.
    
    Made lzma_decoder.c to require tab width of 4 characters
    if one wants to fit the code in 80 columns. This makes
    the code easier to read.

commit bbfd1f6ab058a7e661545205befcb7f70c5685ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Jan 4 20:45:05 2008 +0200

    Moved range decoder initialization (reading the first
    five input bytes) from LZMA decoder to range decoder
    header. Did the same for decoding of direct bits.

commit 5db745cd2a74f6ed2e52f5c716c08ed0daf17ebc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 11:15:21 2007 +0200

    Added a note to README that --disable-assembler
    must be used on Darwin.

commit 44b333d4615b5aabc557a0e1b6bb0096da3fae24
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 10:07:10 2007 +0200

    Use the filename suffix .S instead of .s for assembler files
    so that the preprocessor removes the /* */ style comments,
    which are not supported by some non-GNU assemblers (Solaris)
    that otherwise work with this code.

commit ec1c82b2e82f395f6e8e19ac212a639644330cd7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 09:59:05 2007 +0200

    Fixed wrong symbol name in crc64_x86.s.

commit 2881570df6803eed2fe550af34574e8e61794804
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Fri Dec 14 09:53:24 2007 +0200

    Use .globl instead of .global in x86 assembler code for
    better portability. Still needs fixing the commenting.

commit 698470b8f33fc0e5f27dafa93b39b6dd5dde5a66
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Thu Dec 13 20:14:37 2007 +0200

    Fixed a few short options that take an argument.
    short_opts[] was missing colons to indicate
    required argument. Thanks to Fabio Pedretti for
    the bug report.

commit 918bcb0e0728d2d976621e9f35b56f224f11d989
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 11 17:08:04 2007 +0200

    Removed uncompressed size tracking from Delta encoder too.

commit 3e16d51dd645667b05ff826665b1fc353aa41cd9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 11 16:49:19 2007 +0200

    Remove uncompressed size tracking from the filter encoders.
    It's not strictly needed there, and just complicates the
    code. LZ encoder never even had this feature.
    
    The primary reason to have uncompressed size tracking in
    filter encoders was validating that the application
    doesn't give different amount of input that it had
    promised. A side effect was to validate internal workings
    of liblzma.
    
    Uncompressed size tracking is still present in the Block
    encoder. Maybe it should be added to LZMA_Alone and raw
    encoders too. It's simpler to have one coder just to
    validate the uncompressed size instead of having it
    in every filter.

commit 5286723e0d1ac386d5b07f08d78e61becf895a5a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 11 14:10:53 2007 +0200

    Get rid of no-NLS gnulib. I don't know how to get it
    working with Automake. People who want smaller lzmadec
    should use --disable-nls on non-GNU systems.

commit ce8b036a6c7a43b290356b673d953f6d76b2be64
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 11 14:09:35 2007 +0200

    Fixed a typo in tests/Makefile.am which prevented
    building the tests if gnulib was needed.

commit 7c1ad41eb611ed89e5bb8792a3beb533b7aa59f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Tue Dec 11 11:18:58 2007 +0200

    Fixed wrong type of flags_size in Subblock encoder.

commit ce64df716243fdc40359090d1f6541f3a4f5f21a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 10 20:44:16 2007 +0200

    Bumped version number to 4.42.3alpha.

commit b499a0403ea5c41d6a25b40275eb6c57643052ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Dec 10 15:02:50 2007 +0200

    Disabled some unneeded warnings and made "make dist" work.

commit 2ab8adb5165a0b77114a7eb21f9ff1e6a266f172
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 21:43:15 2007 +0200

    Added LZMA_SYNC_FLUSH support to the Copy filter.

commit 329c272d501e88793dda5540358d55c12428d194
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 17:14:07 2007 +0200

    Added missing LZMA_API to the C versions of the CRC functions.
    The x86 assembler versions were already OK.

commit 07ac881779a8477f2c1ab112b91a129e24aa743c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 17:06:45 2007 +0200

    Take advantage of return_if_error() macro in more places.
    Cleaned Subblock filter's initialization code too.

commit 41338717964f510ee61d70b25bd4c502ec9f77cf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 12:13:01 2007 +0200

    Added a bunch of .lzma test files.

commit ff946ceb7975d4f11950afd33f6315b4d20d1a03
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 11:24:48 2007 +0200

    Re-enabled the security checks in Subblock decoder
    that were disabled for debugging reasons.

commit 2bf36d22d2c24ac3f488e63b35564fa2f6dab8d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 11:03:28 2007 +0200

    Fixed the tests to build with -Werror.

commit 5d018dc03549c1ee4958364712fb0c94e1bf2741
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Sun Dec 9 00:42:33 2007 +0200

    Imported to git.
